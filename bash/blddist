#!/bin/bash

# blddist: Script to create z390 distribution zip file
# passing parm "clean" will remove repo ignored files and rebuild prior to dist build

set -e                                  # exit on all errors
cd $(dirname $0)                        # set to directory of script
cd ..                                   # cd back to root       

ROOT_DIR=$(pwd)
VERSION="$(git describe --tags)"
echo "Building z390 ${VERSION}"
DIST_DIR=dist

if [ "$1" == "clean" ];                 # if "clean" parm passed
then
    git clean -dfX                            # delete all git ignored files
fi

# build jar
bash/bldjar                                   # create the z390 jar

# generate HLASM compatible SPM's
bash/bldzstrmac 'build/zstrmac'

# build standard libraries
bash/bldlib                                   # build standard libs
bash/bldcbllib                                # build cobol libs

# Create/clean dist folder
mkdir -p ${DIST_DIR}                       # create dist folder if does not exist
echo "/**" > ${DIST_DIR}/.gitignore        # ignore the dist folder
rm -rf ${DIST_DIR}/z390_${VERSION}     # delete version dist directory
rm -f ${DIST_DIR}/z390_${VERSION}.zip  # delete the zip

# build javadocs
bash/bldjavadoc 'build/javadoc'               # docs in build/javadocs

cd ${DIST_DIR}
mkdir z390_${VERSION}
cd z390_${VERSION}

# add core files to the build dir
cp ${ROOT_DIR}/z390.jar .               # jar
CORE_DIRS=( bash bat mac zcobol cics linklib README.txt LICENSE )
for dir in ${CORE_DIRS[@]}; do
    cp -R ${ROOT_DIR}/${dir} .
done

# add test and supplimental components
SUPP_DIRS=( assist demo guam qsam bsam rt soa sort structuredmacros tests vsam1 
vsam2 vse zopcheck zpar )
for dir in ${SUPP_DIRS[@]}; do
    cp -R ${ROOT_DIR}/${dir} .
done

# add structured programming macros to mac/spm folder
mkdir -p mac/spm
cp -R ${ROOT_DIR}/build/zstrmac/* mac/spm

# add javadoc
mkdir -p javadoc
cp -R ${ROOT_DIR}/build/javadoc/* javadoc

# remove components not required for distribution
DEL_ITEMS=('bash/bldjar' 'bat/BLDJAR.BAT' 'bash/blddist' 'bash/relver' 'bat/RELVER.BAT')
for item in ${DEL_ITEMS[@]}; do
    rm ${item}
done

# create zip package
cd ..
zip -q -dd -r z390_${VERSION}.zip z390_${VERSION}
