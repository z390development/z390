        MACRO
&NAME   SOAGEN &CTYPE=MLC,  SET CLIENT LANGUAGE CBL OR MLC             X
               &MAIN=,      OPTIONAL GEN &MAIN.390 WITH STUBS          X
               &CLIENT=,    CLIENT SOA MESSAGE MANAGER NAME            X
               &SERVER=,    SERVER SOA MESSAGE MANAGER NAME            X
               &HOST=,      HOST SERVER URL                            X
               &PORT=,      HOST SERVER PORT NUMBER                    X
               &SERVICES=,  DEFINE NAME AND LENGTH OF SERVICE PARMS    X
               &MACDIR=,    DIRECTORY WITH SOA GEN MACROS              X
               &GENDIR=,    DIRECTORY TO PLACE GENERATED SOURCE CODE   X
               &GENBLD=,    NAME OF GENERATED BUILD BAT FILE           X
               &GENRUN=     NAME OF GENERATED RUN BAT                   
*********************************************************************
* Copyright 2008 Automated Software Tools Corporation               *
* This source code is part of z390 assembler/emulator package       *
* The z390 package is distributed under GNU general public license  *
* Author - Don Higgins                                              *
* Date   - 12/28/06                                                 *
.********************************************************************
.* MAINTENANCE: 
.* 12/28/06 RPI 524 ADD SUPPORT FOR SOA CLIENT SERVER APPLICATIONS 
.* 02/05/07 RPI 532 ADD DEMORUNS & DEMORUNC.BAT AND FIX PATH CASE
.* 04/22/08 RPI 833 ADD SETC QUOTES FOR HLASM COMPATIBILITY
.* 05/23/08 RPI 853 ADD CTYPE=CBL SUPPORT FOR COBOL CLIENT GENERATION
.********************************************************************
.*  SOAGEN GENERATES SERVICE ORIENTED ARCHITECTURE (SOA) CLIENT     
.*  SERVER SOURCE CODE FOR APPLICATION                                                  
.*                                           
.*  OUTPUT:
.*    &GENDIR\&CLIENT.MLC/CBL  - SOURCE CODE FOR SOA CLIENT MSG MANAGER
.*    &GENDIR\&SERVICE.MLC/CBL - GENERATED CALL STUBS FOR EACH SERVICE 
.*                           STUBS DYNAMICALLY CALL SOA CLIENT MSG MGR
.*    &GENDIR\&SERVER.MLC  - SOURCE CODE FOR SOA SERVER MESSAGE MANAGER
.*    &GENDIR\&GENBLD.BAT  - BAT TO GENERATE SOA APPLICATION IN GENDIR
.*    &GENDIR\&GENBLDC.BAT - BAT TO GEN CBL  SOA APPLICATION IN GENDIR
.*    &GENDIR\&GENRUN.BAT  - BAT TO START SERVER AND CLIENT THREADS
.*    &GENDIR\&GENRUNS.BAT - BAT TO RUN DEMOSMGR SERVER UNTIL SHUTDOWN
.*    &GENDIR\&GENRUNC.BAT - BAT TO RUN DEMOMAIN CLIENT
.*
.*  EXAMPLE:
.*    1.  RUN SOA\DEMO\DEMOSTD.BAT TO BUILD AND RUN STATICALLY LINKED 
.*        STANDARD DEMO APPLICATION LOCALLY.                        
.*    2.  SEE SOA\DEMO\DEMOSOA.MLC SOURCE DEFINITION OF SOA APPLICATION
.*        A.  TO RUN SOA SERVER ON YOUR SYSTEM, CHANGE HOST CPU NAME                              
.*    3.  RUN SOA\DEMO\DEMOSOA.BAT TO GENERATE, BUILD, AND RUN CLIENT
.*        SERVER SOA DEMO APPLICATION.  NOTE ON LINUX ONCE DEMOSMGR IS
.*        RUNNING IN CURRENT TERMINAL, START DEMORUNC IN ANOTHER
.*        TERMINAL WINDOW TO SEE SEPARATE CLIENT SERVER OUTPUT.
.*
.*      SOURCE CODE GENERATED IN SOA\DEMOSOA DIRECTORY
.*   
.*      1.  DEMOCMGR.MLC/CBL - SOA CLIENT MSG MGR
.*      2.  DEMOSMGR.MLC     - SOA SERVER MSG MGR
.*      3.  DEMOSUB1.MLC/CBL - SOA CLIENT STUB FOR DEMOSUB1 SERVICE
.*      4.  DEMOSUB1.390     - SOA SERVICE FOR LOADING BY SOASMGR
.*      5.  DEMOSUB2.MLC/CBL - SOA CLIENT STUB FOR DEMOSUB2 SERVICE
.*      6.  DEMOSUB2.390     - SOA SERVICE FOR LOADING BY SOASMGR
.*      7.  DEMOBLD.BAT  - BATCH JOB TO BUILD SOA MLC CLIENT/SERVER
.*      7.  DEMOBLDC.BAT - BATCH JOB TO BUILD SOA CBL CLIENT
.*      7.  DEMOBLDS.BAT - BATCH JOB TO BUILD SOA MLC SERVER
.*      8.  DEMORUN.BAT  - BATCH JOB TO RUN CLIENT SERVER APPLICATION
.*      9.  DEMORUNS.BAT - EXEC DEMOSMGR SERVER 
.*     10.  DEMORUNC.BAT - EXEC DEMORUNC CLIENT
.* NOTES:
.*   1. THE SOA CLIENT MSG MGR PASSES PARMS BY VALUE AND ALL FIELDS
.*      IN MEMORY ACCESSED BY SERVICE MUST BE PASSED AS PARMS.
.*   2. READ ONLY PARMS INDICATED BY NEGATIVE LENGTHS ARE NOT RETURNED
.*      BY SERVER.  ALL OTHER PARMS ARE RETURNED BY SERVER AND UPDATED
.*      IN MEMORY PRIOR TO RETURNING FROM CLIENT MESSAGE MANAGER.
.*   3. DYNAMIC MSG BUFFER SIZE = LARGEST SERVICE SEND MESSAGE        
.********************************************************************
.*
.* COLLECT ALL Z390 OPTIONS IN &ZOPT
.*
&ZOPT    SETC  '&SYSPARM'
         AIF   ('&ZOPT' EQ '' OR '&ZOPT'(1,1) NE '''').SKP_FIX_ZOPT
&ZOPT    SETC  '&ZOPT'(2,K'&ZOPT-2).'%1 %2 %3 %4 %5'
.SKP_FIX_ZOPT ANOP
.*
.* SET THE FOLLOWING VALUES BASED ON &SERVICES
.*   &MAX_SEND_PARMS_LEN      - MAXIMUM SEND PARMS LENGTH
.*   &MAX_RECV_PARMS_LEN      - MAXIMUM RECV PARMS LENGTH
.*   &MAX_PARMS               - MAXIMUM PARM COUNT FOR ANY SERVICE
.*   &MAX_PARM_LEN            - MAXIMUM PARM LENGTH FOR ANY SERVICE                           
.*   &SVC_SEND_PARMS_LEN(&NS) - LENGTH OF SERVICE SEND PARMS
.*   &SVC_RECV_PARMS_LEN(&NS) - LENGTH OF SERVICE RECV PARMS (UPDATES)
.*
&MAX_SEND_PARMS_LEN SETA 0
&MAX_RECV_PARMS_LEN SETA 0
&MAX_PARMS        SETA 0
&MAX_PARM_LEN     SETA 0
         LCLA  &SVC_SEND_PARMS_LEN(100)
         LCLA  &SVC_RECV_PARMS_LEN(100)
&NS      SETA  0
.SVC_LOOP ANOP
&NS      SETA  &NS+1
         AIF   (&NS GT N'&SERVICES).SVC_LOOP_END
&NP      SETA  1
         AIF (N'&SERVICES(&NS)-1 LE &MAX_PARMS).SVC_PARM_LOOP
&MAX_PARMS SETA N'&SERVICES(&NS)-1
.SVC_PARM_LOOP ANOP
&NP      SETA  &NP+1
         AIF   (&NP GT N'&SERVICES(&NS)).SVC_PARM_LOOP_END
&PLEN    SETA  &SERVICES(&NS,&NP)
         AIF   (&PLEN GT 0).SEND_AND_RECV
.SEND_ONLY ANOP
&PLEN    SETA  -&PLEN
&SVC_SEND_PARMS_LEN(&NS) SETA &SVC_SEND_PARMS_LEN(&NS)+&PLEN
         AIF  (&PLEN LE &MAX_PARM_LEN).SVC_PARM_LOOP
&MAX_PARM_LEN SETA &PLEN
         AGO  .SVC_PARM_LOOP
.SEND_AND_RECV ANOP
&SVC_SEND_PARMS_LEN(&NS) SETA &SVC_SEND_PARMS_LEN(&NS)+&PLEN
&SVC_RECV_PARMS_LEN(&NS) SETA &SVC_RECV_pARMS_LEN(&NS)+&PLEN
         AIF  (&PLEN LE &MAX_PARM_LEN).SVC_PARM_LOOP
&MAX_PARM_LEN SETA &PLEN
         AGO  .SVC_PARM_LOOP
.SVC_PARM_LOOP_END ANOP
         AIF  (&SVC_SEND_PARMS_LEN(&NS) LE &MAX_SEND_PARMS_LEN).CHK_RECX
               V_LEN   
&MAX_SEND_PARMS_LEN SETA &SVC_SEND_PARMS_LEN(&NS)
.CHK_RECV_LEN ANOP
         AIF  (&SVC_RECV_PARMS_LEN(&NS) LE &MAX_RECV_PARMS_LEN).SVC_LOOX
               P   
&MAX_RECV_PARMS_LEN SETA &SVC_RECV_PARMS_LEN(&NS)
         AGO  .SVC_LOOP
.SVC_LOOP_END ANOP
.*
.* GENERATE CLIENT MESSAGE MANAGER IN MLC OR CBL
.*
         AIF   ('&CTYPE' EQ 'CBL').CBL_CMGR
.MLC_CMGR ANOP
 PUNCH ' SOACMGR CLIENT=&CLIENT,HOST=&HOST,PORT=&PORT,SERVICES=&SERVICEX
               S',DSNAME=&GENDIR\&CLIENT..MLC,FORMAT
 PUNCH ' END',DSNAME=&GENDIR\&CLIENT..MLC,FORMAT
         AGO .MLC_SMGR
.CBL_CMGR ANOP
 PUNCH '       IDENTIFICATION DIVISION.',DSNAME=&GENDIR\&CLIENT..CBL
 PUNCH '       PROGRAM-ID. &CLIENT..',DSNAME=&GENDIR\&CLIENT..CBL
 PUNCH '       COPY SOACMGR1.', SOACMGR FROM ID DIV TO WORKING-STORAGE X
               DSNAME=&GENDIR\&CLIENT..CBL
 PUNCH '       77  SOA-HOST-NAME PIC X(24)      VALUE z''&HOST''.',    X
               DSNAME=&GENDIR\&CLIENT..CBL
 PUNCH '       77  SOA-HOST-PORT PIC S9(9) COMP VALUE &PORT..',        X
               DSNAME=&GENDIR\&CLIENT..CBL
 PUNCH '       COPY SOACMGR2.', SOACMGR WS DATA FOR EZASOKET CALLS     X
               DSNAME=&GENDIR\&CLIENT..CBL
 PUNCH '       LINKAGE SECTION.',  LINAGE FOR SOACMGR CLIENT           X
               DSNAME=&GENDIR\&CLIENT..CBL                        
 PUNCH '       01  SOA-MSG.',                                          X
               DSNAME=&GENDIR\&CLIENT..CBL
 PUNCH '           05  SOA-MSG-PFX.',                                  X
               DSNAME=&GENDIR\&CLIENT..CBL
 PUNCH '               10  SOA-MSG-LEN  PIC S9(8) COMP.',              X
               DSNAME=&GENDIR\&CLIENT..CBL
 PUNCH '               10  SOA-MSG-TIME PIC S9(18) COMP.',             X
               DSNAME=&GENDIR\&CLIENT..CBL
 PUNCH '               10  SOA-MSG-SVC-NAME PIC X(8).',                X
               DSNAME=&GENDIR\&CLIENT..CBL
 PUNCH '               10  SOA-MSG-SVC-RC   PIC S9(8) COMP.',          X
               DSNAME=&GENDIR\&CLIENT..CBL
&SOA_MSG_PFX_LEN SETA 4+8+8+4 MSG_LEN,TOD IN NS,SVC_NAME,SVC_RC
 PUNCH '           05  SOA-MSG-PARMS        PIC X(&MAX_SEND_PARMS_LEN).X
               ',                                                      X
               DSNAME=&GENDIR\&CLIENT..CBL
 PUNCH '       COPY SOACMGR3.', SOACMGR FROM LINKAGE TO PROC END       X
               DSNAME=&GENDIR\&CLIENT..CBL
.*
.* GENERATE SERVER MESSAGE MANAGER IN MLC
.*
.MLC_SMGR ANOP
 PUNCH ' SOASMGR SERVER=&SERVER,HOST=&HOST,PORT=&PORT,SERVICES=&SERVICEX
               S',DSNAME=&GENDIR\&SERVER..MLC,FORMAT                                              
 PUNCH ' END',DSNAME=&GENDIR\&SERVER..MLC,FORMAT
.*
.* GENERATE STUBS FOR EACH SERVICE CALL IN MLC OR CBL
.*
&NS      SETA  0 
.GEN_SERVICE_STUB ANOP
&NS      SETA  &NS+1
         AIF   (&NS GT N'&SERVICES).END_GEN_SERVICE_STUB
         AIF   ('&CTYPE' EQ 'CBL').CBL_STUB
.MLC_STUB ANOP
 PUNCH ' SOASTUB SERVICE=&SERVICES(&NS,1),CLIENT=&CLIENT',             X
               DSNAME=&GENDIR\SOA_STUB_&SERVICES(&NS,1)..MLC,FORMAT
 PUNCH ' END',DSNAME=&GENDIR\SOA_STUB_&SERVICES(&NS,1)..MLC,FORMAT
         AGO   .GEN_SERVICE_STUB
.CBL_STUB ANOP
 PUNCH '       IDENTIFICATION DIVISION.',                              X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '       PROGRAM-ID. &SERVICES(&NS,1)..',                        X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '       COPY SOASTUB1.', SOASTUB FROM PGM-ID TO WORING-STORAGE  X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '       01  SOA-STUB-SVC-NAME     PIC X(8) VALUE ''&SERVICES(&NSX
               ,1)''.',                                                X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '       01  SOA-STUB-SVC-MGR      PIC X(8) VALUE ''&CLIENT''.', X                                              X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
&SOA_MSG_PFX_LEN SETA 4+8+8+4 MSG_LEN,TOD IN NS,SVC_NAME,SVC_RC
&SVC_SEND_MSG_LEN SETA &SOA_MSG_PFX_LEN+&SVC_SEND_PARMS_LEN(&NS)
&SVC_RECV_MSG_LEN SETA &SOA_MSG_PFX_LEN+&SVC_RECV_PARMS_LEN(&NS)
 PUNCH '       01  SOA-STUB-MSG-SEND-LEN PIC S9(8) COMP VALUE &SVC_SENDX
               _MSG_LEN..',                                            X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '       01  SOA-STUB-MSG-RECV-LEN PIC S9(8) COMP VALUE &SVC_RECVX
               _MSG_LEN..',                                            X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '       01  SOA-MSG.',                                          X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '           05  SOA-MSG-PFX.',                                  X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '               10  SOA-MSG-LEN      PIC S9(8) COMP.',          X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '               10  SOA-MSG-TIME     PIC S9(18) COMP.',         X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '               10  SOA-MSG-SVC-NAME PIC X(8).',                X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '               10  SOA-MSG-SVC-RC   PIC S9(8) COMP.',          X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '           05  SOA-MSG-PARMS    PIC X(&SVC_SEND_PARMS_LEN(&NS))X
               .',                                                     X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '       LINKAGE SECTION.',                                      X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
&NP      SETA  N'&SERVICES(&NS)-1
&I       SETA  0
.LINK_LOOP1 ANOP
&I       SETA  &I+1
         AIF   (&I GT &NP).LINK_END1
&PLEN    SETA  &SERVICES(&NS,&I+1)
         AIF   (&PLEN GT 0).SKIP_NEG
&PLEN    SETA  -&PLEN
.SKIP_NEG ANOP
 PUNCH '       01 P&I PIC X(&PLEN).',                                  X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
         AGO   .LINK_LOOP1
.LINK_END1 ANOP
 PUNCH '       PROCEDURE DIVISION USING',                              X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
&I       SETA  0
.PARM1_LOOP ANOP
&I       SETA  &I+1
         AIF   (&I GT &NP).PARM1_END
 PUNCH '           P&I',                                               X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
         AGO   .PARM1_LOOP
.PARM1_END ANOP
 PUNCH '           .',DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
&NP      SETA  N'&SERVICES(&NS)-1
&I       SETA  0
&OFFSET  SETA  1
.SEND_PARM_LOOP ANOP
&I       SETA  &I+1
         AIF   (&I GT &NP).SEND_PARM_END
&PLEN    SETA  &SERVICES(&NS,&I+1)
         AIF   (&PLEN GT 0).SKIP_NEG2
&PLEN    SETA  -&PLEN
.SKIP_NEG2 ANOP
 PUNCH '           MOVE P&I TO SOA-MSG-PARMS(&OFFSET:&PLEN)',          X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
&OFFSET  SETA  &OFFSET+&PLEN
         AGO   .SEND_PARM_LOOP
.SEND_PARM_END ANOP
 PUNCH '           .',DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '       COPY SOASTUB2.',  FROM BLD SOA-MSG TO CALL SOACMGR      X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
&I       SETA  0
&OFFSET  SETA  1
.UPDATE_PARM_LOOP ANOP
&I       SETA  &I+1
         AIF   (&I GT &NP).UPDATE_PARM_END
&PLEN    SETA  &SERVICES(&NS,&I+1)
         AIF   (&PLEN LT 0).UPDATE_PARM_LOOP
&PLEN    SETA  -&PLEN
         AIF   (&PLEN GT 0).SKIP_NEG3
&PLEN    SETA  -&PLEN
.SKIP_NEG3 ANOP
 PUNCH '           MOVE SOA-MSG-PARMS(&OFFSET:&PLEN) TO P&I',          X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
&OFFSET  SETA  &OFFSET+&PLEN
         AGO   .UPDATE_PARM_LOOP
.UPDATE_PARM_END ANOP
 PUNCH '           .',DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
 PUNCH '       COPY SOASTUB3.',  SOASTUB FROM UPDATE PARMS TO GOBACK   X
               DSNAME=&GENDIR\&SERVICES(&NS,1)..CBL
         AGO   .GEN_SERVICE_STUB
.END_GEN_SERVICE_STUB ANOP
.*
.* GENERATE BUILD COMMAND BAT FILE 
.*
         AIF   ('&GENBLD' EQ '').SKIP_GEN_BAT
.GEN_BAT ANOP
 PUNCH 'REM GENERATE SOA APPLICAITON                 ',                X
               DSNAME=&GENDIR\&GENBLD..BAT
.*
.* ASML MLC CLIENT MESSAGE MANAGER
.*
         AIF ('&CTYPE' EQ 'CBL').SKIP_GEN_CBL
 PUNCH 'REM GEN SOA CLIENT MSG MGR                   ',                X
               DSNAME=&GENDIR\&GENBLD..BAT
 PUNCH 'CALL ASML &GENDIR\&CLIENT SYSMAC(&MACDIR+mac) &ZOPT',          X
               DSNAME=&GENDIR\&GENBLD..BAT
 PUNCH 'IF ERRORLEVEL 1 PAUSE ERROR IN ASML &CLIENT',                  X
               DSNAME=&GENDIR\&GENBLD..BAT
.SKIP_GEN_CBL ANOP
.*
.* ASML MLC SERVER MESSAGE MANAGER
.*
 PUNCH 'REM GEN SOA SERVER MSG MGR',                                   X
               DSNAME=&GENDIR\&GENBLD..BAT
 PUNCH 'CALL ASML &GENDIR\&SERVER SYSMAC(&MACDIR+mac) &ZOPT',          X
               DSNAME=&GENDIR\&GENBLD..BAT
 PUNCH 'IF ERRORLEVEL 1 PAUSE ERROR IN ASML &SERVER',                  X
               DSNAME=&GENDIR\&GENBLD..BAT
.*
.* ASM  MLC CLIENT STUBS AND 
.* ASML MLC SERVICES LOADED BY SERVER MSG MGR
.*
&NS      SETA  0
.BLD_SERVICE_STUB ANOP
&NS      SETA  &NS+1
         AIF   (&NS GT N'&SERVICES).END_BLD_SERVICE_STUB
 PUNCH 'REM GEN SOA SERVICE 390 FOR LOADING BY SERVER',                X
               DSNAME=&GENDIR\&GENBLD..BAT
 PUNCH 'CALL ASML &GENDIR\&SERVICES(&NS,1) SYSMAC(&MACDIR+mac) SYS390(&X
               GENDIR) &ZOPT',DSNAME=&GENDIR\&GENBLD..BAT
 PUNCH 'IF ERRORLEVEL 1 PAUSE ERROR IN ASML &SERVICES(&NS,1)',         X
               DSNAME=&GENDIR\&GENBLD..BAT
 PUNCH 'REM GEN SOA SERVICE STUB OBJ FOR LINKING WITH CLIENT APPL',    X
               DSNAME=&GENDIR\&GENBLD..BAT
         AIF  ('&CTYPE' EQ 'CBL').BLD_SERVICE_STUB
 PUNCH 'CALL ASM  &GENDIR\SOA_STUB_&SERVICES(&NS,1) SYSMAC(&MACDIR+mac)X
                &ZOPT',DSNAME=&GENDIR\&GENBLD..BAT
 PUNCH 'IF ERRORLEVEL 1 PAUSE ERROR IN ASM STUB &SERVICES(&NS,1)',     X
               DSNAME=&GENDIR\&GENBLD..BAT
 PUNCH 'COPY &GENDIR\SOA_STUB_&SERVICES(&NS,1)..OBJ &GENDIR\&SERVICES(&X
               NS,1)..OBJ',DSNAME=&GENDIR\&GENBLD..BAT
 PUNCH 'IF ERRORLEVEL 1 PAUSE ERROR IN COPY STUB &SERVICES(&NS,1)',    X
               DSNAME=&GENDIR\&GENBLD..BAT
         AGO   .BLD_SERVICE_STUB
.END_BLD_SERVICE_STUB ANOP
.*
.* ASML MLC CLIENT MAIN PROGRAM
.*
         AIF   ('&CTYPE' EQ 'CBL').SKIP_GEN_MAIN
         AIF   ('&MAIN' EQ '').SKIP_GEN_MAIN
 PUNCH 'REM GEN SOA MAIN CLIENT LINKED WITH SERVICE STUBS',            X
               DSNAME=&GENDIR\&GENBLD..BAT
 PUNCH 'CALL ASML &GENDIR\&MAIN SYSOBJ(&GENDIR) SYS390(&GENDIR)',      X
               DSNAME=&GENDIR\&GENBLD..BAT
.SKIP_GEN_MAIN ANOP
.SKIP_GEN_BAT  ANOP
         AIF   ('&GENRUN' EQ '').SKIP_GEN_RUN
.GEN_RUN ANOP
.*
.* START SERVER AND THEN PAUSE TO START CLIENT IF MLC
.*
         AIF ('&CTYPE' EQ 'CBL').SKIP_GEN_RUN
 PUNCH 'REM RUN SO CLIENT SERVER APPLICAITON',                         X
               DSNAME=&GENDIR\&GENRUN..BAT
 PUNCH 'IF EXIST /usr/local/lib/z390/z390.jar GOTO LINUX',             X
               DSNAME=&GENDIR\&GENRUN..BAT
 PUNCH 'REM START SOA APPLICATION SERVER AS SEPARATE PROCESS',         X
               DSNAME=&GENDIR\&GENRUN..BAT
 PUNCH 'START &GENDIR\&GENRUN.S &ZOPT',                                X
               DSNAME=&GENDIR\&GENRUN..BAT
 PUNCH 'PAUSE PRESS ENTER TO START CLIENT AFTER SERVER IS RUNNING',    X
               DSNAME=&GENDIR\&GENRUN..BAT
 PUNCH 'REM RUN SOA CLIENT APPLICATION',                               X
               DSNAME=&GENDIR\&GENRUN..BAT
 PUNCH 'CALL &GENDIR\&GENRUN.C &ZOPT',                                 X
               DSNAME=&GENDIR\&GENRUN..BAT
 PUNCH 'GOTO END',                                                     X
               DSNAME=&GENDIR\&GENRUN..BAT
 PUNCH ':LINUX',                                                       X
               DSNAME=&GENDIR\&GENRUN..BAT
 PUNCH 'REM RUN &GENRUN.S DEMOSMGR SERVER AND THEN',                   X
               DSNAME=&GENDIR\&GENRUN..BAT
 PUNCH 'REM RUN &GENRUN.C DEMOMAIN CLIENT IN 2ND TERMINAL WINDOW',     X
               DSNAME=&GENDIR\&GENRUN..BAT
 PUNCH ':END',                                                         X
               DSNAME=&GENDIR\&GENRUN..BAT
 PUNCH 'REM RUN SOA SERVER APPLICATION',                               X
               DSNAME=&GENDIR\&GENRUN.S.BAT
 PUNCH 'CALL EXEC &GENDIR\&SERVER NOTIME &ZOPT',                       X
               DSNAME=&GENDIR\&GENRUN.S.BAT
 PUNCH 'REM RUN SOA CLIENT APPLICATION',                               X
               DSNAME=&GENDIR\&GENRUN.C.BAT
 PUNCH 'CALL EXEC &GENDIR\&MAIN &ZOPT',                                X
               DSNAME=&GENDIR\&GENRUN.C.BAT
.SKIP_GEN_RUN ANOP
    MEND
