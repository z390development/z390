*********************************************************************
* z390 - Mainframe assembler emulator and run-time engine
* Copyright (C) 2021 z390 Assembler LLC
*
* This file is part of z390.
*
* z390 is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
* z390 is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License 
* along with this program; if not, see https://www.gnu.org/licenses.
*********************************************************************
* Author - Don Higgins                                              *
* Date   - 07/17/06                                                 *
*********************************************************************
* 07/17/06 RPI 370 test CTD and CFD including SVC and MF call option 
* 11/10/06 RPI 477 use IN= and OUT= on CTD and CFD macros            
* 12/11/06 RPI 513 test ED, DD, and LD CTD and CFD options           
* 12/15/06 RPI 406 add additional ED and LD tests                    
* 12/22/06 RPI 406 skip bug in DFP MF and skip slow BFP/HFP extended MF               
*                  add check that SVC and MF display values match
* 01/13/08 RPI 786 use fp compares to handle equivalent DFP values                    
* 03/19/08 RPI 819 clear high 32 bits of gprs to avoid bugs in fpconvrt               
* 04/19/08 RPI 833 add SETC quotes for HLASM compatibilitys in fpconvrt               
* 08/12/24 #540 BUILD procedure contains tests
*               Converting WTO output to file output
*********************************************************************
* Test conversion from and to 128 bit integer and all 6 floating 
* point types using default svc 170 and 171 and also using 
* LINKAGE=MF call to FPCONVRT contributed by David Bond.
*********************************************************************
         COPY  ASMMSP
         PRINT DATA
TESTFPC1 RT1   MAIN,TYPE=FILE           DCB name is RT1OUT               #540
INT128   DC    0XL16,X'80',15X'00'      largest negative 128 bit int
WORK16   DC    XL16'00'
WTOMSG   DC    AL2(WTOEND-*,0)
DTYPE    DC    CL6' ',C' '
DHEX     DC    CL32' ',C'='
DECIMAL  DC    CL45' '          
SAVE_DECIMAL  DC    CL45' '          
WTOEND   EQU   *
PRC      DC    PL8'0'
WTOPRC   DC    AL2(WTOPRC_END-*,0)
         DC    C'ERROR RC ='
DRC      DC    CL4' '
WTOPRC_END   EQU   *
LBT1     DC    LB'-567678867789987898'
LDT1     DC    LD'-567678867789987898'
LHT1     DC    LH'-567678867789987898'
         EQUREGS
         MACRO
         TEST  &TYPE,&VAL
         AIF   ('&TYPE'(2,1) EQ 'D').SKPMF SKIP DFP MF FOR NOW (BUG?)
         AIF   ('&TYPE'(1,1) EQ 'L').SKPMF SKIP EXT MF FOR NOW (SLOW)
         BALR  R10,0                              RPI 786
         USING *,R10                              RPI 786
         TEST1 MF,&TYPE,&VAL
         MVC   SAVE_DECIMAL,DECIMAL
         TEST1 SVC,&TYPE,&VAL
         CLC   DECIMAL,SAVE_DECIMAL
         RT1   CCE
         MEXIT
.SKPMF   ANOP
         TEST1 SVC,&TYPE,&VAL
         MEND
         MACRO
         TEST1 &LINKAGE,&TYPE,&VAL
         GBLA  &TESTNO
&TESTNO  SETA  &TESTNO+1
         BASR  R12,0
         USING *,R12
         CTD   CTD_&TYPE,IN=&VAL,OUT=DECIMAL,LINKAGE=&LINKAGE
         CVD   R15,PRC
&LK      SETC  '&LINKAGE'(1,1)
         MVC   DTYPE,=CL6'&LK.>D &TYPE'
         MVC   DHEX,=CL32' '
         LA    R2,&VAL
         LA    R3,L'&VAL
         CALL  CVTTOHEX,((R2),DHEX,(R3))
         PUT   RT1OUT,WTOMSG                                             #540
         IF    (CP,PRC,NE,=P'0')
               MVC DRC,=X'40202020'
               ED  DRC,PRC+6
               PUT RT1OUT,WTOPRC                                         #540
               RT1 ABEND,ABEND=102     Close file and abend              #540
         ENDIF
         XC    WORK16,WORK16
         CFD   CFD_&TYPE,OUT=WORK16,IN=DECIMAL,LINKAGE=&LINKAGE
         CVD   R15,PRC
         MVC   DTYPE,=CL6'&LK.<D &TYPE'
         MVC   DHEX,=CL32' '
         LA    R3,L'&VAL
         CALL  CVTTOHEX,(WORK16,DHEX,(R3))
         PUT   RT1OUT,WTOMSG                                             #540
         IF    (CP,PRC,NE,=P'0')
               MVC DRC,=X'40202020'
               ED  DRC,PRC+6
               PUT RT1OUT,WTOPRC                                         #540
               RT1 ABEND,ABEND=103     Close file and abend              #540
         ENDIF
         AP    RT1_TOT,=P'1'
* RPI 786 START TEST FOR DFP
         AIF   ('&TYPE' EQ 'ED').ED_COMP
         AIF   ('&TYPE' EQ 'DD').DD_COMP
         AIF   ('&TYPE' EQ 'LD').LD_COMP 
         AGO   .CLC_COMP     
.ED_COMP ANOP
         LE    R0,&VAL
         LDETR R0,R0,0
         LE    R1,WORK16
         LDETR R1,R1,0
         CDTR  R0,R1
         AGO   .END_COMP
.DD_COMP ANOP
         LD    R0,&VAL
         LD    R1,WORK16
         CDTR  R0,R1
         AGO   .END_COMP
.LD_COMP ANOP
         LX    R0,&VAL
         LX    R1,WORK16
         CXTR  R0,R1
         AGO   .END_COMP
.CLC_COMP ANOP
         LA    R1,L'&VAL
         BCTR  R1,0
         EX    R1,*+4+4
         B     *+4+6
         CLC   WORK16(0),&VAL  VERIFY CTD CONSTANT WITH CFD RESULT
.END_COMP ANOP
* RPI 786 START TEST FOR DFP
         RT1   CCE
         B     EXIT&TESTNO
         LTORG
EXIT&TESTNO DS 0H
         MEND
         RT1   START
&I       SETA  0
.HL      ANOP
         IIHH  R&I,0            RPI 819 FIX
         IIHL  R&I,0            RPI 819 FIX
&I       SETA  &I+1
         AIF   (&I LT 16).HL
* DB
         TEST   DB,=DB'0'
         TEST   DB,=DB'1E-307'     
         TEST   DB,=DB'1'
         TEST   DB,=DB'2'
         TEST   DB,=DB'1E2'
         TEST   DB,=DB'1E307'     
         TEST   DB,=DB'-1'
         TEST   DB,=DB'-2'
         TEST   DB,=DB'-1E2'
* DD
         TEST   DD,=DD'0'
         TEST   DD,=DD'0.1234567890123456'
         TEST   DD,=DD'0.12345678901234560'
         TEST   DD,=DD'1E-398'     
         TEST   DD,=DD'1'
         TEST   DD,=DD'2'
         TEST   DD,=DD'1E2'
         TEST   DD,=DD'123456789012345'     
         TEST   DD,=DD'1.23456789012345E14'     
         TEST   DD,=DD'1234567890123456'    
         TEST   DD,=DD'1234567890123456E300'
         TEST   DD,=DD'9999999999999999E369'     
         TEST   DD,=DD'-1'
         TEST   DD,=DD'-2'
         TEST   DD,=DD'-1E2'
* DH
         TEST   DH,=DH'0'
         TEST   DH,=DH'1E-78'       
         TEST   DH,=DH'1'
         TEST   DH,=DH'2'
         TEST   DH,=DH'1E2'
         TEST   DH,=DH'6E75' 1E75 CAUSES 1 BIT ROUNDING ERROR
         TEST   DH,=DH'-1'
         TEST   DH,=DH'-2'
         TEST   DH,=DH'-1E2'
* EB
         TEST   EB,=EB'0'
         TEST   EB,=EB'2E-38' 1E-38 CAUSES UNDERFLOW
         TEST   EB,=EB'1'
         TEST   EB,=EB'2'
         TEST   EB,=EB'3'
         TEST   EB,=EB'1E2'
         TEST   EB,=EB'1E38'    
         TEST   EB,=EB'-1'
         TEST   EB,=EB'-2'
         TEST   EB,=EB'-1E2'
* ED
         TEST   ED,=ED'0'
         TEST   ED,=ED'0.1234567'
         TEST   ED,=ED'0.12345670'
         TEST   ED,=ED'1E-101'
         TEST   ED,=ED'1'
         TEST   ED,=ED'2'
         TEST   ED,=ED'3'
         TEST   ED,=ED'1E2'
         TEST   ED,=ED'1234567'     
         TEST   ED,=ED'1.234567E6'     
         TEST   ED,=ED'1234567E90'
         TEST   ED,=ED'9999999E90'    
         TEST   ED,=ED'-1'
         TEST   ED,=ED'-2'
         TEST   ED,=ED'-1E2'
* EH
         TEST   EH,=EH'0'
         TEST   EH,=EH'1E-78'   
         TEST   EH,=EH'1'
         TEST   EH,=EH'2'
         TEST   EH,=EH'1E2'
         TEST   EH,=EH'1E75'    
         TEST   EH,=EH'-1'
         TEST   EH,=EH'-2'
         TEST   EH,=EH'-1E2'
* LB
         TEST   LB,=LB'0'
         TEST   LB,=LB'1E-4931'     
         TEST   LB,=LB'1'
         TEST   LB,=LB'2'
         TEST   LB,=LB'1E2'
         TEST   LB,=LB'1E4931'     
         TEST   LB,=LB'-1'
         TEST   LB,=LB'-2'
         TEST   LB,=LB'-1E2'
         TEST   LB,LBT1 TEST VALUE FOR FPCONVRT
* LD
         TEST   LD,=LD'0'
         TEST   LD,=LD'0.1234567890123456789012345678901234'
         TEST   LD,=LD'0.12345678901234567890123456789012340'
         TEST   LD,=LD'1E-6176'     
         TEST   LD,=LD'1'
         TEST   LD,=LD'2'
         TEST   LD,=LD'1E2'
         TEST   LD,=LD'1234567890123456789012345678901234'
         TEST   LD,=LD'1.234567890123456789012345678901234E33'
         TEST   LD,=LD'1234567890123456789012345678901234'
         TEST   LD,=LD'1234567890123456789012345678901234E6111'
         TEST   LD,=LD'9999999999999999999999999999999999E6111'
         TEST   LD,=LD'1E6111'     
         TEST   LD,=LD'-1'
         TEST   LD,=LD'-2'
         TEST   LD,=LD'-1E2'
         TEST   LD,LDT1 TEST VALUE FOR FPCONVRT
* LH
         TEST   LH,=LH'0'
         TEST   LH,=LH'3E-78' 1E-78 CAUSES 1 BIT ROUNDING ERROR    
         TEST   LH,=LH'1'
         TEST   LH,=LH'2'
         TEST   LH,=LH'1E2'
         TEST   LH,=LH'2E75'  1E75 CAUSES 1 BIT ROUNDING ERROR
         TEST   LH,=LH'-1'
         TEST   LH,=LH'-2'
         TEST   LH,=LH'-1E2'
         TEST   LH,LHT1 TEST VALUE FOR FPCONVRT
* INT128
         TEST   INT128,=FL16'0' 
         TEST   INT128,=FL16'1' 
         TEST   INT128,=FL16'2' 
         TEST   INT128,=FL16'1E2' 
         TEST   INT128,=FL16'1E6'      
         TEST   INT128,=FL16'1E13'     
         TEST   INT128,=FL16'1E14'     
         TEST   INT128,=FL16S63'1'     
         TEST   INT128,=FL16S64'1'     
         TEST   INT128,=FL16'1E26'     
         TEST   INT128,=FL16'1E27'     
         TEST   INT128,=FL16'1E38'     
         TEST   INT128,=FL16'-1' 
         TEST   INT128,=FL16'-2' 
         TEST   INT128,=FL16'-1E6'      
         TEST   INT128,=FL16'-1E13'     
         TEST   INT128,=FL16'-1E14'     
         TEST   INT128,=FL16S63'-1'     
         TEST   INT128,=FL16S64'-1'     
         TEST   INT128,=FL16'-1E26'     
         TEST   INT128,=FL16'-1E27'     
         TEST   INT128,=FL16'-1E38'     
         TEST   INT128,INT128 MAX NEG
         RT1   END
         END         
