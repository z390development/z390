*********************************************************************
* z390 - Mainframe assembler emulator and run-time engine
* Copyright (C) 2021 z390 Assembler LLC
*
* This file is part of z390.
*
* z390 is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
* z390 is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License 
* along with this program; if not, see https://www.gnu.org/licenses.
*********************************************************************
* Author - Don Higgins                                              *
* Date   - 07/27/06                                                 *
*********************************************************************
* 07/27/06 RPI 370 test CTD and CFD including SVC and MF MAX/MIN 
* 11/10/06 RPI 477 use IN= and OUT= on CTD and CFD macros            
* 12/11/06 RPI 514 test DFP DD, ED, and LD min/max using CTD/CFD     
* 12/22/06 RPI 406 skip bug in DFP MF and skip slow BFP/HFP extended MF               
*********************************************************************
* Test conversion from and to 128 bit integer and all 6 floating 
* point types using default svc 170 and 171 and also using 
* LINKAGE=MF call to FPCONVRT contributed by David Bond.
*********************************************************************
         COPY  ASMMSP
         PRINT DATA
TESTFPC1 RT1   MAIN
INT128   DC    0XL16,X'80',15X'00'      largest negative 128 bit int
WORK16   DC    XL16'00'
WTOMSG   DC    AL2(WTOEND-*,0)
DTYPE    DC    CL6' ',C' '
DHEX     DC    CL32' ',C'='
DECIMAL  DC    CL45' '          
SAVE_DECIMAL  DC    CL45' '          
WTOEND   EQU   *
PRC      DC    PL8'0'
WTOPRC   DC    AL2(WTOPRC_END-*,0)
         DC    C'ERROR RC ='
DRC      DC    CL4' '
WTOPRC_END   EQU   *
         EQUREGS
         RT1   START
         MACRO
         TEST  &TYPE,&VAL
         AIF   ('&TYPE'(2,1) EQ 'D').SKPMF SKIP DFP MF FOR NOW (BUG?)
         AIF   ('&TYPE'(1,1) EQ 'L').SKPMF SKIP EXT MF FOR NOW (SLOW)
         TEST1 MF,&TYPE,&VAL
         MVC   SAVE_DECIMAL,DECIMAL
         TEST1 SVC,&TYPE,&VAL
.*       CLC   DECIMAL,SAVE_DECIMAL  SKIP DUE TO ERROR IN EB LAST DIGIT 
.*       RT1   CCE       
         MEXIT
.SKPMF   ANOP  dshx test
         TEST1 SVC,&TYPE,&VAL
         MEND
         MACRO
         TEST1 &LINKAGE,&TYPE,&VAL
         GBLA  &TESTNO
&TESTNO  SETA  &TESTNO+1
         BASR  R12,0
         USING *,R12
         CTD   CTD_&TYPE,IN=&VAL,OUT=DECIMAL,LINKAGE=&LINKAGE
         CVD   R15,PRC
&LK      SETC  '&LINKAGE'(1,1)
         MVC   DTYPE,=CL6'&LK.>D &TYPE'
         MVC   DHEX,=CL32' '
         LA    R2,&VAL
         LA    R3,L'&VAL
         CALL  CVTTOHEX,((R2),DHEX,(R3))
         WTO   MF=(E,WTOMSG)
         IF    (CP,PRC,NE,=P'0')
               MVC DRC,=X'40202020'
               ED  DRC,PRC+6
               WTO MF=(E,WTOPRC)
               ABEND 101
         ENDIF
         XC    WORK16,WORK16
         CFD   CFD_&TYPE,OUT=WORK16,IN=DECIMAL,LINKAGE=&LINKAGE
         CVD   R15,PRC
         IF    (CP,PRC,NE,=P'0')
               IF  (CP,PRC,LE,=P'4'),AND,(OC,WORK16,Z,WORK16)
                   MVC  WORK16,&VAL     REPLACE 0 WITH (MIN) FOR MF
               ELSEIF (CP,PRC,EQ,=P'8'),AND,(CLC,&VAL,EQ,WORK16)
*                  ALLOW RC=8 FOR MAX VALUE RETURN FROM FPCONVRT             
               ELSE
                   MVC DRC,=X'40202020'
                   ED  DRC,PRC+6
                   WTO MF=(E,WTOPRC)
                   ABEND 102
               ENDIF
         ENDIF
         MVC   DTYPE,=CL6'&LK.<D &TYPE'
         MVC   DHEX,=CL32' '
         LA    R3,L'&VAL
         CALL  CVTTOHEX,(WORK16,DHEX,(R3))
         WTO   MF=(E,WTOMSG)
         B     EXIT&TESTNO
         LTORG
EXIT&TESTNO DS 0H
         MEND
         TEST   EH,=EH'(MIN)'     
         TEST   EH,=EH'(MAX)'     
         TEST   EB,=EB'(MIN)'     
         TEST   EB,=EB'(MAX)'     
         TEST   DH,=DH'(MIN)'     
         TEST   DH,=DH'(MAX)'     
         TEST   DB,=DB'(MIN)'     
         TEST   DB,=DB'(MAX)'     
         TEST   LH,=LH'(MIN)'     
         TEST   LH,=LH'(MAX)'     
         TEST   LB,=LB'(MIN)'     
         TEST   LB,=LB'(MAX)'     
         TEST   ED,=ED'(MIN)'     
         TEST   ED,=ED'(MAX)'     
         TEST   DD,=DD'(MIN)'     
         TEST   DD,=DD'(MAX)'     
         TEST   LD,=LD'(MIN)'     
         TEST   LD,=LD'(MAX)'     
         RT1   END
         END         
