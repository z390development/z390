         AGO   .SKIP                                                    00010000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 00020000
*                                                                     * 00030000
*   N     N   OOOO   TTTTTTT  EEEEEEE                                 * 00040000
*   NN    N  O    O     T     E                                       * 00050000
*   N N   N  O    O     T     E                                       * 00060000
*   N  N  N  O    O     T     EEEEE     =====                         * 00070000
*   N   N N  O    O     T     E                                       * 00080000
*   N    NN  O    O     T     E                                       * 00090000
*   N     N   OOOO      T     EEEEEEE                                 * 00100000
*                                                                     * 00110000
*                                                                     * 00120000
*   THIS PROGRAM IS INTENDED TO BE USED FOR DISPLAY PURPOSES ONLY;    * 00130000
*   IT IS NOT INTENDED TO BE EXECUTED.                                * 00140000
*                                                                     * 00150000
*   PLEASE STUDY EACH DESCRIPTION OF A PARTICULAR ASPECT OF THE "IF"  * 00160000
*   MACRO IN THE OUTPUT LISTING OF THE ASSEMBLY, THE CODING OF THE    * 00170000
*   MACRO TO IMPLEMENT THE DESIRED LOGIC, AND THE CODE GENERATED BY   * 00180000
*   THE MACRO EXPANSION.                                              * 00190000
*                                                                     * 00200000
*   THE EXECUTION OF THE MAIN BODY OF CODE PRODUCED BY THIS PROGRAM   * 00210000
*   IS PREVENTED BY PLACING AN "B    0" (ABEND) INSTRUCTION JUST      * 00220000
*   AFTER THE zOS INITIALIZATION INSTRUCTIONS.                        * 00230000
*                                                                     * 00240000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 00250000
*   Copyright (C) <2021>  Daniel H. Snyder                              00260001
*   Structured Programming Macros for the IBMÂ® High Level Assembler    00270000
*   Daniel.H.Snyder@protonmail.com                                      00280000
*                                                                       00290000
* This program is free software: you can redistribute it and/or modify  00300000
* it under the terms of the GNU General Public License as published by  00310000
* the Free Software Foundation, either version 3 of the License, or     00320000
* any later version.                                                    00330000
*                                                                       00340000
* This program is distributed in the hope that it will be useful,       00350000
* but WITHOUT ANY WARRANTY; without even the implied warranty of        00360000
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         00370000
* GNU General Public License for more details.                          00380000
*                                                                       00390000
* You should have received a copy of the GNU General Public License     00400000
* along with this program. See <https://www.gnu.org/licenses/>.         00410000
*                                                                       00420000
.SKIP    ANOP                                                           00430000
IFDOC    TITLE 'EXAMPLES OF "IF" LOGIC MACRO INSTRUCTIONS'              00440000
         GBLA  &$MBLATH,&$MBL2                                          00450000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 00460000
*                                                                     * 00470000
*      THESE FOLLOWING STATEMENTS ARE NORMAL zOS INITIALIZATION       * 00480000
*                                                                     * 00490000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 00500000
*                                                                       00510000
R0       EQU   0                                                        00520000
R1       EQU   1       STANDARD                                         00530000
R2       EQU   2        EQUATES                                         00540000
R3       EQU   3         FOR                                            00550000
R4       EQU   4          GENERAL                                       00560000
R5       EQU   5           PURPOSE                                      00570000
R6       EQU   6            REGISTERS.                                  00580000
R7       EQU   7             YOU                                        00590000
R8       EQU   8              MIGHT                                     00600000
R9       EQU   9               AS                                       00610000
R10      EQU   10               WELL                                    00620000
R11      EQU   11                JUST                                   00630000
R12      EQU   12                 GET                                   00640000
R13      EQU   13                  USED                                 00650000
R14      EQU   14                   TO                                  00660000
R15      EQU   15                    IT.                                00670000
*                                                                       00680000
IFDOC    CSECT                                                          00690000
*                                                                       00700000
         STM   R14,R12,12(R13)     SAVE REGS IN CALLER'S SAVE AREA      00710000
         LR    R12,R15             PRIME BASE REG                       00720000
         LA    R11,2048(,R12)      LET'S ADDRESS                        00730000
         LA    R11,2048(,R11)      - ANOTHER 4K                         00740000
         USING IFDOC,R12,R11       SET BASE REGISTER FOR PROGRAM        00750000
         LR    R1,R13              COPY POINTER TO CALLER'S SA          00760000
         L     R13,VCON$WA$        ADDRESS OF MY SAVE/WORK AREA         00770000
         USING $$WA$$,R13          SEPARATE CSECT FOR REENTRANCY        00780000
         ST    R1,SAVEAREA+4       BACK LINK TO CALLER'S SAVE AREA      00790000
         ST    R13,8(,R1)          FORWARD LINK TO MY SAVE AREA         00800000
*                                                                       00810000
         B     0                   CREATE ABEND                         00820000
*                                                                       00830000
$$WA$$   CSECT                                                          00840000
SAVEAREA DC    18F'0'              MY SAVE AREA                         00850000
IFDOC    CSECT                                                          00860000
*                                                                       00870000
         PRINT GEN                                                      00880000
*                                                                       00890000
*                                                                       00970000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 00980000
*                                                                     * 00990000
*                   THE "IF" STATEMENT                                * 01000000
*                                                                     * 01010000
*      THE FORMAT OF THE STATEMENT IS:                                * 01020000
*                                                                     * 01030000
*        IF    (CLC,A,Z,NE)                                           * 01040000
*                                                                     * 01050000
* WHERE THE 'CLC' CAN BE ANY INSTRUCTION THAT SETS THE CONDITION      * 01060000
* CODE, 'A' IS THE FIRST OPERAND, 'Z' THE SECOND, AND 'NE' CAN BE ANY * 01070000
* CONDITION WHICH IS A MEMBER OF THE EXTENDED MNEMONIC BRANCH         * 01080000
* INSTRUCTIONS, AND SETS THE CONDITION IN WHICH THE IF-GROUP IS TO    * 01090000
* BE EXECUTED. EXAMPLES INCLUDE 'E', 'NE', 'NO', ETC. THE INSTRUCTION * 01100000
* DOES NOT HAVE TO HAVE TWO OPERANDS. IN ANY CASE, THE OP-CODE MUST   * 01110000
* BE THE FIRST POSITIONAL PARAMETER WITHIN THE PARENTHESES, AND THE   * 01120000
* CONDITION, SUCH AS "E" OR "NE", MUST BE THE LAST.                   * 01130000
*                                                                     * 01140000
*      IF    (CLC,A,Z,NE)                                             * 01150000
*                                                                     * 01160000
*               ONE OR MORE INSTRUCTIONS                              * 01170000
*               TO BE EXECUTED IF THE ABOVE                           * 01180000
*               LOGIC GROUP EVALUATES TO "TRUE"                       * 01190000
*                                                                     * 01200000
*      ENDIF                                                          * 01210000
*                                                                     * 01220000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01230000
*        1         2         3         4         5         6         7  01240000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 01250000
         IF    (CLC,A,Z,NE)                                             01260000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              01270000
         ENDIF                                                          01280000
*                                                                       01290000
         LA    R10,A                                                    01300000
*        1         2         3         4         5         6         7  01310000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 01320000
         IF    (CLC,0(4,R10),=C'ZZZZ',NE)                               01330000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              01340000
         ENDIF                                                          01350000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01360000
* SAME - WITH A ONE OPERAND INSTRUCTION                               * 01370000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01380000
TS010    IF    (TS,SPECIAL,Z)                                           01390000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              01400000
         ENDIF  ,                                                       01410000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01420000
* SAME - WITH A THREE OPERAND INSTRUCTION                             * 01430000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01440000
         PACK  SHIFT_PACKED,=Z'1234567'                                 01450000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01460000
*  "SRP" INSTRUCTION "SHIFT AND ROUND DECIMAL" - THREE OPERANDS       * 01470000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01480000
SRP010   IF    (SRP,SHIFT_PACKED,5,3,P) "POSITIVE"                      01490000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              01500000
         ENDIF  ,                                                       01510000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01520000
* "RISBHGZ" - A FOUR OPERAND INSTRUCTION                              * 01530000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01540000
         LG    R1,=X'0123456789ABCDEF'                                  01550000
         LG    R2,=X'FEDCBA9876543210'                                  01560000
RISBHGZ010 IF (RISBHGZ,R1,R2,16,31,Z)                                   01570000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              01580000
         ENDIF  ,                                                       01590000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01600000
*  "RNSBG" INSTRUCTION  - FIVE OPERANDS                               * 01610000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01620000
         LG    R5,=C'12345672'                                          01630000
         LG    R6,=C'ABCDEFGC'                                          01640000
RNSBG010 IF    (RNSBG,R5,R6,56,7,0,P) "POSITIVE"                        01650000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              01660000
         ENDIF  ,                                                       01670000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01680000
*                                                                     * 01690000
*                 THE "ELSE" STATEMENT                                * 01700000
*                                                                     * 01710000
*      THE FORMAT OF THE STATEMENT IS:                                * 01720000
*                                                                     * 01730000
*        ELSE                                                         * 01740000
*                                                                     * 01750000
* IT MUST FOLLOW AN "IF" STATEMENT AND PRECEDE ITS MATCHING "ENDIF".  * 01760000
* THE CODE THAT YOU PROVIDE BETWEEN THE "ELSE" AND THE "ENDIF" WILL   * 01770000
* BE EXECUTED IF THE "IF" CLAUSE(S) RESULT IN "NOT TRUE". THE "ELSE"  * 01780000
* IS OPTIONAL, AND IN ITS ABSENCE NO ACTION WILL BE TAKEN IN THE      * 01790000
* EVENT THAT THE EXECUTION OF THE "IF" MACRO RESULTS IN "FALSE".      * 01800000
*                                                                     * 01810000
*      IF    ...                                                      * 01820000
*                                                                     * 01830000
*               ONE OR MORE INSTRUCTIONS                              * 01840000
*               TO BE EXECUTED IF THE ABOVE                           * 01850000
*               LOGIC GROUP EVALUATES TO "TRUE"                       * 01860000
*                                                                     * 01870000
*      ELSE                                                           * 01880000
*                                                                     * 01890000
*               ONE OR MORE INSTRUCTIONS                              * 01900000
*               TO BE EXECUTED IF THE ABOVE                           * 01910000
*               LOGIC GROUP EVALUATES TO "FALSE"                      * 01920000
*                                                                     * 01930000
*      ENDIF                                                          * 01940000
*                                                                     * 01950000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 01960000
*        1         2         3         4         5         6         7  01970000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 01980000
         IF    (CLI,EOFSW,C'N',E)                                       01990000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              02000000
         ELSE                                                           02010000
           AP    LEVEL1_ELSE_COUNTER,=P'1'                              02020000
         ENDIF                                                          02030000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 02040000
*                                                                     * 02050000
*                 THE "ELSEIF" STATEMENT                              * 02060000
*                                                                     * 02070000
*      THE FORMAT OF THE STATEMENT IS:                                * 02080000
*                                                                     * 02090000
*        ELSEIF (CLC,A,Z,E)                                           * 02100000
*                                                                     * 02110000
* IT MUST FOLLOW AN "IF" STATEMENT AND PRECEDE ITS MATCHING "ENDIF".  * 02120000
* IF THERE IS AN "ELSE" STATEMENT WITHIN THIS "IF" GROUP, THEN THE    * 02130000
* "ELSEIF" MUST PRECEDE THE "ELSE".                                   * 02140000
*                                                                     * 02150000
* THE "ELSEIF" STATEMENT SUPPORTS THE SAME RICHNESS OF FUNCTION THAT  * 02160000
* THE "IF" STATEMENT PROVIDES. THE "IF" STATEMENT'S FULL POWER IS     * 02170000
* DESCRIBED IN SOME OF THE EXAMPLES THAT FOLLOW.                      * 02180000
*                                                                     * 02190000
* THE CODE THAT YOU PROVIDE BETWEEN THE "ELSEIF" AND THE FOLLOWING    * 02200000
* "ELSE" OR "ENDIF" WILL BE EXECUTED IF THE "IF" CLAUSE(S) AND ALL    * 02210000
* PREVIOUS "ELSEIF" STATEMENTS ARE FALSE, AND THE RESULT OF THIS      * 02220000
* "ELSEIF" IS TRUE. THE "ELSEIF" IS OPTIONAL, MAY OCCUR MORE THAN     * 02230000
* ONCE, AND MUST BE CODED BETWEEN THE "IF" AND THE "ELSE" OR "ENDIF". * 02240000
*                                                                     * 02250000
*      IF       ...                                                   * 02260000
*                                                                     * 02270000
*               ONE OR MORE INSTRUCTIONS                              * 02280000
*               TO BE EXECUTED IF THE ABOVE                           * 02290000
*               LOGIC GROUP EVALUATES TO "TRUE"                       * 02300000
*                                                                     * 02310000
*      ELSEIF   ...                                                   * 02320000
*                                                                     * 02330000
*               ONE OR MORE INSTRUCTIONS TO BE EXECUTED IF THIS       * 02340000
*               "ELSEIF" EVALUATES TO "TRUE" AND THE PRECEDING "IF"   * 02350000
*               AND ANY ADDITIONAL "ELSEIF" STATEMENT(S) ALL EVALUATE * 02360000
*               TO "FALSE"                                            * 02370000
*                                                                     * 02380000
*      ENDIF                                                          * 02390000
*                                                                     * 02400000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 02410000
*        1         2         3         4         5         6         7  02420000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 02430000
         IF    (CLC,A,Z,NE)                                             02440000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              02450000
         ELSEIF (CLC,B,Z,E)                                             02460000
           AP    LEVEL1_ELSEIF_COUNTER,=P'1'                            02470000
         ENDIF                                                          02480000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 02490000
*                                                                     * 02500000
*                 BOTH "ELSEIF" AND "ELSE"                            * 02510000
*                                                                     * 02520000
* NOTE: IF AN "ELSE" IS USED IN THE SAME IF-GROUP AS ONE OR MORE      * 02530000
*       "ELSEIF" STATEMENTS, THEN THE "ELSE" MUST BE THE LAST.        * 02540000
*                                                                     * 02550000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 02560000
*        1         2         3         4         5         6         7  02570000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 02580000
         IF    (CLC,A,Z,NE)                                             02590000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              02600000
         ELSEIF (CLC,B,Z,E)                                             02610000
           AP    LEVEL1_ELSEIF_COUNTER,=P'1'                            02620000
         ELSEIF (CLC,C,Z,E)                                             02630000
           AP    LEVEL1_ELSEIF_COUNTER,=P'1'                            02640000
         ELSEIF (CLC,D,Z,E)                                             02650000
           AP    LEVEL1_ELSEIF_COUNTER,=P'1'                            02660000
         ELSE  ,                                                        02670000
           AP    LEVEL1_ELSE_COUNTER,=P'1'                              02680000
         ENDIF                                                          02690000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 02700000
*                                                                     * 02710000
*                      THE "OR" CONJUNCTION                           * 02720000
*                                                                     * 02730000
*      TO EXECUTE THE IF-GROUP IF EITHER ONE OF TWO CONDITIONS IS     * 02740000
* TRUE, THE FORMAT IS:                                                * 02750000
*                                                           72        * 02760000
*      IF    (CLC,A,Z,NE),OR,                                C        * 02770000
*            (CLC,B,Z,NE)                                             * 02780000
*                                                                     * 02790000
*               ONE OR MORE INSTRUCTIONS                              * 02800000
*               TO BE EXECUTED IF THE ABOVE                           * 02810000
*               LOGIC GROUP EVALUATES TO "TRUE"                       * 02820000
*                                                                     * 02830000
*      ENDIF                                                          * 02840000
*                                                                     * 02850000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 02860000
*        1         2         3         4         5         6         7  02870000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 02880000
         IF    (CLC,A,Z,NE),OR,    NOTE "C" IN COLUMN 72 ============> C02890000
               (CLC,B,Z,NE)                                             02900000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              02910000
         ENDIF                                                          02920000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 02930000
*                                                                     * 02940000
*                      THE "AND" CONJUNCTION                          * 02950000
*                                                                     * 02960000
*      TO EXECUTE THE IF-GROUP IF BOTH OF THE TWO CONDITIONS ARE      * 02970000
* TRUE, THE FORMAT IS:                                                * 02980000
*                                                                     * 02990000
*      IF    (CLC,A,Z,NE),AND,(LTR,R15,R15,Z)                         * 03000000
*                                                                     * 03010000
*               ONE OR MORE INSTRUCTIONS                              * 03020000
*               TO BE EXECUTED IF THE ABOVE                           * 03030000
*               LOGIC GROUP EVALUATES TO "TRUE"                       * 03040000
*                                                                     * 03050000
*      ENDIF                                                          * 03060000
*                                                                     * 03070000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 03080000
*        1         2         3         4         5         6         7  03090000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 03100000
         IF    (CLC,A,Z,NE),AND,(LTR,R15,R15,Z)                         03110000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              03120000
         ENDIF                                                          03130000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 03140000
*                                                                     * 03150000
*      TO EXECUTE THE IF-GROUP IF THE FIRST AND SECOND LOGICAL        * 03160000
* EXPRESSIONS ARE TRUE, OR THE THIRD EXPRESSION IS TRUE, THE FORMAT   * 03170000
* IS:                                                                 * 03180000
*                                                                     * 03190000
*      IF    (CLC,A,Z,NE),AND,(CLC,B,Z,NE),OR,(CLC,C,Z,NE)            * 03200000
*                                                                     * 03210000
*               ONE OR MORE INSTRUCTIONS                              * 03220000
*               TO BE EXECUTED IF THE ABOVE                           * 03230000
*               LOGIC GROUP EVALUATES TO "TRUE".                      * 03240000
*                                                                     * 03250000
*      ENDIF                                                          * 03260000
*                                                                     * 03270000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 03280000
*        1         2         3         4         5         6         7  03290000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 03300000
         IF    (CLC,A,Z,NE),AND,(CLC,B,Z,NE),OR,(CLC,C,Z,NE)            03310000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              03320000
         ENDIF                                                          03330000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 03340000
*                                                                     * 03350000
*      SINCE THE EVALUATION OF "AND" IN A LOGICAL EXPRESSION TAKES    * 03360000
* PRECEDENCE OVER "OR", YOU MAY NEED TO OVERRIDE THAT PRECEDENCE TO   * 03370000
* FORCE AN "OR" CONJUNCTION TO BE EVALUATED BEFORE AN "AND". YOU      * 03380000
* WOULD ENCLOSE THE TWO EXPRESSIONS JOINED BY AN "OR" WITH AN         * 03390000
* ADDITIONAL PAIR OF PARENTHESES. HERE THE BODY OF THE IF-GROUP WILL  * 03400000
* EXECUTE IF THE FIRST PHRASE IS TRUE AND EITHER OF THE OTHER TWO     * 03410000
* PHRASES IS TRUE.                                                    * 03420000
*                             |                            |          * 03430000
*                             |                            |          * 03440000
*                             |                            |          * 03450000
*                             V                            V          * 03460000
*      IF    (CLC,A,Z,NE),AND,((CLC,B,Z,NE),OR,(CLC,C,Z,NE))          * 03470000
*                                                                     * 03480000
*               ONE OR MORE INSTRUCTIONS                              * 03490000
*               TO BE EXECUTED IF THE ABOVE                           * 03500000
*               LOGIC GROUP EVALUATES TO "TRUE"                       * 03510000
*                                                                     * 03520000
*      ENDIF                                                          * 03530000
*                                                                     * 03540000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 03550000
*        1         2         3         4         5         6         7  03560000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 03570000
*                                                                       03580000
*                               V<<<< EXTRA PARENTHESES: >>>>V          03590000
*                               V                            V          03600000
         IF    (CLC,A,Z,NE),AND,((CLC,B,Z,NE),OR,(CLC,C,Z,NE))          03610000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              03620000
         ENDIF                                                          03630000
*                                                                       03640000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 03650000
*                                                                     * 03660000
*      IF (A OR B) AND (C OR D)                                       * 03670000
*                                                                     * 03680000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 03690000
*        1         2         3         4         5         6         7  03700000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 03710000
         IF    ((CLC,A,Z,NE),OR,(CLC,B,Z,NE)),AND,                     C03720000
               ((CLC,C,Z,NE),OR,(CLC,D,Z,NE))                           03730000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              03740000
         ENDIF                                                          03750000
*                                                                       03760000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 03770000
*                                                                     * 03780000
*      IF YOU REQUIRE MORE COMPLEX LOGIC, YOU MAY NEST THE "OR"       * 03790000
*      CONJUNCTIONS TO ANOTHER LEVEL. YOU MAY ADD EVEN ADDITIONAL     * 03800000
*      LEVELS OF COMPLEXITY AS REQUIRED.                              * 03810000
*                                                                     * 03820000
*      IF A OR B AND ( C OR D AND (E OR F))                           * 03830000
*                                                                     * 03840000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 03850000
*        1         2         3         4         5         6         7  03860000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 03870000
         IF    (CLC,A,Z,E),OR,(CLC,B,Z,E),AND,                         C03880000
               ((CLC,C,Z,E),OR,(CLC,D,Z,E),AND,                        C03890000
               ((CLC,E,Z,E),OR,(CLC,F,Z,E)))                            03900000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              03910000
         ENDIF                                                          03920000
*                                                                       03930000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 03940000
*                                                                     * 03950000
* IF A IS TRUE AND EITHER B OR C IS TRUE AND D IS TRUE  -  OR...      * 03960000
* IF E IS TRUE AND EITHER F OR G IS TRUE AND H IS TRUE, THEN EXECUTE  * 03970000
* THE CODE FOLLOWING THIS "IF" STATEMENT:                             * 03980000
*                                                                     * 03990000
*      IF     A & ( B | C) & D    |    E & (F | G) & H                * 04000000
*                                                                     * 04010000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 04020000
*        1         2         3         4         5         6         7  04030000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 04040000
         IF    (CLC,A,Z,E),AND,                                        C04050000
               ((CLC,B,Z,E),OR,(CLC,C,Z,E)),AND,                       C04060000
               (CLC,D,Z,E),OR,                                         C04070000
               (CLC,E,Z,E),AND,                                        C04080000
               ((CLC,F,Z,E),OR,(CLC,G,Z,E)),AND,                       C04090000
               (CLC,H,Z,E)                                              04100000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              04110000
         ENDIF                                                          04120000
*                                                                       04130000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 04140000
*                                                                     * 04150000
* IF A | B & ( C | D & ( E | F & G ) & H ) & J                        * 04160000
*                                                                     * 04170000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 04180000
*        1         2         3         4         5         6         7  04190000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 04200000
         IF    (CLC,A,Z,E),OR,(CLC,B,Z,E),AND,((CLC,C,Z,E),OR,         C04210000
               (CLC,D,Z,E),AND,((CLC,E,Z,E),OR,                        C04220000
               (CLC,F,Z,E),AND,(CLC,G,Z,E)),AND,                       C04230000
               (CLC,H,Z,E)),AND,(CLC,J,Z,E)                             04240000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              04250000
         ENDIF                                                          04260000
*                                                                       04270000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 04280000
*                                                                     * 04290000
* IF A | B & ( C | D & ( E | F & G ) | H ) | J                        * 04300000
*                                                                     * 04310000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 04320000
*        1         2         3         4         5         6         7  04330000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 04340000
         IF    (CLC,A,Z,E),OR,(CLC,B,Z,E),AND,((CLC,C,Z,E),OR,         C04350000
               (CLC,D,Z,E),AND,((CLC,E,Z,E),OR,                        C04360000
               (CLC,F,Z,E),AND,(CLC,G,Z,E)),OR,                        C04370000
               (CLC,H,Z,E)),OR,(CLC,J,Z,E)                              04380000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              04390000
         ENDIF                                                          04400000
*                                                                       04410000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 04420000
*                                                                     * 04430000
*                 THE NESTING OF MULTIPLE "IF" GROUPS                 * 04440000
*                                                                     * 04450000
* IF WITHIN THE CONFINES OF ONE "IF" GROUP YOU FIND IT NECESSARY TO   * 04460000
* ADD ANOTHER LEVEL OF CONDITIONAL EXECUTION, THEN YOU MAY NEST ONE   * 04470000
* "IF" GROUP WITHING ANOTHER. EACH SEPERATE "IF" STATEMENT WILL HAVE  * 04480000
* ITS OWN LOGICAL CONSTRUCT, AND MUST BE TERMINATED WITH ITS OWN      * 04490000
* "ENDIF" STATEMENT. THE "ELSEIF" AND "ENDIF" STATEMENTS ARE          * 04500000
* SUPPORTED. YOU MAY INDENT THE NESTED "IF" GROUPS, BUT DOING THAT    * 04510000
* WOULD BE FOR DOCUMENTATION PURPOSES ONLY.                           * 04520000
*      IF    (CLC,A,Z,NE)                                             * 04530000
*                                                                     * 04540000
*               ONE OR MORE INSTRUCTIONS                              * 04550000
*               TO BE EXECUTED IF THE ABOVE                           * 04560000
*               LOGIC GROUP EVALUATES TO "TRUE"                       * 04570000
*                                                                     * 04580000
*        IF    (CLC,B,Z,NE)                                           * 04590000
*                                                                     * 04600000
*               ONE OR MORE INSTRUCTIONS                              * 04610000
*               TO BE EXECUTED IF THE ABOVE (NESTED)                  * 04620000
*               LOGIC GROUP EVALUATES TO "TRUE"                       * 04630000
*                                                                     * 04640000
*        ELSE                                                         * 04650000
*                                                                     * 04660000
*               ONE OR MORE INSTRUCTIONS                              * 04670000
*               TO BE EXECUTED IF THE ABOVE (NESTED)                  * 04680000
*               LOGIC GROUP EVALUATES TO "FALSE"                      * 04690000
*                                                                     * 04700000
*        ENDIF                                                        * 04710000
*                                                                     * 04720000
*      ENDIF                                                          * 04730000
*                                                                     * 04740000
* THE "IF" MACRO SUPPORTS THE NESTING OF AS MANY "IF" GROUPS AS YOU   * 04750000
* REQUIRE TO SUPPORT YOUR LOGIC. HOW MANY LEVELS CAN YOU ACTUALLY     * 04760000
* KEEP TRACK OF?                                                      * 04770000
*                                                                     * 04780000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 04790000
*        1         2         3         4         5         6         7  04800000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 04810000
         IF    (CLC,A,Z,NE)                                             04820000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              04830000
           IF    (CLC,B,Z,NE)                                           04840000
             AP    LEVEL2_PASS_COUNTER,=P'1'                            04850000
           ELSE                                                         04860000
             AP    LEVEL2_ELSE_COUNTER,=P'1'                            04870000
           ENDIF                                                        04880000
         ENDIF                                                          04890000
*                                                                       04900000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 04910000
*                                                                     * 04920000
*       ANOTHER EXAMPLE OF THE NESTING OF MULTIPLE "IF" GROUPS        * 04930000
*                                                                     * 04940000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 04950000
*                                                                       04960000
*        1         2         3         4         5         6         7  04970000
*...V....0....V....0....V....0....V....0....V....0....V....0....V....0. 04980000
         IF    (CLC,A,Z,E)                                              04990000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              05000000
           IF    (CLC,B,Z,E)                                            05010000
             AP    LEVEL2_PASS_COUNTER,=P'1'                            05020000
             IF    (CLC,C,Z,E)                                          05030000
               AP    LEVEL3_PASS_COUNTER,=P'1'                          05040000
             ELSEIF (CLC,D,Z,E)                                         05050000
               AP    LEVEL3_ELSEIF_COUNTER,=P'1'                        05060000
             ELSEIF (CLC,E,Z,E)                                         05070000
               AP    LEVEL3_ELSEIF_COUNTER,=P'1'                        05080000
             ELSEIF (CLC,F,Z,E)                                         05090000
               AP    LEVEL3_ELSEIF_COUNTER,=P'1'                        05100000
             ELSE                                                       05110000
               AP    LEVEL3_ELSE_COUNTER,=P'1'                          05120000
             ENDIF                                                      05130000
           ELSEIF (CLC,G,Z,E)                                           05140000
             AP    LEVEL2_ELSEIF_COUNTER,=P'1'                          05150000
           ELSE                                                         05160000
             AP    LEVEL2_ELSE_COUNTER,=P'1'                            05170000
           ENDIF                                                        05180000
         ELSEIF  (CLC,H,Z,E)                                            05190000
           AP    LEVEL1_ELSE_COUNTER,=P'1'                              05200000
         ELSE                                                           05210000
           AP    LEVEL1_PASS_COUNTER,=P'1'                              05220000
         ENDIF                                                          05230000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 05240000
*                                                                     * 05250000
*      THESE FOLLOWING STATEMENTS ARE NORMAL zOS TERMINATION.         * 05260000
*                                                                     * 05270000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 05280000
*                                                                       05290000
.QUIT    ANOP                                                           05300000
         L     R13,SAVEAREA+4      ADDRESS OF CALLER'S SAVE AREA        05310000
         LM    R14,R12,12(R13)     RESTORE R14 WRAPPED AROUND TO R12    05320000
         DROP  R12                 NO LONGER VALID                      05330000
         SLR   R15,R15             SET RETURN CODE TO ZERO              05340000
         BR    R14                 RETURN TO CALLER                     05350000
*                                                                       05360000
VCON$WA$ DC    V($$WA$$)                                                05370000
*                                                                       05380000
         LTORG                                                          05390000
EOFSW    DC    C'N'                                                     05400000
         DS    0D                                                       05410000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 05420000
*                                                                     * 05430000
*      THESE FOLLOWING STATEMENTS DEFINE VARIABLES REQUIRED.          * 05440000
*                                                                     * 05450000
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 05460000
LEVEL1_PASS_COUNTER DC PL4'0'                                           05470000
LEVEL1_ELSEIF_COUNTER DC PL4'0'                                         05480000
LEVEL1_ELSE_COUNTER DC PL4'0'                                           05490000
LEVEL1_FAIL_COUNTER DC PL4'0'                                           05500000
LEVEL2_PASS_COUNTER DC PL4'0'                                           05510000
LEVEL2_ELSEIF_COUNTER DC PL4'0'                                         05520000
LEVEL2_ELSE_COUNTER DC PL4'0'                                           05530000
LEVEL2_FAIL_COUNTER DC PL4'0'                                           05540000
LEVEL3_PASS_COUNTER DC PL4'0'                                           05550000
LEVEL3_ELSEIF_COUNTER DC PL4'0'                                         05560000
LEVEL3_ELSE_COUNTER DC PL4'0'                                           05570000
SHIFT_PACKED DC  PL4'1234567'                                           05580000
SPECIAL  DC    X'C0'                                                    05590000
A        DC    C'AAAA'                                                  05600000
B        DC    C'BBBB'                                                  05610000
C        DC    C'CCCC'                                                  05620000
D        DC    C'DDDD'                                                  05630000
E        DC    C'EEEE'                                                  05640000
F        DC    C'FFFF'                                                  05650000
G        DC    C'GGGG'                                                  05660000
H        DC    C'HHHH'                                                  05670000
I        DC    C'IIII'                                                  05680000
J        DC    C'JJJJ'                                                  05690000
K        DC    C'KKKK'                                                  05700000
L        DC    C'LLLL'                                                  05710000
Z        DC    C'ZZZZ'                                                  05720000
         END   IFDOC                                                    05730000