.**********************************************************************
.* Copyright 2006 Automated Software Tools Corporation                *
.* This source code is part of z390 assembler/emulator package        *
.* The z390 package is distributed under GNU general public license   *
.* Author - Don Higgins                                               *
.**********************************************************************
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY         *
.**********************************************************************
         MACRO
         CICS_FORMATTIME
         GBLB  &PARMS_4A04
         LCLB  &DATESP2,&TIMESP2,&NOEDF,&NOHAND
         LCLC  &ABSTIME
         LCLC  &DATE,&DATEFRM,&DATESP1,&FULLDAT
         LCLC  &DMY2,&MDY2,&YDM2,&YMD2
         LCLC  &DMY4,&MDY4,&YDM4,&YMD4,&YD2,&YD4
         LCLC  &DAYCNT,&DAYOFWK,&DAYOFMN,&MNOFYR,&YEAR
         LCLC  &DSTRING,&TIME,&TIMESP1
         LCLC  &RESP,&RESP2
.*
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
.* DISCARDED PARM
         AIF   ('&PARM'(1,13) EQ 'STRINGFORMAT(').PLOOP
.*
         AIF   ('&PARM'(1,8)  EQ 'ABSTIME(').ABSTIME
         AIF   ('&PARM'(1,5)  EQ 'DATE(').DATE
         AIF   ('&PARM'(1,9)  EQ 'DATEFORM(').DATEFRM
         AIF   ('&PARM'(1,8)  EQ 'DATESEP(').DATESP1
         AIF   ('&PARM'(1,7)  EQ 'DATESEP').DATESP2
         AIF   ('&PARM'(1,9)  EQ 'FULLDATE(').FULLDAT
         AIF   ('&PARM'(1,7)  EQ 'DDMMYY(').DMY2
         AIF   ('&PARM'(1,7)  EQ 'MMDDYY(').MDY2
         AIF   ('&PARM'(1,7)  EQ 'YYDDMM(').YDM2
         AIF   ('&PARM'(1,7)  EQ 'YYMMDD(').YMD2
         AIF   ('&PARM'(1,9)  EQ 'DDMMYYYY(').DMY4
         AIF   ('&PARM'(1,9)  EQ 'MMDDYYYY(').MDY4
         AIF   ('&PARM'(1,9)  EQ 'YYYYDDMM(').YDM4
         AIF   ('&PARM'(1,9)  EQ 'YYYYMMDD(').YMD4
         AIF   ('&PARM'(1,6)  EQ 'YYDDD(').YD2
         AIF   ('&PARM'(1,8)  EQ 'YYYYDDD(').YD4
         AIF   ('&PARM'(1,9)  EQ 'DAYCOUNT(').DAYCNT
         AIF   ('&PARM'(1,10) EQ 'DAYOFWEEK(').DAYOFWK
         AIF   ('&PARM'(1,11) EQ 'DAYOFMONTH(').DAYOFMN
         AIF   ('&PARM'(1,12) EQ 'MONTHOFYEAR(').MNOFYR
         AIF   ('&PARM'(1,5)  EQ 'YEAR(').YEAR
         AIF   ('&PARM'(1,11) EQ 'DATESTRING(').DSTRING
         AIF   ('&PARM'(1,5)  EQ 'TIME(').TIME
         AIF   ('&PARM'(1,8)  EQ 'TIMESEP(').TIMESP1
         AIF   ('&PARM'(1,7)  EQ 'TIMESEP').TIMESP2
         AIF   ('&PARM'(1,5)  EQ 'NOEDF').NOEDF
         AIF   ('&PARM'(1,8)  EQ 'NOHANDLE').NOHAND
         AIF   ('&PARM'(1,5)  EQ 'RESP(').RESP
         AIF   ('&PARM'(1,6)  EQ 'RESP2(').RESP2
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.ABSTIME ANOP
&ABSTIME SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.DATE    ANOP
&DATE    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.DATEFRM ANOP
&DATEFRM SETC  '&PARM'(10,K'&PARM-10)
         AGO   .PLOOP
.*
.DATESP1 ANOP
&DATESP1 SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.DATESP2 ANOP
&DATESP2 SETB  1
         AGO   .PLOOP
.*
.FULLDAT ANOP
&FULLDAT SETC  '&PARM'(10,K'&PARM-10)
         AGO   .PLOOP
.*
.DMY2    ANOP
&DMY2    SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.MDY2    ANOP
&MDY2    SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.YDM2    ANOP
&YDM2    SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.YMD2    ANOP
&YMD2    SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.DMY4    ANOP
&DMY4    SETC  '&PARM'(10,K'&PARM-10)
         AGO   .PLOOP
.*
.MDY4    ANOP
&MDY4    SETC  '&PARM'(10,K'&PARM-10)
         AGO   .PLOOP
.*
.YDM4    ANOP
&YDM4    SETC  '&PARM'(10,K'&PARM-10)
         AGO   .PLOOP
.*
.YMD4    ANOP
&YMD4    SETC  '&PARM'(10,K'&PARM-10)
         AGO   .PLOOP
.*
.YD2     ANOP
&YD2     SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.YD4     ANOP
&YD4     SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.DAYCNT  ANOP
&DAYCNT  SETC  '&PARM'(10,K'&PARM-10)
         AGO   .PLOOP
.*
.DAYOFWK ANOP
&DAYOFWK SETC  '&PARM'(11,K'&PARM-11)
         AGO   .PLOOP
.*
.DAYOFMN ANOP
&DAYOFMN SETC  '&PARM'(12,K'&PARM-12)
         AGO   .PLOOP
.*
.MNOFYR  ANOP
&MNOFYR  SETC  '&PARM'(13,K'&PARM-13)
         AGO   .PLOOP
.*
.YEAR    ANOP
&YEAR    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.DSTRING ANOP
&DSTRING SETC  '&PARM'(12,K'&PARM-12)
         AGO   .PLOOP
.*
.TIME    ANOP
&TIME    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.TIMESP1 ANOP
&TIMESP1 SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.TIMESP2 ANOP
&TIMESP2 SETB  1
         AGO   .PLOOP
.*
.NOEDF   ANOP
&NOEDF   SETB  1
         AGO   .PLOOP
.*
.NOHAND  ANOP
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP    ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP2   ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.ELOOP   ANOP
         AIF   ('&ABSTIME' EQ '').MISSABS
.*
         GEN_XC P4A04,P4A04END-P4A04,P4A04
         GEN_MVC P4A04FN,,=X'4A04' SET FUNCTION CODE
         LARL  R15,P4A04ABS       ADDRESS TARGET
         MVC   0(8,R15),&ABSTIME  SET ABSTIME
         AIF   (NOT &DATESP2).NODEFDS
         GEN_MVI P4A04DSP,C'/'    SET DEFAULT DATE SEPARATOR
         AGO   .DOTSEP
.*
.NODEFDS ANOP
         AIF   ('&DATESP1' EQ '').DOTSEP
         AIF   ('&DATESP1'(1,1) NE '''').NOTDCHR
         GEN_MVC P4A04DSP,,=CL2&DATESP1 MOVE DATE SEPARATOR AS CHAR
         AGO   .DOTSEP
.*
.NOTDCHR ANOP
         LARL  R15,P4A04DSP       ADDRESS TARGET
         MVC   0(1,R15),&DATESP1  MOVE DATE SEPARATOR FROM LABEL
.DOTSEP  ANOP
         AIF   (NOT &TIMESP2).NODEFTS
         GEN_MVI P4A04TSP,C':'    SET DEFAULT TIME SEPARATOR
         AGO   .DOPARMS
.*
.NODEFTS ANOP
         AIF   ('&TIMESP1' EQ '').DOPARMS
         AIF   ('&TIMESP1'(1,1) NE '''').NOTTCHR
         GEN_MVC P4A04TSP,,=CL2&TIMESP1 MOVE TIME SEPARATOR AS CHAR
         AGO   .DOPARMS
.*
.NOTTCHR ANOP
         LARL  R15,P4A04TSP       ADDRESS TARGET
         MVC   0(1,R15),&TIMESP1  MOVE TIME SEPARATOR FROM LABEL
.DOPARMS ANOP
         AIF   ('&DATE' EQ '').NODATE
         LA    R0,&DATE           DATE ADDRESS
         GEN_ST R0,P4A04DAT       SAVE IT
.NODATE  ANOP
         AIF   ('&DATEFRM' EQ '').NODTFRM
         LA    R0,&DATEFRM        DATEFRM ADDRESS
         GEN_ST R0,P4A04DFM       SAVE IT
.NODTFRM ANOP
         AIF   ('&FULLDAT' EQ '').NOFULDT
         LA    R0,&FULLDAT        FULLDAT ADDRESS
         GEN_ST R0,P4A04FDT       SAVE IT
.NOFULDT ANOP
         AIF   ('&DMY2' EQ '').NODMY2
         LA    R0,&DMY2           DMY2 ADDRESS
         GEN_ST R0,P4A04DM2       SAVE IT
.NODMY2  ANOP
         AIF   ('&MDY2' EQ '').NOMDY2
         LA    R0,&MDY2           MDY2 ADDRESS
         GEN_ST R0,P4A04MD2       SAVE IT
.NOMDY2  ANOP
         AIF   ('&YDM2' EQ '').NOYDM2
         LA    R0,&YDM2           YDM2 ADDRESS
         GEN_ST R0,P4A04YD2       SAVE IT
.NOYDM2  ANOP
         AIF   ('&YMD2' EQ '').NOYMD2
         LA    R0,&YMD2           YMD2 ADDRESS
         GEN_ST R0,P4A04YM2       SAVE IT
.NOYMD2  ANOP
         AIF   ('&DMY4' EQ '').NODMY4
         LA    R0,&DMY4           DMY4 ADDRESS
         GEN_ST R0,P4A04DM4       SAVE IT
.NODMY4  ANOP
         AIF   ('&MDY4' EQ '').NOMDY4
         LA    R0,&MDY4           MDY4 ADDRESS
         GEN_ST R0,P4A04MD4       SAVE IT
.NOMDY4  ANOP
         AIF   ('&YDM4' EQ '').NOYDM4
         LA    R0,&YDM4           YDM4 ADDRESS
         GEN_ST R0,P4A04YD4       SAVE IT
.NOYDM4  ANOP
         AIF   ('&YMD4' EQ '').NOYMD4
         LA    R0,&YMD4           YMD4 ADDRESS
         GEN_ST R0,P4A04YM4       SAVE IT
.NOYMD4  ANOP
         AIF   ('&YD2' EQ '').NOYD2
         LA    R0,&YD2            YD2 ADDRESS
         GEN_ST R0,P4A04Y2D       SAVE IT
.NOYD2   ANOP
         AIF   ('&YD4' EQ '').NOYD4
         LA    R0,&YD4            YD4 ADDRESS
         GEN_ST R0,P4A04Y4D       SAVE IT
.NOYD4   ANOP
         AIF   ('&DAYCNT' EQ '').NODYCNT
         LA    R0,&DAYCNT         DAYCNT ADDRESS
         GEN_ST R0,P4A04DYC       SAVE IT
.NODYCNT ANOP
         AIF   ('&DAYOFWK' EQ '').NODYOFW
         LA    R0,&DAYOFWK        DAYOFWK ADDRESS
         GEN_ST R0,P4A04DOW       SAVE IT
.NODYOFW ANOP
         AIF   ('&DAYOFMN' EQ '').NODYOFM
         LA    R0,&DAYOFMN        DAYOFMN ADDRESS
         GEN_ST R0,P4A04DOM       SAVE IT
.NODYOFM ANOP
         AIF   ('&MNOFYR' EQ '').NOMNOFY
         LA    R0,&MNOFYR         MNOFYR ADDRESS
         GEN_ST R0,P4A04MOY       SAVE IT
.NOMNOFY ANOP
         AIF   ('&YEAR' EQ '').NOYEAR
         LA    R0,&YEAR           YEAR ADDRESS
         GEN_ST R0,P4A04YR        SAVE IT
.NOYEAR  ANOP
         AIF   ('&DSTRING' EQ '').NODSTR
         LA    R0,&DSTRING        DSTRING ADDRESS
         GEN_ST R0,P4A04DST       SAVE IT
.NODSTR  ANOP
         AIF   ('&TIME' EQ '').NOTIME
         LA    R0,&TIME           TIME ADDRESS
         GEN_ST R0,P4A04TIM       SAVE IT
.NOTIME  ANOP
         GEN_ST DFHEIBR,P4A04EIB  SET EIB ADDRESS
         GEN_ST TCTTEAR,P4A04TCT  SET TCTTE ADDRESS
         AIF   (&SYSEDF AND NOT &NOEDF)
         GEN_ST R13,P4A04EDS      SET DSA ADDRESS FOR EDF
         L     R0,DFHEILEN        DSA LENGTH
         GEN_STH R0,P4A04EDL      SET DSA LENGTH FOR EDF
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         GEN_STH R0,P4A04EDC      SET CICS DSA LENGTH FOR EDF
         AELSE
         GEN_MVI P4A04NED,X'FF'   SET NOEDF
         AEND
         AIF   (NOT &NOHAND).DUNNOH
         GEN_MVI P4A04NOH,X'FF'   SET NOHANDLE
.DUNNOH  ANOP
         AIF   ('&RESP' EQ '').NORESP
         LA    R0,&RESP           ADDRESS OF RESP
         GEN_ST R0,P4A04RSP       SAVE IT
.NORESP  ANOP
         AIF   ('&RESP2' EQ '').NORESP2
         LA    R0,&RESP2          ADDRESS OF RESP2
         GEN_ST R0,P4A04RS2       SAVE IT
.NORESP2 ANOP
         LARL  R0,P4A04EDF_&SYSNDX ADDRESS ORIGIN FOR CEDF
         GEN_ST R0,P4A04EDF       SAVE IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A04)       R1=LCL MODULE PARAMETER LIST
P4A04EDF_&SYSNDX EQU *
         BAKR  0,R15              STACK REGS AND GO
.*
         GEN_CLI P4A04NOH,X'FF'   NOHANDLE ?
         JE    P4A04BYP_&SYSNDX   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P4A04BYP_&SYSNDX   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P4A04BYP_&SYSNDX) ENTRYPOINT FOR IGNORE CONDITION
.*
         AIF   (&PARMS_4A04).BYP4A04
*
&PARMS_4A04 SETB 1
         P4A04
*
.BYP4A04 ANOP
P4A04BYP_&SYSNDX DS 0H
         MEXIT
.*
.MISSABS MNOTE 12,'ABSTIME IS MANDATORY'
         MEXIT
         MEND
