***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
LCL1204  CSECT
*
* FN=1204  EXEC CICS ENQ
*
* R1  >>> P1204 BLOCK POINTER
*
         USING *,R13
         B     12(R15)            BYPASS EYECATCHER
         DC    CL8'LCL1204'
         LR    R13,R15            R13 AS BASE
         LR    R3,R1              SET BASE
         L     R3,0(R3)                    FOR PARMS
         USING (P1204,P1204END),R3
         L     DFHEIBR,P1204EIB   LOAD EIB ADDRESS
         USING DFHEIBLK,DFHEIBR
         L     TCTTEAR,P1204TCT   LOAD TCT ADDRESS
         USING DFHTCTTE,TCTTEAR
         MVC   EIBFN,P1204FN      SET EIBFN
         XC    EIBRCODE,EIBRCODE  CLEAR EIBRCODE
         XC    EIBRESP,EIBRESP    CLEAR EIBRESP
         XC    EIBRESP2,EIBRESP2  CLEAR EIBRESP2
         ICM   R1,15,P1204RSP     R1=RESP ADDRESS
         BZ    NORESP             EXIT IF NONE
         XC    0(4,R1),0(R1)      CLEAR RESP
NORESP   EQU   *
         ICM   R1,15,P1204RS2     R1=RESP2 ADDRESS
         BZ    NORESP2            EXIT IF NONE
         XC    0(4,R1),0(R1)      CLEAR RESP2
NORESP2  EQU   *
         CLI   P1204NED,X'FF'     NOEDF ?
         BE    NOEDFB             EXIT IF IT IS
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         BNE   NOEDFB             EXIT IF NOT
         MVI   TCTTEEBA,X'00'     SET 'BEFORE' INTERCEPT
         MVI   TCTTEEDL,X'00'     SET NORMAL LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
*
NOEDFB   EQU   *
* VALIDATE LENGTH
         CHHSI P1204LEN,0         IS LENGTH NEGATIVE ?
         BL    LENGERR            ERROR IF IT IS
         CHHSI P1204LEN,255       IS LENGTH > 255 ?
         BH    LENGERR            ERROR IF IT IS
* GET AND CLEAR THE KC BLOCK
         EXEC  CICS GETMAIN FLENGTH(=A(KCPREFIX)) SET(R5) INITIMG(0)   X
               NOHANDLE NOEDF
         USING DFHKCBLK,R5
         MVC   KCPTCPIO,=AL4(KCPREFIX) SET PREFIX LENGTH
         MVC   KCPFN,=C'1204'     SET FUNCTION CODE
         MVC   KCPTERM,TCTTETI    SET TERMINAL ID
         MVC   KCPTRAN,EIBTRNID   SET TRANSID
         MVC   KCPTASKN,EIBTASKN  SET TASK NUMBER
         MVC   KCPLEN,P1204LEN    SET RESOURCE LENGTH
         MVC   KCPNOS,P1204NOS    SET NOSUSPEND INDICATOR
         MVC   KCPNOH,P1204NOH    SET NOHANDLE INDICATOR
         CHHSI P1204LEN,0         IS LENGTH ZERO ?
         BNE   REALRES            EXIT IF NOT
         MVC   KCPRES(4),P1204RES MOVE ADDRESS OF RESOURCE
         B     HCNTEST            EXIT
*
REALRES  EQU   *
* WE HAVE A REAL RESOURCE
         L     R14,P1204RES       R14=ADDRESS OF RESOURCE
         LH    R1,P1204LEN        R1=RESOURCE LENGTH
         BCTR  R1,0               -1 FOR EXECUTE
         EX    R1,EXMVC           MOVE RESOURCE
HCNTEST  EQU   *
* FIND OUT IF WE HAVE AN ACTIVE HANDLE CONDITION ENQBUSY
         L     R1,P1204HCN        R1=A(DFHEIHCN)
         ICM   R1,15,0(R1)        ANY CONDITION BLOCK ADDRESS ?
         BZ    SENDIT             EXIT IF NONE
         USING DFHHCBLK,R1
HCNLOOP  EQU   *
         LR    R14,R1             R14=LAST CONDITION BLOCK ADDRESS
         ICM   R1,15,HCNCHAIN     R1=NEXT CONDITION BLOCK
         BNZ   HCNLOOP            LOOP
* END OF CONDITION BLOCK CHAIN
         LR    R1,R14             R1=LAST CONDITION BLOCK ADDRESS
* WE HAVE A HANDLE CONDITION BLOCK
         AHI   R1,4*55+12         INDEX TO ENQBUSY
         OC    0(4,R1),0(R1)      IS IT INACTIVE ?
         BZ    SENDIT             EXIT IF IT IS
         CLC   0(4,R1),=4X'FF'    IS IT IGNORED ?
         BE    SENDIT             EXIT IF IT IS
* WE HAVE AN ACTIVE HANDLE CONDITION ENQBUSY
         MVI   KCPHCNQB,X'FF'     SET HANDLE CONDITION ENQBUSY ACTIVE
SENDIT   EQU   *
         TCPIO SEND,MSG=(R5),LMSG==A(KCPREFIX),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   INVREQ             ERROR IF BAD
KCPRCV   EQU   *
* GET THE RESPONSE
         TCPIO RECEIVE,MSG=(R5),LMSG==A(KCPREFIX),PORT=3900
*
* TASK WILL HANG HERE IF GBL1204 DECIDES THE TASK IS TO BE SUSPENDED
*
* RESPONSE TO THE RECEIVE COULD BE 1204, 1206 OR 12FC
*
         LTR   R15,R15            CHECK RC ?
         BNZ   INVREQ             ERROR IF BAD
         CLC   KCPFN,=C'10FF'     UNSOL IC SCAN ?
         BE    KCPRCV             EXIT IF IT IS
         CLC   KCPFN,=C'1204'     WHAT WE ARE EXPECTING ?
         BE    KCPRCK             EXIT IF IT IS
         CLC   KCPFN,=C'1206'     WHAT WE ARE EXPECTING ?
         BE    KCPRCK             EXIT IF IT IS
         CLC   KCPFN,=C'12FC'     WHAT WE ARE EXPECTING ?
         BE    KCPRCK             EXIT IF IT IS
         DC    H'0'               TCPIO BAD RECEIVE
KCPRCK   EQU   *
         OC    KCPRETCD,KCPRETCD  BAD RETURN CODE ?
         BZ    RETURN             EXIT IF NONE
         CLC   KCPRETCD,DFHRESP(ENQBUSY) ENQBUSY ?
         BE    ENQBUSY            EXIT IF IT IS
* SERVER HAS SENT UNKNOWN VALUE IN KCPRETCD
         B     INVREQ             SHOULD NOT OCCUR
*
EXMVC    MVC   KCPRES(0),0(R14)   MOVE RESOURCE
*
INVREQ   EQU   *
* INVOKE INVREQ
         MVI   EIBRCODE,X'E0'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(INVREQ) SET EIBRESP=INVREQ
         B     DORESP             EXIT
*
LENGERR  EQU   *
* INVOKE LENGERR
         MVI   EIBRCODE,X'E1'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(LENGERR) SET EIBRESP=LENGERR
         B     DORESP             EXIT
*
ENQBUSY  EQU   *
* INVOKE ENQBUSY
         MVC   P1204NOH,KCPNOH    NOHANDLE OVERRIDE (SEE GBL1204)
         MVI   EIBRCODE,X'32'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(ENQBUSY) SET EIBRESP=ENQBUSY
DORESP   EQU   *
         ICM   R14,15,P1204RSP    R14=RESP ADDRESS
         BZ    DORESP2            EXIT IF NONE
         MVC   0(4,R14),EIBRESP   SET RESP
DORESP2  EQU   *
         ICM   R14,15,P1204RS2    R14=RESP2 ADDRESS
         BZ    RETURN             EXIT IF NONE
         MVC   0(4,R14),EIBRESP2  SET RESP2
RETURN   EQU   *
         CLI   P1204NED,X'FF'     NOEDF ?
         BE    NOEDFA             EXIT IF IT IS
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         BNE   NOEDFA             EXIT IF NOT
         MVI   TCTTEEBA,X'FF'     SET 'AFTER' INTERCEPT
         MVI   TCTTEEDL,X'00'     SET NORMAL LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
*
NOEDFA   EQU   *
         PR    ,                  UNSTACK AND RETURN TO MACRO
*
         P1204 DSECT
*
         DFHEIBLK                 EIB
         DFHTCTTE                 TCTTE
         DFHHCBLK                 HANDLE CONDITION BLOCK
         DFHKCBLK                 TASK CONTROL BLOCK
*
         EQUREGS REGS=GPR
*
         END
