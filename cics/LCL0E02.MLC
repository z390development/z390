***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
* WE CANNOT HAVE A CONVENTIONAL ENTRY
* A FIXED SAVEAREA WOULD PREVENT LINK A TO B TO C TO A
* WE CANNOT RETURN HERE AFTER BR R0, POST PROC IS IN THE MACRO
* MUST OBEY THE MACRO RULES, NO EXTRA REGS
LCL0E02  CSECT
*
* FN=0E02  EXEC CICS LINK
*
* R1  >>> P0E02 BLOCK POINTER
* R14 = RETURN ADDRESS
         USING (P0E02,P0E02END),R1
         USING *,R12
         B     12(R15)            BYPASS EYECATCHER
         DC    CL8'LCL0E02'
         LR    R0,R12             R0=SAVED R12
         LR    R12,R15            SET BASE
         ST    R0,SAVER12         SAVE ORIGINAL R12
         USING DFHEIBLK,DFHEIBR
         USING DFHTCTTE,TCTTEAR
         USING DFHEISTG,R13
         MVC   EIBFN,P0E02FN      SET EIBFN
         XC    EIBRCODE,EIBRCODE  CLEAR EIBRCODE
         XC    EIBRESP,EIBRESP    CLEAR EIBRESP
         XC    EIBRESP2,EIBRESP2  CLEAR EIBRESP2
         ICM   R15,15,P0E02RSP    R15=RESP ADDRESS
         BZ    NORESP             EXIT IF NONE
         XC    0(4,R15),0(R15)    CLEAR RESP
NORESP   EQU   *
         ICM   R15,15,P0E02RS2    R15=RESP2 ADDRESS
         BZ    NORESP2            EXIT IF NONE
         XC    0(4,R15),0(R15)    CLEAR RESP2
NORESP2  EQU   *
         MVC   TCTTEINV,EIBPROG   SET INVOKINGPROG FOR ASSIGN
         MVC   TCTTERET,EIBPROG   SET RETURNPROG FOR ASSIGN
         MVC   BLDLNAME,P0E02PGM  MOVE PROGRAM FOR BLDL
         MVC   EIBRSRCE,P0E02PGM  SET EIBRSRCE
         MVC   EIBPROG,P0E02PGM   SET EIBPROG
* R1 IS NOT RESTORED BY THE STACKING PROCESS
         ST    R1,P0E02PTR        SAVE P0E02 PARM POINTER
         CLI   P0E02NED,X'FF'     NOEDF ?
         BE    NOEDF              EXIT IF IT IS
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         BNE   NOEDF              EXIT IF NOT
         MVI   TCTTEEBA,X'00'     SET 'BEFORE' INTERCEPT
         MVI   TCTTEEDL,X'FF'     SET DIRECT LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
*
NOEDF    EQU   *
         BLDL  0,BLDLLIST         BLDL
         L     R1,P0E02PTR        RESTORE P0E02 PARM POINTER
         LTR   R15,R15            RC=4 IF ENTRY NOT FOUND
         BNZ   PGMIDERR           ERROR IF IT IS
* LINK LEVEL 0 HAS NO EISTG
         CLI   P0E02LV0,X'FF'     LINK LEVEL 0 ?
         BE    DOCHAN             EXIT IF IT IS
         MVC   DFHEICAL,EIBCALEN  SAVE EIB COMMAREA LENGTH
         ICM   R15,15,P0E02COM    ANY COMMAREA ADDRESS ?
         BNZ   GOTCOMM            EXIT IF WE HAVE ONE
* NO COMMAREA
         XC    DFHEICAP,DFHEICAP  CLEAR COMMAREA ADDRESS
         XC    EIBCALEN,EIBCALEN  CLEAR COMMAREA LENGTH
         B     DOCHAN             EXIT
*
GOTCOMM  EQU   *
* WE HAVE A COMMAREA
         ST    R15,DFHEICAP       SET COMMAREA ADDRESS
         MVC   EIBCALEN,P0E02CLN  SET COMMAREA LENGTH
DOCHAN   EQU   *
         XC    TCTTECHN,TCTTECHN  CLEAR ANY PASSED CHANNEL NAME
         OC    P0E02CHN,P0E02CHN  ANY CHANNEL NAME ?
         BZ    ALLDONE            EXIT IF NONE
* WE HAVE A CHANNEL
* VALIDATE THE NAME, NO LEADING OR EMBEDDED BLANKS,
* TRAILING BLANKS PERMITTED
         CLI   P0E02CHN,C' '      BLANK START ?
         BE    CHANERR            ERROR IF IT IS
         LA    R15,P0E02CHN       R15 POINTS TO CHANNEL NAME
         LA    R0,16              R0=LENGTH
CHANCHAR EQU   *
         LA    R2,CHANTAB         R2 POINTS TO CHAR LIST
CHANLOOP EQU   *
         CLC   0(1,R15),0(R2)     MATCH TO CHAR ?
         BNE   CHANCINC           EXIT IF NOT
         AHI   R15,1              BUMP CHANNEL NAME POINTER
         BCT   R0,CHANCHAR        LOOP THROUGH CHANNEL NAME
         B     CHANDONE           EXIT
*
CHANCINC EQU   *
         AHI   R2,1               BUMP CHAR LIST POINTER
         CLI   0(R2),X'FF'        STOPPER ?
         BNE   CHANLOOP           LOOP IF NOT
* FOUND A BAD CHAR
         CLI   0(R15),C' '        IS IT BLANK ?
         BNE   CHANERR            ERROR IF NOT
* FOUND A BLANK, CHECK FOR TRAILING BLANKS
         LA    R2,P0E02CHN+15     R2=END OF CHANNEL NAME
         SR    R2,R15             R2=LENGTH OF TRAILING CHARS-1
         EX    R2,CHANCLC         TEST FOR TRAILING BLANKS
         BNE   CHANERR            ERROR IF NOT ALL BLANK
CHANDONE EQU   *
* CHANNEL NAME VALID, SEARCH THE STRUCTURE
         MVC   TCTTECHN,P0E02CHN  SET CURRENT CHANNEL
         LA    R15,TCTTECAQ       R15=CHANNEL ANCHOR POINTER
         ICM   R2,15,TCTTECAQ     R2=CHANNEL CHAIN ADDRESS
         BZ    CHANNTFD           EXIT IF NONE
         USING DFHCHAN,R2
CHANCHLP EQU   *
* ASSUMING THAT ANY CHANNEL IS UP FOR GRABS
         CLC   CHANNAME,TCTTECHN  MATCH CHANNEL ?
         BE    ALLDONE            EXIT IF IT DOES
         LR    R15,R2             R15=PREVIOUS POINTER ADDRESS
         ICM   R2,15,CHANADDR     CHAIN TO NEXT
         BNZ   CHANCHLP           LOOP UNTIL CHAIN END
CHANNTFD EQU   *
* CHANNEL NOT FOUND, CREATE EMPTY ONE
         GETMAIN R,LV=26
         LR    R2,R1              SET NEW CHANNEL BASE
         XC    DFHCHAN(26),DFHCHAN CLEAR CHANNEL
         MVC   CHANNAME,TCTTECHN  SET CHANNEL NAME
         ST    R2,0(R15)          SAVE NEW CHANADDR
         MVC   CHANLINK,TCTTELNK  SET LINK LEVEL
         XC    CHANCONT,CHANCONT  CLEAR CONTAINER POINTER
         DROP  R2
ALLDONE  EQU   *
         LH    R0,TCTTELNK        R0=CURRENT LINK LEVEL
         AHI   R0,1               +1
         STH   R0,TCTTELNK        STORE BACK
         LOAD  EPLOC=EIBPROG
* R1 IS DESTROYED BY LOAD
         L     R1,P0E02PTR        RESTORE PARM POINTER
         LA    R1,P0E02EIB        R1=POINTER TO A(EIB,COMMAREA)
         LA    R2,P0E02PTR        R2=POINTER TO P0E02 PARMS
         L     R12,SAVER12        RESTORE ORIGINAL R12
         BR    R0                 GO TO ENTRYPOINT
*
PGMIDERR EQU   *
* INVOKE PGMIDERR
         MVI   EIBRCODE,X'01'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(PGMIDERR) SET EIBRESP=PGMIDERR
         MVC   EIBRESP2,=F'3'     SET EIBRESP2=PROGRAM NOT FOUND
         B     DORESP             EXIT
*
CHANERR  EQU   *
         MVI   EIBRCODE,X'DA'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(CHANNELERR) SET EIBRESP=CHANNELERR
         MVC   EIBRESP2,=F'1'     SET EIBRESP2=INVALID CHANNEL NAME
DORESP   EQU   *
         ICM   R15,15,P0E02RSP    R15=RESP ADDRESS
         BZ    DORESP2            EXIT IF NONE
         MVC   0(4,R15),EIBRESP   SET RESP
DORESP2  EQU   *
         ICM   R15,15,P0E02RS2    R15=RESP2 ADDRESS
         BZ    RETURN             EXIT IF NONE
         MVC   0(4,R15),EIBRESP2  SET RESP2
RETURN   EQU   *
         CLI   P0E02NED,X'FF'     NOEDF ?
         BE    NOEDF2             EXIT IF IT IS
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         BNE   NOEDF2             EXIT IF NOT
         MVI   TCTTEEBA,X'FE'     SET 'AFTER' INTERCEPT (LINK FAIL)
         MVI   TCTTEEDL,X'FF'     SET DIRECT LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
*
NOEDF2   EQU   *
         L     R12,SAVER12        RESTORE ORIGINAL R12
         BR    R14                RETURN
*
CHANCLC  CLC   0(0,R15),=15C' '   TEST FOR TRAILING BLANKS
*
P0E02PTR DS    F                  P0E02 PARM POINTER
SAVER12  DS    F                  SAVE R12
CHANTAB  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
         DC    C'abcdefghijklmnopqrstuvwxyz'
         DC    C'0123456789'
         DC    C'$@#/%&&?!:|"=ª,;<>.-_'
         DC    X'FF'              STOPPER
*
BLDLLIST DC    H'1'               BLDL LIST WITH 1 ENTRY
         DC    H'12'              BLDL ENTRY LENGTH
BLDLNAME DS    CL8                BLDL ENTRY NAME TO FIND
         DS    XL4
*
         P0E02 DSECT
*
         DFHEIBLK                 EIB
         DFHTCTTE                 TCTTE
         DFHCHAN                  CHANNEL/CONTAINER STRUCTURES
         DFHEISTG                 DSA
*
         EQUREGS REGS=GPR
*
         END
