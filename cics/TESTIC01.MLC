***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
* 11/11/08 RPI 946 CORRECTIONS TO MESSAGES TO PREVENT 6'S DISPLAYED   *
***********************************************************************
         DFHEISTG
STCKTIME DS    PL8                STCK TIME
*
TESTIC01 DFHEIENT CODEREG=(R12,R3,R4)
*
* TEST INTERVAL CONTROL FUNCTIONS
*
*  ASKTIME
*     SHOW BEFORE AND AFTER EIBDATE/EIBTIME
*
*  ASKTIME ABSTIME(STCKTIME)
*     SHOW AFTER EIBDATE/EIBTIME
*     SHOW DECIMAL STCK TIME IN 0.001 SECS SINCE 1/1/1900
*
*  DELAY TO SHOW IT WORKS
*     INVREQ/4, 5, 6
*
*  FORMATTIME LINE 1
*     DATE WITH/WITHOUT DATESEP
*     FULLDATE WITH/WITHOUT DATESEP
*  FORMATTIME LINE 2
*     DDMMYY MMDDYY YYDDMM YYMMDD DATEFORM
*  FORMATTIME LINE 3
*     DDMMYYYY MMDDYYYY YYYYDDMM YYYYMMDD YYDDD YYYYDDD WITH DATESEP
*  FORMATTIME LINE 4
*     DATESTRING AND TIME WITH/WITHOUT TIMESEP
*  FORMATTIME LINE 5
*     INVREQ/ 1
*
* DISPLAY TASK START TIME
         EXEC  CICS ADDRESS CWA(R9)
         MVC   TDBEFSBA,SBA3      1ST SBA
         MVC   TIMEBEF,=X'F020202020202020' MOVE EDIT WORD
         ED    TIMEBEF,EIBTIME    EDIT EIBTIME
         MVI   TIMEBEF,C' '       BLANK 1ST BYTE
         MVI   TIMEBEF+1,C' '     BLANK 2ND BYTE
         MVC   DATEBEF,=X'F020202020202020' MOVE EDIT WORD
         ED    DATEBEF,EIBDATE    EDIT EIBDATE
         MVI   DATEBEF,C' '       BLANK 1ST BYTE
         EXEC  CICS SEND FROM(TDBEF) LENGTH(TDBEFLEN)
*
* DISPLAY TIME NOW
         EXEC  CICS ASKTIME
         MVC   TDAFTSBA,SBA4      2ND SBA
         MVC   TIMEAFT,=X'F020202020202020' MOVE EDIT WORD
         ED    TIMEAFT,EIBTIME    EDIT EIBTIME
         MVI   TIMEAFT,C' '       BLANK 1ST BYTE
         MVI   TIMEAFT+1,C' '     BLANK 2ND BYTE
         MVC   DATEAFT,=X'F020202020202020' MOVE EDIT WORD
         ED    DATEAFT,EIBDATE    EDIT EIBDATE
         MVI   DATEAFT,C' '       BLANK 1ST BYTE
         MVC   TIMESPEC,=C'AFTER TASK START'
         EXEC  CICS SEND FROM(TDAFT) LENGTH(TDAFTLEN)
*
* DISPLAY TIME AFTER 9 SECS
         EXEC  CICS DELAY INTERVAL(9)
         EXEC  CICS ASKTIME ABSTIME(STCKTIME)
         MVC   TDAFTSBA,SBA5      2ND SBA
         MVC   TIMESPEC,=C'AFTER  9 SECONDS'
         BAL   R9,DOAFT           SHOW TIME/DATE/STCKTIME
*
* DISPLAY TIME AFTER 9+12=21 SECS
         EXEC  CICS DELAY INTERVAL(12)
         EXEC  CICS ASKTIME ABSTIME(STCKTIME)
         MVC   TDAFTSBA,SBA6      3RD SBA
         MVC   TIMESPEC,=C'AFTER 12 SECONDS'
         BAL   R9,DOAFT           SHOW TIME/DATE/STCKTIME
*
* DISPLAY TIME AFTER 9+12+19=40 SECS
         EXEC  CICS DELAY INTERVAL(SECS19)
         EXEC  CICS ASKTIME ABSTIME(STCKTIME)
         MVC   TDAFTSBA,SBA7      4TH SBA
         MVC   TIMESPEC,=C'AFTER 19 SECONDS'
         BAL   R9,DOAFT           SHOW TIME/DATE/STCKTIME
*
* DISPLAY TIME AFTER 9+12+19+5=45 SECS
         EXEC  CICS DELAY FOR SECONDS(5)
         EXEC  CICS ASKTIME ABSTIME(STCKTIME)
         MVC   TDAFTSBA,SBA8      5TH SBA
         MVC   TIMESPEC,=C'AFTER  5 SECONDS'
         BAL   R9,DOAFT           SHOW TIME/DATE/STCKTIME
*
* TIMEAFT='  HHMMSS'
         MVC   TIMEAFT+6(2),=C'59' WAIT TO END OF CURRENT MINUTE
         EXEC  CICS DELAY TIME(TIMEAFT+2)
         EXEC  CICS ASKTIME ABSTIME(STCKTIME)
         MVC   TDAFTSBA,SBA9      6TH SBA
         MVC   TIMESPEC,=C'UNTIL HHMM59    '
         BAL   R9,DOAFT           SHOW TIME/DATE/STCKTIME
*
* HANDLE ALL CONDITIONS, ALWAYS RETURN TO MAIN LINE
*
         EXEC  CICS HANDLE CONDITION                                   X
               EXPIRED(IC01EXP)                                        X
               INVREQ(IC01INV)
*
* INTERVAL EXPIRED, RAISE EXPIRED
*
         MVC   ICSBA,SBA10        7TH SBA
         LA    R7,IC01RTN1        R7=HANDLE RETURN
         EXEC  CICS DELAY INTERVAL(0)
*
* BAD HOURS, RAISE INVREQ/4
*
IC01RTN1 EQU   *
         MVC   ICSBA,SBA11        8TH SBA
         LA    R7,IC01RTN2        R7=HANDLE RETURN
         EXEC  CICS DELAY FOR HOURS(456)
*
* BAD MINUTES, RAISE INVREQ/5
*
IC01RTN2 EQU   *
         MVC   ICSBA,SBA12        9TH SBA
         LA    R7,IC01RTN3        R7=HANDLE RETURN
         EXEC  CICS DELAY TIME(128812)
*
* BAD SECONDS, RAISE INVREQ/6
*
IC01RTN3 EQU   *
         MVC   ICSBA,SBA13        10TH SBA
         LA    R7,IC01RTN4        R7=HANDLE RETURN
         EXEC  CICS DELAY INTERVAL(77)
*
* FORMATTIME TESTS
*
IC01RTN4 EQU   *
         MVC   FMTSBA,SBA14       11TH SBA
         EXEC  CICS FORMATTIME ABSTIME(STCKTIME)                       X
               DATE(FMTDATE1) FULLDATE(FMTDATE4)
         EXEC  CICS FORMATTIME ABSTIME(STCKTIME) DATE(FMTDATE2)        X
               FULLDATE(FMTDATE5) DATESEP
         EXEC  CICS FORMATTIME ABSTIME(STCKTIME) DATE(FMTDATE3)        X
               FULLDATE(FMTDATE6) DATESEP(MYSEP)
         EXEC  CICS SEND FROM(FORMAT) LENGTH(FORMATL)
*
         XC    FMTDATE1(FMTDATE6+10-FMTDATE1),FMTDATE1 REUSE AREA
         MVC   FMTSBA,SBA15       12TH SBA
         EXEC  CICS FORMATTIME ABSTIME(STCKTIME)                       X
               DDMMYY(FMTDATE1) MMDDYY(FMTDATE2)                       X
               YYDDMM(FMTDATE3) YYMMDD(FMTDATE4)                       X
               DATEFORM(FMTDATE5)
         EXEC  CICS SEND FROM(FORMAT) LENGTH(FORMATL)
*
         XC    FMTDATE1(FMTDATE6+10-FMTDATE1),FMTDATE1 REUSE AREA
         MVC   FMTSBA,SBA16       13TH SBA
         EXEC  CICS FORMATTIME ABSTIME(STCKTIME)                       X
               DDMMYYYY(FMTDATE1) MMDDYYYY(FMTDATE2)                   X
               YYYYDDMM(FMTDATE3) YYYYMMDD(FMTDATE4)                   X
               YYDDD(FMTDATE5) YYYYDDD(FMTDATE6) DATESEP(',')
         EXEC  CICS SEND FROM(FORMAT) LENGTH(FORMATL)
*
         MVC   FMT2SBA,SBA17      14TH SBA
         EXEC  CICS FORMATTIME ABSTIME(STCKTIME)                       X
               DAYCOUNT(DAYCNT) DAYOFWEEK(DAYOFWK)                     X
               DAYOFMONTH(DAYOFMN) MONTHOFYEAR(MONTH) YEAR(YEAR)
         L     R8,DAYCNT          LOAD DAY COUNT
         CVD   R8,DEC             CONVERT TO DECIMAL
         MVC   DAYCOUNT,=X'402020202120' MOVE MASK
         ED    DAYCOUNT,DEC+5     EDIT DAY COUNT
         L     R8,DAYOFWK         LOAD DAY OF WEEK
         CVD   R8,DEC             CONVERT TO DECIMAL
         MVC   DAYWEEK,=X'40202120' MOVE MASK
         ED    DAYWEEK,DEC+6      EDIT DAY OF WEEK
         L     R8,DAYOFMN         LOAD DAY OF MONTH
         CVD   R8,DEC             CONVERT TO DECIMAL
         MVC   DAYMONTH,=X'40202120' MOVE MASK
         ED    DAYMONTH,DEC+6      EDIT DAY OF MONTH
         L     R8,MONTH           LOAD MONTH
         CVD   R8,DEC             CONVERT TO DECIMAL
         MVC   MONTHYR,=X'40202120' MOVE MASK
         ED    MONTHYR,DEC+6      EDIT MONTH
         L     R8,YEAR            LOAD YEAR
         CVD   R8,DEC             CONVERT TO DECIMAL
         MVC   YEARNUM,=X'402020202120' MOVE MASK
         ED    YEARNUM,DEC+5      EDIT YEAR
         EXEC  CICS SEND FROM(FORMAT2) LENGTH(FORMAT2L)
*
         MVC   FMT3SBA,SBA18      15TH SBA
         EXEC  CICS FORMATTIME ABSTIME(STCKTIME) DATESTRING(DSTRING)   X
               TIME(FMTTIME1)
         EXEC  CICS FORMATTIME ABSTIME(STCKTIME)                       X
               TIME(FMTTIME2) TIMESEP
         EXEC  CICS FORMATTIME ABSTIME(STCKTIME)                       X
               TIME(FMTTIME3) TIMESEP('-')
         EXEC  CICS SEND FROM(FORMAT3) LENGTH(FORMAT3L)
*
* BAD ABSTIME, RAISE INVREQ/1
*
         MVC   ICSBA,SBA19        16TH SBA
         MVC   ICFUNC(10),=C'FORMATTIME' SET FUNCTION
         LA    R7,IC01RTN5        R7=HANDLE RETURN
         MVI   STCKTIME,X'0A'     MAKE ABSTIME INVALID
         EXEC  CICS FORMATTIME ABSTIME(STCKTIME)
IC01RTN5 DS    0H
         EXEC  CICS SEND FROM(ENDMSG) LENGTH(ENDMSGL)
         EXEC  CICS RETURN
*
IC01EXP  DS    0H
         MVC   FHANDCON(7),=C'EXPIRED' MOVE CONDITION
         B     ICONSEND           EXIT
*
IC01INV  DS    0H
         L     R8,EIBRESP2        R8=RESP2
         CVD   R8,DEC             CONVERT TO DECIMAL
         XC    FHANDCON,FHANDCON  CLEAR CONDITION
         MVC   FHANDCON+5(4),=X'40202020' MOVE EDIT WORD
         ED    FHANDCON+5(4),DEC+6 EDIT RESP2
         MVC   FHANDCON(7),=C'INVREQ/' MOVE CONDITION
*
ICONSEND DS    0H
         EXEC  CICS SEND FROM(ICCOND) LENGTH(FHANDL)
         BR    R7                 RETURN TO MAIN LINE
*
* SUBROUTINES
*
DOAFT    DS    0H
         MVC   TIMEAFT,=X'F020202020202020' MOVE EDIT WORD
         ED    TIMEAFT,EIBTIME    EDIT EIBTIME
         MVI   TIMEAFT,C' '       BLANK 1ST BYTE
         MVI   TIMEAFT+1,C' '     BLANK 2ND BYTE
         MVC   DATEAFT,=X'F020202020202020' MOVE EDIT WORD
         ED    DATEAFT,EIBDATE    EDIT EIBDATE
         MVI   DATEAFT,C' '       BLANK 1ST BYTE
         MVC   STCKAFT,=X'F0202020202020202020202020202020' MOVE EDWD
         ED    STCKAFT,STCKTIME   EDIT STCKTIME
         MVI   STCKAFT,C' '       BLANK 1ST BYTE
         EXEC  CICS SEND FROM(TDAFT) LENGTH(TDAFTLEN)
         BR    R9                 RETURN
*
TDBEF    TN3270 WCC_KD
TDBEFSBA DS    XL3
         DC    C'EIBTIME/DATE '
         DC    C'AT TASK START   '
TIMEBEF  DS    CL8
DATEBEF  DS    CL8
TDBEFLEN DC    AL2(*-TDBEF)
*
TDAFT    TN3270 WCC_KD
TDAFTSBA DS    XL3
         DC    C'EIBTIME/DATE '
TIMESPEC DC    C'AFTER TASK START'
TIMEAFT  DS    CL8
DATEAFT  DS    CL8
STCKAFT  DC    CL16' '
TDAFTLEN DC    AL2(*-TDAFT)
*
FORMAT   TN3270 WCC_KD
FMTSBA   DS    XL3
         DC    C'FORMATTIME '
FMTDATE1 DC    CL10' '
         DC    C' '
FMTDATE2 DC    CL10' '
         DC    C' '
FMTDATE3 DC    CL10' '
         DC    C' '
FMTDATE4 DC    CL10' '
         DC    C' '
FMTDATE5 DC    CL10' '
         DC    C' '
FMTDATE6 DC    CL10' '
FORMATL  DC    AL2(*-FORMAT)
*
FORMAT2  TN3270 WCC_KD
FMT2SBA  DS    XL3
         DC    C'FORMATTIME '
DAYCOUNT DC    CL6' '
         DC    C' '
DAYWEEK  DC    CL4' '
         DC    C' '
DAYMONTH DC    CL4' '
         DC    C' '
MONTHYR  DC    CL4' '
         DC    C' '
YEARNUM  DC    CL6' '
         DC    C' '
FORMAT2L DC    AL2(*-FORMAT2)
*
FORMAT3  TN3270 WCC_KD
FMT3SBA  DS    XL3
         DC    C'FORMATTIME '
DSTRING  DC    CL25' '
         DC    C' '
FMTTIME1 DC    CL6' '
         DC    C' '
FMTTIME2 DC    CL8' '
         DC    C' '
FMTTIME3 DC    CL8' '
FORMAT3L DC    AL2(*-FORMAT3)
*
ICCOND   TN3270 WCC_KD
ICSBA    DS    XL3
ICFUNC   DC    C'DELAY      '
FHANDCON DC    CL12' '
         DC    C' CONDITION RAISED '
FHANDL   DC    AL2(*-ICCOND)
*
ENDMSG   TN3270 WCC_KD,(SBA,24,1)
         DC    C'TESTIC01 COMPLETED, PRESS CLEAR'
ENDMSGL  DC    AL2(*-ENDMSG)
*
SBA3     TN3270 (SBA,3,1)
SBA4     TN3270 (SBA,4,1)
SBA5     TN3270 (SBA,5,1)
SBA6     TN3270 (SBA,6,1)
SBA7     TN3270 (SBA,7,1)
SBA8     TN3270 (SBA,8,1)
SBA9     TN3270 (SBA,9,1)
SBA10    TN3270 (SBA,10,1)
SBA11    TN3270 (SBA,11,1)
SBA12    TN3270 (SBA,12,1)
SBA13    TN3270 (SBA,13,1)
SBA14    TN3270 (SBA,14,1)
SBA15    TN3270 (SBA,15,1)
SBA16    TN3270 (SBA,16,1)
SBA17    TN3270 (SBA,17,1)
SBA18    TN3270 (SBA,18,1)
SBA19    TN3270 (SBA,19,1)
*
SECS19   DC    C'000019'          19 SECS
DEC      DC    PL8'0'
DAYCNT   DS    F
DAYOFWK  DS    F
DAYOFMN  DS    F
MONTH    DS    F
YEAR     DS    F
MYSEP    DC    C':'
*
         TN3270 SYMBOLS
         END
