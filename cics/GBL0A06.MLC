***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
GBL0A06  SUBENTRY
*
* FN=0A06  DELETEQ TS
*
*         +0/DSCT +4/DSECT +8/IND   +12/IND +16
* R1  >>> WTOMSG, REQDSECT,TSNANCHR,CONNID, TRCEZ390
* R14 = RETURN ADDRESS
         LR    R3,R1              SAVE PARM POINTER
         L     R4,16(R3)          ADDRESS OF TRCEZ390
         MVC   TRCEZ390,0(R4)     MOVE IT
         L     R9,0(R3)           WTODSECT ADDRESS
         USING WTODSECT,R9
         L     R6,4(R3)           ADDRESS RECEIVED DATA
         USING DFHTSBLK,R6
         MVC   WTOTERM,TSPTERM    SET TERMID
         MVC   WTOTRAN,TSPTRAN    SET TRANSID
         MVI   WTOTYPE,C' '       NO TRANSID TYPE
         UNPK  WTOTASKN,TSPTASKN  UNPACK TASK NUMBER
         OI    WTOTASKN+6,X'F0'   CLEAR SIGN
         MVC   WTODESC,=CL45'<<<Z390KCP DELETEQ TS REQUEST'
         MVI   CICSTIND,C'A'      SET APPLICATION TYPE
         BAL   R11,CICSTRCE       TRACE IT
         L     R4,8(R3)           ADDRESS OF TSNANCHR ADDRESS
         ICM   R7,15,0(R4)        R7=TS NAME TABLE
         BZ    DQTSQIDE           ERROR IF NO NAMES
         USING TSNAMES,R7
* TS NAME CHAIN EXISTS, SEARCH FOR Q NAME
         L     R8,8(R3)           PREVIOUS CHAIN ADDRESS
DQTSNLP  EQU   *
         CLC   TSNQNAME,TSPNAME   GOT OUR Q NAME ?
         BE    DQTSGOT            EXIT IF WE HAVE
         LA    R8,TSNCHAIN        PREVIOUS CHAIN ADDRESS
         ICM   R7,15,TSNCHAIN     NEXT TS NAME ENTRY
         BZ    DQTSQIDE           ERROR IF NOT FOUND
         B     DQTSNLP            LOOP IF NOT OURS
*
DQTSGOT  EQU   *
* FREEMAIN THE DATA CHAIN
         L     R1,TSNITEM1        R1=1ST ITEM
         USING TSDPREFX,R1
DQTSLOOP EQU   *
         L     R2,TSDCHAIN        R2=NEXT ITEM
         FREEMAIN LA=0(R1)        FREEMAIN ITEM
         LTR   R2,R2              END OF ITEM CHAIN ?
         BZ    DQTSNFRE           EXIT IF IT IS
         LR    R1,R2              R1=NEXT ITEM
         B     DQTSLOOP           LOOP TILL DONE
*
DQTSNFRE EQU   *
* REMAKE THE CHAIN AND FREEMAIN THE TS NAME ENTRY
         MVC   0(4,R8),TSNCHAIN   REMAKE THE CHAIN
         FREEMAIN LV=TSNLEN,A=(R7) FREE TS NAME
* DELETEQ TS COMPLETED, TELL THE CLIENT
         XC    TSPRETCD,TSPRETCD  CLEAR RETURN CODE
         L     R8,12(R3)          R8=CONN ID ADDRESS
         L     R8,0(R8)           R8=CONNID
         LA    R15,TSPREFIX       R15=LENGTH TO SEND
         TCPIO SEND,MSG=DFHTSBLK,LMSG=(R15),CONN=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   DQTSINVR           EXIT IF BAD
         L     R9,0(R3)           WTODSECT ADDRESS
         MVC   WTODESC,=CL45'<<<Z390KCP DELETEQ TS COMPLETED'
         B     DQTSTRCE           EXIT
*
DQTSINVR EQU   *
         MVC   TSPRETCD,DFHRESP(INVREQ) SET INVREQ
         L     R9,0(R3)           WTODSECT ADDRESS
         MVC   WTODESC,=CL45'>>>Z390KCP DELETEQ TS FAILED'
         MVC   WTODESC+29(6),=C'INVREQ'
         B     DQTSSEND           EXIT
*
DQTSQIDE EQU   *
         L     R9,0(R3)           WTODSECT ADDRESS
         MVC   WTODESC,=CL45'>>>Z390KCP DELETEQ TS FAILED'
         MVC   WTODESC+29(6),=C'QIDERR'
         MVC   TSPRETCD,DFHRESP(QIDERR) SET QIDERR
*
DQTSSEND EQU   *
         L     R8,12(R3)          R8=CONN ID ADDRESS
         L     R8,0(R8)           R8=CONNID
         LA    R15,TSPREFIX       R15=LENGTH TO SEND
         TCPIO SEND,MSG=DFHTSBLK,LMSG=(R15),CONN=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   ABEND780           EXIT IF BAD
DQTSTRCE EQU   *
         L     R9,0(R3)           WTODSECT ADDRESS
         MVI   CICSTIND,C'A'      SET APPLICATION TYPE
         BAL   R11,CICSTRCE       TRACE IT
         SUBEXIT
*
* SUBROUTINES
*
* MODIFIED CICSTRCE
CICSTRCE DS    0H
         CLI   TRCEZ390,C'N'      NO TRACING ?
         BER   R11                RETURN IF IT IS
         CLI   TRCEZ390,C'Y'      ALL TRACING ?
         BE    CICSTRGO           TRACE IF IT IS
         CLC   TRCEZ390,CICSTIND  TRACE TYPE=TRACE REQUEST ?
         BNER  R11                RETURN IF NOT
CICSTRGO EQU   *
         TIME  DEC,TIME,LINKAGE=SYSTEM GET TIME
         MVO   TIMEPACK,TIME      MOVE TO PACKED FIELD
         MVC   TIMEHERE(13),TIMEEDIT MOVE EDIT WORD
         ED    TIMEHERE(13),TIMEPACK EDIT TIME
         MVC   WTOTIME,TIMEHERE   SET TIME
         WTO   MF=(E,WTOMSG)      TRACE IT
         BR    R11                RETURN
*
ABEND780 ABEND 780,DUMP           TCPIO SEND FAILED
*
CICSTIND DS    C                  TRACE TYPE INDICATOR
TRCEZ390 DS    C                  Z390 TRACE OPTION
*
* TIME CONVERSION FIELDS
*
TIME     DS    CL4                HHMMSSTT
         DS    CL8                SPACE FOR DATE
TIMEPACK DC    PL5'0'             0HHMMSSTTC
TIMEEDIT DC    X'402021207A20207A20204B2020'
TIMEHERE DS    CL13
*
* WTO AREA DSECT
*
WTODSECT DSECT
WTOMSG   DS    AL4
WTOTIME  DS    CL13               TIME STAMP
         DS    C
         DS    CL4                MODULE/FUNCTION REFERENCE (EIBFN)
         DS    C
WTOTERM  DS    CL4                TERMID
         DS    C
WTOTRAN  DS    CL4                TRANSID (OR BLANK)
         DS    C
WTOTYPE  DS    C                  TRANSID TYPE
         DS    C
WTOTASKN DS    CL7                TASK NUMBER
         DS    C
WTODESC  DS    CL45               DESCRIPTION
*
* TEMPORARY STORAGE DATA CHAIN PREFIX
*
TSDPREFX DSECT
         DS    A                  LENGTH FOR DELETEQ FREEMAIN
TSDCHAIN DS    A                  POINTER TO NEXT ITEM
*
         DFHTSBLK                 TEMPORARY STORAGE TCPIO BLOCK
         DFHTSNDS                 TEMPORARY STORAGE NAME TABLE
*
         EQUREGS
*
         END
