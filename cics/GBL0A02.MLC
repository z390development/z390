***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
GBL0A02  SUBENTRY
*
* FN=0A02  WRITEQ TS
*
*         +0/DSCT +4/DSECT +8/IND   +12/IND +16
* R1  >>> WTOMSG, REQDSECT,TSNANCHR,CONNID, TRCEZ390
* R14 = RETURN ADDRESS
         LR    R3,R1              SAVE PARM POINTER
         L     R4,16(R3)          ADDRESS OF TRCEZ390
         MVC   TRCEZ390,0(R4)     MOVE IT
         L     R9,0(R3)           WTODSECT ADDRESS
         USING WTODSECT,R9
         L     R6,4(R3)           ADDRESS RECEIVED DATA
         USING DFHTSBLK,R6
         MVC   WTOTERM,TSPTERM    SET TERMID
         MVC   WTOTRAN,TSPTRAN    SET TRANSID
         MVI   WTOTYPE,C' '       NO TRANSID TYPE
         UNPK  WTOTASKN,TSPTASKN  UNPACK TASK NUMBER
         OI    WTOTASKN+6,X'F0'   CLEAR SIGN
         MVC   WTODESC,=CL45'<<<Z390KCP WRITEQ  TS REQUEST'
         MVI   CICSTIND,C'A'      SET APPLICATION TYPE
         BAL   R11,CICSTRCE       TRACE IT
         L     R4,8(R3)           ADDRESS OF TSNANCHR ADDRESS
         ICM   R7,15,0(R4)        R7=TS NAME TABLE
         BZ    WQTSNOQ            EXIT IF NO NAMES
         USING TSNAMES,R7
* TS NAME CHAIN EXISTS, SEARCH FOR Q NAME
WQTSNLP  EQU   *
         CLC   TSNQNAME,TSPNAME   GOT OUR Q NAME ?
         BE    WQTSGOT            EXIT IF WE HAVE
         ICM   R7,15,TSNCHAIN     NEXT TS NAME ENTRY
         BNZ   WQTSNLP            LOOP IF NOT OURS
* NO TS NAME CHAIN
* TS NAME CHAIN EXISTS, QNAME NOT FOUND
WQTSNOQ  EQU   *
         OC    TSPITEM,TSPITEM    ANY ITEM NUMBER ?
         BNZ   WQTSQIDE           QIDERR IF THERE IS
* NEW TS Q
         L     R4,8(R3)           ADDRESS OF TSNANCHR ADDRESS
         L     R7,0(R4)           R7=1ST TS NAME TABLE ADDRESS
         LR    R8,R4              R8=CHAINED FROM ADDRESS
WQTSFLP  EQU   *
         LTR   R7,R7              END OF CHAIN ?
         BZ    WQTSNSLT           EXIT IF IT IS
         LR    R8,R7              R8=CHAINED FROM ADDRESS
         L     R7,TSNCHAIN        NEXT ENTRY
         B     WQTSFLP            LOOP
*
WQTSGOT  EQU   *
* FOUND A Q NAME
         OC    TSPITEM,TSPITEM    ANY ITEM NUMBER ?
         BZ    WQTSADD            EXIT IF NONE
* WRITEQ TS REWRITE
         CLC   TSPITEM,TSNNUMIT   IS REWRITE POSSIBLE ?
         BH    WQTSITME           ITEMERR IF NOT
         LA    R14,1              ITEM NUMBER
         L     R10,TSNITEM1       DATA CHAIN START
         USING TSDPREFX,R10
         LA    R8,TSNITEM1-4      R8=CHAINED FROM ADDRESS
WQTSRWLP EQU   *
         CH    R14,TSPITEM        OUR ITEM NUMBER ?
         BE    WQTSREWT           EXIT IF IT IS
         AHI   R14,1              BUMP ITEM NUMBER
         LR    R8,R10             R8=CHAINED FROM ADDRESS
         L     R10,TSDCHAIN       NEXT ITEM
         B     WQTSRWLP           LOOP TILL FOUND
*
WQTSREWT EQU   *
* FREE OLD ONE, WRITE NEW ONE
         L     R0,TSDFREE         LENGTH TO FREE
         L     R9,TSDCHAIN        SAVE CHAIN TO NEXT ITEM
         LR    R1,R10             R1=ADDRESS TO FREE
         FREEMAIN LV=(R0)
         L     R1,TSPLEN          TS DATA LENGTH
         AHI   R1,TSDLEN          + LENGTH OF TS DATA PREFIX
         GETMAIN R,LV=(R1)
         ST    R1,4(R8)           RESTORE PREVIOUS CHAINER
         LR    R10,R1             ADDRESS TS DATA AREA
         ST    R9,TSDCHAIN        RESTORE FORWARD CHAIN
         B     WQTSMOVE           EXIT
*
WQTSADD  EQU   *
* ADD A NEW ITEM
         L     R10,TSNITEM1       DATA CHAIN START
WQTSADLP EQU   *
         LR    R8,R10             R8=CHAINED FROM ADDRESS
         ICM   R10,15,TSDCHAIN    END OF CHAIN ?
         BZ    WQTSADIT           EXIT IF IT IS
         B     WQTSADLP           LOOP TILL FOUND
*
WQTSADIT EQU   *
         L     R1,TSPLEN          TS DATA LENGTH
         AHI   R1,TSDLEN          + LENGTH OF TS DATA PREFIX
         GETMAIN R,LV=(R1)
         XC    0(TSDLEN,R1),0(R1) CLEAR TS DATA PREFIX
         ST    R1,4(R8)           CHAIN NEW ITEM
         LR    R10,R1             ADDRESS TS DATA AREA
         LH    R1,TSNNUMIT        NUMITEMS
         AHI   R1,1               +1
         STH   R1,TSNNUMIT        STORE BACK
         B     WQTSMOVE           EXIT
*
WQTSNSLT EQU   *
* LOCATED LAST (OR 1ST) TS NAME ENTRY
* GETMAIN A NEW ONE AND CHAIN
         LA    R1,TSNLEN          R1=TS NAME TABLE LENGTH
         GETMAIN R,LV=(R1),A=0(R8)
         LR    R7,R1              NEW NAME TABLE ENTRY
         XC    TSNAMES(TSNLEN),TSNAMES CLEAR IT
         MVC   TSNQNAME,TSPNAME   MOVE Q NAME
         MVC   TSNNUMIT,=H'1'     SET NUMITEMS=1
         MVC   TSNICTRM,TSPICTRM  SET ICTERM
         MVC   TSNICTRN,TSPICTRN  SET ICTRAN
* GETMAIN AN AREA FOR THE 1ST ITEM AND CHAIN
         L     R1,TSPLEN          TS DATA LENGTH
         AHI   R1,TSDLEN          + LENGTH OF TS DATA PREFIX
         GETMAIN R,LV=(R1),A=TSNITEM1
         LR    R10,R1             ADDRESS TS DATA AREA
         XC    TSDCHAIN,TSDCHAIN  CLEAR CHAIN
WQTSMOVE EQU   *
         ST    R0,TSDFREE         SAVE LENGTH FOR DELETEQ TS
         MVC   TSDLNGTH,TSPLEN    SAVE TS DATA LENGTH
* WE GOT ALL THE TS DATA, MOVE IT
         L     R1,TSPLEN          R1=TS DATA LENGTH
         LR    R15,R1             R15=SOURCE LENGTH
         LA    R0,TSDDATA         R0=DESTINATION ADDRESS
         LA    R14,TSPDATA        R14=SOURCE ADDRESS
         MVCL  R0,R14             MOVE TS DATA
* WRITEQ TS COMPLETED, TELL THE CLIENT
         MVC   TSPNUMIT,TSNNUMIT  SEND NUMITEMS BACK
         CLC   TSPICTRM,TSNICTRM  SAME ICTERM ?
         BNE   WQTSIOER           ERROR IF NOT
         CLC   TSPICTRN,TSNICTRN  SAME ICTRAN ?
         BNE   WQTSIOER           ERROR IF NOT
         XC    TSPRETCD,TSPRETCD  CLEAR RETURN CODE
         L     R8,12(R3)          R8=CONN ID ADDRESS
         L     R8,0(R8)           R8=CONNID
         LA    R15,TSPREFIX       R15=LENGTH TO SEND
         TCPIO SEND,MSG=DFHTSBLK,LMSG=(R15),CONN=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   WQTSINVR           EXIT IF BAD
         L     R9,0(R3)           WTODSECT ADDRESS
         MVC   WTODESC,=CL45'<<<Z390KCP WRITEQ  TS COMPLETED'
         B     WQTSTRCE           EXIT
*
WQTSINVR EQU   *
         MVC   TSPRETCD,DFHRESP(INVREQ) SET INVREQ
         L     R9,0(R3)           WTODSECT ADDRESS
         MVC   WTODESC,=CL45'>>>Z390KCP WRITEQ  TS FAILED'
         MVC   WTODESC+29(6),=C'INVREQ'
         B     WQTSSEND           EXIT
*
WQTSITME EQU   *
         MVC   TSPRETCD,DFHRESP(ITEMERR) SET ITEMERR
         L     R9,0(R3)           WTODSECT ADDRESS
         MVC   WTODESC,=CL45'>>>Z390KCP WRITEQ  TS FAILED'
         MVC   WTODESC+29(7),=C'ITEMERR'
         B     WQTSSEND           EXIT
*
WQTSQIDE EQU   *
         MVC   TSPRETCD,DFHRESP(QIDERR) SET QIDERR
         L     R9,0(R3)           WTODSECT ADDRESS
         MVC   WTODESC,=CL45'>>>Z390KCP WRITEQ  TS FAILED'
         MVC   WTODESC+29(6),=C'QIDERR'
         B     WQTSSEND           EXIT
*
WQTSIOER EQU   *
         MVC   TSPRETCD,DFHRESP(IOERR) SET IOERR
         L     R9,0(R3)           WTODSECT ADDRESS
         MVC   WTODESC,=CL45'>>>Z390KCP WRITEQ  TS FAILED'
         MVC   WTODESC+29(6),=C'IOERR '
WQTSSEND EQU   *
         L     R8,12(R3)          R8=CONN ID ADDRESS
         L     R8,0(R8)           R8=CONNID
         LA    R15,TSPREFIX       R15=LENGTH TO SEND
         TCPIO SEND,MSG=DFHTSBLK,LMSG=(R15),CONN=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   ABEND780           EXIT IF BAD
WQTSTRCE EQU   *
         L     R9,0(R3)           WTODSECT ADDRESS
         MVI   CICSTIND,C'A'      SET APPLICATION TYPE
         BAL   R11,CICSTRCE       TRACE IT
         SUBEXIT
*
* SUBROUTINES
*
* MODIFIED CICSTRCE
CICSTRCE DS    0H
         CLI   TRCEZ390,C'N'      NO TRACING ?
         BER   R11                RETURN IF IT IS
         CLI   TRCEZ390,C'Y'      ALL TRACING ?
         BE    CICSTRGO           TRACE IF IT IS
         CLC   TRCEZ390,CICSTIND  TRACE TYPE=TRACE REQUEST ?
         BNER  R11                RETURN IF NOT
CICSTRGO EQU   *
         TIME  DEC,TIME,LINKAGE=SYSTEM GET TIME
         MVO   TIMEPACK,TIME      MOVE TO PACKED FIELD
         MVC   TIMEHERE(13),TIMEEDIT MOVE EDIT WORD
         ED    TIMEHERE(13),TIMEPACK EDIT TIME
         MVC   WTOTIME,TIMEHERE   SET TIME
         WTO   MF=(E,WTOMSG)      TRACE IT
         BR    R11                RETURN
*
ABEND780 ABEND 780,DUMP           TCPIO SEND FAILED
*
CICSTIND DS    C                  TRACE TYPE INDICATOR
TRCEZ390 DS    C                  Z390 TRACE OPTION
*
* TIME CONVERSION FIELDS
*
TIME     DS    CL4                HHMMSSTT
         DS    CL8                SPACE FOR DATE
TIMEPACK DC    PL5'0'             0HHMMSSTTC
TIMEEDIT DC    X'402021207A20207A20204B2020'
TIMEHERE DS    CL13
*
* WTO AREA DSECT
*
WTODSECT DSECT
WTOMSG   DS    AL4
WTOTIME  DS    CL13               TIME STAMP
         DS    C
         DS    CL4                MODULE/FUNCTION REFERENCE (EIBFN)
         DS    C
WTOTERM  DS    CL4                TERMID
         DS    C
WTOTRAN  DS    CL4                TRANSID (OR BLANK)
         DS    C
WTOTYPE  DS    C                  TRANSID TYPE
         DS    C
WTOTASKN DS    CL7                TASK NUMBER
         DS    C
WTODESC  DS    CL45               DESCRIPTION
*
* TEMPORARY STORAGE DATA CHAIN PREFIX
*
TSDPREFX DSECT
TSDFREE  DS    A                  LENGTH FOR DELETEQ FREEMAIN
TSDCHAIN DS    A                  POINTER TO NEXT ITEM
TSDLNGTH DS    F                  LENGTH OF DATA FOLLOWING
TSDLEN   EQU   *-TSDPREFX
TSDDATA  EQU   *
*
         DFHTSBLK                 TEMPORARY STORAGE TCPIO BLOCK
         DFHTSNDS                 TEMPORARY STORAGE NAME TABLE
*
         EQUREGS
*
         END
