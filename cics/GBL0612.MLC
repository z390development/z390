***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
GBL0612  SUBENTRY
*
* FN=0612  ENDBR FILE
*
*         +0/DSCT +4/DSECT +8/IND   +12/IND +16
* R1  >>> WTOMSG, REQDSECT,DFHFCTAD,CONNID, TRCEZ390
* R14 = RETURN ADDRESS
         LR    R3,R1              SAVE PARM POINTER
         L     R4,16(R3)          ADDRESS OF TRCEZ390
         MVC   TRCEZ390,0(R4)     MOVE IT
         L     R9,0(R3)           WTODSECT ADDRESS
         USING WTODSECT,R9
         L     R6,4(R3)           ADDRESS RECEIVED DATA
         USING DFHFCBLK,R6
         L     R4,8(R3)           ADDRESS FCT ADDRESS
         L     R7,0(R4)           ADDRESS FCT
         USING DFHFCTDS,R7
         USING IHAACB,R8
         MVC   WTOTERM,FCPTERM    SET TERMID
         MVC   WTOTRAN,FCPTRAN    SET TRANSID
         MVI   WTOTYPE,C' '       NO TRANSID TYPE
         UNPK  WTOTASKN,FCPTASKN  UNPACK TASK NUMBER
         OI    WTOTASKN+6,X'F0'   CLEAR SIGN
         MVC   WTODESC,=CL45'<<<Z390KCP ENDBR      REQUEST'
         MVI   CICSTIND,C'A'      SET APPLICATION TYPE
         BAL   R11,CICSTRCE       TRACE IT
* NOTE: REAL CICS DOES NOT OPEN A FILE ON ENDBR
         BAL   R11,FOP1REF        OPEN ON 1ST REFERENCE
* R6=REQUEST DATA  (DFHFCBLK)
* R7=FCTTE ADDRESS (DFHFCTDS)
* R8=ACB
* R4=VSWA AND RPL
         TM    FCTSERV,FCTBRWSE   IS BROWSE ALLOWED ?
         BNO   NDBRIV20           EXIT IF NOT
         LA    R5,FCTVSWA         R5=CHAINED FROM ADDRESS
         ICM   R4,15,FCTVSWA      R4=VSWA ANCHOR
         BZ    NDBRIV35           ERROR IF NO VSWAS
         USING DFHVSWAD,R4
* SCAN VSWAS AND FIND OUR STARTBR ONE
NDBRFLP  EQU   *
         LTR   R4,R4              END OF CHAIN ?
         BZ    NDBRIV35           ERROR IF IT IS
         CLC   VSWTASKN,FCPTASKN  IS IT OURS ?
         BNE   NDBRVCHN           CHAIN IF NOT
         CLI   VSWCTYPE,VSWCBRWS  IS IT BROWSE TYPE ?
         BNE   NDBRVCHN           CHAIN IF NOT
         CLC   VSWREQID,FCPREQID  IS IT OUR REQID ?
         BE    NDBRVSGT           EXIT IF IT IS
NDBRVCHN EQU   *
         LR    R5,R4              R5=CHAINED FROM ADDRESS
         L     R4,VSWCHAIN        NEXT ENTRY
         B     NDBRFLP            LOOP
*
NDBRVSGT EQU   *
* FOUND OUR VSWA
         USING IHARPL,VSWRPL
* ENDBR COMPLETED, PASS REQUEST BLOCK BACK, FREE VSWA
*        L     R8,CONNID          R8=CONN ID
         L     R8,12(R3)          R8=CONN ID ADDRESS
         L     R8,0(R8)           R8=CONNID
         TCPIO SEND,MSG=DFHFCBLK,LMSG=FCPTCPIO,CONN=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   ABEND780           EXIT IF BAD
* REMAKE THE CHAIN AND FREEMAIN THE VSWA
         MVC   0(4,R5),VSWCHAIN   REMAKE THE CHAIN
         FREEMAIN LV=VSWLEN,A=(R4) FREE VSWA
         MVC   WTODESC,=CL45'<<<Z390KCP ENDBR      COMPLETED'
         B     NDBRTRCE           EXIT
*
NDBRIV20 EQU   *
         MVC   FCPRESP2,=F'20'    SET RESP2 (FUNCTION NOT PERMITTED)
         B     NDBRINVQ           EXIT
*
NDBRIV35 EQU   *
         MVC   FCPRESP2,=F'35'    SET RESP2 (NO STARTBR)
NDBRINVQ EQU   *
         MVC   FCPRETCD,DFHRESP(INVREQ) SET INVREQ
         MVC   WTODESC,=CL45'>>>Z390KCP ENDBR      FAILED'
         MVC   WTODESC+29(6),=C'INVREQ'
         LR    R9,R6              SET AS IF NEW DFHFCBLK
*        L     R8,CONNID          R8=CONN ID
         L     R8,12(R3)          R8=CONN ID ADDRESS
         L     R8,0(R8)           R8=CONNID
         LA    R15,FCPREFIX       R15=LENGTH TO SEND
         TCPIO SEND,MSG=(R9),LMSG=(R15),CONN=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   ABEND780           EXIT IF BAD
NDBRTRCE EQU   *
         L     R9,0(R3)           WTODSECT ADDRESS
         MVI   CICSTIND,C'A'      SET APPLICATION TYPE
         BAL   R11,CICSTRCE       TRACE IT
         SUBEXIT
*
* SUBROUTINES
*
* MODIFIED CICSTRCE
CICSTRCE DS    0H
         CLI   TRCEZ390,C'N'      NO TRACING ?
         BER   R11                RETURN IF IT IS
         CLI   TRCEZ390,C'Y'      ALL TRACING ?
         BE    CICSTRGO           TRACE IF IT IS
         CLC   TRCEZ390,CICSTIND  TRACE TYPE=TRACE REQUEST ?
         BNER  R11                RETURN IF NOT
CICSTRGO EQU   *
         TIME  DEC,TIME,LINKAGE=SYSTEM GET TIME
         MVO   TIMEPACK,TIME      MOVE TO PACKED FIELD
         MVC   TIMEHERE(13),TIMEEDIT MOVE EDIT WORD
         ED    TIMEHERE(13),TIMEPACK EDIT TIME
         MVC   WTOTIME,TIMEHERE   SET TIME
         WTO   MF=(E,WTOMSG)      TRACE IT
         BR    R11                RETURN
*
FOP1REF DS     0H
* OPEN ON 1ST REFERENCE
FOP1LOOP EQU   *
* CHECK THE FCT STATUS
         CLC   FCPFILNM,FCTFILNM  MATCH REQUESTED FILENAME TO FCT ?
         BNE   FOP1INCR           EXIT IF NOT MATCHED
* FILE FOUND
         LA    R8,FCTTELEN(R7)    ADDRESS ACB
         TM    FCTFILST,FCTOPEN   IS FILE OPEN ?
         BOR   R11                RETURN IF IT IS
* FILE NOT OPEN
* TEST FILSTAT OPTIONS
*    OPENED,ENABLED   -- FILE OPENED AT START, CANNOT OCCUR HERE
*                     -- BUT TREATED AS OPEN ON 1ST REF
*    OPENED,DISABLED  -- FILE OPENED AT START, CANNOT OCCUR HERE
*                     -- BUT TREATED AS OPEN ON 1ST REF
*                     -- DISABLED STATUS RETURNED
*    OPENED,UNENABLED -- CANNOT OCCUR
*
*    CLOSED,ENABLED   -- FILE OPENED NOW (1ST REF)
*    CLOSED,DISABLED  -- DISABLED STATUS RETURNED
*    CLOSED,UNENABLED -- NOTOPEN STATUS RETURNED
         TM    FCTFILST,FCTOPCLO  FILSTAT=OPENED ?
         BO    FOP1OPEN           EXIT IF IT IS
* FILSTAT=CLOSED
         TM    FCTFILST,FCTENDIS  FILSTAT=ENABLED ?
         BO    FOP1OPEN           EXIT IF IT IS
* FILSTAT=CLOSED AND NOT ENABLED
         TM    FCTFILST,FCTUNENA  FILSTAT=UNENABLED ?
         BO    FOP1NOTO           EXIT IF NOTOPEN
         B     FOP1DISA           EXIT IF DISABLED
*
FOP1INCR EQU   *
         AHI   R7,FCTABLEN        POINT TO NEXT FCT ENTRY
         CLI   0(R7),X'FF'        END OF FCT ?
         BNE   FOP1LOOP           LOOP IF NOT
* FILE NOT FOUND
         B     FOP1FNTF           EXIT IF FILENOTFOUND
*
FOP1OPEN EQU   *
* OPEN ON 1ST REF
* INITIALIZE MESSAGE
         MVC   WTOFN,=C'06FE'     1ST REF FILE OPENS
         MVC   WTOTERM,=4C' '     NO TERMID
         MVC   WTOTRAN,=4C' '     NO PRESET TRANSID
         MVI   WTOTYPE,C' '       NO TRANSID TYPE
         MVC   WTOTASKN,=7C' '    NO TASK NUMBER
         MVC   WTODESC,=CL45'FILE ........ OPEN  FAILED'
         MVC   WTODESC+5(8),FCTFILNM MOVE FILENAME TO MSG
         TM    FCTSERV,FCTDELT+FCTUPDT+FCTADD REASON TO OPEN OUTPUT ?
         BZ    FOP1IN             EXIT IF NONE
* SET ALL BITS WE ARE LIKELY TO USE
*    ADR = ACCESS BY RBA
*    DIR = DIRECT ACCESS
*    KEY = ACCESS BY KEY
*    SEQ = SEQUENTIAL ACCESS
*    IN  = READ ONLY
*    OUT = READ OR WRITE
* OPEN FOR OUTPUT
         MODCB ACB=IHAACB,MACRF=(ADR,DIR,KEY,SEQ,OUT)
         OPEN  (IHAACB,OUTPUT)    OPEN FOR OUTPUT
         LTR   R15,R15            OK ?
         BNZ   FOP1OPER           EXIT IF NOT
         B     FOP1OPOK           EXIT
*
FOP1IN   EQU   *
* OPEN FOR INPUT
         MODCB ACB=IHAACB,MACRF=(ADR,DIR,KEY,SEQ,IN)
         OPEN  (IHAACB,INPUT)     OPEN FOR INPUT
         LTR   R15,R15            OK ?
         BNZ   FOP1OPER           EXIT IF NOT
FOP1OPOK EQU   *
* OPEN SUCCESSFUL, SAY SO
         MVC   WTODESC+20(6),=C'OK    ' SET OK
         MVI   CICSTIND,C'I'      SET INTERNAL TYPE
         ST    R11,FOP1SV11       SAVE RETURN ADDRESS
         BAL   R11,CICSTRCE       TRACE IT
         L     R11,FOP1SV11       RESTORE RETURN ADDRESS
         OI    FCTFILST,FCTOPEN   SET FILE OPEN
         OI    FCTFILST,FCTOPCLO  SET FILSTAT=OPENED
         B     FOP1DIST           EXIT
*
FOP1OPER EQU   *
* OPEN UNSUCCESSFUL, SAY SO
         MVC   WTODESC+20(6),=C'FAILED' SET FAILED
         MVI   CICSTIND,C'I'      SET INTERNAL TYPE
         ST    R11,FOP1SV11       SAVE RETURN ADDRESS
         BAL   R11,CICSTRCE       TRACE IT
         L     R11,FOP1SV11       RESTORE RETURN ADDRESS
         MVI   FCTFILST,X'00'     SET FILE CLOSED,DISABLED
         B     FOP1DISA           EXIT IF DISABLED
*
FOP1DIST EQU   *
         TM    FCTFILST,FCTENDIS  IS FILSTAT=DISABLED ?
         BZ    FOP1DISA           EXIT IF DISABLED
         BR    R11                RETURN
*
FOP1FNTF EQU   *
         MVC   FCPRETCD,DFHRESP(FILENOTFOUND) SET FILENOTFOUND
         MVC   FCPRESP2,=F'1'     SET RESP2
         MVC   WTODESC,=CL45'>>>Z390KCP ENDBR      FAILED'
         MVC   WTODESC+29(12),=C'FILENOTFOUND'
         B     FOP1SEND           EXIT
*
FOP1DISA EQU   *
         MVC   FCPRETCD,DFHRESP(DISABLED) SET DISABLED
         MVC   FCPRESP2,=F'50'    SET RESP2
         MVC   WTODESC,=CL45'>>>Z390KCP ENDBR      FAILED'
         MVC   WTODESC+29(12),=C'DISABLED'
         B     FOP1SEND           EXIT
*
FOP1NOTO EQU   *
         MVC   FCPRETCD,DFHRESP(NOTOPEN) SET NOTOPEN
         MVC   FCPRESP2,=F'60'    SET RESP2
         MVC   WTODESC,=CL45'>>>Z390KCP ENDBR      FAILED'
         MVC   WTODESC+29(7),=C'NOTOPEN'
FOP1SEND EQU   *
         LR    R9,R6              SET AS IF NEW DFHFCBLK
*        L     R8,CONNID          R8=CONN ID
         L     R8,12(R3)          R8=CONN ID ADDRESS
         L     R8,0(R8)           R8=CONNID
         LA    R15,FCPREFIX       R15=LENGTH TO SEND
         TCPIO SEND,MSG=(R9),LMSG=(R15),CONN=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   ABEND780           EXIT IF BAD
         L     R9,0(R3)           WTODSECT ADDRESS
         MVI   CICSTIND,C'A'      SET APPLICATION TYPE
         BAL   R11,CICSTRCE       TRACE IT
         SUBEXIT
FOP1SV11 DS    A                  SAVE R11
*
ABEND780 ABEND 780,DUMP           TCPIO SEND FAILED
*
CICSTIND DS    C                  TRACE TYPE INDICATOR
TRCEZ390 DS    C                  Z390 TRACE OPTION
*
* TIME CONVERSION FIELDS
*
TIME     DS    CL4                HHMMSSTT
         DS    CL8                SPACE FOR DATE
TIMEPACK DC    PL5'0'             0HHMMSSTTC
TIMEEDIT DC    X'402021207A20207A20204B2020'
TIMEHERE DS    CL13
*
* WTO AREA DSECT
*
WTODSECT DSECT
WTOMSG   DS    AL4
WTOTIME  DS    CL13               TIME STAMP
         DS    C
WTOFN    DS    CL4                MODULE/FUNCTION REFERENCE (EIBFN)
         DS    C
WTOTERM  DS    CL4                TERMID
         DS    C
WTOTRAN  DS    CL4                TRANSID (OR BLANK)
         DS    C
WTOTYPE  DS    C                  TRANSID TYPE
         DS    C
WTOTASKN DS    CL7                TASK NUMBER
         DS    C
WTODESC  DS    CL45               DESCRIPTION
*
         ACBD  ,                  VSAM ACB
         DFHFCTDS                 FILE CONTROL TABLE
         DFHFCBLK                 FILE CONTROL TCPIO BLOCK
         DFHVSWAD                 FILE CONTROL VSAM WORK AREA
*
         EQUREGS
*
         END
