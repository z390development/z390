.**********************************************************************
.* Copyright 2006 Automated Software Tools Corporation                *
.* This source code is part of z390 assembler/emulator package        *
.* The z390 package is distributed under GNU general public license   *
.* Author - Don Higgins                                               *
.**********************************************************************
.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY         *
.**********************************************************************
         MACRO
         CICS_HANDLE
         GBLB  &PARMS_0204,&PARMS_0206,&PARMS_0E0E
         GBLB  &ZC_CICS
         LCLA  &CONDRNG,&PARMCNT
         LCLB  &CANCEL,&RESET,&NOEDF
         LCLC  &TYPE,&LABEL,&PROGRAM,&RESP,&RESP2
         LCLC  &KEYS(60)
         LCLC  &CONDS(300)
         ACTR  100000
&CONDRNG SETA  150                HALF THE COND TABLE
&TYPE    SETC  '&SYSLIST(1)'
         AIF   ('&TYPE' EQ 'AID').AID
         AIF   ('&TYPE' EQ 'CONDITION').COND
         AIF   ('&TYPE' EQ 'ABEND').ABEND
         MNOTE 12,'HANDLE TYPE NOT RECOGNIZED'
         MEXIT
.*
.* HANDLE AID
.*
.AID     ANOP
         GEN_XC P0206,P0206END-P0206,P0206
         GEN_MVC P0206FN,,=X'0206' SET FUNCTION CODE
         GEN_ST DFHEIBR,P0206EIB  SET EIB ADDRESS
         GEN_ST TCTTEAR,P0206TCT  SET TCTTE ADDRESS
         LARL  R1,P0206ADS        R1=ADDRESS AID NUMBERS
         LARL  R14,P0206ADR       R14=ADDRESSES OR FF IF CANCEL
.* SET KEY LIST WITH LABEL
&KEYS(01) SETC 'ANYKEY('
&KEYS(02) SETC 'ENTER('
&KEYS(03) SETC 'CLEAR('
&KEYS(04) SETC 'PA1('
&KEYS(05) SETC 'PA2('
&KEYS(06) SETC 'PA3('
&KEYS(07) SETC 'PF1('
&KEYS(08) SETC 'PF2('
&KEYS(09) SETC 'PF3('
&KEYS(10) SETC 'PF4('
&KEYS(11) SETC 'PF5('
&KEYS(12) SETC 'PF6('
&KEYS(13) SETC 'PF7('
&KEYS(14) SETC 'PF8('
&KEYS(15) SETC 'PF9('
&KEYS(16) SETC 'PF10('
&KEYS(17) SETC 'PF11('
&KEYS(18) SETC 'PF12('
&KEYS(19) SETC 'PF13('
&KEYS(20) SETC 'PF14('
&KEYS(21) SETC 'PF15('
&KEYS(22) SETC 'PF16('
&KEYS(23) SETC 'PF17('
&KEYS(24) SETC 'PF18('
&KEYS(25) SETC 'PF19('
&KEYS(26) SETC 'PF20('
&KEYS(27) SETC 'PF21('
&KEYS(28) SETC 'PF22('
&KEYS(29) SETC 'PF23('
&KEYS(30) SETC 'PF24('
.* SET KEYLIST WITHOUT LABEL
&KEYS(31) SETC 'ANYKEY'
&KEYS(32) SETC 'ENTER'
&KEYS(33) SETC 'CLEAR'
&KEYS(34) SETC 'PA1'
&KEYS(35) SETC 'PA2'
&KEYS(36) SETC 'PA3'
&KEYS(37) SETC 'PF1'
&KEYS(38) SETC 'PF2'
&KEYS(39) SETC 'PF3'
&KEYS(40) SETC 'PF4'
&KEYS(41) SETC 'PF5'
&KEYS(42) SETC 'PF6'
&KEYS(43) SETC 'PF7'
&KEYS(44) SETC 'PF8'
&KEYS(45) SETC 'PF9'
&KEYS(46) SETC 'PF10'
&KEYS(47) SETC 'PF11'
&KEYS(48) SETC 'PF12'
&KEYS(49) SETC 'PF13'
&KEYS(50) SETC 'PF14'
&KEYS(51) SETC 'PF15'
&KEYS(52) SETC 'PF16'
&KEYS(53) SETC 'PF17'
&KEYS(54) SETC 'PF18'
&KEYS(55) SETC 'PF19'
&KEYS(56) SETC 'PF20'
&KEYS(57) SETC 'PF21'
&KEYS(58) SETC 'PF22'
&KEYS(59) SETC 'PF23'
&KEYS(60) SETC 'PF24'
.*
&NP      SETA  N'&SYSLIST
         AIF   (&NP EQ 1).NOPARMS
&IP      SETA  1
.PLOOPA  ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOPA
&PARM    SETC  '&SYSLIST(&IP)'
.* INNER LOOP
&INNER   SETA  0
.ILOOPA  ANOP
&INNER   SETA  &INNER+1
         AIF   (&INNER GT 60).BADPRMA
&BRACK   SETA  ('&PARM' FIND '(')
         AIF   (&BRACK EQ 0).NOLABA
         AIF   ('&PARM'(1,&BRACK) EQ &KEYS(&INNER)).GOTKEY
         AGO   .ILOOPA
.*
.NOLABA  ANOP
         AIF   ('&PARM' EQ '&KEYS(&INNER)').GOTKEY
         AGO   .ILOOPA
.*
.BADPRMA ANOP
         AIF   ('&PARM'(1,5) EQ 'NOEDF').NOEDFA
         AIF   ('&PARM'(1,8) EQ 'NOHANDLE').PLOOPA
         AIF   ('&PARM'(1,5) EQ 'RESP(').RESP
         AIF   ('&PARM'(1,6) EQ 'RESP2(').RESP2
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOPA
.*
.NOEDFA  ANOP
&NOEDF   SETB  1
         AGO   .PLOOPA
.*
.RESP    ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOPA
.*
.RESP2   ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOPA
.*
.GOTKEY  ANOP
         AIF (&INNER LT 31).LABELSA
.* PARM HAS NO LABEL...IT'S A CANCEL
         MVI   0(R1),&INNER-30    SET AID NUMBER
         MVI   0(R14),X'FF'       SET CANCEL INDICATOR
         AHI   R1,1               BUMP AID NUMBER POINTER
         AHI   R14,4              BUMP AID ADDRESS POINTER
&PARMCNT SETA  &PARMCNT+1
         AIF   (&PARMCNT GT 30).TOOMANA
         AGO   .PLOOPA
.*
.LABELSA ANOP
.* PARM HAS A LABEL...PROCESS BY TYPE
&KEYLABL SETC  '&PARM'(K'&KEYS(&INNER)+1,K'&PARM-(K'&KEYS(&INNER)+1))
&LABELTQ SETC  T'&KEYLABL
         AIF   ('&KEYLABL'(1,1) EQ '='                                 X
               OR '&LABELTQ' EQ 'A'                                    X
               OR '&LABELTQ' EQ 'R').LABADLIT
         MVI   0(R1),&INNER       SET AID NUMBER
         AIF   (&ZC_CICS)
         LARL  R0,PG_&KEYLABL     R0=LABEL (COBOL)
         AELSE
         LA    R0,&KEYLABL        R0=LABEL (ASM)
         AEND
         ST    R0,0(R14)          SAVE IT
         AHI   R1,1               BUMP AID NUMBER POINTER
         AHI   R14,4              BUMP AID ADDRESS POINTER
&PARMCNT SETA  &PARMCNT+1
         AIF   (&PARMCNT GT 30).TOOMANA
         AGO   .PLOOPA
.*
.LABADLIT ANOP
.* INDIRECT LABEL
         MVI   0(R1),&INNER       SET AID NUMBER
         AIF   (&ZC_CICS)
         LRL   R0,PG_&KEYLABL     R0=INDIRECT LABEL (COBOL)
         AELSE
         L     R0,&KEYLABL        R0=INDIRECT LABEL (ASM)
         AEND
         ST    R0,0(R14)          SAVE IT
         AHI   R1,1               BUMP AID NUMBER POINTER
         AHI   R14,4              BUMP AID ADDRESS POINTER
&PARMCNT SETA  &PARMCNT+1
         AIF   (&PARMCNT GT 30).TOOMANA
         AGO   .PLOOPA
.*
.ELOOPA  ANOP
         LA    R0,DFHEIAID        ADDRESS OF DFHEIAID
         GEN_ST R0,P0206AID       SAVE IT
         AIF   (&SYSEDF AND NOT &NOEDF)
         GEN_ST R13,P0206EDS      SET DSA ADDRESS FOR EDF
         L     R0,DFHEILEN        DSA LENGTH
         GEN_STH R0,P0206EDL      SET DSA LENGTH FOR EDF
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         GEN_STH R0,P0206EDC      SET CICS DSA LENGTH FOR EDF
         AELSE
         GEN_MVI P0206NED,X'FF'   SET NOEDF
         AEND
         AIF   ('&RESP' EQ '').NORESP
         LA    R0,&RESP           ADDRESS OF RESP
         GEN_ST R0,P0206RSP       SAVE IT
.NORESP  ANOP
         AIF   ('&RESP2' EQ '').NORESP2
         LA    R0,&RESP2          ADDRESS OF RESP2
         GEN_ST R0,P0206RS2       SAVE IT
.NORESP2 ANOP
         LARL  R0,P0206EDF_&SYSNDX ADDRESS ORIGIN FOR CEDF
         GEN_ST R0,P0206EDF       SAVE IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0206)       R1=LCL MODULE PARAMETER LIST
P0206EDF_&SYSNDX DS 0H
         BAKR  0,R15              STACK REGS AND GO
.*
         AIF   (&PARMS_0206).BYP0206
         J     P0206BYP_&SYSNDX   EXIT
*
&PARMS_0206 SETB 1
         P0206
*
P0206BYP_&SYSNDX DS 0H
.BYP0206 ANOP
         MEXIT
.*
.TOOMANA ANOP
         MNOTE *,'AN INTERNAL ERROR HAS OCCURRED'
         MNOTE 12,'NUMBER OF AIDS EXCEEDS 30'
         MEXIT
.*
.* HANDLE CONDITION
.*
.COND    ANOP
         GEN_XC P0204,P0204END-P0204,P0204
         GEN_MVC P0204FN,,=X'0204' SET FUNCTION CODE
         GEN_ST DFHEIBR,P0204EIB  SET EIB ADDRESS
         GEN_ST TCTTEAR,P0204TCT  SET TCTTE ADDRESS
         LARL  R1,P0204CND        R1=ADDRESS CONDITION NUMBERS
         LARL  R14,P0204ADR       R14=ADDRESSES OR FF IF CANCEL
.* SET CONDITION LIST WITH LABEL
&CONDS(01) SETC 'ERROR('
&CONDS(11) SETC 'TERMIDERR('
&CONDS(12) SETC 'FILENOTFOUND('
&CONDS(13) SETC 'NOTFND('
&CONDS(14) SETC 'DUPREC('
&CONDS(15) SETC 'DUPKEY('
&CONDS(16) SETC 'INVREQ('
&CONDS(17) SETC 'IOERR('
&CONDS(18) SETC 'NOSPACE('
&CONDS(19) SETC 'NOTOPEN('
&CONDS(20) SETC 'ENDFILE('
&CONDS(21) SETC 'ILLOGIC('
&CONDS(22) SETC 'LENGERR('
&CONDS(26) SETC 'ITEMERR('
&CONDS(27) SETC 'PGMIDERR('
&CONDS(28) SETC 'TRANSIDERR('
&CONDS(29) SETC 'ENDDATA('
&CONDS(31) SETC 'EXPIRED('
&CONDS(36) SETC 'MAPFAIL('
&CONDS(38) SETC 'INVMPSZ('
&CONDS(40) SETC 'OVERFLOW('
&CONDS(44) SETC 'QIDERR('
&CONDS(55) SETC 'ENQBUSY('
&CONDS(56) SETC 'ENVDEFERR('
&CONDS(61) SETC 'NOTALLOC('
&CONDS(83) SETC 'END('
&CONDS(84) SETC 'DISABLED('
&CONDS(109) SETC 'ACTIVITYERR('
&CONDS(110) SETC 'CONTAINERERR('
&CONDS(112) SETC 'TOKENERR('
&CONDS(122) SETC 'CHANNELERR('
.* SPECIALS
&CONDS(149) SETC 'DSIDERR('       CONVERTED TO 12
.* SET CONDITION LIST WITHOUT LABEL
&IPC     SETA  1
.COLOOP  ANOP
         AIF   ('&CONDS(&IPC)' EQ '').COINCR
&CONDS(&IPC+&CONDRNG) SETC '&CONDS(&IPC)'(1,K'&CONDS(&IPC)-1)
.COINCR  ANOP
&IPC     SETA  &IPC+1
         AIF   (&IPC GT &CONDRNG).CONDDUN
         AGO   .COLOOP
.*
.CONDDUN ANOP
&NP      SETA  N'&SYSLIST
         AIF   (&NP EQ 1).NOPARMS
&IP      SETA  1
.PLOOPC  ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOPC
&PARM    SETC  '&SYSLIST(&IP)'
.* INNER LOOP
&INNER   SETA  0
.ILOOPC  ANOP
&INNER   SETA  &INNER+1
         AIF   (&INNER GT &CONDRNG*2).BADPRMC
         AIF   (K'&CONDS(&INNER) EQ 0).ILOOPC
&BRACK   SETA  ('&PARM' FIND '(')
         AIF   (&BRACK EQ 0).NOLABC
         AIF   ('&PARM'(1,&BRACK) EQ &CONDS(&INNER)).GOTCOND
         AGO   .ILOOPC
.*
.BADPRMC ANOP
         AIF   ('&PARM'(1,5) EQ 'NOEDF').NOEDFC
         AIF   ('&PARM'(1,8) EQ 'NOHANDLE').PLOOPC
         AIF   ('&PARM'(1,5) EQ 'RESP(').RESPC
         AIF   ('&PARM'(1,6) EQ 'RESP2(').RESP2C
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOPC
.*
.NOEDFC  ANOP
&NOEDF   SETB  1
         AGO   .PLOOPC
.*
.RESPC   ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOPC
.*
.RESP2C  ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOPC
.*
.DODSID1 ANOP
.* DSIDERR(LABEL)
.*
.NOLABC  ANOP
         AIF   ('&PARM' EQ '&CONDS(&INNER)').GOTCOND
         AGO   .ILOOPC
.*
.GOTCOND ANOP
         AIF (&INNER LT &CONDRNG+1).LABELSC
.* PARM HAS NO LABEL...IT'S A CANCEL
.* PROCESS SPECIAL DSIDERR
         AIF   (&INNER NE 299).NOTSPC1
         MVI   0(R1),12           SET SPECIAL CONDITION NUMBER
         AGO   .SETCAN
.*
.NOTSPC1 ANOP
         MVI   0(R1),&INNER-&CONDRNG SET CONDITION NUMBER
.SETCAN  ANOP
         MVI   0(R14),X'FF'       SET CANCEL INDICATOR
         AHI   R1,1               BUMP CONDITION NUMBER POINTER
         AHI   R14,4              BUMP CONDITION ADDRESS POINTER
&PARMCNT SETA  &PARMCNT+1
         AIF   (&PARMCNT GT 30).TOOMANC
         AGO   .PLOOPC
.*
.LABELSC ANOP
.* PARM HAS A LABEL...PROCESS BY TYPE
&HCNLABL SETC '&PARM'(K'&CONDS(&INNER)+1,K'&PARM-(K'&CONDS(&INNER)+1))
&LABELTQ SETC T'&HCNLABL
         AIF   ('&HCNLABL'(1,1) EQ '='                                 X
               OR '&LABELTQ' EQ 'A'                                    X
               OR '&LABELTQ' EQ 'R').LABHCLIT
.* PROCESS SPECIAL DSIDERR
         AIF   (&INNER NE 149).NOTSPC2
         MVI   0(R1),12           SET SPECIAL CONDITION NUMBER
         AGO   .SETLAB1
.*
.NOTSPC2 ANOP
         MVI   0(R1),&INNER       SET CONDITION NUMBER
.SETLAB1 ANOP
         AIF   (&ZC_CICS)
         LARL  R0,PG_&HCNLABL     R0=LABEL (COBOL)
         AELSE
         LARL  R0,&HCNLABL        R0=LABEL (ASM)
         AEND
         ST    R0,0(R14)          SAVE IT
         AHI   R1,1               BUMP CONDITION NUMBER POINTER
         AHI   R14,4              BUMP CONDITION ADDRESS POINTER
&PARMCNT SETA  &PARMCNT+1
         AIF   (&PARMCNT GT 30).TOOMANC
         AGO   .PLOOPC
.*
.LABHCLIT ANOP
.* INDIRECT LABEL
.* PROCESS SPECIAL DSIDERR
         AIF   (&INNER NE 299).NOTSPC3
         MVI   0(R1),12           SET SPECIAL CONDITION NUMBER
         AGO   .SETLAB2
.*
.NOTSPC3 ANOP
         MVI   0(R1),&INNER       SET CONDITION NUMBER
.SETLAB2 ANOP
         AIF   (&ZC_CICS)
         LRL   R0,PG_&HCNLABL     R0=INDIRECT LABEL (COBOL)
         AELSE
         L     R0,&HCNLABL        R0=INDIRECT LABEL (ASM)
         AEND
         ST    R0,0(R14)          SAVE IT
         AHI   R1,1               BUMP CONDITION NUMBER POINTER
         AHI   R14,4              BUMP CONDITION ADDRESS POINTER
&PARMCNT SETA  &PARMCNT+1
         AIF   (&PARMCNT GT 30).TOOMANC
         AGO   .PLOOPC
.*
.ELOOPC  ANOP
         LA    R0,DFHEIHCN        ADDRESS OF DFHEIHCN
         GEN_ST R0,P0204HCN       SAVE IT
         AIF   (&SYSEDF AND NOT &NOEDF)
         GEN_ST R13,P0204EDS      SET DSA ADDRESS FOR EDF
         L     R0,DFHEILEN        DSA LENGTH
         GEN_STH R0,P0204EDL      SET DSA LENGTH FOR EDF
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         GEN_STH R0,P0204EDC      SET CICS DSA LENGTH FOR EDF
         AELSE
         GEN_MVI P0204NED,X'FF'   SET NOEDF
         AEND
         AIF   ('&RESP' EQ '').NORESPC
         LA    R0,&RESP           ADDRESS OF RESP
         GEN_ST R0,P0204RSP       SAVE IT
.NORESPC ANOP
         AIF   ('&RESP2' EQ '').NORSP2C
         LA    R0,&RESP2          ADDRESS OF RESP2
         GEN_ST R0,P0204RS2       SAVE IT
.NORSP2C ANOP
         LARL  R0,P0204EDF_&SYSNDX ADDRESS ORIGIN FOR CEDF
         GEN_ST R0,P0204EDF       SAVE IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0204)       R1=LCL MODULE PARAMETER LIST
P0204EDF_&SYSNDX DS 0H
         BAKR  0,R15              STACK REGS AND GO
.*
         AIF   (&PARMS_0204).BYP0204
         J     P0204BYP_&SYSNDX   EXIT
*
&PARMS_0204 SETB 1
         P0204
*
P0204BYP_&SYSNDX DS 0H
.BYP0204 ANOP
         MEXIT
.*
.TOOMANC ANOP
         MNOTE *,'AN INTERNAL ERROR HAS OCCURRED'
         MNOTE 12,'NUMBER OF CONDITIONS EXCEEDS 30'
         MEXIT
.*
.* HANDLE ABEND
.*
.ABEND   ANOP
&NP      SETA  N'&SYSLIST
         AIF   (&NP EQ 1).NOPARMS
&IP      SETA  1
.PLOOPB  ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
.*
         AIF   ('&PARM'(1,6) EQ 'CANCEL').CANCEL
         AIF   ('&PARM'(1,5) EQ 'RESET').RESET
         AIF   ('&PARM'(1,6) EQ 'LABEL(').LABEL
         AIF   ('&PARM'(1,8) EQ 'PROGRAM(').PROGRAM
         AIF   ('&PARM'(1,5) EQ 'NOEDF').NOEDF
         AIF   ('&PARM'(1,8) EQ 'NOHANDLE').PLOOPB
         AIF   ('&PARM'(1,5) EQ 'RESP(').RESPB
         AIF   ('&PARM'(1,6) EQ 'RESP2(').RESP2B
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOPB
.*
.CANCEL  ANOP
&CANCEL  SETB  1
         AGO   .PLOOPB
.*
.RESET   ANOP
&RESET   SETB  1
         AGO   .PLOOPB
.*
.LABEL   ANOP
&LABEL   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOPB
.*
.PROGRAM ANOP
&PROGRAM SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOPB
.*
.NOEDF   ANOP
&NOEDF   SETB  1
         AGO   .PLOOPB
.*
.RESPB   ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOPB
.*
.RESP2B  ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOPB
.*
.ELOOP   ANOP
         AIF   (&CANCEL AND &RESET).BADCAN
         AIF   (&CANCEL AND '&LABEL' NE '').BADCAN
         AIF   (&CANCEL AND '&PROGRAM' NE '').BADCAN
         AIF   (&RESET AND '&LABEL' NE '').BADRES
         AIF   (&RESET AND '&PROGRAM' NE '').BADRES
         AIF   ('&LABEL' NE '' AND '&PROGRAM' NE '').BADLAB
         AIF   (NOT &CANCEL AND NOT &RESET AND '&LABEL' EQ '' AND      -
               '&PROGRAM' EQ '').NOPARMS
         GEN_XC P0E0E,P0E0EEND-P0E0E,P0E0E
         GEN_MVC P0E0EFN,,=X'0E0E' SET FUNCTION CODE
         GEN_ST DFHEIBR,P0E0EEIB  SET EIB ADDRESS
         GEN_ST TCTTEAR,P0E0ETCT  SET TCTTE ADDRESS
         AIF   (&SYSEDF AND NOT &NOEDF)
         GEN_ST R13,P0E0EEDS      SET DSA ADDRESS FOR EDF
         L     R0,DFHEILEN        DSA LENGTH
         GEN_STH R0,P0E0EEDL      SET DSA LENGTH FOR EDF
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         GEN_STH R0,P0E0EEDC      SET CICS DSA LENGTH FOR EDF
         AELSE
         GEN_MVI P0E0ENED,X'FF'   SET NOEDF
         AEND
         AIF   (NOT &CANCEL).TRYRES
         GEN_MVI P0E0ECAN,X'FF'   SET CANCEL
         AGO   .DORESP
.*
.TRYRES  ANOP
         AIF   (NOT &RESET).TRYLAB
         GEN_MVI P0E0ERES,X'FF'   SET RESET
         AGO   .DORESP
.*
.TRYLAB  ANOP
         AIF   ('&LABEL' EQ '').TRYPROG
&LABELTQ SETC  T'&LABEL
         AIF   ('&LABEL'(1,1) EQ '='                                   X
               OR '&LABELTQ' EQ 'A'                                    X
               OR '&LABELTQ' EQ 'R').LABABLIT
         AIF   (&ZC_CICS)
         LARL  R0,PG_&LABEL       R0=LABEL (COBOL)
         AELSE
         LARL  R0,&LABEL          R0=LABEL (ASM)
         AEND
         GEN_ST R0,P0E0ELAB       SAVE IT
         LARL  R15,P0E0EREG       ADDRESS TARGET
         STM   R2,R13,0(R15)      SAVE CALLERS REGS
         AGO   .DORESP
.*
.LABABLIT ANOP
         AIF   (&ZC_CICS)
         LRL   R0,PG_&LABEL       R0=LABEL (COBOL)
         AELSE
         L     R0,&LABEL          R0=LABEL (ASM)
         AEND
         GEN_ST R0,P0E0ELAB       SAVE IT
         LARL  R15,P0E0EREG       ADDRESS TARGET
         STM   R2,R13,0(R15)      SAVE CALLERS REGS
         AGO   .DORESP
.*
.TRYPROG ANOP
         AIF   ('&PROGRAM'(1,1) EQ '''').STRING
         LARL  R15,P0E0EPGM       ADDRESS TARGET
         MVC   0(8,R15),&PROGRAM  MOVE PROGRAM FROM LABEL
         AGO   .NOSTRING
.*
.STRING  ANOP
&PROGLEN SETA  K'&PROGRAM
         AIF   (&PROGLEN LT 3 OR &PROGLEN GT 10).BADPROG
         GEN_MVC P0E0EPGM,,=CL8&PROGRAM MOVE PROGRAM
.NOSTRING ANOP
         LARL  R15,P0E0ECAP       ADDRESS TARGET
         MVC   0(4,R15),DFHEICAP  SET ANY COMMAREA ADDRESS
         LARL  R15,P0E0EREG       ADDRESS TARGET
         STM   R2,R13,0(R15)      SAVE CALLERS REGS
.DORESP  ANOP
         AIF   ('&RESP' EQ '').NORESPB
         LA    R0,&RESP           ADDRESS OF RESP
         GEN_ST R0,P0E0ERSP       SAVE IT
.NORESPB ANOP
         AIF   ('&RESP2' EQ '').NORSP2B
         LA    R0,&RESP2          ADDRESS OF RESP2
         GEN_ST R0,P0E0ERS2       SAVE IT
.NORSP2B ANOP
         LARL  R0,P0E0EEDF_&SYSNDX ADDRESS ORIGIN FOR CEDF
         GEN_ST R0,P0E0EEDF       SAVE IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0E0E)       R1=LCL MODULE PARAMETER LIST
P0E0EEDF_&SYSNDX DS 0H
         BAKR  0,R15              STACK REGS AND GO
.*
         AIF   (&PARMS_0E0E).BYP0E0E
         J     P0E0EBYP_&SYSNDX   EXIT
*
&PARMS_0E0E SETB 1
         P0E0E
*
P0E0EBYP_&SYSNDX DS 0H
.BYP0E0E ANOP
         MEXIT
.*
.BADPARM ANOP
         MNOTE 12,'BAD PARM &PARM'
         MEXIT
.*
.BADCAN  ANOP
         MNOTE 12,'CANCEL CANNOT HAVE OTHER COMMAND PARMS'
         MEXIT
.*
.BADRES  ANOP
         MNOTE 12,'RESET CANNOT HAVE OTHER COMMAND PARMS'
         MEXIT
.*
.BADLAB  ANOP
         MNOTE 12,'LABEL AND PROGRAM HAVE BEEN SPECIFIED'
         MEXIT
.*
.NOPARMS ANOP
         MNOTE 12,'NO PARAMETERS SPECIFIED'
         MEXIT
.*
.BADPROG MNOTE 12,'INVALID PROGRAM'
         MEXIT
.*
         MEND
