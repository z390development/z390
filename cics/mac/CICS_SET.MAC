.**********************************************************************
.* Copyright 2006 Automated Software Tools Corporation                *
.* This source code is part of z390 assembler/emulator package        *
.* The z390 package is distributed under GNU general public license   *
.* Author - Don Higgins                                               *
.**********************************************************************
         MACRO
         CICS_SET
         GBLB  &PARMS_4C04
         LCLB  &ADDBLE,&NOTADD,&BRWBLE,&NOTBRW,&DELBLE,&NOTDEL
         LCLB  &ENABLED,&DISBLED,&CLOSED,&OPEN,&REDBLE,&NOTRED
         LCLB  &UPDBLE,&NOTUPD,&NOEDF,&NOHAND
         LCLC  &ADD,&BROWSE,&DELETE,&DATASET,&ENASTAT,&FILE,&OPESTAT
         LCLC  &READ,&UPDATE
         LCLC  &RESP,&RESP2
.*
.SETFILE ANOP
&NP      SETA  N'&SYSLIST
&IP      SETA  0
.PLOOP   ANOP
&IP      SETA  &IP+1
         AIF   (&IP GT &NP).ELOOP
&PARM    SETC  '&SYSLIST(&IP)'
         AIF   ('&PARM'(1,4)  EQ 'ADD(').ADD
         AIF   ('&PARM'(1,7)  EQ 'ADDABLE').ADDBLE
         AIF   ('&PARM'(1,10) EQ 'NOTADDABLE').NOTADD
         AIF   ('&PARM'(1,7)  EQ 'BROWSE(').BROWSE
         AIF   ('&PARM'(1,9)  EQ 'BROWSABLE').BRWBLE
         AIF   ('&PARM'(1,12) EQ 'NOTBROWSABLE').NOTBRW
         AIF   ('&PARM'(1,8)  EQ 'DATASET(').DATASET
         AIF   ('&PARM'(1,7)  EQ 'DELETE(').DELETE
         AIF   ('&PARM'(1,9)  EQ 'DELETABLE').DELBLE
         AIF   ('&PARM'(1,12) EQ 'NOTDELETABLE').NOTDEL
         AIF   ('&PARM'(1,13) EQ 'ENABLESTATUS(').ENASTAT
         AIF   ('&PARM'(1,7)  EQ 'ENABLED').ENABLED
         AIF   ('&PARM'(1,8)  EQ 'DISABLED').DISBLED
         AIF   ('&PARM'(1,5)  EQ 'FILE(').FILE
         AIF   ('&PARM'(1,11) EQ 'OPENSTATUS(').OPESTAT
         AIF   ('&PARM'(1,6)  EQ 'CLOSED').CLOSED
         AIF   ('&PARM'(1,4)  EQ 'OPEN').OPEN
         AIF   ('&PARM'(1,5)  EQ 'READ(').READ
         AIF   ('&PARM'(1,8)  EQ 'READABLE').REDBLE
         AIF   ('&PARM'(1,11) EQ 'NOTREADABLE').NOTRED
         AIF   ('&PARM'(1,7)  EQ 'UPDATE(').UPDATE
         AIF   ('&PARM'(1,9)  EQ 'UPDATABLE').UPDBLE
         AIF   ('&PARM'(1,12) EQ 'NOTUPDATABLE').NOTUPD
         AIF   ('&PARM'(1,5)  EQ 'NOEDF').NOEDF
         AIF   ('&PARM'(1,8)  EQ 'NOHANDLE').NOHAND
         AIF   ('&PARM'(1,5)  EQ 'RESP(').RESP
         AIF   ('&PARM'(1,6)  EQ 'RESP2(').RESP2
         MNOTE 12,'BAD PARM &PARM'
         AGO   .PLOOP
.*
.ADD     ANOP
&ADD     SETC  '&PARM'(5,K'&PARM-5)
         AGO   .PLOOP
.*
.ADDBLE  ANOP
&ADDBLE  SETB  1
         AGO   .PLOOP
.*
.NOTADD  ANOP
&NOTADD  SETB  1
         AGO   .PLOOP
.*
.BROWSE  ANOP
&BROWSE  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.BRWBLE  ANOP
&BRWBLE  SETB  1
         AGO   .PLOOP
.*
.NOTBRW  ANOP
&NOTBRW  SETB  1
         AGO   .PLOOP
.*
.DATASET ANOP
&DATASET SETC  '&PARM'(9,K'&PARM-9)
         AGO   .PLOOP
.*
.DELETE  ANOP
&DELETE  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.DELBLE  ANOP
&DELBLE  SETB  1
         AGO   .PLOOP
.*
.NOTDEL  ANOP
&NOTDEL  SETB  1
         AGO   .PLOOP
.*
.ENASTAT ANOP
&ENASTAT SETC  '&PARM'(14,K'&PARM-14)
         AGO   .PLOOP
.*
.ENABLED ANOP
&ENABLED SETB  1
         AGO   .PLOOP
.*
.DISBLED ANOP
&DISBLED SETB  1
         AGO   .PLOOP
.*
.FILE    ANOP
&FILE    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.OPESTAT ANOP
&OPESTAT SETC  '&PARM'(12,K'&PARM-12)
         AGO   .PLOOP
.*
.CLOSED  ANOP
&CLOSED  SETB  1
         AGO   .PLOOP
.*
.OPEN    ANOP
&OPEN    SETB  1
         AGO   .PLOOP
.*
.READ    ANOP
&READ    SETC  '&PARM'(6,K'&PARM-6)
         AGO   .PLOOP
.*
.REDBLE  ANOP
&REDBLE  SETB  1
         AGO   .PLOOP
.*
.NOTRED  ANOP
&NOTRED  SETB  1
         AGO   .PLOOP
.*
.UPDATE  ANOP
&UPDATE  SETC  '&PARM'(8,K'&PARM-8)
         AGO   .PLOOP
.*
.UPDBLE  ANOP
&UPDBLE  SETB  1
         AGO   .PLOOP
.*
.NOTUPD  ANOP
&NOTUPD  SETB  1
         AGO   .PLOOP
.*
.NOEDF   ANOP
&NOEDF   SETB  1
         AGO   .PLOOP
.*
.NOHAND  ANOP
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP    ANOP
&RESP    SETC  '&PARM'(6,K'&PARM-6)
&NOHAND  SETB  1
         AGO   .PLOOP
.*
.RESP2   ANOP
&RESP2   SETC  '&PARM'(7,K'&PARM-7)
         AGO   .PLOOP
.*
.ELOOP   ANOP
         AIF   ('&ADD' NE '' AND &ADDBLE).BADADD
         AIF   ('&ADD' NE '' AND &NOTADD).BADADD
         AIF   (&ADDBLE AND &NOTADD).BADADD
         AIF   ('&BROWSE' NE '' AND &BRWBLE).BADBRW
         AIF   ('&BROWSE' NE '' AND &NOTBRW).BADBRW
         AIF   (&BRWBLE AND &NOTBRW).BADBRW
         AIF   ('&FILE' NE '' AND '&DATASET' NE '').BOTHFIL
         AIF   ('&FILE' EQ '' AND '&DATASET' EQ '').MUSTFIL
         AIF   ('&DELETE' NE '' AND &DELBLE).BADDEL
         AIF   ('&DELETE' NE '' AND &NOTDEL).BADDEL
         AIF   (&DELBLE AND &NOTDEL).BADDEL
         AIF   ('&ENASTAT' NE '' AND &ENABLED).BADENA
         AIF   ('&ENASTAT' NE '' AND &DISBLED).BADENA
         AIF   (&ENABLED AND &DISBLED).BADENA
         AIF   ('&OPESTAT' NE '' AND &CLOSED).BADOPE
         AIF   ('&OPESTAT' NE '' AND &OPEN).BADOPE
         AIF   (&CLOSED AND &OPEN).BADOPE
         AIF   ('&READ' NE '' AND &REDBLE).BADRED
         AIF   ('&READ' NE '' AND &NOTRED).BADRED
         AIF   (&REDBLE AND &NOTRED).BADRED
         AIF   ('&UPDATE' NE '' AND &UPDBLE).BADUPD
         AIF   ('&UPDATE' NE '' AND &NOTUPD).BADUPD
         AIF   (&UPDBLE AND &NOTUPD).BADUPD
.*
         GEN_XC P4C04,P4C04END-P4C04,P4C04 CLEAR PARMS
         GEN_MVC P4C04FN,,=X'4C04' SET FUNCTION CODE
         AIF   ('&FILE' EQ '').DODSET
         AIF   ('&FILE'(1,1) EQ '''').FLSTRING
         LARL  R15,P4C04FIL       ADDRESS TARGET
         MVC   0(8,R15),&FILE     SET FILE NAME FROM LABEL
         AGO   .DOADD
.*
.FLSTRING ANOP
&FLLEN   SETA  K'&FILE
         AIF   (&FLLEN GT 10).BADFILE
         GEN_MVC P4C04FIL,,=CL8&FILE SET FILE NAME AS STRING
         AGO   .DOADD
.*
.DODSET  ANOP
         AIF   ('&DATASET'(1,1) EQ '''').DSSTRING
         LARL  R15,P4C04FIL       ADDRESS TARGET
         MVC   0(8,R15),&DATASET  SET FILE NAME FROM LABEL
         AGO   .DOADD
.*
.DSSTRING ANOP
&DSLEN   SETA  K'&DATASET
         AIF   (&DSLEN GT 10).BADFILE
         GEN_MVC P4C04FIL,,=CL8&DATASET SET FILE NAME AS STRING
.*
.* FOR STATUS CHANGES LIKE ADD(CVDA), ANY UNSUPPORTED CVDA WILL
.* CAUSE AN ASSEMBLY ERROR.
.* IF THE CVDA IS NOT CORRECT, THEN LCL4C04 WILL RAISE AN INVREQ
.* CONDITION.
.*
.DOADD   ANOP
         AIF   ('&ADD' EQ '').DOADDB
         MVC   P4C04ADD,DFHVALUE(&ADD) MOVE CVDA VALUE
         AGO   .DOBRWSE
.*
.DOADDB  ANOP
         AIF   (NOT &ADDBLE).DOADDN
         MVC   P4C04ADD,DFHVALUE(ADDABLE) MOVE CVDA VALUE
         AGO   .DOBRWSE
.*
.DOADDN  ANOP
         AIF   (NOT &NOTADD).DOBRWSE
         MVC   P4C04ADD,DFHVALUE(NOTADDABLE) MOVE CVDA VALUE
.*
.DOBRWSE ANOP
         AIF   ('&BROWSE' EQ '').DOBRWB
         MVC   P4C04BRW,DFHVALUE(&BROWSE) MOVE CVDA VALUE
         AGO   .DODEL
.*
.DOBRWB  ANOP
         AIF   (NOT &BRWBLE).DOBRWN
         MVC   P4C04BRW,DFHVALUE(BROWSABLE) MOVE CVDA VALUE
         AGO   .DODEL
.*
.DOBRWN  ANOP
         AIF   (NOT &NOTBRW).DODEL
         MVC   P4C04BRW,DFHVALUE(NOTBROWSABLE) MOVE CVDA VALUE
.DODEL   ANOP
         AIF   ('&DELETE' EQ '').DODELB
         MVC   P4C04DEL,DFHVALUE(&DELETE) MOVE CVDA VALUE
         AGO   .DOENA
.*
.DODELB  ANOP
         AIF   (NOT &DELBLE).DODELN
         MVC   P4C04DEL,DFHVALUE(DELETABLE) MOVE CVDA VALUE
         AGO   .DOENA
.*
.DODELN  ANOP
         AIF   (NOT &NOTDEL).DOENA
         MVC   P4C04DEL,DFHVALUE(NOTDELETABLE) MOVE CVDA VALUE
.DOENA   ANOP
         AIF   ('&ENASTAT' EQ '').DOENAB
         MVC   P4C04ENA,DFHVALUE(&ENASTAT) MOVE CVDA VALUE
         AGO   .DOOPE
.*
.DOENAB  ANOP
         AIF   (NOT &ENABLED).DOENAN
         MVC   P4C04ENA,DFHVALUE(ENABLED) MOVE CVDA VALUE
         AGO   .DOOPE
.*
.DOENAN  ANOP
         AIF   (NOT &DISBLED).DOOPE
         MVC   P4C04ENA,DFHVALUE(DISABLED) MOVE CVDA VALUE
.DOOPE   ANOP
         AIF   ('&OPESTAT' EQ '').DOOPEB
         MVC   P4C04OPE,DFHVALUE(&OPESTAT) MOVE CVDA VALUE
         AGO   .DOREAD
.*
.DOOPEB  ANOP
         AIF   (NOT &OPEN).DOOPEN
         MVC   P4C04OPE,DFHVALUE(OPEN) MOVE CVDA VALUE
         AGO   .DOREAD
.*
.DOOPEN  ANOP
         AIF   (NOT &CLOSED).DOREAD
         MVC   P4C04OPE,DFHVALUE(CLOSED) MOVE CVDA VALUE
.DOREAD  ANOP
         AIF   ('&READ' EQ '').DOREDB
         MVC   P4C04RD,DFHVALUE(&READ) MOVE CVDA VALUE
         AGO   .DOUPD
.*
.DOREDB  ANOP
         AIF   (NOT &REDBLE).DOREDN
         MVC   P4C04RD,DFHVALUE(READABLE) MOVE CVDA VALUE
         AGO   .DOUPD
.*
.DOREDN  ANOP
         AIF   (NOT &NOTRED).DOUPD
         MVC   P4C04RD,DFHVALUE(NOTREADABLE) MOVE CVDA VALUE
.DOUPD   ANOP
         AIF   ('&UPDATE' EQ '').DOUPDB
         MVC   P4C04UPD,DFHVALUE(&UPDATE) MOVE CVDA VALUE
         AGO   .ALLDUN
.*
.DOUPDB  ANOP
         AIF   (NOT &UPDBLE).DOUPDN
         MVC   P4C04UPD,DFHVALUE(UPDATABLE) MOVE CVDA VALUE
         AGO   .ALLDUN
.*
.DOUPDN  ANOP
         AIF   (NOT &NOTUPD).ALLDUN
         MVC   P4C04UPD,DFHVALUE(NOTUPDATABLE) MOVE CVDA VALUE
.ALLDUN  ANOP
         GEN_ST DFHEIBR,P4C04EIB  SET EIB ADDRESS
         GEN_ST TCTTEAR,P4C04TCT  SET TCTTE ADDRESS
         AIF   (&SYSEDF AND NOT &NOEDF)
         GEN_ST R13,P4C04EDS      SET DSA ADDRESS FOR EDF
         L     R0,DFHEILEN        DSA LENGTH
         GEN_STH R0,P4C04EDL      SET DSA LENGTH FOR EDF
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         GEN_STH R0,P4C04EDC      SET CICS DSA LENGTH FOR EDF
         AELSE
         GEN_MVI P4C04NED,X'FF'   SET NOEDF
         AEND
         AIF   (NOT &NOHAND).DUNNOH
         GEN_MVI P4C04NOH,X'FF'   SET NOHANDLE
.DUNNOH  ANOP
         AIF   ('&RESP' EQ '').NORESP
         LA    R0,&RESP           ADDRESS OF RESP
         GEN_ST R0,P4C04RSP       SAVE IT
.NORESP  ANOP
         AIF   ('&RESP2' EQ '').NORESP2
         LA    R0,&RESP2          ADDRESS OF RESP2
         GEN_ST R0,P4C04RS2       SAVE IT
.NORESP2 ANOP
         LARL  R0,P4C04EDF_&SYSNDX ADDRESS ORIGIN FOR CEDF
         GEN_ST R0,P4C04EDF       SAVE IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4C04)       R1=LCL MODULE PARAMETER LIST
P4C04EDF_&SYSNDX EQU *
         BAKR  0,R15              STACK REGS AND GO
.*
         GEN_CLI P4C04NOH,X'FF'   NOHANDLE ?
         JE    P4C04BYP_&SYSNDX   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P4C04BYP_&SYSNDX   EXIT IF NONE
* FILENOTFOUND, INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P4C04BYP_&SYSNDX) ENTRYPOINT FOR IGNORE CONDITION
*
         AIF   (&PARMS_4C04).BYP4C04
&PARMS_4C04 SETB 1
         P4C04
*
.BYP4C04 ANOP
P4C04BYP_&SYSNDX DS 0H
         MEXIT
.*
.BADADD  MNOTE 12,'MORE THAN ONE ADD PARAMETER'
         MEXIT
.*
.BADBRW  MNOTE 12,'MORE THAN ONE BROWSE PARAMETER'
         MEXIT
.*
.BOTHFIL MNOTE 12,'BOTH FILE AND DATASET SPECIFIED'
         MEXIT
.*
.MUSTFIL MNOTE 12,'FILE OR DATASET MUST BE SPECIFIED'
         MEXIT
.*
.BADFILE MNOTE 12,'INVALID FILE OR DATASET'
         MEXIT
.*
.BADDEL  MNOTE 12,'MORE THAN ONE DELETE PARAMETER'
         MEXIT
.*
.BADENA  MNOTE 12,'MORE THAN ONE ENABLESTATUS PARAMETER'
         MEXIT
.*
.BADOPE  MNOTE 12,'MORE THAN ONE OPENSTATUS PARAMETER'
         MEXIT
.*
.BADRED  MNOTE 12,'MORE THAN ONE READ PARAMETER'
         MEXIT
.*
.BADUPD  MNOTE 12,'MORE THAN ONE UPDATE PARAMETER'
         MEXIT
.*
         MEND
