***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
LCL0404  CSECT
*
* FN=0404  EXEC CICS SEND
*
* R1  >>> P0404 BLOCK POINTER
*
         USING *,R13
         B     12(R15)            BYPASS EYECATCHER
         DC    CL8'LCL0404'
         LR    R13,R15            R13 AS BASE
         LR    R3,R1              SET BASE
         L     R3,0(R3)                    FOR PARMS
         USING (P0404,P0404END),R3
         L     DFHEIBR,P0404EIB   LOAD EIB ADDRESS
         USING DFHEIBLK,DFHEIBR
         L     TCTTEAR,P0404TCT   LOAD TCT ADDRESS
         USING DFHTCTTE,TCTTEAR
         MVC   EIBFN,P0404FN      SET EIBFN
         XC    EIBRCODE,EIBRCODE  CLEAR EIBRCODE
         XC    EIBRESP,EIBRESP    CLEAR EIBRESP
         XC    EIBRESP2,EIBRESP2  CLEAR EIBRESP2
         ICM   R1,15,P0404RSP     R1=RESP ADDRESS
         BZ    NORESP             EXIT IF NONE
         XC    0(4,R1),0(R1)      CLEAR RESP
NORESP   EQU   *
         ICM   R1,15,P0404RS2     R1=RESP2 ADDRESS
         BZ    NORESP2            EXIT IF NONE
         XC    0(4,R1),0(R1)      CLEAR RESP2
NORESP2  EQU   *
         CLI   P0404NED,X'FF'     NOEDF ?
         BE    NOEDFB             EXIT IF IT IS
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         BNE   NOEDFB             EXIT IF NOT
         MVI   TCTTEEBA,X'00'     SET 'BEFORE' INTERCEPT
         MVI   TCTTEEDL,X'00'     SET NORMAL LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
*
NOEDFB   EQU   *
         CLI   TCTTETI,C'!'       NON-TERMINAL ?
         BE    INVREQ             ERROR IF IT IS
         L     R1,P0404FRM        R1=FROM ADDRESS
         LH    R0,P0404LEN        R0=LENGTH
         LTR   R0,R0              VALID LENGTH ?
         BNP   LENGERR            EXIT IF NOT
         CLC   TCTTETI,=C'SQ01'   SEQUENTIAL TERMINAL ?
         BNE   NOTSEQ             EXIT IF NOT
         L     R14,P0404FRM       R14=FROM ADDRESS
         L     R1,TCTTEQDO        R1=SEND FILE DCB
         USING IHADCB,R1
         LH    R4,P0404LEN        R4=LENGTH
         AHI   R4,2               ALLOW FOR CRLF
         ST    R4,DCBBLKSIF       SAVE BLOCKSIZE
         ST    R4,DCBLRECLF       SAVE LRECL
         AHI   R4,-2              RESTORE LENGTH
         LA    R4,0(R14,R4)       ADDRESS 2 BYTES FOLLOWING DATA
         MVC   SAVEDATA,0(R4)     SAVE THE 2 BYTES
         MVC   0(2,R4),=X'0D0A'   SET CRLF
         PUT   (R1),(R14)         WRITE DATA STREAM
         MVC   0(2,R4),SAVEDATA   RESTORE THE 2 BYTES
         L     R1,TCTTEQDO        R1=SEND FILE DCB
         L     R0,DCBBLKSIF       RESTORE LENGTH+2
         AHI   R0,-2              LENGTH-2
         DROP  R1
         LR    R1,R14             RESTORE FROM ADDRESS
*
NOTSEQ   EQU   *
         TPUT  (R1),(R0),FULLSCR  SEND TN3270 DATA STREAM
         B     RETURN             EXIT
*
INVREQ   EQU   *
* INVOKE INVREQ
         MVI   EIBRCODE,X'E0'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(INVREQ) SET EIBRESP=INVREQ
         B     DORESP             EXIT
*
LENGERR  EQU   *
* INVOKE LENGERR
         MVHHI EIBRCODE,X'E104'   SET EIBRCODE
         MVC   EIBRESP,DFHRESP(LENGERR) SET EIBRESP=LENGERR
DORESP   EQU   *
         ICM   R14,15,P0404RSP    R14=RESP ADDRESS
         BZ    DORESP2            EXIT IF NONE
         MVC   0(4,R14),EIBRESP   SET RESP
DORESP2  EQU   *
         ICM   R14,15,P0404RS2    R14=RESP2 ADDRESS
         BZ    RETURN             EXIT IF NONE
         MVC   0(4,R14),EIBRESP2  SET RESP2
RETURN   EQU   *
         CLI   P0404NED,X'FF'     NOEDF ?
         BE    NOEDFA             EXIT IF IT IS
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         BNE   NOEDFA             EXIT IF NOT
         MVI   TCTTEEBA,X'FF'     SET 'AFTER' INTERCEPT
         MVI   TCTTEEDL,X'00'     SET NORMAL LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
*
NOEDFA   EQU   *
         PR    ,                  UNSTACK AND RETURN TO MACRO
*
SAVEDATA DS    H
*
         LTORG
*
         P0404 DSECT
*
         DFHEIBLK                 EIB
         DFHTCTTE                 TCTTE
         DCBD ,                   DCB
*
         EQUREGS REGS=GPR
*
         END
