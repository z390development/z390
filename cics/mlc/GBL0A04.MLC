***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
GBL0A04  SUBENTRY
*
* FN=0A04  READQ TS
*
*         +0/DSCT +4/DSECT +8/IND   +12/IND +16
* R1  >>> WTOMSG, REQDSECT,TSNANCHR,CONNID, TRCEZ390
* R14 = RETURN ADDRESS
         LR    R3,R1              SAVE PARM POINTER
         L     R4,16(R3)          ADDRESS OF TRCEZ390
         MVC   TRCEZ390,0(R4)     MOVE IT
         L     R9,0(R3)           WTODSECT ADDRESS
         USING WTODSECT,R9
         L     R6,4(R3)           ADDRESS RECEIVED DATA
         USING DFHTSBLK,R6
         MVC   WTOTERM,TSPTERM    SET TERMID
         MVC   WTOTRAN,TSPTRAN    SET TRANSID
         MVI   WTOTYPE,C' '       NO TRANSID TYPE
         UNPK  WTOTASKN,TSPTASKN  UNPACK TASK NUMBER
         OI    WTOTASKN+6,X'F0'   CLEAR SIGN
         MVC   WTODESC,=CL45'<<<Z390KCP READQ   TS REQUEST'
         MVI   CICSTIND,C'A'      SET APPLICATION TYPE
         BAL   R11,CICSTRCE       TRACE IT
         L     R4,8(R3)           ADDRESS OF TSNANCHR ADDRESS
         ICM   R7,15,0(R4)        R7=TS NAME TABLE
         BZ    RQTSQIDE           ERROR IF NO NAMES
         USING TSNAMES,R7
* TS NAME CHAIN EXISTS, SEARCH FOR Q NAME
RQTSNLP  EQU   *
         CLC   TSNQNAME,TSPNAME   GOT OUR Q NAME ?
         BE    RQTSGOT            EXIT IF WE HAVE
         ICM   R7,15,TSNCHAIN     NEXT TS NAME ENTRY
         BZ    RQTSQIDE           ERROR IF NOT FOUND
         B     RQTSNLP            LOOP IF NOT OURS
*
RQTSGOT  EQU   *
         CLI   TSPITEM,X'FF'      NEXT ITEM REQUESTED ?
         BNE   RQTSSPEC           EXIT IF NOT
* NEXT ITEM REQUESTED
         LH    R14,TSNITRED       R14=ITEM LAST READ
         AHI   R14,1              NEXT ONE
         CH    R14,TSNNUMIT       VALID ITEM ?
         BH    RQTSITME           ITEMERR IF NOT
         STH   R14,TSNITRED       SET AS LAST ITEM READ
         STH   R14,TSPITEM        SET AS ITEM RETRIEVED
         B     RQTSGET1           EXIT
*
RQTSSPEC EQU   *
* SPECIFIC ITEM REQUESTED
         OC    TSPITEM,TSPITEM    ITEM IS ZERO ?
         BZ    RQTSITME           ITEMERR IF IT IS
         CLC   TSPITEM,TSNNUMIT   VALID ITEM ?
         BH    RQTSITME           ITEMERR IF NOT
         MVC   TSNITRED,TSPITEM   SET AS LAST ITEM READ
RQTSGET1 EQU   *
* READQ TS ITEM
         LA    R14,1              ITEM NUMBER
         L     R10,TSNITEM1       DATA CHAIN START
         USING TSDPREFX,R10
RQTSITLP EQU   *
         CH    R14,TSPITEM        OUR ITEM NUMBER ?
         BE    RQTSITEM           EXIT IF IT IS
         AHI   R14,1              BUMP ITEM NUMBER
         L     R10,TSDCHAIN       NEXT ITEM
         B     RQTSITLP           LOOP TILL FOUND
*
RQTSITEM EQU   *
* READQ ITEM LOCATED
         LA    R1,TSPREFIX        TS PREFIX LENGTH
         A     R1,TSPLEN          + LENGTH OF DATA REQUESTED
         GETMAIN R,LV=(R1)
         ST    R0,RQTSGETL        SAVE LENGTH FOR FREEMAIN
         LR    R9,R1              ADDRESS NEW TS BLOCK
         MVC   0(TSPREFIX,R9),DFHTSBLK MOVE PREFIX INTO NEW BLOCK
         XC    TSPRETCD-DFHTSBLK(4,R9),TSPRETCD-DFHTSBLK(R9) CLEAR RC
         MVC   TSPNUMIT-DFHTSBLK(2,R9),TSNNUMIT MOVE NUMITEMS
         MVC   TSPACLEN-DFHTSBLK(4,R9),TSDLNGTH MOVE ACTUAL ITEM LENGTH
         LA    R0,TSPDATA-DFHTSBLK(R9) ADDRESS OF DESTINATION
         LA    R14,TSDDATA        R14=ADDRESS OF SOURCE
         L     R1,TSPLEN          R1=LENGTH REQUESTED
         CLC   TSDLNGTH,TSPLEN    IS ACTUAL DATA LENGTH LESS ?
         BH    RQTSLNOK           EXIT IF NOT
         L     R1,TSDLNGTH        R1=LENGTH OF ITEM
RQTSLNOK EQU   *
         LA    R15,TSPREFIX(R1)   R15=ACTUAL LENGTH SENT
         ST    R15,TSPTCPIO-DFHTSBLK(R9) SAVE IT
         LR    R15,R1             LENGTH
         MVCL  R0,R14             MOVE REQUESTED DATA
* READQ TS COMPLETED, PASS DATA TO CLIENT
         L     R8,12(R3)          R8=CONN ID ADDRESS
         L     R8,0(R8)           R8=CONNID
         TCPIO SEND,MSG=(R9),LMSG=0(R9),CONN=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   ABEND780           EXIT IF BAD
         FREEMAIN LA=RQTSGETL,A=(R9)
         L     R9,0(R3)           WTODSECT ADDRESS
         MVC   WTODESC,=CL45'<<<Z390KCP READQ   TS COMPLETED'
         B     RQTSTRCE           EXIT
*
RQTSITME EQU   *
         MVC   TSPRETCD,DFHRESP(ITEMERR) SET ITEMERR
         L     R9,0(R3)           WTODSECT ADDRESS
         MVC   WTODESC,=CL45'>>>Z390KCP READQ   TS FAILED'
         MVC   WTODESC+29(7),=C'ITEMERR'
         LR    R9,R6              SET AS IF NEW DFHTSBLK
         B     RQTSSEND           EXIT
*
RQTSQIDE EQU   *
         MVC   TSPRETCD,DFHRESP(QIDERR) SET QIDERR
         L     R9,0(R3)           WTODSECT ADDRESS
         MVC   WTODESC,=CL45'>>>Z390KCP READQ   TS FAILED'
         MVC   WTODESC+29(6),=C'QIDERR'
         LR    R9,R6              SET AS IF NEW DFHTSBLK
*
RQTSSEND EQU   *
         L     R8,12(R3)          R8=CONN ID ADDRESS
         L     R8,0(R8)           R8=CONNID
         LA    R15,TSPREFIX       R15=LENGTH TO SEND
         TCPIO SEND,MSG=(R9),LMSG=(R15),CONN=(R8),PORT=3900
         LTR   R15,R15            CHECK RC ?
         BNZ   ABEND780           EXIT IF BAD
RQTSTRCE EQU   *
         L     R9,0(R3)           WTODSECT ADDRESS
         MVI   CICSTIND,C'A'      SET APPLICATION TYPE
         BAL   R11,CICSTRCE       TRACE IT
         SUBEXIT
*
* SUBROUTINES
*
* MODIFIED CICSTRCE
CICSTRCE DS    0H
         CLI   TRCEZ390,C'N'      NO TRACING ?
         BER   R11                RETURN IF IT IS
         CLI   TRCEZ390,C'Y'      ALL TRACING ?
         BE    CICSTRGO           TRACE IF IT IS
         CLC   TRCEZ390,CICSTIND  TRACE TYPE=TRACE REQUEST ?
         BNER  R11                RETURN IF NOT
CICSTRGO EQU   *
         TIME  DEC,TIME,LINKAGE=SYSTEM GET TIME
         MVO   TIMEPACK,TIME      MOVE TO PACKED FIELD
         MVC   TIMEHERE(13),TIMEEDIT MOVE EDIT WORD
         ED    TIMEHERE(13),TIMEPACK EDIT TIME
         MVC   WTOTIME,TIMEHERE   SET TIME
         WTO   MF=(E,WTOMSG)      TRACE IT
         BR    R11                RETURN
*
ABEND780 ABEND 780,DUMP           TCPIO SEND FAILED
*
CICSTIND DS    C                  TRACE TYPE INDICATOR
TRCEZ390 DS    C                  Z390 TRACE OPTION
RQTSGETL DS    A                  SAVED GETMAIN LENGTH
*
* TIME CONVERSION FIELDS
*
TIME     DS    CL4                HHMMSSTT
         DS    CL8                SPACE FOR DATE
TIMEPACK DC    PL5'0'             0HHMMSSTTC
TIMEEDIT DC    X'402021207A20207A20204B2020'
TIMEHERE DS    CL13
*
* WTO AREA DSECT
*
WTODSECT DSECT
WTOMSG   DS    AL4
WTOTIME  DS    CL13               TIME STAMP
         DS    C
         DS    CL4                MODULE/FUNCTION REFERENCE (EIBFN)
         DS    C
WTOTERM  DS    CL4                TERMID
         DS    C
WTOTRAN  DS    CL4                TRANSID (OR BLANK)
         DS    C
WTOTYPE  DS    C                  TRANSID TYPE
         DS    C
WTOTASKN DS    CL7                TASK NUMBER
         DS    C
WTODESC  DS    CL45               DESCRIPTION
*
* TEMPORARY STORAGE DATA CHAIN PREFIX
*
TSDPREFX DSECT
         DS    A                  LENGTH FOR DELETEQ FREEMAIN
TSDCHAIN DS    A                  POINTER TO NEXT ITEM
TSDLNGTH DS    F                  LENGTH OF DATA FOLLOWING
TSDDATA  EQU   *
*
         DFHTSBLK                 TEMPORARY STORAGE TCPIO BLOCK
         DFHTSNDS                 TEMPORARY STORAGE NAME TABLE
*
         EQUREGS
*
         END
