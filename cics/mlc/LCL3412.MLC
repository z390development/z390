***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
LCL3412  CSECT
*
* FN=3412  EXEC CICS DELETE CONTAINER
*
* R1  >>> P3412 BLOCK POINTER
*
         USING *,R13
         B     12(R15)            BYPASS EYECATCHER
         DC    CL8'LCL3412'
         LR    R13,R15            R13 AS BASE
         LR    R3,R1              SET BASE
         L     R3,0(R3)                    FOR PARMS
         USING (P3412,P3412END),R3
         L     DFHEIBR,P3412EIB   LOAD EIB ADDRESS
         USING DFHEIBLK,DFHEIBR
         L     TCTTEAR,P3412TCT   LOAD TCT ADDRESS
         USING DFHTCTTE,TCTTEAR
         MVC   EIBFN,P3412FN      SET EIBFN
         XC    EIBRCODE,EIBRCODE  CLEAR EIBRCODE
         XC    EIBRESP,EIBRESP    CLEAR EIBRESP
         XC    EIBRESP2,EIBRESP2  CLEAR EIBRESP2
         ICM   R1,15,P3412RSP     R1=RESP ADDRESS
         BZ    NORESP             EXIT IF NONE
         XC    0(4,R1),0(R1)      CLEAR RESP
NORESP   EQU   *
         ICM   R1,15,P3412RS2     R1=RESP2 ADDRESS
         BZ    NORESP2            EXIT IF NONE
         XC    0(4,R1),0(R1)      CLEAR RESP2
NORESP2  EQU   *
         CLI   P3412NED,X'FF'     NOEDF ?
         BE    NOEDFB             EXIT IF IT IS
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         BNE   NOEDFB             EXIT IF NOT
         MVI   TCTTEEBA,X'00'     SET 'BEFORE' INTERCEPT
         MVI   TCTTEEDL,X'00'     SET NORMAL LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
*
NOEDFB   EQU   *
* VERIFY CONTAINER NAME
         CLI   P3412CTN,C'*'      SPECIAL CHANNEL DELETE ?
         BE    CONTOK             EXIT IF IT IS
         LA    R15,P3412CTN       R15 POINTS TO CONTAINER NAME
         BAL   R14,VERIFY         VERIFY CONTAINER NAME
         B     CONTOK             EXIT IF OK
         B     CONTERR            EXIT IF BAD
*
CONTOK   EQU   *
         CLI   P3412CHN,X'00'     ANY CHANNEL ON DELETE ?
         BE    CHANERR            ERROR IF NONE
* VERIFY CHANNEL NAME
         LA    R15,P3412CHN       R15 POINTS TO CHANNEL NAME
         BAL   R14,VERIFY         VERIFY CHANNEL NAME
         B     CHANOK             EXIT IF OK
         B     CHANERR            EXIT IF BAD
*
CHANOK   EQU   *
* NAMES VALID, SEARCH THE STRUCTURE
         LA    R8,TCTTECAQ        R8=CHANNEL ANCHOR POINTER
         ICM   R2,15,TCTTECAQ     R2=CHANNEL CHAIN ADDRESS
         BZ    CHANERR            ERROR IF NONE
         USING DFHCHAN,R2
CHANCHLP EQU   *
* ASSUMING THAT ANY CHANNEL IS UP FOR GRABS
         CLC   CHANNAME,P3412CHN  MATCH DELETE CHANNEL ?
         BE    CHANFND            EXIT IF IT DOES
         LA    R8,CHANADDR        R8=PREVIOUS POINTER ADDRESS
         ICM   R2,15,CHANADDR     CHAIN TO NEXT
         BNZ   CHANCHLP           LOOP UNTIL CHAIN END
         B     CHANERR            ERROR IF NOT FOUND
*
CHANFND  EQU   *
* CHANNEL FOUND, HUNT FOR CONTAINER
         LR    R6,R2              SAVE CHANNEL ADDRESS
         LA    R12,CHANCONT       R12=CONTAINER ANCHOR POINTER
CONTLOOP EQU   *
         OC    0(4,R12),0(R12)    ANY (MORE) CONTAINERS ?
         BNZ   DOCONT             EXIT IF SOME
* NO (MORE) CONTAINERS, ERROR IF NOT SPECIAL
         CLI   P3412CTN,C'*'      SPECIAL CHANNEL DELETE ?
         BNE   CONTERR            ERROR IF NOT
         B     CHANDEL            EXIT
*
DOCONT   EQU   *
         L     R2,0(R12)          R2=CONTAINER POINTER
         USING DFHCONT,R2
         CLI   P3412CTN,C'*'      SPECIAL CHANNEL DELETE ?
         BE    CONTFND            EXIT IF IT IS
         CLC   CONTNAME,P3412CTN  MATCH CONTAINER ?
         BE    CONTFND            EXIT IF IT DOES
         LA    R12,CONTADDR       R12=PREVIOUS POINTER ADDRESS
         B     CONTLOOP           LOOP UNTIL CHAIN END
*
CONTFND  EQU   *
* CONTAINER FOUND:
*    CLEAR ANY SET
*    FREE CONTAINER AND REPAIR CHAIN
         L     R7,CONTLENG        R7=LENGTH OF CONTAINER
         ICM   R5,15,CONTSET      ANY SET ?
         BZ    CONTNOST           EXIT IF NONE
* FREE SET DATA
         FREEMAIN A=(R5),LV=(R7)
CONTNOST EQU   *
* DELETE CONTAINER
         MVC   0(4,R12),CONTADDR  REPAIR CONTAINER CHAIN
         AHI   R7,28              + PREFIX LENGTH
         FREEMAIN A=(R2),LV=(R7)
         CLI   P3412CTN,C'*'      SPECIAL CHANNEL DELETE ?
         BNE   RETURN             EXIT IF NOT
         LA    R12,CONTADDR       R12=PREVIOUS POINTER ADDRESS
         B     CONTLOOP           LOOP TO DELETE ALL CONTAINERS
*
CHANDEL  EQU   *
* DELETE CHANNEL
         USING DFHCHAN,R6
         MVC   0(4,R8),CHANADDR   REPAIR CHANNEL CHAIN
         FREEMAIN A=(R6),LV=26
         B     RETURN             EXIT
*
CONTERR  EQU   *
* INVOKE CONTAINERERR
* NOTE: NO SEPARATE ERROR FOR BAD NAME
         MVC   EIBRESP,DFHRESP(CONTAINERERR) SET EIBRESP=CONTAINERERR
         MVC   EIBRCODE+2(1),EIBRESP+3 SET EIBRCODE
         MVC   EIBRESP2,=F'10'    SET EIBRESP2=CONTAINER NOT FOUND
         B     DORESP             EXIT
*
CHANERR  EQU   *
* INVOKE CHANNELERR
* NOTE: NO SEPARATE ERROR FOR BAD NAME
         MVI   EIBRCODE,X'DA'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(CHANNELERR) SET EIBRESP=CHANNELERR
         MVC   EIBRESP2,=F'2'     SET EIBRESP2=CHANNEL NOT FOUND
DORESP   EQU   *
         ICM   R14,15,P3412RSP    R14=RESP ADDRESS
         BZ    DORESP2            EXIT IF NONE
         MVC   0(4,R14),EIBRESP   SET RESP
DORESP2  EQU   *
         ICM   R14,15,P3412RS2    R14=RESP2 ADDRESS
         BZ    RETURN             EXIT IF NONE
         MVC   0(4,R14),EIBRESP2  SET RESP2
RETURN   EQU   *
         CLI   P3412NED,X'FF'     NOEDF ?
         BE    NOEDFA             EXIT IF IT IS
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         BNE   NOEDFA             EXIT IF NOT
         MVI   TCTTEEBA,X'FF'     SET 'AFTER' INTERCEPT
         MVI   TCTTEEDL,X'00'     SET NORMAL LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
*
NOEDFA   EQU   *
         PR    ,                  UNSTACK AND RETURN TO MACRO
*
VERIFY   EQU   *
* VALIDATE THE NAME, NO LEADING OR EMBEDDED BLANKS
* TRAILING BLANKS PERMITTED
         LR    R5,R15             R5=START OF NAME
         CLI   0(R15),C' '        BLANK START ?
         BE    4(R14)             ERROR IF IT IS
         LA    R0,16              R0=LENGTH
CHCTCHAR EQU   *
         LA    R2,CHCTTAB         R2 POINTS TO CHAR LIST
CHCTLOOP EQU   *
         CLC   0(1,R15),0(R2)     MATCH TO CHAR ?
         BNE   CHCTCINC           EXIT IF NOT
         AHI   R15,1              BUMP NAME POINTER
         BCT   R0,CHCTCHAR        LOOP THROUGH NAME
         BR    R14                RETURN
*
CHCTCINC EQU   *
         AHI   R2,1               BUMP CHAR LIST POINTER
         CLI   0(R2),X'FF'        STOPPER ?
         BNE   CHCTLOOP           LOOP IF NOT
* FOUND A BAD CHAR
         CLI   0(R15),C' '        IS IT BLANK ?
         BNE   4(R14)             ERROR IF NOT
* FOUND A BLANK, CHECK FOR TRAILING BLANKS
         LA    R2,15(R5)          R2=END OF NAME
         SR    R2,R15             R2=LENGTH OF TRAILING CHARS-1
         EX    R2,CHCTCLC         TEST FOR TRAILING BLANKS
         BNE   4(R14)             ERROR IF NOT ALL BLANK
         BR    R14                RETURN
*
CHCTCLC  CLC   0(0,R15),=15C' '   TEST FOR TRAILING BLANKS
*
CHCTTAB  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
         DC    C'abcdefghijklmnopqrstuvwxyz'
         DC    C'0123456789'
         DC    C'$@#/%&&?!:|"=ª,;<>.-_'
         DC    X'FF'              STOPPER
*
         P3412 DSECT
*
         DFHEIBLK                 EIB
         DFHTCTTE                 TCTTE
         DFHCHAN                  CHANNEL/CONTAINER STRUCTURES
*
         EQUREGS REGS=GPR
*
         END
