***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
         DFHEISTG
MYDATA   DS    CL35               DATA AREA
MYLEN    DS    XL2                RECEIVED LENGTH
MYRID    DS    CL15               RIDFLD (KEY)
MYRID1   DS    CL15               RIDFLD (KEY)
MYKL1    DS    XL2                KEYLENGTH
MYKL2    DS    XL2                KEYLENGTH
FWTSBA   DS    XL4                WCC,SBA FOR FOP MSG
FWTMSG   DS    CL(FOPLN)          FOP MESSAGE
*
TESTVSM3 DFHEIENT CODEREG=(R12,R3,R4,R5)
*
* TEST VSAM 3
*
* KSDS/FIX MYFILE08 READ/KEY/FKS/KEQ  XI
* KSDS/FIX MYFILE08 READ/KEY/FKS/KEQ  XENOMORPHICALLY
* KSDS/FIX MYFILE08 READ/KEY/FKS/KEQ  XYLYL
* KSDS/VAR MYFILE09 READ/KEY/FKS/KEQ  YNAMBUS *2
* KSDS/VAR MYFILE09 READ/KEY/FKS/KEQ  YELLOWISHNESSES *2
* KSDS/FIX MYFILE08 READ/KEY/FKS/KGE  XEBEC       (=> XB)
* KSDS/VAR MYFILE09 READ/KEY/FKS/KGE  YMOLTEN *2  (=>YJ)
* KSDS/FIX MYFILE08 READ/KEY/GEN/KGE  XANTHAM     (KL=0, 1ST REC)
* KSDS/VAR MYFILE09 READ/KEY/GEN/KGE  YABBERED *2 (KL=0, 1ST REC)
* KSDS/FIX MYFILE08 READ/KEY/GEN/KGE  XERAFIN     (KL=3, =>XEO)
* KSDS/VAR MYFILE09 READ/KEY/GEN/KGE  YPLIGHT *2  (KL=4, =>YPES)
* KSDS/FIX MYFILE08 READ/KEY/GEN/KEQ  XOANA       (KL=2, =XO)
* KSDS/VAR MYFILE09 READ/KEY/GEN/KEQ  YCLEEPE *2  (KL=3, =>YCL)
* INVREQ/25    CONDITION RAISED (READ INVALID GENERIC KEYLENGTH)
* INVREQ/42    CONDITION RAISED (READ NEGATIVE GENERIC KEYLENGTH)
* NOTFND       CONDITION RAISED (READ INVALID KEY EQUAL)
* NOTFND       CONDITION RAISED (READ INVALID GEN KEY EQUAL)
* NOTFND       CONDITION RAISED (READ INVALID KEY GTEQ, BEYOND END)
* NOTFND       CONDITION RAISED (READ INVALID GEN KEY GTEQ, BEYOND END)
*
* KSDS/FIX MYFILE08 BROWSE FORWARD KEY=XERUS
*                                        XERUS
*                                        XERUSES
*                                        XI
*                                        XIPHIHUMERALIS
*                   CHANGE KEY AND READ 2 KEY=XERIC
*                                        XERIC
*                                        XERICALLY
*
* KSDS/VAR MYFILE09 BROWSE BACK KGE KEY=YTT
*                                        YTHUNDERED *2
*                                        YSLAKED *2
*                                        YSHENDS *2
*                                        YSHENDING *2
*                   CHANGE KEY TO END AND READ BACK KEY=15X'FF'
*                                        YUPPIFYING *2
*                                        YUPPIFY *2
*
* COMPLEX TEST, MULTIPLE REQIDS ON MYFILE08
* KSDS/FIX MYFILE08 BROWSE FORWARD GENERIC EQUAL KEY=XOA
* KSDS/FIX MYFILE08 BROWSE FORWARD GENERIC GTEQ  KEY=XYMM
*    GENERIC IS POSITIONAL, NOT RETRIEVAL
*                                        XOANA
*                                        XYRIDACEOUS
*                                        XOANON
*                                        XYST
*                                        XU
*                                        XYSTER
*    CHANGE GENERIC KEYS
*                                        XERAFIN
*                                        XENIA
*                                        XERAFINS
*                                        XENIAL
*                                        XERANSES
*                                        XENIAS
*    CHANGE GENERIC KEYS AND KEYLENGTHS
*                                        XANTHOCHROIA
*                                        XERODERMIA
*                                        XANTHOCHROIAS
*                                        XERODERMIAS
*                                        XANTHOCHROIC
*                                        XERODERMIC
*    CHANGE TO GTEQ USING RESETBR
*                                        XANTHOCHROIA
*                                        XERODERMIA
*                                        XANTHOCHROIAS
*                                        XERODERMIAS
*                                        XANTHOCHROIC
*                                        XERODERMIC
*
* INVREQ/25    CONDITION RAISED (STARTBR INVALID GENERIC KEYLENGTH)
* INVREQ/33    CONDITION RAISED (STARTBR REQID IN USE)
* INVREQ/42    CONDITION RAISED (STARTBR NEGATIVE GENERIC KEYLENGTH)
* INVREQ/24    CONDITION RAISED (READPREV AND STARTBR GENERIC)
* INVREQ/41    CONDITION RAISED (READPREV NO STARTBR REQID)
* ENDFILE      CONDITION RAISED (READNEXT EQUAL BEYOND END)
* ENDFILE      CONDITION RAISED (READPREV EQUAL BEYOND BEG)
*
         CLI   FOPSEP+1,C' '      SEND LENGTH ADJUSTED ?
         BNE   NOTADJL            EXIT IF NOT
         MVI   FOPSEP+1,C'|'      SET SEPARATOR
         LH    R7,FOPL            MESSAGE LENGTH
         AHI   R7,1               LENGTHEN BY 1
         STH   R7,FOPL            STORE BACK
NOTADJL  EQU   *
         CLI   FHSEP,C' '         SEND CONDITION LENGTH ADJUSTED ?
         BNE   NOTADJC            EXIT IF NOT
         MVI   FHSEP,C'|'         SET SEPARATOR
         LH    R7,FHANDL          MESSAGE LENGTH
         AHI   R7,1               LENGTHEN BY 1
         STH   R7,FHANDL          STORE BACK
NOTADJC  EQU   *
         MVC   FOPTYPE,=C'KSDS'   SET FILE TYPE IN MESSAGE
         MVC   FOPFIXVR,=C'FIX'   SET FIX/VAR IN MESSAGE
         MVC   FOPNAME,=C'MYFILE08' SET FILENAME IN MESSAGE
         MVC   FOPFUNC,=CL8'READ' SET FUNCTION IN MESSAGE
         MVC   FOPMETH,=CL4'KEY'  SET METHOD IN MESSAGE
         MVC   FOPGNFL,=CL4'FKS'  SET FULL KEY
         MVC   FOPMTYP,=C'KEQ'    SET KEY EQUAL
         MVC   MYRID,=CL15'XI'    RECORD BY KEY
         BAL   R9,RDFL08          READ MYFILE08
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP1        MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
         MVC   MYRID,=CL15'XENOMORPHICALLY' RECORD BY KEY
         BAL   R9,RDFL08          READ MYFILE08
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP2        MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
         MVC   MYRID,=CL15'XYLYL' RECORD BY KEY
         BAL   R9,RDFL08          READ MYFILE08
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP3        MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
         MVC   FOPFIXVR,=C'VAR'   SET FIX/VAR IN MESSAGE
         MVC   FOPNAME,=C'MYFILE09' SET FILENAME IN MESSAGE
         MVC   MYRID,=CL15'YNAMBUS' RECORD BY KEY
         BAL   R9,RDFL09          READ MYFILE09
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP4        MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
         MVC   MYRID,=CL15'YELLOWISHNESSES' RECORD BY KEY
         BAL   R9,RDFL09          READ MYFILE09
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP5        MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
         MVC   FOPNAME,=C'MYFILE08' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'FIX'   SET FIX/VAR IN MESSAGE
         MVC   FOPMTYP,=C'KGE'    SET KEY GTEQ
         MVC   MYRID,=CL15'XB'    RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE08') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) GTEQ
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP6        MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
         MVC   FOPNAME,=C'MYFILE09' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'VAR'   SET FIX/VAR IN MESSAGE
         MVC   MYRID,=CL15'YJ'    RECORD BY KEY
         MVC   MYLEN,=H'35'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE09') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) GTEQ
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP7        MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
         MVC   FOPNAME,=C'MYFILE08' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'FIX'   SET FIX/VAR IN MESSAGE
         MVC   FOPGNFL,=CL4'GEN'  SET GENERIC KEY
         MVC   MYRID,=CL15'ZZ'    RECORD BY KEY (IGNORED)
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE08') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) KEYLENGTH(0) GENERIC
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP8        MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
         MVC   FOPNAME,=C'MYFILE09' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'VAR'   SET FIX/VAR IN MESSAGE
         MVC   MYRID,=CL15'ZZ'    RECORD BY KEY (IGNORED)
         MVC   MYLEN,=H'35'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE09') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) KEYLENGTH(0) GENERIC GTEQ
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP9        MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
         MVC   FOPNAME,=C'MYFILE08' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'FIX'   SET FIX/VAR IN MESSAGE
         MVC   FOPGNFL,=CL4'GEN'  SET GENERIC KEY
         MVC   MYRID,=CL15'XEO'   RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE08') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) KEYLENGTH(3) GENERIC GTEQ
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP10       MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
         MVC   FOPNAME,=C'MYFILE09' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'VAR'   SET FIX/VAR IN MESSAGE
         MVC   MYRID,=CL15'YPES'  RECORD BY KEY
         MVC   MYLEN,=H'35'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE09') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) KEYLENGTH(4) GENERIC GTEQ
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP11       MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
         MVC   FOPNAME,=C'MYFILE08' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'FIX'   SET FIX/VAR IN MESSAGE
         MVC   FOPGNFL,=CL4'GEN'  SET GENERIC KEY
         MVC   MYRID,=CL15'XO'    RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE08') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) KEYLENGTH(2) GENERIC EQUAL
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP12       MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
         MVC   FOPNAME,=C'MYFILE09' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'VAR'   SET FIX/VAR IN MESSAGE
         MVC   MYRID,=CL15'YCL'   RECORD BY KEY
         MVC   MYLEN,=H'35'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE09') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) KEYLENGTH(3) GENERIC EQUAL
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   FWTSBA,FOP13       MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
*
* RAISE SOME CONDITIONS, WE MAY NOT DO ALL THESE FOR EVERY FUNCTION
*
         EXEC  CICS HANDLE CONDITION                                   X
               INVREQ(VSAMINV)                                         X
               NOTFND(VSAMNOTF)                                        X
               ENDFILE(VSAMENDF)
*
* INVREQ/25    READ INVALID GENERIC KEYLENGTH
         MVC   FOPNAME,=C'MYFILE08' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'FIX'   SET FIX/VAR IN MESSAGE
         MVC   FOPGNFL,=CL4'GEN'  SET GENERIC KEY
         MVC   MYRID,=CL15'AA'    RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         MVC   FWTSBA,FOP14       MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTN1        R7=HANDLE RETURN
         MVI   INVREQNO,C'1'      SET 1ST INVREQ
         EXEC  CICS READ FILE('MYFILE08') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) KEYLENGTH(15) GENERIC EQUAL
*
VSAMRTN1 DS    0H
* INVREQ/42    READ NEGATIVE GENERIC KEYLENGTH
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         MVC   FWTSBA,FOP16       MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTN2        R7=HANDLE RETURN
         MVI   INVREQNO,C'2'      SET 2ND INVREQ
         EXEC  CICS READ FILE('MYFILE08') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) KEYLENGTH(BADKL) GENERIC EQUAL
*
VSAMRTN2 DS    0H
* NOTFND 1     READ INVALID KEY EQUAL
         MVC   FOPNAME,=C'MYFILE09' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'VAR'   SET FIX/VAR IN MESSAGE
         MVC   FOPMETH,=CL4'KEY'  SET METHOD IN MESSAGE
         MVC   FOPGNFL,=CL4'FKS'  SET FULL KEY
         MVC   FOPMTYP,=C'KEQ'    SET KEY EQUAL
         MVC   MYRID,=CL15'ABC'   RECORD BY KEY
         MVC   FWTSBA,FOP18       MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTN3        R7=HANDLE RETURN
         MVI   NOTFNDNO,C'1'      SET 1ST NOTFND
         BAL   R9,RDFL09          READ MYFILE09
*
VSAMRTN3 DS    0H
* NOTFND 2     READ INVALID GEN KEY EQUAL
         MVC   FOPNAME,=C'MYFILE08' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'FIX'   SET FIX/VAR IN MESSAGE
         MVC   FOPGNFL,=CL4'GEN'  SET GENERIC KEY
         MVC   MYRID,=CL15'XF'    RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         MVC   FWTSBA,FOP20       MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTN4        R7=HANDLE RETURN
         MVI   NOTFNDNO,C'2'      SET 2ND NOTFND
         EXEC  CICS READ FILE('MYFILE08') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) KEYLENGTH(2) GENERIC EQUAL
*
VSAMRTN4 DS    0H
* NOTFND 3     READ INVALID KEY GTEQ, BEYOND END
         MVC   FOPNAME,=C'MYFILE09' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'VAR'   SET FIX/VAR IN MESSAGE
         MVC   FOPMETH,=CL4'KEY'  SET METHOD IN MESSAGE
         MVC   FOPGNFL,=CL4'FKS'  SET FULL KEY
         MVC   FOPMTYP,=C'KGE'    SET KEY GTEQ
         MVC   MYRID,=CL15'YUPQ'  RECORD BY KEY
         MVC   FWTSBA,FOP1C2      MOVE WCC,SBA
         MVI   FOPSEP+1,C' '      RESET SEPARATOR
         LH    R7,FOPL            MESSAGE LENGTH
         AHI   R7,-1              SHORTEN BY 1
         STH   R7,FOPL            STORE BACK
         MVI   FHSEP,C' '         RESET SEPARATOR
         LH    R7,FHANDL          MESSAGE LENGTH
         AHI   R7,-1              SHORTEN BY 1
         STH   R7,FHANDL          STORE BACK
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTN5        R7=HANDLE RETURN
         MVI   NOTFNDNO,C'3'      SET 3RD NOTFND
         BAL   R9,RDFL09          READ MYFILE09
*
VSAMRTN5 DS    0H
* NOTFND 4     READ INVALID GEN KEY GTEQ, BEYOND END
         MVC   FOPNAME,=C'MYFILE08' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'FIX'   SET FIX/VAR IN MESSAGE
         MVC   FOPGNFL,=CL4'GEN'  SET GENERIC KEY
         MVC   FOPMTYP,=C'KGE'    SET KEY GTEQ
         MVC   MYRID,=CL15'XYT'   RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         MVC   FWTSBA,FOP3C2      MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTN6        R7=HANDLE RETURN
         MVI   NOTFNDNO,C'4'      SET 4TH NOTFND
         EXEC  CICS READ FILE('MYFILE08') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID) KEYLENGTH(3) GENERIC GTEQ
*
VSAMRTN6 DS    0H
         SR    R7,R7              CONDITION NOT EXPECTED
* START BROWSE, POINT AT XERUS, FULLKEY, READ 4 RECS
         MVC   MYRID,=CL15'XERUS' RECORD BY KEY
         BAL   R9,SB08KEQ         STARTBR MYFILE08 EQUAL
* READNEXT 4 RECORDS
         MVC   FWTSBA,FOP5C2      MOVE WCC,SBA
         MVC   FOPFUNC,=CL8'READNEXT' SET FUNCTION IN MESSAGE
         MVC   FOPMETH,=CL4'KEY'  SET METHOD IN MESSAGE
         MVC   FOPGNFL,=CL4'FKS'  SET FULL KEY
         MVC   FOPMTYP,=C'KEQ'    SET KEY EQUAL
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,4               READ 4 FORWARDS
RDNXLP1  EQU   *
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         EXEC  CICS READNEXT FILE('MYFILE08') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID)
         BAL   R9,WQTS            WRITE IT TO TS Q
         BCT   R7,RDNXLP1         LOOP
* CHANGE FULL KEY AND READ 2
         MVC   MYRID,=CL15'XERIC' RECORD BY KEY
         LA    R7,2               READ 2 FORWARDS
RDNXLP2  EQU   *
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         EXEC  CICS READNEXT FILE('MYFILE08') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID)
         BAL   R9,WQTS            WRITE IT TO TS Q
         BCT   R7,RDNXLP2         LOOP
         BAL   R9,ENDBR08         ENDBR MYFILE08
*
* START BROWSE, POINT AT YTT, FULLKEY, KGE READ BACK 4 RECS
         MVC   MYRID,=CL15'YTT'   RECORD BY KEY
         EXEC  CICS STARTBR FILE('MYFILE09') RIDFLD(MYRID) GTEQ
* READPREV 4 RECORDS
         MVC   FWTSBA,FOP6C2      MOVE WCC,SBA
         MVC   FOPNAME,=C'MYFILE09' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'VAR'   SET FIX/VAR IN MESSAGE
         MVC   FOPMTYP,=C'KGE'    SET KEY GTEQ
         MVC   FOPFUNC,=CL8'READPREV' SET FUNCTION IN MESSAGE
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,4               READ 4 BACKWARDS
RDPVLP1  EQU   *
         MVC   MYLEN,=H'35'       SET MAXIMUM LENGTH
         EXEC  CICS READPREV FILE('MYFILE09') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID)
         BAL   R9,WQTS            WRITE IT TO TS Q
         BCT   R7,RDPVLP1         LOOP
* CHANGE FULL KEY TO END AND READ BACK 2
         MVC   MYRID,=15X'FF'     RECORD BY KEY
         LA    R7,2               READ 2 BACKWARDS
RDPVLP2  EQU   *
         MVC   MYLEN,=H'35'       SET MAXIMUM LENGTH
         EXEC  CICS READPREV FILE('MYFILE09') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID)
         BAL   R9,WQTS            WRITE IT TO TS Q
         BCT   R7,RDPVLP2         LOOP
         EXEC  CICS ENDBR FILE('MYFILE09')
*
* COMPLEX TESTS
* START BROWSE FOR BOTH FILES, BOTH GENERIC
         MVC   FWTSBA,FOP7C2      MOVE WCC,SBA
         MVC   FOPNAME,=C'COMPLEX ' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'   '   RESET
         MVC   FOPMTYP,=C'   '    RESET
         MVC   FOPFUNC,=CL8'READS   ' SET FUNCTION IN MESSAGE
         MVC   FOPGNFL,=CL4'GEN'  SET GENERIC KEY
         MVC   MYRID,=CL15'XOA'   RECORD BY KEY
         MVC   MYKL1,=H'3'        MOVE KEYLENGTH
         EXEC  CICS STARTBR FILE('MYFILE08') RIDFLD(MYRID)             X
               GENERIC EQUAL KEYLENGTH(MYKL1) REQID(1)
         MVC   MYRID1,=CL15'XYMM' RECORD BY KEY
         MVC   MYKL2,=H'4'        MOVE KEYLENGTH
         EXEC  CICS STARTBR FILE('MYFILE08') RIDFLD(MYRID1)            X
               GENERIC GTEQ  KEYLENGTH(MYKL2) REQID(2)
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         MVI   RDCXGT1+1,X'00'    RESET SWITCH 1
         MVI   RDCXGT2+1,X'00'    RESET SWITCH 2
         MVI   RDCXGT3+1,X'00'    RESET SWITCH 3
RDCXREAD EQU   *
         LA    R7,3               READ 3 FORWARD GENERIC
RDCXLP1  EQU   *
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         EXEC  CICS READNEXT FILE('MYFILE08') INTO(MYDATA)             X
               LENGTH(MYLEN) KEYLENGTH(MYKL1) RIDFLD(MYRID) REQID(1)
         BAL   R9,WQTS            WRITE IT TO TS Q
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         EXEC  CICS READNEXT FILE('MYFILE08') INTO(MYDATA)             X
               LENGTH(MYLEN) KEYLENGTH(MYKL2) RIDFLD(MYRID1) REQID(2)
         BAL   R9,WQTS            WRITE IT TO TS Q
         BCT   R7,RDCXLP1         LOOP
RDCXGT1  NOP   RDCXTST2           SWITCH 1
RDCXGT2  NOP   RDCXTST3           SWITCH 2
RDCXGT3  NOP   RDCXTST4           SWITCH 3
* CHANGE GENERIC KEYS
         MVC   MYRID,=CL15'XER'   RECORD BY KEY
         MVC   MYRID1,=CL15'XENB' RECORD BY KEY
         MVI   RDCXGT1+1,X'F0'    SET SWITCH 1
         B     RDCXREAD           EXIT
*
RDCXTST2 EQU   *
* CHANGE GENERIC KEYS AND KEYLENGTHS
         MVC   MYRID,=CL15'XANTHO' RECORD BY KEY
         MVC   MYKL1,=H'6'        MOVE KEYLENGTH
         MVC   MYRID1,=CL15'XERODERMB' RECORD BY KEY
         MVC   MYKL2,=H'9'        MOVE KEYLENGTH
         MVI   RDCXGT1+1,X'00'    RESET SWITCH 1
         MVI   RDCXGT2+1,X'F0'    SET SWITCH 2
         B     RDCXREAD           EXIT
*
RDCXTST3 EQU   *
* RESET 1ST BROWSE TO GTEQ
         MVC   MYRID,=CL15'XANTHJ' RECORD BY KEY
         MVC   MYRID1,=CL15'XERODERMB' RECORD BY KEY
         EXEC  CICS RESETBR FILE('MYFILE08') RIDFLD(MYRID)             X
               GENERIC GTEQ  KEYLENGTH(MYKL1) REQID(1)
         MVI   RDCXGT1+1,X'00'    RESET SWITCH 1
         MVI   RDCXGT2+1,X'00'    RESET SWITCH 2
         MVI   RDCXGT3+1,X'F0'    SET SWITCH 3
         B     RDCXREAD           EXIT
*
RDCXTST4 EQU   *
         EXEC  CICS ENDBR FILE('MYFILE08') REQID(2)
         EXEC  CICS ENDBR FILE('MYFILE08') REQID(1)
*
* INVREQ/25    STARTBR INVALID GENERIC KEYLENGTH
         MVC   FOPNAME,=C'MYFILE08' SET FILENAME IN MESSAGE
         MVC   FOPFIXVR,=C'FIX'   SET FIX/VAR IN MESSAGE
         MVC   FOPGNFL,=CL4'GEN'  SET GENERIC KEY
         MVC   FOPMTYP,=C'KEQ'    SET EQUAL
         MVC   FOPFUNC,=CL8'STARTBR ' SET FUNCTION IN MESSAGE
         MVC   MYRID,=CL15'AA'    RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         MVC   FWTSBA,FOP8C2      MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTN7        R7=HANDLE RETURN
         MVI   INVREQNO,C'3'      SET 3RD INVREQ
         EXEC  CICS STARTBR FILE('MYFILE08') RIDFLD(MYRID)             X
               GENERIC EQUAL KEYLENGTH(15)
*
VSAMRTN7 DS    0H
* INVREQ/33    STARTBR REQID IN USE
         MVC   FOPGNFL,=CL4'FKS'  SET FULL KEY
         MVC   FOPMTYP,=C'KEQ'    SET EQUAL
         MVC   MYRID,=CL15'XERIC' RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         MVC   FWTSBA,FOP10C2     MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTN8        R7=HANDLE RETURN
         MVI   INVREQNO,C'4'      SET 4TH INVREQ
         BAL   R9,SB08KEQ         STARTBR MYFILE08 EQUAL
         BAL   R9,SB08KEQ         STARTBR MYFILE08 EQUAL
*
VSAMRTN8 DS    0H
         BAL   R9,ENDBR08         ENDBR MYFILE08
* INVREQ/42    STARTBR NEGATIVE GENERIC KEYLENGTH
         MVC   FOPGNFL,=CL4'GEN'  SET GENERIC KEY
         MVC   FOPMTYP,=C'KEQ'    SET EQUAL
         MVC   MYRID,=CL15'XERIC' RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         MVC   FWTSBA,FOP12C2     MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTN9        R7=HANDLE RETURN
         MVI   INVREQNO,C'5'      SET 5TH INVREQ
         MVC   MYKL1,=H'-1'       MOVE KEYLENGTH
         EXEC  CICS STARTBR FILE('MYFILE08') RIDFLD(MYRID)             X
               GENERIC EQUAL KEYLENGTH(MYKL1)
*
VSAMRTN9 DS    0H
         BAL   R9,ENDBR08         ENDBR MYFILE08
* INVREQ/24    READPREV AND STARTBR GENERIC
         MVC   FOPFUNC,=CL8'READPREV' SET FUNCTION IN MESSAGE
         MVC   MYRID,=CL15'XERIC' RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         MVC   FWTSBA,FOP14C2     MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTNA        R7=HANDLE RETURN
         MVI   INVREQNO,C'6'      SET 6TH INVREQ
         EXEC  CICS STARTBR FILE('MYFILE08') RIDFLD(MYRID)             X
               GENERIC EQUAL KEYLENGTH(5)
         EXEC  CICS READPREV FILE('MYFILE08') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID)
*
VSAMRTNA DS    0H
         BAL   R9,ENDBR08         ENDBR MYFILE08
* INVREQ/41    READPREV NO STARTBR REQID
         MVC   FOPFUNC,=CL8'READPREV' SET FUNCTION IN MESSAGE
         MVC   MYRID,=CL15'XERIC' RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         MVC   FWTSBA,FOP16C2     MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTNB        R7=HANDLE RETURN
         MVI   INVREQNO,C'7'      SET 7TH INVREQ
         EXEC  CICS READPREV FILE('MYFILE08') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID) REQID(5)
*
VSAMRTNB DS    0H
* ENDFLE 1     READNEXT EQUAL BEYOND END
         MVC   FOPFUNC,=CL8'READNEXT' SET FUNCTION IN MESSAGE
         MVC   FOPGNFL,=CL4'FKS'  SET FULL KEY
         MVC   MYRID,=15X'FF'     RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         MVC   FWTSBA,FOP18C2     MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTNC        R7=HANDLE RETURN
         MVI   ENDFLENO,C'1'      SET 1ST ENDFLE
         BAL   R9,SB08KEQ         STARTBR MYFILE08 EQUAL
         EXEC  CICS READNEXT FILE('MYFILE08') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID)
*
VSAMRTNC DS    0H
         BAL   R9,ENDBR08         ENDBR MYFILE08
* ENDFLE 2     READPREV EQUAL BEYOND BEG
         MVC   FOPFUNC,=CL8'READPREV' SET FUNCTION IN MESSAGE
         MVC   FOPMTYP,=C'KGE'    SET GTEQ
         MVC   MYRID,=15X'00'     RECORD BY KEY
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         MVC   FWTSBA,FOP20C2     MOVE WCC,SBA
         MVC   FWTMSG,FOPTYPE     MOVE MESSAGE TEXT
         BAL   R9,SENDIT          SCREEN DISPLAY
         LA    R7,VSAMRTND        R7=HANDLE RETURN
         MVI   ENDFLENO,C'2'      SET 2ND NOTFND
         EXEC  CICS STARTBR FILE('MYFILE08') RIDFLD(MYRID) GTEQ
         EXEC  CICS READPREV FILE('MYFILE08') INTO(MYDATA)             X
               LENGTH(MYLEN) RIDFLD(MYRID)
*
VSAMRTND DS    0H
         BAL   R9,ENDBR08         ENDBR MYFILE08
*
         EXEC  CICS SEND FROM(ENDMSG) LENGTH(ENDMSGL)
*
         EXEC  CICS RETURN
*
* HANDLE ROUTINES
*
VSAMINV  DS    0H
         LA    R9,INVREQTB        ADDRESS SBA TABLE
VSAMINVL EQU   *
         CLC   INVREQNO,0(R9)     MATCH ?
         BNE   VSAMINVI           EXIT IF NOT
         MVC   FWTSBA,1(R9)       MOVE WCC,SBA
         B     INVREQGO           EXIT
*
VSAMINVI EQU   *
         AHI   R9,5               BUMP POINTER
         CLI   0(R9),X'FF'        STOPPER ?
         BNE   VSAMINVL           LOOP IF NOT
         DC    H'0'               PROGRAMMING ERROR
*
INVREQGO EQU   *
         L     R9,EIBRESP2        R9=RESP2
         CVD   R9,DEC             CONVERT TO DECIMAL
         XC    FHANDCON,FHANDCON  CLEAR CONDITION
         MVC   FHANDCON+5(4),=X'40202020' MOVE EDIT WORD
         ED    FHANDCON+5(4),DEC+6 EDIT RESP2
         MVC   FHANDCON(7),=C'INVREQ/' MOVE CONDITION
         BAL   R9,HEXFDBK         DISPLAY FEEDBACK CODES
         B     FWTHSEND           EXIT
*
INVREQTB DS    0H
         DC    C'1'
         TN3270 WCC_KD,(SBA,17,1)
         DC    C'2'
         TN3270 WCC_KD,(SBA,19,1)
         DC    C'3'
         TN3270 WCC_KD,(SBA,11,42)
         DC    C'4'
         TN3270 WCC_KD,(SBA,13,42)
         DC    C'5'
         TN3270 WCC_KD,(SBA,15,42)
         DC    C'6'
         TN3270 WCC_KD,(SBA,17,42)
         DC    C'7'
         TN3270 WCC_KD,(SBA,19,42)
         DC    X'FF'              STOPPER
*
VSAMNOTF DS    0H
         LA    R9,NOTFNDTB        ADDRESS SBA TABLE
VSAMNTFL EQU   *
         CLC   NOTFNDNO,0(R9)     MATCH ?
         BNE   VSAMNTFI           EXIT IF NOT
         MVC   FWTSBA,1(R9)       MOVE WCC,SBA
         B     NOTFNDGO           EXIT
*
VSAMNTFI EQU   *
         AHI   R9,5               BUMP POINTER
         CLI   0(R9),X'FF'        STOPPER ?
         BNE   VSAMNTFL           LOOP IF NOT
         DC    H'0'               PROGRAMMING ERROR
*
NOTFNDGO EQU   *
         MVC   FHANDCON,=CL12'NOTFND' MOVE CONDITION
         BAL   R9,HEXFDBK         DISPLAY FEEDBACK CODES
         B     FWTHSEND           EXIT
*
NOTFNDTB DS    0H
         DC    C'1'
         TN3270 WCC_KD,(SBA,21,1)
         DC    C'2'
         TN3270 WCC_KD,(SBA,23,1)
         DC    C'3'
         TN3270 WCC_KD,(SBA,4,42)
         DC    C'4'
         TN3270 WCC_KD,(SBA,6,42)
         DC    X'FF'              STOPPER
*
VSAMENDF DS    0H
         LA    R9,ENDFLETB        ADDRESS SBA TABLE
VSAMENDL EQU   *
         CLC   ENDFLENO,0(R9)     MATCH ?
         BNE   VSAMENDI           EXIT IF NOT
         MVC   FWTSBA,1(R9)       MOVE WCC,SBA
         B     ENDFLEGO           EXIT
*
VSAMENDI EQU   *
         AHI   R9,5               BUMP POINTER
         CLI   0(R9),X'FF'        STOPPER ?
         BNE   VSAMENDL           LOOP IF NOT
         DC    H'0'               PROGRAMMING ERROR
*
ENDFLEGO EQU   *
         MVC   FHANDCON,=CL12'ENDFLE' MOVE CONDITION
         BAL   R9,HEXFDBK         DISPLAY FEEDBACK CODES
         B     FWTHSEND           EXIT
*
ENDFLETB DS    0H
         DC    C'1'
         TN3270 WCC_KD,(SBA,21,42)
         DC    C'2'
         TN3270 WCC_KD,(SBA,23,42)
         DC    X'FF'              STOPPER
*
FWTHSEND DS    0H
         MVC   FWTMSG,FHANDCON    MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FHANDL)
         BR    R7                 RETURN TO MAIN LINE
*
INVREQNO DC    C'1'               DISPLAY INDICATOR
NOTFNDNO DC    C'1'               DISPLAY INDICATOR
ENDFLENO DC    C'1'               DISPLAY INDICATOR
*
* SUBROUTINES
*
SENDIT   DS    0H
         EXEC  CICS SEND FROM(FWTSBA) LENGTH(FOPL)
         BR    R9                 RETURN
*
RDFL08   DS    0H
         MVC   MYLEN,=H'15'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE08') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID)
         BR    R9                 RETURN
*
RDFL09   DS    0H
         MVC   MYLEN,=H'35'       SET MAXIMUM LENGTH
         EXEC  CICS READ FILE('MYFILE09') INTO(MYDATA) LENGTH(MYLEN)   X
               RIDFLD(MYRID)
         BR    R9                 RETURN
*
SB08KEQ  DS    0H
         EXEC  CICS STARTBR FILE('MYFILE08') RIDFLD(MYRID) EQUAL
         BR    R9                 RETURN
*
ENDBR08  DS    0H
         EXEC  CICS ENDBR FILE('MYFILE08')
         BR    R9                 RETURN
*
WQTS     DS    0H
         EXEC  CICS WRITEQ TS QUEUE('VSM3') FROM(MYDATA) LENGTH(MYLEN)
         BR    R9                 RETURN
*
HEXFDBK  DS    0H
         UNPK  WORK(5),EIBRCODE+1(3) UNPACK VSAM FEEDBACK CODES
         TR    WORK(4),TABLE-240  TRANSLATE TO PRINTABLE HEX
         MVC   FHFDBK1,WORK       MOVE FDBK RETURN
         MVC   FHFDBK2,WORK+2     MOVE FDBK CODE
         BR    R9                 RETURN
*
FOP1     TN3270 WCC_KD,(SBA,3,1)
FOP2     TN3270 WCC_KD,(SBA,4,1)
FOP3     TN3270 WCC_KD,(SBA,5,1)
FOP4     TN3270 WCC_KD,(SBA,6,1)
FOP5     TN3270 WCC_KD,(SBA,7,1)
FOP6     TN3270 WCC_KD,(SBA,8,1)
FOP7     TN3270 WCC_KD,(SBA,9,1)
FOP8     TN3270 WCC_KD,(SBA,10,1)
FOP9     TN3270 WCC_KD,(SBA,11,1)
FOP10    TN3270 WCC_KD,(SBA,12,1)
FOP11    TN3270 WCC_KD,(SBA,13,1)
FOP12    TN3270 WCC_KD,(SBA,14,1)
FOP13    TN3270 WCC_KD,(SBA,15,1)
FOP14    TN3270 WCC_KD,(SBA,16,1)
FOP16    TN3270 WCC_KD,(SBA,18,1)
FOP18    TN3270 WCC_KD,(SBA,20,1)
FOP20    TN3270 WCC_KD,(SBA,22,1)
FOP1C2   TN3270 WCC_KD,(SBA,3,42)
FOP3C2   TN3270 WCC_KD,(SBA,5,42)
FOP5C2   TN3270 WCC_KD,(SBA,7,42)
FOP6C2   TN3270 WCC_KD,(SBA,8,42)
FOP7C2   TN3270 WCC_KD,(SBA,9,42)
FOP8C2   TN3270 WCC_KD,(SBA,10,42)
FOP10C2  TN3270 WCC_KD,(SBA,12,42)
FOP12C2  TN3270 WCC_KD,(SBA,14,42)
FOP14C2  TN3270 WCC_KD,(SBA,16,42)
FOP16C2  TN3270 WCC_KD,(SBA,18,42)
FOP18C2  TN3270 WCC_KD,(SBA,20,42)
FOP20C2  TN3270 WCC_KD,(SBA,22,42)
*
* KSDS FIX MYFILE08 READNEXT KEY GEN KEQ
FOPTYPE  DS    CL4
         DC    C'/'
FOPFIXVR DS    CL3                FIX OR VAR
         DC    C' '
FOPNAME  DS    CL8
         DC    C' '
FOPFUNC  DC    C'READNEXT'
         DC    C' '
FOPMETH  DC    C'KEY '
FOPGNFL  DC    CL4' '             FKS OR GEN
FOPMTYP  DC    CL3' '             KEQ OR KGE
FOPSEP   DC    C' |'
FOPLN    EQU   *-FOPTYPE
FOPL     DC    AL2(*-(FOPTYPE-4))
*
FHANDCON DC    CL12' '
         DC    C' CONDITION RAISED '
FHFDBK1  DS    CL2
         DC    C' '
FHFDBK2  DS    CL2
         DC    4C' '
FHSEP    DC    C'|'
FHANDL   DC    AL2(*-(FHANDCON-4))
*
ENDMSG   TN3270 WCC_KD,(SBA,24,1)
         DC    C'TESTVSM3 COMPLETED, PRESS CLEAR'
ENDMSGL  DC    AL2(*-ENDMSG)
*
DEC      DC    PL8'0'
WORK     DS    XL5
BADKL    DC    H'-5'
*
TABLE    DC    C'0123456789ABCDEF'
*
         TN3270 SYMBOLS
         END
