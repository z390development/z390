***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
LCL1804  CSECT
*
* FN=1804  EXEC CICS SEND MAP
*
* R1  >>> P1804 BLOCK POINTER
*
         USING *,R13
         B     12(R15)            BYPASS EYECATCHER
         DC    CL8'LCL1804'
         LR    R13,R15            R13 AS BASE
         LR    R3,R1              SET BASE
         L     R3,0(R3)                    FOR PARMS
         USING (P1804,P1804END),R3
         L     DFHEIBR,P1804EIB   LOAD EIB ADDRESS
         USING DFHEIBLK,DFHEIBR
         L     TCTTEAR,P1804TCT   LOAD TCT ADDRESS
         USING DFHTCTTE,TCTTEAR
         MVC   EIBFN,P1804FN      SET EIBFN
         XC    EIBRCODE,EIBRCODE  CLEAR EIBRCODE
         XC    EIBRESP,EIBRESP    CLEAR EIBRESP
         XC    EIBRESP2,EIBRESP2  CLEAR EIBRESP2
         ICM   R1,15,P1804RSP     R1=RESP ADDRESS
         BZ    NORESP             EXIT IF NONE
         XC    0(4,R1),0(R1)      CLEAR RESP
NORESP   EQU   *
         ICM   R1,15,P1804RS2     R1=RESP2 ADDRESS
         BZ    NORESP2            EXIT IF NONE
         XC    0(4,R1),0(R1)      CLEAR RESP2
NORESP2  EQU   *
         CLI   P1804NED,X'FF'     NOEDF ?
         BE    NOEDFB             EXIT IF IT IS
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         BNE   NOEDFB             EXIT IF NOT
         MVI   TCTTEEBA,X'00'     SET 'BEFORE' INTERCEPT
         MVI   TCTTEEDL,X'00'     SET NORMAL LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
*
NOEDFB   EQU   *
         CLI   TCTTETI,C'!'       NON-TERMINAL ?
         BE    INVREQ             ERROR IF IT IS
         L     R4,P1804MSA        ADDRESS MAPSET STRUCTURE
         AHI   R4,8               BYPASS MAPSET NAME
         USING BMSMHLL,R4
         LLH   R5,P1804MLN        R5=MAPSET LENGTH ROUNDED TO DWORD
         AHI   R5,-8              -LENGTH OF MAPSET NAME
MAPLOOP  EQU   *
* FIND THE MAP WITHIN THE MAPSET
         CLC   P1804MAP,BMSMNAME  RIGHT MAP ?
         BE    GOTMAP             EXIT IF IT IS
         AH    R4,BMSMS           BUMP TO NEXT MAP
         SH    R5,BMSMS           ADJUST LENGTH
         CHI   R5,8               ANYTHING LEFT, APART FROM ALIGN ?
         BL    MAPFAIL1           EXIT IF WE DIDN'T FIND THE MAP
         B     MAPLOOP            LOOP
*
GOTMAP   EQU   *
         LH    R5,BMSMS           R5=MAP LENGTH
         CLI   BMSMW,80           MAP WIDTH VALID ?
         BH    INVMPSZ            ERROR IF NOT
         CLI   BMSML,24           MAP HEIGHT VALID ?
         BH    INVMPSZ            ERROR IF NOT
         MVC   TCTTEMWH+1(1),BMSMW SET MAP WIDTH FOR ASSIGN
         MVC   TCTTEMHT+1(1),BMSML SET MAP HEIGHT FOR ASSIGN
         MVC   TCTTEMLN+1(1),BMSMSL SET MAP LINE FOR ASSIGN
         MVC   TCTTEMCL+1(1),BMSMSC SET MAP COLUMN FOR ASSIGN
         L     R6,P1804OUT        R6=OUTPUT AREA
* SET UP ESC,WRT
         MVI   0(R6),ESC          ESCAPE
         MVI   1(R6),WRT          DEFAULT WRITE
         TM    P1804OPT,P1804ERS  IS IT ERASE ?
         BNO   NOTERASE           EXIT IF NOT
         MVI   1(R6),WRT_EW       ERASE/WRITE
         B     DUNWRTE            EXIT
*
NOTERASE EQU   *
         TM    P1804OPT,P1804EAU  IS IT ERASEAUP ?
         BNO   DUNWRTE            EXIT IF NOT
         MVI   1(R6),WRT_EAU      ERASEAUP/WRITE
DUNWRTE  EQU   *
* SET UP WCC, ANY SETTINGS HERE OVERRIDE ALL CTRL SETTINGS FROM MAP
         MVC   2(1,R6),BMSWCC     SET MAP WCC
         TM    P1804OPT,P1804ALM+P1804FKB+P1804FRS TEST WCC BITS
         BZ    NOWCC              EXIT IF NO OVERRIDES
         MVI   2(R6),X'C0'+P1804ALM+P1804FKB+P1804FRS SET WCC BITS
NOWCC    EQU   *
         AHI   R6,3               BUMP OUTPUT POINTER
* SCAN MAP AND STRUCTURE
         SH    R5,BMSMHLL         R5=REMAINING MAP LENGTH
         BZ    SENDIT             EXIT IF NO FIELDS
         L     R8,P1804DSC        R8=INPUT MAP STRUCTURE ADDRESS
         USING DFHMAPST,R8
         TM    BMSMODE,BMSMHEXT   TIOAPFX=YES ?
         BNO   NOTPFX             EXIT IF NOT
         AHI   R8,12              ADJUST FOR TIOAPFX
NOTPFX   EQU   *
         LR    R9,R4              R9=NEW BASE FOR MAP FIELDS
         AH    R9,BMSMHLL         MISS MAP DESCRIPTOR
         USING BMSMDF,R9
FLDLOOP  EQU   *
*
* MAPONLY
*    EXTATT=NO
*       GROUP FIELD DESCRIPTOR...SBA,SF
*       GROUP FIELD ENTRY     ...SBA,DATA IF INITIAL
*       STANDARD              ...SBA,SF,DATA IF INITIAL
*    EXTATT=MAPONLY OR YES
*       GROUP FIELD DESCRIPTOR,NO COLOR...SBA,SF
*       GROUP FIELD DESCRIPTOR,COLOR   ...SBA,SFE,2,FA,COLOR
*       GROUP FIELD ENTRY              ...SBA,DATA IF INITIAL
*       STANDARD,NO COLOR              ...SBA,SF,DATA IF INITIAL
*       STANDARD,COLOR                 ...SBA,SFE,2,FA,COLOR,DATA
*
* DATAONLY (ONLY NAMED FIELDS ARE PROCESSED)
*    EXTATT=NO
*       SF WILL COME FROM THE STRUCTURE OVERRIDE AND IS OPTIONAL
*       DATA WILL COME FROM THE STRUCTURE AND IS OPTIONAL
*          GROUP FIELD DESCRIPTOR...SBA,SF
*          GROUP FIELD ENTRY     ...SBA,DATA
*          STANDARD              ...SBA,SF,DATA
*    EXTATT=YES
*       SF/FA WILL COME FROM THE STRUCTURE OVERRIDE AND IS OPTIONAL
*       COLOR WILL COME FROM THE STRUCTURE OVERRIDE AND IS OPTIONAL
*       DATA WILL COME FROM THE STRUCTURE AND IS OPTIONAL
*          GROUP FIELD DESCRIPTOR,NO COLOR...SBA,SF
*          GROUP FIELD DESCRIPTOR,COLOR   ...SBA,SFE,2,FA,COLOR
*          GROUP FIELD ENTRY              ...SBA,DATA
*          STANDARD,NO COLOR              ...SBA,SF,DATA
*          STANDARD,COLOR                 ...SBA,SFE,2,FA,COLOR,DATA
*
* NOT MAPONLY/DATAONLY
*    EXTATT=NO
*    SF WILL COME FROM THE MAP OR STRUCTURE OVERRIDE
*    DATA WILL COME FROM THE STRUCTURE OR INITIAL AND IS OPTIONAL
*       GROUP FIELD DESCRIPTOR...SBA,SF
*       GROUP FIELD ENTRY     ...SBA,DATA
*       STANDARD              ...SBA,SF,DATA
*
*    EXTATT=MAPONLY OR YES
*    SF/FA WILL COME FROM THE MAP OR STRUCTURE OVERRIDE
*    DATA WILL COME FROM THE STRUCTURE OR INITIAL AND IS OPTIONAL
*    FOR EXTATT=MAPONLY COLOR WILL COME FROM THE MAP AND IS OPTIONAL
*    FOR EXTATT=YES COLOR WILL COME FROM THE MAP OR STRUCTURE OVERRIDE
*    AND IS OPTIONAL
*       GROUP FIELD DESCRIPTOR,NO COLOR...SBA,SF
*       GROUP FIELD DESCRIPTOR,COLOR   ...SBA,SFE,2,FA,COLOR
*       GROUP FIELD ENTRY              ...SBA,DATA
*       STANDARD,NO COLOR              ...SBA,SF,DATA
*       STANDARD,COLOR                 ...SBA,SFE,2,FA,COLOR,DATA
*
         LH    R7,BMSFP           POSITION OF ATTRIBUTE BYTE
         BAL   R14,RELPOS         CALC RELATIVE POS RELATED TO MAP SIZE
         TM    P1804OPT,P1804MNY  IS IT MAPONLY ?
         BNO   FLDNTMNY           EXIT IF NOT
***********
* MAPONLY *
***********
         TM    BMSFDFB,BMSFDGFD   GROUP FIELD DESCRIPTOR ?
         BNO   FLDMPNTD           EXIT IF NOT
**************************************
* MAPONLY AND GROUP FIELD DESCRIPTOR *
**************************************
* EXTATT=NO
*    SBA,SF
* EXTATT=MAPONLY OR YES
*    NO COLOR...SBA,SF
*    COLOR   ...SBA,SFE,2,FA,COLOR
         TM    BMSMI,BMSMIXM      ANY EXTENDED MAP ATTRIBUTES ?
         BNO   MO_GFD             EXIT IF NONE
* EXTENDED ATTRIBUTES
         CLI   BMSFXC,X'00'       ANY MAP COLOUR ?
         BE    MO_GFD             EXIT IF NONE
* EXTENDED ATTRIBUTES AND COLOUR - 11....2902C0..42..
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         MVI   3(R6),SFE          SET SFE
         MVI   4(R6),X'02'        SET 2 HEX PAIRS FOLLOW
         MVI   5(R6),SFE_BFA      SET FA
         MVC   6(1,R6),BMSFA      ATTRIBUTE FROM MAP
         MVI   7(R6),SFE_COLOR    SET COLOR
         MVC   8(1,R6),BMSFXC     COLOUR FROM MAP
         AHI   R6,9               BUMP OUTPUT POINTER
         B     DOCURS             EXIT
*
MO_GFD   EQU   *
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         MVI   3(R6),SF           SET SF
         MVC   4(1,R6),BMSFA      ATTRIBUTE FROM MAP
         AHI   R6,5               BUMP OUTPUT POINTER
         B     DOCURS             EXIT
*
FLDMPNTD EQU   *
         TM    BMSFDFB,BMSFDGFE   GROUP FIELD ENTRY ?
         BNO   FLDMPNTE           EXIT IF NOT
*********************************
* MAPONLY AND GROUP FIELD ENTRY *
*********************************
* GFE ALWAYS HAS A STRUCTURE
* DATA WILL COME FROM INITIAL AND IS OPTIONAL
*    SBA,DATA
         TM    BMSFDFB,BMSFDDD    ANY INITIAL ?
         BNO   DOCURS             EXIT IF NONE
         AHI   R7,1               BUMP DATA POSITION
         BAL   R14,WRAP           TEST FOR ROW/SCREEN WRAP
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         AHI   R6,3               BUMP OUTPUT POINTER
         LA    R1,BMSDATA         ADDRESS VARIABLE FIELDS
         AH    R1,0(R1)           MISS PICIN LENGTH
         AHI   R1,2               MISS PICIN LENGTH FIELD
         AH    R1,0(R1)           MISS PICOUT LENGTH
         AHI   R1,2               MISS PICOUT LENGTH FIELD
         MVI   DATAIND,X'FF'      SET 'NO PREVIOUS SF' INDICATOR
         BAL   R14,DATAMOVE       MOVE DATA TO OUTPUT
         B     DOCURS             EXIT
*
FLDMPNTE EQU   *
******************************
* MAPONLY AND STANDARD ENTRY *
******************************
* EXTATT=NO
*    SBA,SF,DATA IF INITIAL
* EXTATT=MAPONLY OR YES
*    NO COLOR...SBA,SF,DATA IF INITIAL
*    COLOR   ...SBA,SFE,2,FA,COLOR,DATA IF INITIAL
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         TM    BMSMI,BMSMIXM      ANY EXTENDED ATTRIBUTES ?
         BNO   MO_STD             EXIT IF NONE
* EXTENDED ATTRIBUTES
         CLI   BMSFXC,X'00'       ANY MAP COLOUR ?
         BE    MO_STD             EXIT IF NONE
* EXTENDED ATTRIBUTES AND COLOUR - 11....2902C0..42..
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         MVI   3(R6),SFE          SET SFE
         MVI   4(R6),X'02'        SET 2 HEX PAIRS FOLLOW
         MVI   5(R6),SFE_BFA      SET FA
         MVC   6(1,R6),BMSFA      ATTRIBUTE FROM MAP
         MVI   7(R6),SFE_COLOR    SET COLOR
         MVC   8(1,R6),BMSFXC     COLOUR FROM MAP
         AHI   R6,9               BUMP OUTPUT POINTER
         B     MO_STD_I           EXIT
*
MO_STD   EQU   *
         MVI   3(R6),SF           SET SF
         MVC   4(1,R6),BMSFA      ATTRIBUTE FROM MAP
         AHI   R6,5               BUMP OUTPUT POINTER
MO_STD_I EQU   *
         TM    BMSFDFB,BMSFDDD    ANY INITIAL ?
         BNO   DOCURS             EXIT IF NONE
         LA    R1,BMSDATA         ADDRESS VARIABLE FIELDS
         AH    R1,0(R1)           MISS PICIN LENGTH
         AHI   R1,2               MISS PICIN LENGTH FIELD
         AH    R1,0(R1)           MISS PICOUT LENGTH
         AHI   R1,2               MISS PICOUT LENGTH FIELD
         BAL   R14,DATAMOVE       MOVE DATA TO OUTPUT
         B     DOCURS             EXIT
*
FLDNTMNY EQU   *
         TM    P1804OPT,P1804DNY  DATAONLY ?
         BNO   FLDNTDNY           EXIT IF NOT
************
* DATAONLY *
************
* ONLY NAMED FIELDS ARE PROCESSED
         TM    BMSFDFB,BMSFDNF    DOES A STRUCTURE EXIST ?
         BNO   DOCURS             EXIT IF NOT
         TM    BMSFDFB,BMSFDGFD   GROUP FIELD DESCRIPTOR ?
         BNO   FLDDTNTD           EXIT IF NOT
***************************************
* DATAONLY AND GROUP FIELD DESCRIPTOR *
***************************************
* NO DATA IS PRESENT, THE GFE ENTRIES CONTROL THE DATA
*
* EXTATT=NO
*    SF WILL COME FROM THE STRUCTURE OVERRIDE AND IS OPTIONAL
*       SBA,SF
* EXTATT=YES
*    SF/FA WILL COME FROM THE STRUCTURE OVERRIDE AND IS OPTIONAL
*    COLOR WILL COME FROM THE STRUCTURE OVERRIDE AND IS OPTIONAL
*       NO COLOR...SBA,SF
*       COLOR   ...SBA,SFE,2,FA,COLOR
         TM    BMSMI,BMSMIXD      ANY EXTENDED DSECT ATTRIBUTES ?
         BNO   DO_GFD             EXIT IF NONE
* EXTENDED ATTRIBUTES
         CLI   BMSCOLOR,X'00'     ANY COLOUR ATTRIBUTE OVERRIDE ?
         BE    DO_GFD             EXIT IF NONE
* EXTENDED ATTRIBUTES AND COLOUR - 11....29
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         MVI   3(R6),SFE          SET SFE
         MVI   4(R6),X'01'        ASSUME ONLY COLOR, NO ATT
         BAL   R14,ATTRTEST       ANY ATTRIBUTE OVERRIDE ?
         B     DO_COL_G           EXIT IF NONE
* EXTENDED ATTRIBUTES, ATT AND COLOUR - 11....2902C0..42..
         MVI   4(R6),X'02'        SET 2 HEX PAIRS FOLLOW
         MVI   5(R6),SFE_BFA      SET FA
         BAL   R14,VALATTR        VALIDATE STRUCTURE ATTRIBUTE
         MVC   6(1,R6),BMSATTR    ATTRIBUTE FROM STRUCTURE
         MVI   7(R6),SFE_COLOR    SET COLOR
         BAL   R14,VALCOLOR       VALIDATE STRUCTURE COLOUR ATTRIBUTE
         MVC   8(1,R6),BMSCOLOR   COLOUR FROM STRUCTURE
         AHI   R6,9               BUMP OUTPUT POINTER
         B     DOCURS             EXIT
*
DO_COL_G EQU   *
* EXTENDED ATTRIBUTES, COLOUR ONLY - 11....290142..
         MVI   5(R6),SFE_COLOR    SET COLOR
         BAL   R14,VALCOLOR       VALIDATE STRUCTURE COLOUR ATTRIBUTE
         MVC   6(1,R6),BMSCOLOR   COLOUR FROM STRUCTURE
         AHI   R6,7               BUMP OUTPUT POINTER
         B     DOCURS             EXIT
*
DO_GFD   EQU   *
         BAL   R14,ATTRTEST       ANY ATTRIBUTE OVERRIDE ?
         B     DOCURS             EXIT IF NONE
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         MVI   3(R6),SF           SET SF
         BAL   R14,VALATTR        VALIDATE STRUCTURE ATTRIBUTE
         MVC   4(1,R6),BMSATTR    ATTRIBUTE FROM STRUCTURE
         AHI   R6,5               BUMP OUTPUT POINTER
         B     DOCURS             EXIT
*
FLDDTNTD EQU   *
         TM    BMSFDFB,BMSFDGFE   GROUP FIELD ENTRY ?
         BNO   FLDDTNTE           EXIT IF NOT
**********************************
* DATAONLY AND GROUP FIELD ENTRY *
**********************************
* GFE ALWAYS HAS A STRUCTURE
* DATA WILL COME FROM THE STRUCTURE AND IS OPTIONAL
*    SBA,DATA
         CLI   BMSGRPDT,X'00'     ANY GFE STRUCTURE DATA ?
         BE    DOCURS             EXIT IF NONE
         AHI   R7,1               BUMP DATA POSITION
         BAL   R14,WRAP           TEST FOR ROW/SCREEN WRAP
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         AHI   R6,3               BUMP OUTPUT POINTER
         LA    R1,BMSGRPDT        ADDRESS GFE STRUCTURE DATA
         MVI   DATAIND,X'FF'      SET 'NO PREVIOUS SF' INDICATOR
         BAL   R14,DATAMOVE       MOVE DATA TO OUTPUT
         B     DOCURS             EXIT
*
FLDDTNTE EQU   *
*******************************
* DATAONLY AND STANDARD ENTRY *
*******************************
* EXTATT=NO
*    SF WILL COME FROM THE STRUCTURE OVERRIDE AND IS OPTIONAL
*    DATA WILL COME FROM THE STRUCTURE AND IS OPTIONAL
*       SBA,SF,DATA
* EXTATT=YES
*    SF/FA WILL COME FROM THE STRUCTURE OVERRIDE AND IS OPTIONAL
*    COLOR WILL COME FROM THE STRUCTURE OVERRIDE AND IS OPTIONAL
*    DATA WILL COME FROM THE STRUCTURE AND IS OPTIONAL
*       NO COLOR...SBA,SF,DATA
*       COLOR   ...SBA,SFE,2,FA,COLOR,DATA
         MVI   FLDDTSBA,X'00'     RESET SBA SWITCH
         TM    BMSMI,BMSMIXD      ANY EXTENDED DSECT ATTRIBUTES ?
         BNO   DO_STD             EXIT IF NONE
* EXTENDED ATTRIBUTES
         CLI   BMSCOLOR,X'00'     ANY COLOUR ATTRIBUTE OVERRIDE ?
         BE    DO_STD             EXIT IF NONE
* EXTENDED ATTRIBUTES AND COLOUR - 11....29
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         MVI   3(R6),SFE          SET SFE
         MVI   4(R6),X'01'        ASSUME ONLY COLOR, NO ATT
         MVI   FLDDTSBA,X'FF'     SET SBA SWITCH
         BAL   R14,ATTRTEST       ANY ATTRIBUTE OVERRIDE ?
         B     DO_COL_S           EXIT IF NONE
* EXTENDED ATTRIBUTES, ATT AND COLOUR - 11....2902C0..42..
         MVI   4(R6),X'02'        SET 2 HEX PAIRS FOLLOW
         MVI   5(R6),SFE_BFA      SET FA
         BAL   R14,VALATTR        VALIDATE STRUCTURE ATTRIBUTE
         MVC   6(1,R6),BMSATTR    ATTRIBUTE FROM STRUCTURE
         MVI   7(R6),SFE_COLOR    SET COLOR
         BAL   R14,VALCOLOR       VALIDATE STRUCTURE COLOUR ATTRIBUTE
         MVC   8(1,R6),BMSCOLOR   COLOUR FROM STRUCTURE
         AHI   R6,9               BUMP OUTPUT POINTER
         B     FLDDTNAT           EXIT
*
DO_COL_S EQU   *
* EXTENDED ATTRIBUTES, COLOUR ONLY - 11....290142..
         MVI   5(R6),SFE_COLOR    SET COLOR
         BAL   R14,VALCOLOR       VALIDATE STRUCTURE COLOUR ATTRIBUTE
         MVC   6(1,R6),BMSCOLOR   COLOUR FROM STRUCTURE
         AHI   R6,7               BUMP OUTPUT POINTER
         B     FLDDTNAT           EXIT
*
DO_STD   EQU   *
         BAL   R14,ATTRTEST       ANY ATTRIBUTE OVERRIDE ?
         B     FLDDTNAT           EXIT IF NONE
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         MVI   3(R6),SF           SET SF
         BAL   R14,VALATTR        VALIDATE STRUCTURE ATTRIBUTE
         MVC   4(1,R6),BMSATTR    ATTRIBUTE FROM STRUCTURE
         AHI   R6,5               BUMP OUTPUT POINTER
         MVI   FLDDTSBA,X'FF'     SET SBA SWITCH
FLDDTNAT EQU   *
         LA    R1,BMSOUT          SET EXTATT=NO DATA POSITION
         TM    BMSMI,BMSMIXD      ANY EXTENDED DSECT ATTRIBUTES ?
         BNO   DO_EXTAT           EXIT IF NONE
         LA    R1,BMSOUT2         SET EXTATT DATA POSITION
DO_EXTAT EQU   *
         CLI   0(R1),X'00'        ANY STRUCTURE DATA ?
         BE    DOCURS             EXIT IF NONE
         CLI   FLDDTSBA,X'FF'     SBA SWITCH ON ?
         BE    FLDDTNSB           EXIT IF IT IS
* SBA NOT SET
         AHI   R7,1               BUMP DATA POSITION
         BAL   R14,WRAP           TEST FOR ROW/SCREEN WRAP
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         AHI   R6,3               BUMP OUTPUT POINTER
         MVI   DATAIND,X'FF'      SET 'NO PREVIOUS SF' INDICATOR
FLDDTNSB EQU   *
         LA    R1,BMSOUT          SET EXTATT=NO DATA POSITION
         TM    BMSMI,BMSMIXD      ANY EXTENDED DSECT ATTRIBUTES ?
         BNO   DO_EXTA2           EXIT IF NONE
         LA    R1,BMSOUT2         SET EXTATT DATA POSITION
DO_EXTA2 EQU   *
         BAL   R14,PIC            PROCESS PICOUT IF ANY
         BAL   R14,DATAMOVE       MOVE DATA TO OUTPUT
         B     DOCURS             EXIT
FLDDTSBA DC    H'0'               SBA SWITCH
*
FLDNTDNY EQU   *
************************
* NOT MAPONLY/DATAONLY *
************************
         TM    BMSFDFB,BMSFDGFD   GROUP FIELD DESCRIPTOR ?
         BNO   FLDBHNTD           EXIT IF NOT
***********************************************
* NOT MAPONLY/DATAONLY GROUP FIELD DESCRIPTOR *
***********************************************
* NO DATA IS PRESENT, THE GFE ENTRIES CONTROL THE DATA
*
* EXTATT=NO
*    SF WILL COME FROM THE MAP OR STRUCTURE OVERRIDE
*       SBA,SF
*
* EXTATT=MAPONLY OR YES
*    SF/FA WILL COME FROM THE MAP OR STRUCTURE OVERRIDE
*    FOR EXTATT=MAPONLY COLOR WILL COME FROM THE MAP AND IS OPTIONAL
*    FOR EXTATT=YES COLOR WILL COME FROM THE MAP OR STRUCTURE OVERRIDE
*    AND IS OPTIONAL
*       NO COLOR...SBA,SF
*       COLOR   ...SBA,SFE,2,FA,COLOR
         TM    BMSMI,BMSMIXM+BMSMIXD ANY EXTENDED ATTRIBUTES ?
         BZ    NMD_GFD            EXIT IF NONE
* EXTENDED ATTRIBUTES (MAP OR MAP/STRUCTURE)
         TM    BMSMI,BMSMIXD      ANY EXTENDED DSECT ATTRIBUTES ?
         BNO   NMD_MEX            EXIT IF NONE
* EXTENDED ATTRIBUTES (STRUCTURE)
         TM    BMSFDFB,BMSFDNF    DOES A STRUCTURE EXIST ?
         BNO   NMD_MEX            EXIT IF NOT
* EXTENDED ATTRIBUTES AND FIELD HAS A STRUCTURE
         CLI   BMSCOLOR,X'00'     ANY COLOUR ATTRIBUTE OVERRIDE ?
         BNE   NMD_EXT            EXIT IF WE HAVE
NMD_MEX  EQU   *
* EXTENDED ATTRIBUTES (MAP)
         CLI   BMSFXC,X'00'       ANY MAP COLOUR ?
         BE    NMD_GFD            EXIT IF NONE
NMD_EXT  EQU   *
* EXTENDED ATTRIBUTES AND COLOUR - 11....2902C0..42..
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         MVI   3(R6),SFE          SET SFE
         MVI   4(R6),X'02'        SET 2 HEX PAIRS FOLLOW
         MVI   5(R6),SFE_BFA      SET FA
         BAL   R14,ATTRTEST       ANY ATTRIBUTE OVERRIDE ?
         B     NMD_MAT            EXIT IF NONE
         BAL   R14,VALATTR        VALIDATE STRUCTURE ATTRIBUTE
         MVC   6(1,R6),BMSATTR    ATTRIBUTE FROM STRUCTURE
         B     NMD_COL            EXIT
*
NMD_MAT  EQU   *
         MVC   6(1,R6),BMSFA      ATTRIBUTE FROM MAP
NMD_COL  EQU   *
         MVI   7(R6),SFE_COLOR    SET COLOR
         TM    BMSMI,BMSMIXD      ANY EXTENDED DSECT ATTRIBUTES ?
         BNO   NMD_MX2            EXIT IF NONE
* EXTENDED ATTRIBUTES (STRUCTURE)
         TM    BMSFDFB,BMSFDNF    DOES A STRUCTURE EXIST ?
         BNO   NMD_MX2            EXIT IF NOT
* EXTENDED ATTRIBUTES AND FIELD HAS A STRUCTURE
         CLI   BMSCOLOR,X'00'     ANY COLOUR ATTRIBUTE OVERRIDE ?
         BE    NMD_MX2            EXIT IF NONE
         BAL   R14,VALCOLOR       VALIDATE STRUCTURE COLOUR ATTRIBUTE
         MVC   8(1,R6),BMSCOLOR   COLOUR FROM STRUCTURE
         B     NMD_INC            EXIT
*
NMD_MX2  EQU   *
* EXTENDED ATTRIBUTES (MAP)
         MVC   8(1,R6),BMSFXC     COLOUR FROM MAP
NMD_INC  EQU   *
         AHI   R6,9               BUMP OUTPUT POINTER
         B     DOCURS             EXIT
*
NMD_GFD  EQU   *
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         MVI   3(R6),SF           SET SF
         BAL   R14,ATTRTEST       ANY ATTRIBUTE OVERRIDE ?
         B     FLDBDMAT           EXIT IF NONE
         BAL   R14,VALATTR        VALIDATE STRUCTURE ATTRIBUTE
         MVC   4(1,R6),BMSATTR    ATTRIBUTE FROM STRUCTURE
         B     FLDBDNAT           EXIT
*
FLDBDMAT EQU   *
         MVC   4(1,R6),BMSFA      ATTRIBUTE FROM MAP
FLDBDNAT EQU   *
         AHI   R6,5               BUMP OUTPUT POINTER
         B     DOCURS             EXIT
*
FLDBHNTD EQU   *
         TM    BMSFDFB,BMSFDGFE   GROUP FIELD ENTRY ?
         BNO   FLDBHNTE           EXIT IF NOT
******************************************
* NOT MAPONLY/DATAONLY GROUP FIELD ENTRY *
******************************************
* GFE ALWAYS HAS A STRUCTURE
* DATA WILL COME FROM THE STRUCTURE OR INITIAL AND IS OPTIONAL
*    SBA,DATA
         TM    BMSFDFB,BMSFDDD    ANY INITIAL ?
         BO    FLDBEGOT           EXIT IF THERE IS
         CLI   BMSGRPDT,X'00'     ANY GFE STRUCTURE DATA ?
         BE    DOCURS             EXIT IF NONE
FLDBEGOT EQU   *
         AHI   R7,1               BUMP DATA POSITION
         BAL   R14,WRAP           TEST FOR ROW/SCREEN WRAP
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         AHI   R6,3               BUMP OUTPUT POINTER
         LA    R1,BMSGRPDT        ADDRESS GFE STRUCTURE DATA
         CLI   BMSGRPDT,X'00'     ANY GFE STRUCTURE DATA ?
         BNE   FLDBEDAT           EXIT IF THERE IS
         LA    R1,BMSDATA         ADDRESS VARIABLE FIELDS
         AH    R1,0(R1)           MISS PICIN LENGTH
         AHI   R1,2               MISS PICIN LENGTH FIELD
         AH    R1,0(R1)           MISS PICOUT LENGTH
         AHI   R1,2               MISS PICOUT LENGTH FIELD
FLDBEDAT EQU   *
         MVI   DATAIND,X'FF'      SET 'NO PREVIOUS SF' INDICATOR
         BAL   R14,DATAMOVE       MOVE DATA TO OUTPUT
         B     DOCURS             EXIT
*
FLDBHNTE EQU   *
***************************************
* NOT MAPONLY/DATAONLY STANDARD ENTRY *
***************************************
* EXTATT=NO
*    SF WILL COME FROM THE MAP OR STRUCTURE OVERRIDE
*    DATA WILL COME FROM THE STRUCTURE OR INITIAL AND IS OPTIONAL
*       SBA,SF,DATA
*
* EXTATT=MAPONLY OR YES
*    SF/FA WILL COME FROM THE MAP OR STRUCTURE OVERRIDE
*    DATA WILL COME FROM THE STRUCTURE OR INITIAL AND IS OPTIONAL
*    FOR EXTATT=MAPONLY COLOR WILL COME FROM THE MAP AND IS OPTIONAL
*    FOR EXTATT=YES COLOR WILL COME FROM THE MAP OR STRUCTURE OVERRIDE
*    AND IS OPTIONAL
*       NO COLOR...SBA,SF,DATA
*       COLOR   ...SBA,SFE,2,FA,COLOR,DATA
         TM    BMSMI,BMSMIXM+BMSMIXD ANY EXTENDED ATTRIBUTES ?
         BZ    NMD_STD            EXIT IF NONE
* EXTENDED ATTRIBUTES (MAP OR MAP/STRUCTURE)
         TM    BMSMI,BMSMIXD      ANY EXTENDED DSECT ATTRIBUTES ?
         BNO   NMD_MEXS           EXIT IF NONE
* EXTENDED ATTRIBUTES (STRUCTURE)
         TM    BMSFDFB,BMSFDNF    DOES A STRUCTURE EXIST ?
         BNO   NMD_MEXS           EXIT IF NOT
* EXTENDED ATTRIBUTES AND FIELD HAS A STRUCTURE
         CLI   BMSCOLOR,X'00'     ANY COLOUR ATTRIBUTE OVERRIDE ?
         BNE   NMD_EXTS           EXIT IF WE HAVE
NMD_MEXS EQU   *
* EXTENDED ATTRIBUTES (MAP)
         CLI   BMSFXC,X'00'       ANY MAP COLOUR ?
         BE    NMD_STD            EXIT IF NONE
NMD_EXTS EQU   *
* EXTENDED ATTRIBUTES AND COLOUR - 11....2902C0..42..
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         MVI   3(R6),SFE          SET SFE
         MVI   4(R6),X'02'        SET 2 HEX PAIRS FOLLOW
         MVI   5(R6),SFE_BFA      SET FA
         BAL   R14,ATTRTEST       ANY ATTRIBUTE OVERRIDE ?
         B     NMD_MATS           EXIT IF NONE
         BAL   R14,VALATTR        VALIDATE STRUCTURE ATTRIBUTE
         MVC   6(1,R6),BMSATTR    ATTRIBUTE FROM STRUCTURE
         B     NMD_COLS           EXIT
*
NMD_MATS EQU   *
         MVC   6(1,R6),BMSFA      ATTRIBUTE FROM MAP
NMD_COLS EQU   *
         MVI   7(R6),SFE_COLOR    SET COLOR
         TM    BMSMI,BMSMIXD      ANY EXTENDED DSECT ATTRIBUTES ?
         BNO   NMD_MX2S           EXIT IF NONE
* EXTENDED ATTRIBUTES (STRUCTURE)
         TM    BMSFDFB,BMSFDNF    DOES A STRUCTURE EXIST ?
         BNO   NMD_MEXS           EXIT IF NOT
* EXTENDED ATTRIBUTES AND FIELD HAS A STRUCTURE
         CLI   BMSCOLOR,X'00'     ANY COLOUR ATTRIBUTE OVERRIDE ?
         BE    NMD_MX2S           EXIT IF NONE
         BAL   R14,VALCOLOR       VALIDATE STRUCTURE COLOUR ATTRIBUTE
         MVC   8(1,R6),BMSCOLOR   COLOUR FROM STRUCTURE
         B     NMD_INCS           EXIT
*
NMD_MX2S EQU   *
* EXTENDED ATTRIBUTES (MAP)
         MVC   8(1,R6),BMSFXC     COLOUR FROM MAP
NMD_INCS EQU   *
         AHI   R6,9               BUMP OUTPUT POINTER
         B     NMD_DATA           EXIT
*
NMD_STD  EQU   *
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         MVI   3(R6),SF           SET SF
         TM    BMSFDFB,BMSFDNF    DOES A STRUCTURE EXIST ?
         BNO   FLDBSMAT           EXIT IF NOT
         BAL   R14,ATTRTEST       ANY ATTRIBUTE OVERRIDE ?
         B     FLDBSMAT           EXIT IF NONE
         BAL   R14,VALATTR        VALIDATE STRUCTURE ATTRIBUTE
         MVC   4(1,R6),BMSATTR    ATTRIBUTE FROM STRUCTURE
         B     FLDBSNAT           EXIT
*
FLDBSMAT EQU   *
         MVC   4(1,R6),BMSFA      ATTRIBUTE FROM MAP
FLDBSNAT EQU   *
         AHI   R6,5               BUMP OUTPUT POINTER
NMD_DATA EQU   *
* CHECK IF WE HAVE ANY DATA
         TM    BMSFDFB,BMSFDDD    ANY INITIAL ?
         BO    FLDBSGOT           EXIT IF THERE IS
         TM    BMSFDFB,BMSFDNF    DOES A STRUCTURE EXIST ?
         BNO   DOCURS             EXIT IF NOT
         LA    R1,BMSOUT          SET EXTATT=NO DATA POSITION
         TM    BMSMI,BMSMIXD      ANY EXTENDED DSECT ATTRIBUTES ?
         BNO   NMD_EXD            EXIT IF NONE
         LA    R1,BMSOUT2         SET EXTATT DATA POSITION
NMD_EXD  EQU   *
         CLI   0(R1),X'00'        ANY STRUCTURE DATA ?
         BE    DOCURS             EXIT IF NONE
FLDBSGOT EQU   *
* EITHER INITIAL OR STRUCTURE DATA
         TM    BMSFDFB,BMSFDNF    DOES A STRUCTURE EXIST ?
         BNO   FLDBSINI           EXIT IF NOT
         LA    R1,BMSOUT          SET EXTATT=NO DATA POSITION
         TM    BMSMI,BMSMIXD      ANY EXTENDED DSECT ATTRIBUTES ?
         BNO   DO_EXD2            EXIT IF NONE
         LA    R1,BMSOUT2         SET EXTATT DATA POSITION
DO_EXD2  EQU   *
         CLI   0(R1),X'00'        ANY STRUCTURE DATA ?
         BE    FLDBSINI           EXIT IF NONE
         BAL   R14,PIC            PROCESS PICOUT IF ANY
         B     FLDBSDAT           EXIT
*
FLDBSINI EQU   *
* POINT TO INITIAL
         LA    R1,BMSDATA         ADDRESS VARIABLE FIELDS
         AH    R1,0(R1)           MISS PICIN LENGTH
         AHI   R1,2               MISS PICIN LENGTH FIELD
         AH    R1,0(R1)           MISS PICOUT LENGTH
         AHI   R1,2               MISS PICOUT LENGTH FIELD
FLDBSDAT EQU   *
         BAL   R14,DATAMOVE       MOVE DATA TO OUTPUT
*
DOCURS   EQU   *
* CONSTRUCT CURSOR POSITION...ALWAYS AS SBA,IC
*
* IF CURSOR() SPECIFIED...USE THAT
*
* MAPONLY
*    CURSOR WILL COME FROM BMSCURSR (ATTRIBUTE IC)
*    OR DEFAULT TO ZERO (TOP LEFT)
*
* DATAONLY
*    IF CURSOR (NO POS), TEST FOR SYMBOLIC CURSOR
*    ONLY THE FIRST IS USED
*
* NEITHER MAPONLY NOR DATAONLY
*    IF CURSOR PARM (NO POS), TEST FOR SYMBOLIC CURSOR
*    ONLY THE FIRST IS USED
*    IF NOT, USE BMSCURSR
*
         CLI   P1804CRS,X'FF'     ANY VALID CURSOR() ?
         BE    NOCRSPOS           EXIT IF NOT
* CURSOR(NNN) OVERRIDES EVERYTHING
         LH    R7,P1804CRS        R7=CURSOR ON SEND MAP
         MVI   P1804CRS,X'FF'     INVALIDATE CURSOR()
         OI    BMSCURSR,X'80'     INVALIDATE CURSOR ADDRESS
         B     SETCURS            EXIT
*
NOCRSPOS EQU   *
         TM    P1804OPT,P1804MNY  IS IT MAPONLY ?
         BNO   NTMAPLY2           EXIT IF NOT
* MAPONLY
*    CURSOR WILL COME FROM BMSCURSR (ATTRIBUTE IC)
*    OF DEFAULT TO ZERO (TOP LEFT)
         TM    BMSCURSR,X'80'     USED CURSOR ADDRESS ?
         BO    NEXTFLD            EXIT IF WE HAVE
         LH    R7,BMSCURSR        R7=IC CURSOR OR ZERO DEFAULT
         OI    BMSCURSR,X'80'     INVALIDATE CURSOR ADDRESS
         B     CNVDTPOS           EXIT
*
NTMAPLY2 EQU   *
         TM    P1804OPT,P1804DNY  IS IT DATAONLY ?
         BNO   NTMPDT2            EXIT IF NOT
* DATAONLY
*    IF CURSOR (NO POS), TEST FOR SYMBOLIC CURSOR
*    ONLY THE FIRST IS USED
         TM    BMSFDFB,BMSFDNF    DOES A STRUCTURE EXIST ?
         BNO   NEXTFLD            EXIT IF NOT
* DATAONLY AND STRUCTURE
         TM    P1804OPT,P1804CSM  IS SYMBOLIC CURSOR REQUESTED ?
         BNO   NEXTFLD            EXIT IF NOT
* DATAONLY AND STRUCTURE AND SYMBOLIC CURSOR REQUESTED
         CHHSI BMSLEN,X'FFFF'     IS IT MARKED ?
         BNE   NEXTFLD            EXIT IF NOT
         NI    P1804OPT,255-P1804CSM DON'T DO THIS AGAIN
         LH    R7,BMSFP           R7=ATTRIBUTE POSITION
         AHI   R7,1               R7=FIELD POSITION
         CHI   R7,1920            SCREEN WRAP ?
         BNE   CNVDTPOS           EXIT IF NOT
         SR    R7,R7              CURSOR AT R1/C1
         B     CNVDTPOS           EXIT
*
NTMPDT2  EQU   *
* NEITHER MAPONLY NOR DATAONLY
*    IF CURSOR (NO POS), TEST FOR SYMBOLIC CURSOR
*    ONLY THE FIRST IS USED
*    IF NOT, USE BMSCURSR
         TM    BMSFDFB,BMSFDNF    DOES A STRUCTURE EXIST ?
         BNO   USEIC              EXIT IF NOT
* STRUCTURE EXISTS
         TM    P1804OPT,P1804CSM  IS SYMBOLIC CURSOR REQUESTED ?
         BNO   USEIC              EXIT IF NOT
* STRUCTURE AND SYMBOLIC CURSOR REQUESTED
         CHHSI BMSLEN,X'FFFF'     IS IT MARKED ?
         BNE   NEXTFLD            EXIT IF NOT
         NI    P1804OPT,255-P1804CSM DON'T DO THIS AGAIN
         LH    R7,BMSFP           R7=ATTRIBUTE POSITION
         AHI   R7,1               R7=FIELD POSITION
         CHI   R7,1920            SCREEN WRAP ?
         BNE   CNVDTPOS           EXIT IF NOT
         SR    R7,R7              CURSOR AT R1/C1
         B     CNVDTPOS           EXIT
*
USEIC    EQU   *
         TM    BMSCURSR,X'80'     USED CURSOR ADDRESS ?
         BO    NEXTFLD            EXIT IF WE HAVE
         LH    R7,BMSCURSR        R7=IC CURSOR OR ZERO DEFAULT
         OI    BMSCURSR,X'80'     INVALIDATE CURSOR ADDRESS
CNVDTPOS EQU   *
         BAL   R14,RELPOS         CALC RELATIVE POS RELATED TO MAP SIZE
SETCURS  EQU   *
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         MVI   3(R6),IC           SET IC
         AHI   R6,4               BUMP OUTPUT POINTER
*
NEXTFLD  EQU   *
         TM    BMSFDFB,BMSFDNF    DOES A STRUCTURE EXIST ?
         BNO   FLDBYP             EXIT IF NOT
* MAP STRUCTURE EXISTS
*    A GROUP FIELD DESCRIPTOR IS 3 (+1 IF EXTATT=YES)
*    A GROUP FIELD ENTRY IS FIELD LENGTH
*    ALL OTHERS ARE 3+FIELD LENGTH (+1 IF EXTATT=YES)
         TM    BMSFDFB,BMSFDGFD   GROUP FIELD DESCRIPTOR ?
         BNO   FLDNTGFD           EXIT IF NOT
* GROUP FIELD DESCRIPTOR
         AHI   R8,3               BUMP OVER PREFIX
         TM    BMSMI,BMSMIXD      ANY EXTENDED DSECT ATTRIBUTES ?
         BNO   FLDBYP             EXIT IF NONE
         AHI   R8,1               BUMP OVER COLOR
         B     FLDBYP             EXIT
*
FLDNTGFD EQU   *
         TM    BMSFDFB,BMSFDGFE   GROUP FIELD ENTRY ?
         BNO   FLDNTGFE           EXIT IF NOT
* GROUP FIELD ENTRY
         AH    R8,BMSFL           BUMP OVER FIELD LENGTH
         B     FLDBYP             EXIT
*
FLDNTGFE EQU   *
* STANDARD ENTRY
* BYPASS STRUCTURE ENTRY
         AHI   R8,3               BUMP OVER PREFIX
         AH    R8,BMSFL           BUMP OVER FIELD LENGTH
         TM    BMSMI,BMSMIXD      ANY EXTENDED DSECT ATTRIBUTES ?
         BNO   FLDBYP             EXIT IF NONE
         AHI   R8,1               BUMP OVER COLOR
FLDBYP   EQU   *
* BYPASS THIS FIELD ENTRY
         SH    R5,BMSMDF          R5=REMAINING MAP LENGTH
         AH    R9,BMSMDF          BUMP TO NEXT FIELD
         LTR   R5,R5              ANY MAP REMAINING ?
         BNZ   FLDLOOP            LOOP IF SOME LEFT
*
SENDIT   EQU   *
         NI    BMSCURSR,X'7F'     RESTORE CURSOR ADDRESS
         L     R1,P1804OUT        R1=OUTPUT AREA
         SR    R6,R1              R6=STREAM LENGTH
         CLC   TCTTETI,=C'SQ01'   SEQUENTIAL TERMINAL ?
         BNE   NOTSEQ             EXIT IF NOT
         LR    R0,R6              R0=STREAM LENGTH
         LR    R14,R1             R14=OUTPUT AREA
         L     R1,TCTTEQDO        R1=SEND FILE DCB
         USING IHADCB,R1
         LR    R4,R6              R4=LENGTH
         AHI   R4,2               ALLOW FOR CRLF
         ST    R4,DCBBLKSIF       SAVE BLOCKSIZE
         ST    R4,DCBLRECLF       SAVE LRECL
         AHI   R4,-2              RESTORE LENGTH
         LA    R4,0(R14,R4)       ADDRESS 2 BYTES FOLLOWING DATA
         MVC   SAVEDATA,0(R4)     SAVE THE 2 BYTES
         MVC   0(2,R4),=X'0D0A'   SET CRLF
         PUT   (R1),(R14)         WRITE DATA STREAM
         MVC   0(2,R4),SAVEDATA   RESTORE THE 2 BYTES
         L     R1,TCTTEQDO        R1=SEND FILE DCB
         L     R0,DCBBLKSIF       RESTORE LENGTH+2
         AHI   R0,-2              LENGTH-2
         DROP  R1
         LR    R1,R14             RESTORE OUTPUT AREA
*
NOTSEQ   EQU   *
* IF SET IS SPECIFIED, NO DATA IS SENT, IT IS RETURNED TO THE APP
         STH   R6,P1804OAL        SET DATA STREAM LENGTH
         CLI   P1804SET,X'FF'     IS SET SPECIFIED ?
         BE    RETURN             EXIT IF IT IS
         TPUT  (R1),(R6),FULLSCR  SEND TN3270 DATA STREAM
RETURN   EQU   *
         CLI   P1804NED,X'FF'     NOEDF ?
         BE    NOEDFA             EXIT IF IT IS
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         BNE   NOEDFA             EXIT IF NOT
         MVI   TCTTEEBA,X'FF'     SET 'AFTER' INTERCEPT
         MVI   TCTTEEDL,X'00'     SET NORMAL LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
*
NOEDFA   EQU   *
         PR    ,                  UNSTACK AND RETURN TO MACRO
*
SAVEDATA DS    H
*
MAPFAIL1 EQU   *
* MAP NOT FOUND
         MVC   EIBRESP2,=F'1'     SET EIBRESP2
         B     MAPFAIL            EXIT
*
MAPFAIL8 EQU   *
* ERROR WHILE PROCESSING PICOUT
*    DATA LONGER THAN 31 DIGITS
*    DATA IS NOT NUMERIC
*    TOO MUCH DATA FOR THE EDIT PATTERN
         L     R6,PICR6           RESTORE OUTPUT POINTER
         MVC   EIBRESP2,=F'8'     SET EIBRESP2
         B     MAPFAIL            EXIT
*
MAPFAIL9 EQU   *
* INVALID BMSATTR OR BMSCOLOR STRUCTURE ATTRIBUTE
         MVC   EIBRESP2,=F'9'     SET EIBRESP2
MAPFAIL  EQU   *
* WHATEVER MAPFAIL HAS OCCURRED, THE MAP SO FAR CONSTRUCTED IS SENT
         MVI   EIBRCODE,X'04'     SET EIBRCODE
         MVC   EIBRESP,DFHRESP(MAPFAIL) SET EIBRESP=MAPFAIL
         ICM   R14,15,P1804RSP    R14=RESP ADDRESS
         BZ    DORESP2            EXIT IF NONE
         MVC   0(4,R14),EIBRESP   SET RESP
DORESP2  EQU   *
         ICM   R14,15,P1804RS2    R14=RESP2 ADDRESS
         BZ    SENDIT             EXIT IF NONE
         MVC   0(4,R14),EIBRESP2  SET RESP2
         B     SENDIT             EXIT
*
INVMPSZ  EQU   *
* BAD MAP DIMENSIONS
         MVI   EIBRCODE,X'08'     SET EIBRCODE
         MVI   EIBRCODE+3,C' '    SET EIBRCODE+3 TO GENERIC 3270
         MVC   EIBRESP,DFHRESP(INVMPSZ) SET EIBRESP=INVMPSZ
         B     DORSPI             EXIT
*
INVREQ   EQU   *
* NON-TERMINAL TASK
         MVI   EIBRCODE,X'01'     SET EIBRCODE
         MVI   EIBRCODE+3,C' '    SET EIBRCODE+3 TO GENERIC 3270
         MVC   EIBRESP,DFHRESP(INVREQ) SET EIBRESP=INVREQ
DORSPI   EQU   *
         ICM   R14,15,P1804RSP    R14=RESP ADDRESS
         BZ    DORSP2I            EXIT IF NONE
         MVC   0(4,R14),EIBRESP   SET RESP
DORSP2I  EQU   *
         ICM   R14,15,P1804RS2    R14=RESP2 ADDRESS
         BZ    RETURN             EXIT IF NONE
         MVC   0(4,R14),EIBRESP2  SET RESP2
         B     RETURN             RETURN
*
* SUBROUTINES
*
RELPOS   EQU   *
* CALCULATE SCREEN POSITION RELATED TO MAP SIZE
* INCLUDE OFFSET INDICATED BY LINE= AND COLUMN= FROM DFHMDI
*
* R7 = POSITION (OFFSET 0) AND RESULT
*
*              1         2         3    3
*     1        0         0         0    5
*    +-----------------------------------
*  1 |
*  2 |@.....@
*  3 |
*    +-----------------------------------
*
*  MAP SIZE IS 3x35
*  @=ATTRIBUTE
*  ATTRIBUTE POS IS 35 (OFFSET 0)
*  35+1=36 (OFFSET 1)
*
*  THE OUTGOING ATTRIBUTE IS 80 (OFFSET 0)
*
*  36/35= QUOTIENT=ROW 1 (OFFSET 0)  REMAINDER=COLUMN 1 (OFFSET 1)
*  1*80=80+1=81-1=80 (-1 FOR OFFSET 0)
         AHI   R7,1               ATTRIBUTE POS (OFFSET 1)
         SR    R0,R0              CLEAR R0
         LR    R1,R7              R1=POSITION
         SR    R12,R12            CLEAR R12
         IC    R12,BMSMW          R12=MAP WIDTH
         DR    R0,R12             R0=COLUMN  R1=ROW
         LTR   R0,R0              POS AT RIGHT-HAND EDGE ?
         BNZ   RELSAVE            EXIT IF NOT
         IC    R0,BMSMW           MAKE IT RIGHT-HAND EDGE
         BCTR  R1,0               ... OF PREVIOUS ROW
RELSAVE  EQU   *
         STM   R0,R1,RELCOL       SAVE TRUE MAP COL/ROW FOR WRAP TEST
RELWRAP  EQU   *
         SR    R12,R12            CLEAR R12
         IC    R12,BMSMSL         R12=MAP OFFSET ROW
         AR    R1,R12             ADD OFFSET
         BCTR  R1,0                          ROW-1
         SR    R12,R12            CLEAR R12
         IC    R12,BMSMSC         R12=MAP OFFSET COLUMN
         AR    R0,R12             ADD OFFSET
         BCTR  R0,0                          COLUMN-1
         MS    R1,=F'80'          R1=ROW*SCREEN WIDTH
         AR    R1,R0              ADD COLUMN
         BCTR  R1,0               -1 FOR OFFSET 0
         LR    R7,R1              REPLACE INPUT WITH RESULT
         BR    R14                RETURN
RELCOL   DS    F                  MAP COL AS OFFSET 1
RELROW   DS    F                  MAP ROW AS OFFSET 0
*
WRAP     EQU   *
* WHEN WE INCREMENT THE POS FOR ANY REASON, WE MUST TEST TO SEE
* IF THE COL EXCEEDS THE MAP SIZE. IF IT DOES AN SBA MUST BE
* INSERTED TO PLACE THE DATA BYTE ON THE NEXT ROW.
* THIS INCLUDES WRAPPING FROM END TO START OF SCREEN.
*
* R7  = POSITION IN THE 24X80 SCREEN AFTER INCREMENT
*
         ASI   RELCOL,1           MAP COLUMN+1
         CLC   RELCOL+3(1),BMSMW  WRAPPED ROW ?
         BNHR  R14                RETURN IF NOT
* ROW WRAP HAS OCCURRED
         MVI   RELCOL+3,X'01'     SET MAP COLUMN=1
         ASI   RELROW,2           NEXT MAP ROW AS OFFSET 1
         CLC   RELROW+3(1),BMSML  WRAPPED SCREEN ?
         BNH   WRAPNTSC           EXIT IF NOT
* SCREEN WRAP HAS OCCURRED
         MVI   RELROW+3,X'01'     SET MAP ROW=1
WRAPNTSC EQU   *
         ASI   RELROW,-1          RETURN ROW TO OFFSET 0
         LM    R0,R1,RELCOL       RESTORE MAP COL/ROW
         B     RELWRAP            EXIT
*
SBACONV  EQU   *
* CONVERT POSITION TO SBA
*
* R7  = POSITION
* R12 = RESULT
*
         STM   R0,R1,SBAR0R1      SAVE R0-R1
         SR    R0,R0              CLEAR R0
         LR    R1,R7              R1=POSITION
         D     R0,=F'64'          R0=COL OFFSET  R1=ROW OFFSET
         LA    R15,SBATAB(R1)     R15=SBA TABLE ADDRESS+ROW INDEX
         ICM   R12,2,0(R15)       INSERT HIGH SBA
         LR    R1,R0              SET COL OFFSET
         LA    R15,SBATAB(R1)     R15=SBA TABLE ADDRESS+COL INDEX
         ICM   R12,1,0(R15)       INSERT LOW SBA
         LM    R0,R1,SBAR0R1      RESTORE R0-R1
         BR    R14                RETURN
SBAR0R1  DS    2F
*
DATAMOVE EQU   *
* MOVE DATA TO OUTPUT, ELIMINATE NULLS
* IF 1ST BYTE OF DATA=X'FF' AND INITIAL IS SET
*    IT'S A SPECIAL XINIT, USE RA FOR THIS
* IF A SPECIAL XINIT WRAPS ROW/SCREEN WE ONLY GENERATE RA FOR 5 OR
* MORE CHARS, OTHERWISE GENERATE REPEATED CHARS
*
* R1 = DATA ADDRESS
* R6 = OUTPUT POINTER
*
         LH    R0,BMSFL           R0=DATA LENGTH
         TM    BMSFDFB,BMSFDDD    ANY INITIAL/XINIT ?
         BNO   DATSTRNG           EXIT IF NONE
         CLI   0(R1),X'FF'        IS IT SPECIAL XINIT ?
         BNE   DATSTRNG           EXIT IF NOT
* SPECIAL XINIT PROCESSING
         ST    R14,DATAR14        SAVE RETURN ADDRESS
         ASI   RELCOL,1           MAP COLUMN+1
         AHI   R7,1               BUMP POSITION
DATXCYCL EQU   *
         L     R2,RELCOL          R2=CURRENT COLUMN
         AR    R2,R0              + (REMAINING) LENGTH
         CLM   R2,1,BMSMW         WILL ROW WRAP ?
         BH    DATRWRAP           EXIT IF IT WILL
         LR    R2,R0              R2=(REMAINING) LENGTH
         B     DATXROW            EXIT
*
DATRWRAP EQU   *
* ROW WRAP WILL OCCUR
         SR    R2,R2              CLEAR R2
         IC    R2,BMSMW           R2=MAP WIDTH
         S     R2,RELCOL          -COLUMN
         AHI   R2,1               +1 = NO. OF CHARS TO GENERATE
         BNZ   DATXROW            EXIT IF ZERO
         AHI   R7,1               BUMP POSITION
         B     DATXWRAP           EXIT
*
DATXROW  EQU   *
* SOME CHARS GO ON THIS ROW
         CHI   R2,4               USE RA IF >4 ?
         BH    DATXRA             EXIT IF WE DO
* MOVE REPEATED CHARS
* SBA IS NEEDED IF WE DIDN'T JUST GENERATE AN SF OR A WRAP SBA
         AHI   R6,-3              DATA POINTER-3
         CLI   0(R6),SBA          DID WE SET AN SBA ?
         BE    DATXCHAR           EXIT IF WE DID
         CLI   1(R6),SF           DID WE SET AN ATTRIBUTE BYTE ?
         BE    DATXCHAR           EXIT IF WE DID
* WE NEED AN SBA
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   3(R6),SBA          SET
         STH   R12,4(R6)              SBA
         AHI   R6,3               BUMP OUTPUT POINTER
DATXCHAR EQU   *
         L     R14,RELCOL         R14=CURRENT COLUMN
         AR    R14,R2             + NO. OF CHARS GENERATED
         ST    R14,RELCOL         SAVE IT
         AHI   R6,3               BUMP OUTPUT POINTER
DATXLOOP EQU   *
         MVC   0(1,R6),1(R1)      SET CHAR
         AHI   R6,1               BUMP OUTPUT POINTER
         AHI   R7,1               BUMP DATA POSITION
         BCTR  R0,0               ADJUST LENGTH
         BCT   R2,DATXLOOP        LOOP
         B     DATXWRAP           EXIT
*
DATXRA   EQU   *
* GENERATE RA FOR (PART OF) THE STRING
         MVI   0(R6),RA           MOVE RA ORDER
         MVC   3(1,R6),1(R1)      SET CHAR TO REPEAT
         AR    R7,R2              R7=STOP ADDRESS FOR RA
         L     R14,RELCOL         R14=CURRENT COLUMN
         AR    R14,R2             + NO. OF CHARS GENERATED
         ST    R14,RELCOL         SAVE IT
         BAL   R14,SBACONV        CONVERT TO SBA
         STH   R12,1(R6)          SET ENDING SBA
         AHI   R6,4               BUMP OUTPUT POINTER
         SR    R0,R2              ADJUST LENGTH
DATXWRAP EQU   *
         LTR   R0,R0              ANY MORE TO DO ?
         BZ    DATRTRN            EXIT IF NOT
         STM   R0,R1,DATAR0R1     SAVE R0-R1
         ST    R7,DATAR7          SAVE R7
         BAL   R14,WRAP           TEST FOR ROW/SCREEN WRAP
         LM    R0,R1,DATAR0R1     RESTORE R0-R1
         C     R7,DATAR7          DID R7 CHANGE ?
         BE    DATXCYCL           EXIT IF NOT
* DATA HAS WRAPPED, WE NEED AN SBA
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         AHI   R6,3               BUMP OUTPUT POINTER
         B     DATXCYCL           GO PROCESS MORE DATA
*
DATRTRN  EQU   *
         L     R14,DATAR14        RESTORE RETURN ADDRESS
         BR    R14                RETURN
*
DATSTRNG EQU   *
         CLI   DATAIND,X'FF'      'NO PREVIOUS SF' INDICATOR ON ?
         BE    DATMOVE            EXIT IF IT IS
DATLOOP  EQU   *
         AHI   R7,1               BUMP DATA POSITION
         STM   R0,R1,DATAR0R1     SAVE R0-R1
         ST    R7,DATAR7          SAVE R7
         ST    R14,DATAR14        SAVE RETURN ADDRESS
         BAL   R14,WRAP           TEST FOR ROW/SCREEN WRAP
         C     R7,DATAR7          DID R7 CHANGE ?
         BE    DATOK              EXIT IF NOT
* DATA HAS WRAPPED, WE NEED AN SBA
         BAL   R14,SBACONV        CONVERT TO SBA
         MVI   0(R6),SBA          SET
         STH   R12,1(R6)              SBA
         AHI   R6,3               BUMP OUTPUT POINTER
DATOK    EQU   *
         LM    R0,R1,DATAR0R1     RESTORE R0-R1
         L     R14,DATAR14        RESTORE RETURN ADDRESS
DATMOVE  EQU   *
         CLI   0(R1),X'00'        NULL ?
         BE    DATNULL            EXIT IF IT IS
         MVC   0(1,R6),0(R1)      MOVE DATA BYTE
         AHI   R6,1               BUMP OUTPUT POINTER
DATNULL  EQU   *
         AHI   R1,1               BUMP DATA POINTER
         BCT   R0,DATLOOP         LOOP
         MVI   DATAIND,X'00'      RESET 'NO PREVIOUS SF' INDICATOR
         BR    R14                RETURN
DATAR0R1 DS    2F
DATAR7   DS    F
DATAR14  DS    F
DATAIND  DC    H'0'               'NO PREVIOUS SF' INDICATOR
*
PIC      EQU   *
* PROCESS PICOUT (IF ANY)
*
* R1 = DATA ADDRESS
*
         XC    PICOUT,PICOUT      CLEAR EDIT WORD FIELD
         LA    R15,BMSDATA        R15=PIC FIELDS
         AH    R15,0(R15)         BYPASS PICIN
         AHI   R15,2                           AND LENGTH
         ICM   R2,3,0(R15)        R2=PICOUT LENGTH
         BZR   R14                RETURN IF NONE
* SAVE THE EDIT WORD
         BCTR  R2,0               -1 FOR EXECUTE
         EX    R2,PICMVC          MOVE THE EDIT WORD
         ST    R6,PICR6           SAVE OUTPUT POINTER
* MOVE THE DATA WITHOUT NULLS, BLANKS OR LEADING ZEROS
         LA    R6,PICDATA         R6=OUTPUT POINTER
         LH    R0,BMSFL           R0=DATA LENGTH
         MVI   PICLEAD0,X'00'     RESET LEADING ZERO SWITCH
PICLOOP  EQU   *
         CLI   0(R1),X'00'        NULL ?
         BE    PICINCR            EXIT IF IT IS
         CLI   0(R1),C' '         BLANK ?
         BE    PICINCR            EXIT IF IT IS
         CLI   0(R1),C'0'         ZERO ?
         BNE   PICNOT0            EXIT IF NOT
         CLI   PICLEAD0,X'FF'     IS IT A LEADING ZERO ?
         BNE   PICINCR            EXIT IF IT IS
PICNOT0  EQU   *
         MVC   0(1,R6),0(R1)      MOVE DATA BYTE
         AHI   R6,1               BUMP OUTPUT POINTER
         MVI   PICLEAD0,X'FF'     SET LEADING ZERO SWITCH
PICINCR  EQU   *
         AHI   R1,1               BUMP DATA POINTER
         BCT   R0,PICLOOP         LOOP
*
         CLI   PICLEAD0,X'FF'     ANY DATA MOVED ?
         BE    PICGTDTA           EXIT IF SOME
         MVI   0(R6),C'0'         MOVE A ZERO
         AHI   R6,1               BUMP OUTPUT POINTER
PICGTDTA EQU   *
         ST    R14,PICR14         SAVE RETURN ADDRESS
         LA    R14,PICDATA        R14=DATA START
         SR    R6,R14             R6=DATA LENGTH MOVED
         CHI   R6,31              MORE THAN 31 DIGITS
         BH    MAPFAIL8           ERROR IF IT IS
         TMLL  R6,1               IS IT EVEN ?
         BZ    PICEVEN            EXIT IF IT IS
         LA    R1,PICDATA         R1=DATA ADDRESS IF ODD BYTES
         BCTR  R6,0               -1 FOR EXECUTE
         B     PICEXPK            EXIT
PICLEAD0 DC    H'0'
*
PICEVEN  EQU   *
         LA    R1,PICDATA0        R1=DATA ADDRESS IF EVEN BYTES
PICEXPK  EQU   *
         EX    R6,PICPACK         PACK INPUT
         TP    PICDEC             VALID NUMERIC ?
         BNZ   MAPFAIL8           EXIT IF INVALID
* CALCULATE INDEX INTO PICDEC
* COUNT NO. OF 20/21
         LA    R14,PICOUT         R14=EDIT WORD
         SR    R15,R15            R15=0
PICEDLP  EQU   *
         CLI   0(R14),X'20'       IS IT 20 ?
         BE    PICINCR2           EXIT IF IT IS
         CLI   0(R14),X'21'       IS IT 21 ?
         BNE   PICBUMP            EXIT IF IT IS
PICINCR2 EQU   *
         AHI   R15,1              COUNT 20/21
PICBUMP  EQU   *
         AHI   R14,1              BUMP POINTER
         CLI   0(R14),X'00'       IS IT END ?
         BNE   PICEDLP            LOOP IF NOT
         AHI   R6,1               R6=ACTUAL DIGITS USED
         CR    R6,R15             MORE OUTPUT THAN EDIT WORD DIGITS ?
         BH    MAPFAIL8           ERROR IF IT IS
*
         SRL   R15,1              INT(N/2)
         LNR   R15,R15            -INT(N/2)
         AHI   R15,15             15-INT(N/2)
         LA    R15,PICDEC(R15)    +PACKED INPUT ADDRESS
         LA    R1,PICOUT+1        R1=LOCATION OF DEFAULT FLOAT BYTE+1
         SR    R14,R14            CLEAR R14
         CLI   PICOUT,X'5B'       FLOAT CHAR ?
         BE    PICFLOAT           EXIT IF IT IS
         CLI   PICOUT,X'4D'       FLOAT CHAR ?
         BNE   PICDOED            EXIT IF NOT
PICFLOAT EQU   *
         IC    R14,PICOUT         R14=FLOAT CHAR
         MVI   PICOUT,C' '        REPLACE WITH BLANK FILL
PICDOED  EQU   *
         EX    R2,PICEDMK         EDIT THE INPUT
         LTR   R14,R14            ANY FLOAT CHAR ?
         BZ    PICNOFLT           EXIT IF NOT
         BCTR  R1,0               BYTE BEFORE 1ST CHAR
         STC   R14,0(R1)          STORE IT
PICNOFLT EQU   *
         L     R6,PICR6           RESTORE OUTPUT POINTER
         LA    R1,PICOUT          R1=PICOUT DATA ADDRESS
         L     R14,PICR14         RESTORE RETURN ADDRESS
         BR    R14                RETURN
PICMVC   MVC   PICOUT(0),2(R15)   MOVE THE EDIT WORD
PICPACK  PACK  PICDEC,0(0,R1)     PACK INPUT
PICEDMK  EDMK  PICOUT(0),0(R15)   EDIT INPUT
PICOUT   DC    XL50'00'           SAVE PICOUT
PICDATA0 DC    C'0'               PREFIX ZERO
PICDATA  DC    CL50' '            DATA AREA
PICDEC   DC    PL16'0'            PACKED INPUT
PICR6    DS    F                  R6 SAVE AREA
PICR14   DS    F                  R14 SAVE AREA
*
ATTRTEST DS    0H
         TM    BMSFDFB,BMSFDNF    DOES A STRUCTURE EXIST ?
         BNOR  R14                RETURN IF NOT
* FLAG AND ATTRIBUTE OVERLAY, X'02, X'80', X'82' ARE NOT ATTRIBUTES
         CLI   BMSATTR,X'00'      ANY OVERRIDE ATTRIBUTE ?
         BER   R14                RETURN IF NONE
         CLI   BMSATTR,DFHBMCUR   ANY OVERRIDE ATTRIBUTE ?
         BER   R14                RETURN IF NONE
         CLI   BMSATTR,DFHBMEOF   ANY OVERRIDE ATTRIBUTE ?
         BER   R14                RETURN IF NONE
         CLI   BMSATTR,DFHBMCUR+DFHBMEOF ANY OVERRIDE ATTRIBUTE ?
         BER   R14                RETURN IF NONE
         B     4(R14)             RETURN IF ATTRIBUTE OVERRIDE
*
VALATTR  EQU   *
* VALIDATE STRUCTURE ATTRIBUTE
         LA    R1,ATTRTBLE        R1=ATTRIBUTE BYTE TABLE
VALATTLP EQU   *
         CLC   0(1,R1),BMSATTR    VALID ?
         BER   R14                RETURN IF IT IS
         AHI   R1,1               BUMP POINTER
         CLI   0(R1),X'FF'        END OF TABLE ?
         BNE   VALATTLP           LOOP IF NOT
         B     MAPFAIL9           EXIT
*
ATTRTBLE DC    X'404C4D505C5D60616C6D7C7DC1C4C5C8C9'
         DC    X'D1D4D5D8D9E4E5E8E9F0F1F4F5F8F9'
         DC    X'FF'              STOPPER
*
VALCOLOR DS    0H
* VALIDATE STRUCTURE COLOR ATTRIBUTE
         CLI   BMSCOLOR,X'F1'     VALID ?
         BL    MAPFAIL9           ERROR IF NOT
         CLI   BMSCOLOR,X'F7'     VALID ?
         BH    MAPFAIL9           ERROR IF NOT
         BR    R14                RETURN
*
SBATAB   DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'
*
         LTORG
*
         P1804 DSECT
*
         DFHEIBLK                 EIB
         DFHTCTTE                 TCTTE
         DCBD ,                   DCB
         DFHMAPDS                 MAPSET DSECT
         DFHMAPST                 MAP STRUCTURE DSECT
         COPY  DFHBMSCA           MAP ATTRIBUTES
         COPY  DFHAID             AIDS
         TN3270 SYMBOLS
*
         EQUREGS REGS=GPR
* R3  PARM POINTER
* R4  MAP STRUCTURE
* R5  MAPSET AND MAP LENGTH CONTROL
* R6  TIOA POINTER
* R8  MAP DSECT STRUCTURE
* R9  MAP FIELD STRUCTURE
* R10 TCTTE
* R11 EIB
* R13 SAVE AREA AND BASE 1
*
         END
