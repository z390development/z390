***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
LCL020A  CSECT
*
* FN=020A  EXEC CICS IGNORE CONDITION
*
* R1  >>> P020A BLOCK POINTER
*
         USING *,R13
         B     12(R15)            BYPASS EYECATCHER
         DC    CL8'LCL020A'
         LR    R13,R15            R13 AS BASE
         LR    R3,R1              SET BASE
         L     R3,0(R3)                    FOR PARMS
         USING (P020A,P020AEND),R3
         L     DFHEIBR,P020AEIB   LOAD EIB ADDRESS
         USING DFHEIBLK,DFHEIBR
         L     TCTTEAR,P020ATCT   LOAD TCT ADDRESS
         USING DFHTCTTE,TCTTEAR
         MVC   EIBFN,P020AFN      SET EIBFN
         XC    EIBRCODE,EIBRCODE  CLEAR EIBRCODE
         XC    EIBRESP,EIBRESP    CLEAR EIBRESP
         XC    EIBRESP2,EIBRESP2  CLEAR EIBRESP2
         ICM   R1,15,P020ARSP     R1=RESP ADDRESS
         BZ    NORESP             EXIT IF NONE
         XC    0(4,R1),0(R1)      CLEAR RESP
NORESP   EQU   *
         ICM   R1,15,P020ARS2     R1=RESP2 ADDRESS
         BZ    NORESP2            EXIT IF NONE
         XC    0(4,R1),0(R1)      CLEAR RESP2
NORESP2  EQU   *
         CLI   P020ANED,X'FF'     NOEDF ?
         BE    NOEDFB             EXIT IF IT IS
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         BNE   NOEDFB             EXIT IF NOT
         MVI   TCTTEEBA,X'00'     SET 'BEFORE' INTERCEPT
         MVI   TCTTEEDL,X'00'     SET NORMAL LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
*
NOEDFB   EQU   *
* ONLY THE FIRST CONDITION BLOCK IS ACQUIRED HERE
* PUSH ACQUIRES MORE
         L     R1,P020AHCN        R1=A(DFHEIHCN)
         ICM   R1,15,0(R1)        ANY CONDITION BLOCK ADDRESS ?
         BZ    NOHCN              EXIT IF NONE
         USING DFHHCBLK,R1
HCNLOOP  EQU   *
         LR    R14,R1             R14=LAST CONDITION BLOCK ADDRESS
         ICM   R1,15,HCNCHAIN     R1=NEXT CONDITION BLOCK
         BNZ   HCNLOOP            LOOP
* END OF CONDITION BLOCK CHAIN
         LR    R1,R14             R1=LAST CONDITION BLOCK ADDRESS
         B     GOTHCN             EXIT
*
NOHCN    EQU   *
* GET THE FIRST CONDITION BLOCK
         LA    R1,HCNLENG         R1=CONDITION BLOCK LENGTH
         GETMAIN R,LV=(R1)
         XC    0(256,R1),0(R1)    CLEAR CONDITION BLOCK
         XC    256(HCNLENG-256,R1),256(R1) CLEAR CONDITION BLOCK
         L     R4,P020AHCN        R4=A(DFHEIHCN)
         ST    R1,0(R4)           SAVE CONDITION BLOCK ADDRESS
         MVC   HCNHEAD,=C'DFHHCBLK' SET HEADER
         DROP  R1
GOTHCN   EQU   *
* IGNORE EACH CONDITION
         LA    R4,P020ACND        LIST OF CONDITIONS
         LA    R5,30              SET LOOP LIMIT
SETHCN   EQU   *
         CLI   0(R4),X'00'        END OF LIST ?
         BE    ENDCOND            EXIT IF IT IS
         LB    R6,0(R4)           R6=CONDITION
         SLL   R6,2               *4
         AHI   R6,12              +12 (HEADER/CHAIN)
         AR    R6,R1              + CONDITION BLOCK ADDRESS
         MVC   0(4,R6),=4X'FF'    IGNORE ENTRY
         AHI   R4,1               BUMP CONDITION POINTER
         BCT   R5,SETHCN          LOOP
ENDCOND  EQU   *
         CLI   P020ANED,X'FF'     NOEDF ?
         BE    NOEDFA             EXIT IF IT IS
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         BNE   NOEDFA             EXIT IF NOT
         MVI   TCTTEEBA,X'FF'     SET 'AFTER' INTERCEPT
         MVI   TCTTEEDL,X'00'     SET NORMAL LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
*
NOEDFA   EQU   *
         PR    ,                  UNSTACK AND RETURN TO MACRO
*
         P020A DSECT
*
         DFHEIBLK                 EIB
         DFHTCTTE                 TCTTE
         DFHHCBLK                 HANDLE CONDITION BLOCK
*
         EQUREGS REGS=GPR
* R1  HANDLE CONDITION BLOCK BASE
* R3  PARM POINTER
* R10 TCTTE
* R11 EIB
* R13 BASE 1
*
         END
