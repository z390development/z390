***********************************************************************
* Copyright 2006 Automated Software Tools Corporation                 *
* This source code is part of z390 assembler/emulator package         *
* The z390 package is distributed under GNU general public license    *
* Author - Don Higgins                                                *
***********************************************************************
*
* TEMPORARY STORAGE TESTER
*
*    MYQUEUE1      WRITE ITEM 1
*    MYQUEUE1      WRITE ITEM 2
*    MYLONGQUEUE1  WRITE ITEM 1
*    MYQUEUE1      REWRITE ITEM 1
*    RAISE QIDERR
*    RAISE ITEMERR
*    RAISE LENGERR
*    MYLONGQUEUE2  WRITE ITEM 1
*    MYLONGQUEUE1  DELETED
*    RAISE QIDERR
*    RAISE INVREQ
*    MYQUEUE1      READ ITEM 1
*    MYQUEUE1      READ ITEM NEXT(2)
*    RAISE ITEMERR
*    RAISE QIDERR
*    RAISE LENGERR
*    MYQUEUE1      DELETED
*    MYLONGQUEUE2  DELETED
*
* CEBR TESTS
*    MYQUEUE1      BUILD 16 ITEMS
*    MYQUEUE2      BUILD 50 ITEMS
*    X'01CB458F'   BUILD 80 ITEMS
*
         DFHEISTG
TSREC    DS    CL200              TS RECORD
TSNUMIT  DS    H                  NUMITEMS
QWTSBA   DS    XL4                WCC,SBA FOR QOP MSG
QWTMSG   DS    CL(QOPLN)          QOP MESSAGE
*
TESTBED9 DFHEIENT CODEREG=(R12,R3,R4)
         MVI   QOPSEP+1,C'|'      SET COL MARKER
         MVI   QHSEP,C'|'         SET COL MARKER
         MVI   QIDNUM,C'1'        RESET QIDERR NUMBER
         MVI   ITMNUM,C'1'        RESET ITEMERR NUMBER
         MVI   LNGNUM,C'1'        RESET LENGERR NUMBER
*
* 1ST Q NAME, 1ST ITEM, SHORT DATA
*
         MVC   QWTSBA,QOP1        MOVE WCC,SBA
         MVC   QOPNAME,=CL16'MYQUEUE1' SET Q NAME IN MSG
         MVI   QOPITEM,C'1'       SET ITEM IN MESSAGE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         MVI   TSREC,X'AB'        BYTE TO PROPAGATE
         MVC   TSREC+1(49),TSREC  MAKE 50
         SR    R7,R7              DUMP IF CONDITION RAISED
         EXEC  CICS WRITEQ TS QUEUE('MYQUEUE1') FROM(TSREC) LENGTH(50) X
               NUMITEMS(TSNUMIT)
*
* 1ST Q NAME, 2ND ITEM, LONG DATA
*
         MVC   QWTSBA,QOP2        MOVE WCC,SBA
         MVC   QOPNAME,=CL16'MYQUEUE1' SET Q NAME IN MSG
         MVI   QOPITEM,C'2'       SET ITEM IN MESSAGE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         MVI   TSREC,X'CD'        BYTE TO PROPAGATE
         MVC   TSREC+1(199),TSREC MAKE 200
         SR    R7,R7              DUMP IF CONDITION RAISED
         EXEC  CICS WRITEQ TS QUEUE('MYQUEUE1') FROM(TSREC)            X
               NUMITEMS(TSNUMIT)
*
* 2ND Q NAME, 1ST ITEM, USING QNAME, LONG DATA
*
         MVC   QWTSBA,QOP3        MOVE WCC,SBA
         MVC   QOPNAME,=CL16'MYLONGQUEUE1' SET Q NAME IN MSG
         MVI   QOPITEM,C'1'       SET ITEM IN MESSAGE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         MVI   TSREC,X'EF'        BYTE TO PROPAGATE
         MVC   TSREC+1(149),TSREC MAKE 150
         SR    R7,R7              DUMP IF CONDITION RAISED
         EXEC  CICS WRITEQ TS QNAME('MYLONGQUEUE1') FROM(TSREC)        X
               NUMITEMS(TSNUMIT) LENGTH(150)
*
* 1ST Q NAME, REWRITE 1ST ITEM
*
         MVC   QWTSBA,QOP4        MOVE WCC,SBA
         MVC   QOPNAME,=CL16'MYQUEUE1' SET Q NAME IN MSG
         MVI   QOPITEM,C'1'       SET ITEM IN MESSAGE
         MVC   QOPTYPE,=C'REWRITE' SET TYPE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         MVC   TSREC(10),=10X'01' MOVE NEW ITEM
         SR    R7,R7              DUMP IF CONDITION RAISED
         EXEC  CICS WRITEQ TS QUEUE('MYQUEUE1') FROM(TSREC)            X
               LENGTH(10) ITEM(1) REWRITE
*
* HANDLE ALL CONDITIONS, ALWAYS RETURN TO MAIN LINE
*
         EXEC  CICS HANDLE CONDITION                                   X
               QIDERR(BED9QID)                                         X
               ITEMERR(BED9ITM)                                        X
               LENGERR(BED9LNG)                                        X
               INVREQ(BED9INV)
*
* BAD REWRITE, BAD Q NAME, RAISE QIDERR 1
*
         MVC   QWTSBA,QOP5        MOVE WCC,SBA
         MVC   QOPNAME,=CL16'DUMMY' SET Q NAME IN MSG
         MVI   QOPITEM,C'1'       SET ITEM IN MESSAGE
         MVC   QOPTYPE,=C'REWRITE' SET TYPE IN MESSAGE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         LA    R7,BED9RTN1        R7=HANDLE RETURN
         EXEC  CICS WRITEQ TS QUEUE('DUMMY') FROM(TSREC)               X
               LENGTH(10) ITEM(1) REWRITE
*
* BAD REWRITE, BAD ITEM, RAISE ITEMERR 1
*
BED9RTN1 EQU   *
         MVC   QWTSBA,QOP7        MOVE WCC,SBA
         MVC   QOPNAME,=CL16'MYQUEUE1' SET Q NAME IN MSG
         MVI   QOPITEM,C'5'       SET ITEM IN MESSAGE
         MVC   QOPTYPE,=C'REWRITE' SET TYPE IN MESSAGE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         LA    R7,BED9RTN2        R7=HANDLE RETURN
         EXEC  CICS WRITEQ TS QUEUE('MYQUEUE1') FROM(TSREC)            X
               LENGTH(10) ITEM(5) REWRITE
*
* BAD WRITE, RAISE LENGERR
*
BED9RTN2 EQU   *
         MVC   QWTSBA,QOP9        MOVE WCC,SBA
         MVC   QOPNAME,=CL16'MYQUEUE1' SET Q NAME IN MSG
         MVI   QOPITEM,C'3'       SET ITEM IN MESSAGE
         MVC   QOPTYPE,=C'WRITE  ' SET TYPE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         LA    R7,BED9RTN3        R7=HANDLE RETURN
         EXEC  CICS WRITEQ TS QUEUE('MYQUEUE1') FROM(TSREC) LENGTH(LEN)
*
* 3RD Q NAME, 1ST ITEM, SHORT DATA
*
BED9RTN3 EQU   *
         MVC   QWTSBA,QOP11       MOVE WCC,SBA
         MVC   QOPNAME,=CL16'MYLONGQUEUE2' SET Q NAME IN MSG
         MVI   QOPITEM,C'1'       SET ITEM IN MESSAGE
         MVC   QOPTYPE,=C'WRITE  ' SET TYPE IN MESSAGE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         MVI   TSREC,X'45'        BYTE TO PROPAGATE
         MVC   TSREC+1(49),TSREC  MAKE 50
         SR    R7,R7              DUMP IF CONDITION RAISED
         EXEC  CICS WRITEQ TS QNAME('MYLONGQUEUE2') FROM(TSREC)        X
               NUMITEMS(TSNUMIT) LENGTH(50)
*
* DELETE 2ND Q NAME
*
         MVC   QWTSBA,QOP12       MOVE WCC,SBA
         MVC   QOPNAME,=CL16'MYLONGQUEUE1' SET Q NAME IN MSG
         MVI   QOPITEM,C' '       NO ITEM
         MVC   QOPTYPE,=C'DELETE ' SET TYPE IN MESSAGE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         SR    R7,R7              DUMP IF CONDITION RAISED
         EXEC  CICS DELETEQ TS QNAME('MYLONGQUEUE1')
*
* BAD DELETE, RAISE QIDERR 2
*
         MVC   QWTSBA,QOP13       MOVE WCC,SBA
         MVC   QOPNAME,=CL16'FRED' SET Q NAME IN MSG
         MVI   QOPITEM,C' '       NO ITEM
         MVC   QOPTYPE,=C'DELETE ' SET TYPE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         LA    R7,BED9RTN4        R7=HANDLE RETURN
         MVI   QIDNUM,C'2'        SET QIDERR 2
         EXEC  CICS DELETEQ TS QUEUE('FRED')
*
BED9RTN4 EQU   *
*
* BAD WRITE, RAISE INVREQ
*
         MVC   QWTSBA,QOP15       MOVE WCC,SBA
         MVC   QOPNAME,=CL16'DFNAME' SET Q NAME IN MSG
         MVI   QOPITEM,C'1'       SET ITEM IN MESSAGE
         MVC   QOPTYPE,=C'WRITE  ' SET TYPE IN MESSAGE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         LA    R7,BED9RTN5        R7=HANDLE RETURN
         EXEC  CICS WRITEQ TS QUEUE('DFNAME') FROM(TSREC) LENGTH(10)
*
BED9RTN5 EQU   *
*
* 1ST Q NAME, READ 1ST ITEM
*
         MVC   QWTSBA,QOP17       MOVE WCC,SBA
         MVC   QOPNAME,=CL16'MYQUEUE1' SET Q NAME IN MSG
         MVI   QOPITEM,C'1'       SET ITEM IN MESSAGE
         MVC   QOPTYPE,=C'READ   ' SET TYPE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         SR    R7,R7              DUMP IF CONDITION RAISED
         EXEC  CICS READQ TS QUEUE('MYQUEUE1') INTO(TSREC)             X
               LENGTH(10) ITEM(1) NUMITEMS(TSNUMIT)
*
* 1ST Q NAME, READ NEXT (2ND) ITEM
*
         MVC   QWTSBA,QOP18       MOVE WCC,SBA
         MVC   QOPNAME,=CL16'MYQUEUE1' SET Q NAME IN MSG
         MVI   QOPITEM,C'2'       SET ITEM IN MESSAGE
         MVC   QOPTYPE,=C'READ   ' SET TYPE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         SR    R7,R7              DUMP IF CONDITION RAISED
         EXEC  CICS READQ TS QUEUE('MYQUEUE1') SET(R8) LENGTH(200)     X
               NEXT
*
* 1ST Q NAME, READ NEXT (3RD) ITEM, RAISE ITEMERR 2
*
         MVC   QWTSBA,QOP19       MOVE WCC,SBA
         MVC   QOPNAME,=CL16'MYQUEUE1' SET Q NAME IN MSG
         MVI   QOPITEM,C'3'       SET ITEM IN MESSAGE
         MVC   QOPTYPE,=C'READ   ' SET TYPE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         LA    R7,BED9RTN6        R7=HANDLE RETURN
         MVI   ITMNUM,C'2'        SET ITEMERR 2
         EXEC  CICS READQ TS QUEUE('MYQUEUE1') SET(R8) LENGTH(200)     X
               NEXT
*
BED9RTN6 EQU   *
         MVI   QOPSEP+1,C' '      NO COL MARKER NOW
         MVI   QHSEP,C' '         NO COL MARKER NOW
*
* BAD Q NAME, READ ITEM, RAISE QIDERR 3
*
         MVC   QWTSBA,QOP1C2      MOVE WCC,SBA
         MVC   QOPNAME,=CL16'BERT' SET Q NAME IN MSG
         MVI   QOPITEM,C'1'       SET ITEM IN MESSAGE
         MVC   QOPTYPE,=C'READ   ' SET TYPE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         LA    R7,BED9RTN7        R7=HANDLE RETURN
         MVI   QIDNUM,C'3'        SET QIDERR 3
         EXEC  CICS READQ TS QUEUE('BERT') SET(R8) LENGTH(200) ITEM(1)
*
BED9RTN7 EQU   *
*
* 1ST Q NAME, READ 2ND ITEM, LENGTH TRUNCATED, RAISE LENGERR
*
         MVC   QWTSBA,QOP3C2      MOVE WCC,SBA
         MVC   QOPNAME,=CL16'MYQUEUE1' SET Q NAME IN MSG
         MVI   QOPITEM,C'2'       SET ITEM IN MESSAGE
         MVC   QOPTYPE,=C'READ   ' SET TYPE
         MVC   QWTMSG,QOP         MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QOPL)
         LA    R7,BED9RTN8        R7=HANDLE RETURN
         MVI   LNGNUM,C'2'        SET LENGERR 2
         EXEC  CICS READQ TS QUEUE('MYQUEUE1') INTO(TSREC) LENGTH(20)  X
               ITEM(2)
*
BED9RTN8 EQU   *
*
* CLEAN UP AND BUILD QUEUES TO TEST CEBR
*
         EXEC  CICS SEND FROM(CEBRMSG1) LENGTH(CEBR1LEN)
         SR    R7,R7              DUMP IF CONDITION RAISED
         EXEC  CICS DELETEQ TS QUEUE('MYQUEUE1')
         EXEC  CICS DELETEQ TS QNAME('MYLONGQUEUE2')
* MYQUEUE1 IS HEX TABLE IN 16 ROWS OF 16
         LA    R6,HEXTAB          R6=HEX TABLE
         LA    R8,256             ALL THE HEX CHARS
HEXLOOP  EQU   *
         STC   R7,0(R6)           SAVE IT
         AHI   R6,1               BUMP HEX TABLE POINTER
         AHI   R7,1               NEXT HEX
         BCT   R8,HEXLOOP         LOOP
*
         LA    R6,HEXTAB          R6=HEX TABLE
         LA    R8,16              R8=ITEMS TO WRITE
         SR    R7,R7              DUMP IF CONDITION RAISED
HEXQ     EQU   *
         EXEC  CICS WRITEQ TS QUEUE('MYQUEUE1') FROM(0(R6)) LENGTH(16)
         AHI   R6,16              BUMP POINTER
         BCT   R8,HEXQ            LOOP
* MYQUEUE2 IS 50 ROWS OF THE WHOLE HEX TABLE
         LA    R8,50              R8=ITEMS TO WRITE
         SR    R7,R7              DUMP IF CONDITION RAISED
HEXBIGQ  EQU   *
         EXEC  CICS WRITEQ TS QUEUE('MYQUEUE2') FROM(HEXTAB)           X
               LENGTH(256)
         BCT   R8,HEXBIGQ         LOOP
* X'01CB458F' IS HEX QUEUE NAME
* 20 LINES OF HELLO WORLD
* 20 LINES OF ASCII HELLO WORLD
* 20 LINES OF 72 BYTES OF HEXTAB
* 20 LINES OF 36 BYTES OF HEXTAB
         SR    R7,R7              DUMP IF CONDITION RAISED
         LA    R6,1               CROSS CHECK ITEM NUMBER
         LA    R8,20              R8=ITEMS TO WRITE
HEXQ1    EQU   *
         STH   R6,HWORLD          SAVE ITEM NUMBER
         EXEC  CICS WRITEQ TS QUEUE(HEXQNAME) FROM(HWORLD) LENGTH(13)
         AHI   R6,1               ITEM COUNT
         BCT   R8,HEXQ1           LOOP
*
         LA    R8,20              R8=ITEMS TO WRITE
HEXQ2    EQU   *
         STH   R6,HWORLDAS        SAVE ITEM NUMBER
         EXEC  CICS WRITEQ TS QUEUE(HEXQNAME) FROM(HWORLDAS) LENGTH(13)
         AHI   R6,1               ITEM COUNT
         BCT   R8,HEXQ2           LOOP
*
         LA    R8,20              R8=ITEMS TO WRITE
HEXQ3    EQU   *
         STH   R6,HEXCOUNT        SAVE ITEM NUMBER
         EXEC  CICS WRITEQ TS QUEUE(HEXQNAME) FROM(HEXCOUNT) LENGTH(72)
         AHI   R6,1               ITEM COUNT
         BCT   R8,HEXQ3           LOOP
*
         LA    R8,20              R8=ITEMS TO WRITE
HEXQ4    EQU   *
         STH   R6,HEXCOUNT        SAVE ITEM NUMBER
         EXEC  CICS WRITEQ TS QUEUE(HEXQNAME) FROM(HEXCOUNT) LENGTH(36)
         AHI   R6,1               ITEM COUNT
         BCT   R8,HEXQ4           LOOP
*
         EXEC  CICS SEND FROM(CEBRMSG2) LENGTH(CEBR2LEN)
         EXEC  CICS SEND FROM(ENDMSG) LENGTH(ENDMSGL)
         EXEC  CICS RETURN
*
* HANDLE ROUTINES
*
BED9QID  DS    0H
         MVC   QWTSBA,QOP6        MOVE WCC,SBA FOR QIDERR 1
         CLI   QIDNUM,C'1'        1ST QIDERR ?
         BE    BED9QDOK           EXIT IF IT IS
         MVC   QWTSBA,QOP14       MOVE WCC,SBA FOR QIDERR 2
         CLI   QIDNUM,C'2'        2ND QIDERR ?
         BE    BED9QDOK           EXIT IF IT IS
         MVC   QWTSBA,QOP2C2      MOVE WCC,SBA FOR QIDERR 3
BED9QDOK EQU   *
         MVC   QHANDCON,=C'QIDERR ' MOVE CONDITION
         B     QWTHSEND           EXIT
QIDNUM   DC    C'1'               ID OF QIDERR
*
BED9ITM  DS    0H
         MVC   QWTSBA,QOP8        MOVE WCC,SBA FOR ITEMERR 1
         CLI   ITMNUM,C'2'        2ND ITMERR ?
         BNE   BED9ITOK           EXIT IF NOT
         MVC   QWTSBA,QOP20       MOVE WCC,SBA FOR ITEMERR 2
BED9ITOK EQU   *
         MVC   QHANDCON,=C'ITEMERR' MOVE CONDITION
         B     QWTHSEND           EXIT
ITMNUM   DC    C'1'               ID OF ITEMERR
*
BED9LNG  DS    0H
         MVC   QWTSBA,QOP10       MOVE WCC,SBA FOR LENGERR 1
         CLI   LNGNUM,C'2'        2ND LENGERR ?
         BNE   BED9LNOK           EXIT IF NOT
         MVC   QWTSBA,QOP4C2      MOVE WCC,SBA FOR ITEMERR 2
BED9LNOK EQU   *
         MVC   QHANDCON,=C'LENGERR' MOVE CONDITION
         B     QWTHSEND           EXIT
LNGNUM   DC    C'1'               ID OF QIDERR
*
BED9INV  DS    0H
         MVC   QWTSBA,QOP16       MOVE WCC,SBA
         MVC   QHANDCON,=C'INVREQ ' MOVE CONDITION
*
QWTHSEND EQU   *
         MVC   QWTMSG,QHANDCON    MOVE MESSAGE TEXT
         EXEC  CICS SEND FROM(QWTSBA) LENGTH(QHANDL)
         BR    R7                 RETURN TO MAIN LINE
*
QOP1     TN3270 WCC_KD,(SBA,3,1)
QOP2     TN3270 WCC_KD,(SBA,4,1)
QOP3     TN3270 WCC_KD,(SBA,5,1)
QOP4     TN3270 WCC_KD,(SBA,6,1)
QOP5     TN3270 WCC_KD,(SBA,7,1)
QOP6     TN3270 WCC_KD,(SBA,8,1)
QOP7     TN3270 WCC_KD,(SBA,9,1)
QOP8     TN3270 WCC_KD,(SBA,10,1)
QOP9     TN3270 WCC_KD,(SBA,11,1)
QOP10    TN3270 WCC_KD,(SBA,12,1)
QOP11    TN3270 WCC_KD,(SBA,13,1)
QOP12    TN3270 WCC_KD,(SBA,14,1)
QOP13    TN3270 WCC_KD,(SBA,15,1)
QOP14    TN3270 WCC_KD,(SBA,16,1)
QOP15    TN3270 WCC_KD,(SBA,17,1)
QOP16    TN3270 WCC_KD,(SBA,18,1)
QOP17    TN3270 WCC_KD,(SBA,19,1)
QOP18    TN3270 WCC_KD,(SBA,20,1)
QOP19    TN3270 WCC_KD,(SBA,21,1)
QOP20    TN3270 WCC_KD,(SBA,22,1)
QOP1C2   TN3270 WCC_KD,(SBA,3,41)
QOP2C2   TN3270 WCC_KD,(SBA,4,41)
QOP3C2   TN3270 WCC_KD,(SBA,5,41)
QOP4C2   TN3270 WCC_KD,(SBA,6,41)
*
QOP      DC    C'QUEUE '
QOPNAME  DS    CL16
         DC    C' ITEM '
QOPITEM  DS    C
         DC    C' '
QOPTYPE  DC    C'WRITE  '
QOPSEP   DC    C' |'
QOPLN    EQU   *-QOP
QOPL     DC    AL2(*-(QOP-4))
*
QHANDCON DC    C'       '
         DC    C' CONDITION RAISED              '
QHSEP    DC    C'|'
QHANDL   DC    AL2(*-(QHANDCON-4))
*
CEBRMSG1 TN3270 WCC_KD,(SBA,7,41)
         DC    C'CEBR QUEUE BUILDING STARTED'
CEBR1LEN DC    AL2(*-CEBRMSG1)
*
CEBRMSG2 TN3270 WCC_KD,(SBA,8,41)
         DC    C'CEBR QUEUE BUILDING ENDED'
CEBR2LEN DC    AL2(*-CEBRMSG2)
*
ENDMSG   TN3270 WCC_KD,(SBA,24,1)
         DC    C'TESTBED9 COMPLETED, PRESS CLEAR'
ENDMSGL  DC    AL2(*-ENDMSG)
*
LEN      DC    H'0'
HEXQNAME DC    X'01CB458F',4C' '
HWORLD   DC    XL2'0',C'HELLO WORLD'
HWORLDAS DC    XL2'0',C"HELLO WORLD"
*
* WRITEQ ALL THE HEX CHARS FOR LATER TRANSLATION
*
HEXCOUNT DS     XL2
HEXTAB   DS     CL256
*
         TN3270 SYMBOLS
         END
