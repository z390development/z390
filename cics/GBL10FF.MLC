***********************************************************************
* z390 - Mainframe assembler emulator and run-time engine             *
* Copyright (C) 2021 z390 Assembler LLC                               *
*                                                                     *
* This file is part of z390.                                          *
*                                                                     *
* z390 is free software; you can redistribute it and/or modify        *
* it under the terms of the GNU General Public License as published   *
* by the Free Software Foundation; either version 2 of the License,   *
* or (at your option) any later version.                              *
*                                                                     *
* z390 is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of      *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       *
* GNU General Public License for more details.                        *
*                                                                     *
* You should have received a copy of the GNU General Public License   *
* along with this program; if not, see                                *
* <https://www.gnu.org/licenses/>.                                    *
***********************************************************************
* Author - Don Higgins                                                *
***********************************************************************
* Change History                                                      *
*                                                                     *
* 2022-02-28 jjg Issue #356 Linux/MacOS support                       *
*                                                                     *
***********************************************************************
*
GBL10FF  SUBENTRY
*
* FN=10FF  ICE SCAN REQUEST
*
* INVOKED BY Z390CICS WHEN 1ST ICE HAS EXPIRED
* INVOKED BY LCL1008 (START) WHEN ICE ADDED
*
*         +0/DSCT +4/DSECT +8/IND   +12      +16      +20
* R1  >>> WTOMSG, REQDSECT,ICEANCHR,TRCEZ390,THRDCNTL,NONTERMS,
*         +24     +28      +32
*         MAXNONT,KCPSTART,EnvFlag
* R14 = RETURN ADDRESS
         LR    R3,R1              SAVE PARM POINTER
         L     R4,12(R3)          ADDRESS OF TRCEZ390
         MVC   TRCEZ390,0(R4)     MOVE IT
         L     R9,0(R3)           WTODSECT ADDRESS
         USING WTODSECT,R9
         L     R6,4(R3)           ADDRESS RECEIVED DATA
         USING REQDSECT,R6
         MVC   WTOFN,=C'10FF'     SET FN
         MVC   WTOTERM,REQTERM    SET TERMID
         MVC   WTOTRAN,=4C' '     NO TRANSID
         MVI   WTOTYPE,C' '       NO TRANSID TYPE
         MVC   WTOTASKN,=7C' '    NO TASK NUMBER
         MVC   WTODESC,=CL45'<<<Z390KCP ICE SCAN   REQUEST'
         OC    REQTERM,REQTERM    SERVER ICE SCAN ?
         BNZ   TRACEIT            EXIT IF NOT
         MVC   WTOTERM,=4C' '     NO TERMID
         MVC   WTODESC(10),=C'---SERVER ' MODIFY MESSAGE
TRACEIT  EQU   *
         MVI   CICSTIND,C'I'      SET INTERNAL TYPE
         BAL   R11,CICSTRCE       TRACE IT
ICRESCAN EQU   *
         MVI   ICEFREE,X'00'      CLEAR FREE ICE INDICATOR
         L     R4,8(R3)           ADDRESS OF ICEANCHR ADDRESS
         LR    R8,R4              R8=CHAIN FROM ANCHOR
         ICM   R7,15,0(R4)        R7=ICE CHAIN
         BZ    ICDONE             EXIT IF NO ICES
         USING DFHICEDS,R7
* ICE CHAIN EXISTS
* GET THE STCKTIME NOW AND REDUCE TO 0.01 SECS
         TIME  CLOCK,STCKTIME,CLOCKTYPE=STCK
         SGR   R0,R0              CLEAR R0
         LG    R1,STCKTIME        R1=STCK TIME
         SRLG  R1,R1,12           SHIFT TO uS
         DSGF  R0,=F'10000'       REDUCE TO 0.01 SEC
ICEXLOOP EQU   *
* SCAN THE ICE CHAIN FOR ANY EXPIRED
* THE ICES ARE CHAINED IN TIME ORDER, SO 1ST UNEXPIRED ENDS THE SCAN
         CG    R1,ICEXTOD         HAS THIS ONE EXPIRED ?
         BH    ICEEXP             EXIT IF ICE HAS EXPIRED
         SR    R7,R7              PRETEND IT'S END OF ICE CHAIN
         B     ICDONE             EXIT
*
ICEEXP   EQU   *
* ICE HAS EXPIRED
         CLI   ICETYPE,IC_START   IS IT A START ?
         BE    ICESTART           EXIT IF IT IS
* ICE DELAY
* RESET TERMINAL STATUS
         L     R5,16(R3)          ADDRESS THRDCNTL
         USING THRDDSCT,R5
         CLC   ICETRMID,=C'SQ01'  IS IT SEQUENTIAL TERMINAL ?
         BNE   ICEDLNSQ           EXIT IF NOT
         LA    R5,THRDSEQ*THRDLEN(R5) DEFAULT TO SQ01 ENTRY
         B     ICEDLRES           EXIT
*
ICEDLNSQ EQU   *
         NI    ICETRMID+3,X'0F'   CONVERT ID TO HEX
         LB    R0,ICETRMID+3      R0=THREAD NUMBER
         OI    ICETRMID+3,X'F0'   CONVERT ID BACK TO CHAR
         MS    R0,=AL4(THRDLEN)   INDEX TO THREAD STATE
         AR    R5,R0              POINT TO THREAD STATE
ICEDLRES EQU   *
         MVI   THRDIND,ST_RUN     SET TERMINAL RUNNING
* UNCHAIN THE DELAY ICE
         MVC   0(4,R8),ICECHNF    REMAKE THE CHAIN
         FREEMAIN LV=ICELEN,A=(R7) FREE ICE
         MVI   ICEFREE,X'FF'      MARK ICE FREED
* RESPOND TO THE DELAY REQUEST
         L     R15,S1004          R15=LENGTH TO SEND
         TCPIO SEND,MSG=S1004,LMSG=(R15),CONN=THRDCONN,PORT=3900
         DROP  R5
         LTR   R15,R15            CHECK RC ?
         BNZ   ABEND780           EXIT IF BAD
* WTO DELAY DONE
         MVC   WTOTERM,ICETRMID   SET TERMID
         MVC   WTODESC,=CL45'>>>Z390KCP DELAY      TASK RESUMED'
         MVI   CICSTIND,C'A'      SET APPLICATION TYPE
         BAL   R11,CICSTRCE       TRACE IT
         B     ICDONE             EXIT
*
ICESTART EQU   *
         CLC   ICETRMID,=4C'!'    NON-TERM REQUEST ?
         BNE   ICGO               EXIT IF NOT
* NON-TERMINAL ICE HAS EXPIRED
         L     R5,20(R3)          ADDRESS NONTERMS
         L     R10,24(R3)         ADDRESS MAXNONT
         CLC   0(4,R5),0(R10)     MAX NON-TERMS REACHED ?
         BE    ICDONE             EXIT IF IT HAS
* GOT ENOUGH NON-TERMS
         ASI   0(R5),1            NONTERMS+1
* FIND AN AVAILABLE THREAD
         SR    R11,R11            R11=THREAD NUMBER
         L     R5,16(R3)          ADDRESS THRDCNTL
         USING THRDDSCT,R5
         LA    R10,THRDSEQ        R10=NO. OF THREADS
ICNONLP  EQU   *
         CLI   THRDIND,ST_AVAIL   THREAD AVAILABLE ?
         BE    ICGOTNT            EXIT IF IT IS
         AHI   R5,THRDLEN         BUMP POINTER
         AHI   R11,1              BUMP THREAD NUMBER
         BCT   R10,ICNONLP        LOOP IF NOT
* THIS CANNOT HAPPEN, WE HAVE RESERVED THREADS VIA THE MAX_NONTERMS
* INI PARAMETER
         DC    H'0'
*
ICGOTNT  EQU   *
* FOUND AN AVAILABLE THREAD FOR A NON-TERMINAL
         MVI   THRDTYPE,NONTERM   SET AS NON-TERMINAL
         MVI   THRDIND,ST_OPER    SET TERMINAL OPERATIONAL
         DROP  R5
* REPAIR THE CHAIN AND FREEMAIN THE ICE
         MVC   0(4,R8),ICECHNF    REMAKE THE CHAIN
         FREEMAIN LV=ICELEN,A=(R7) FREE ICE
         MVI   ICEFREE,X'FF'      MARK ICE FREED
* START A NEW THREAD
         L     R10,28(R3)          R10->KCPSTART (Linux/Mac or Windows)
         MVC   KCPSTART,0(R10)     Copy here so can modify
         LA    R10,KCPSTART        Point to the copy
         USING KCPSTRTD,R10        Overlay with DSECT
         L     R15,32(,R3)         EnvFlag
         CLI   0(R15),C'W'         Windows runtime environment?
         BE    RT_Win              Yes; set up for Windows
         MVI   LinTRMTP,C'!'       Set non-terminal type
         MVC   LinTRMID(3),=C'!!0' Terminal id prefix
         STC   R11,LinTRMID+3      Save terminal id number
         OI    LinTRMID+3,X'F0'    Convert to character
         MVC   LinTRNID,ICETRNID   Set transaction id to fire
         LA    R15,LinTRPOS        R15 -> possible trace parms
         USING KCPTRCED,R15        Overlay possible trace parms
         CLI   LinLGLIT,C'L'       Is trace set? (start of LOG(....))
         BNE   RT_Done             Done here if not
         MVC   LinTRLOG,LinTRMID   All traces go to term ID
* TO KNOCK OUT TRACING OF NON-TERMINAL ATTACHED TASKS
* AND RETAIN TRACING OF TERMINAL-ATTACHED TASKS
* UNCOMMENT THE NEXT LINE
******** MVI   LinTRPOS,X'00'      Knock out non-term trace
         DROP  R15                 End trace parms overlay
         B     RT_Done             Done here
RT_Win   DS    0H
         MVI   WinTRMTP,C'!'       Set non-terminal type
         MVC   WinTRMID(3),=C'!!0' Terminal id prefix
         STC   R11,WinTRMID+3      Save terminal id number
         OI    WinTRMID+3,X'F0'    Convert to character
         MVC   WinTRNID,ICETRNID   Set transaction id to fire
         LA    R15,WinTRPOS        R15 -> possible trace parms
         USING KCPTRCED,R15        Overlay possible trace parms
         CLI   WinLGLIT,C'L'       Is trace set? (start of LOG(....))
         BNE   RT_Done             Done here if not
         MVC   WinTRLOG,WinTRMID   All traces go to term ID
* TO KNOCK OUT TRACING OF NON-TERMINAL ATTACHED TASKS
* AND RETAIN TRACING OF TERMINAL-ATTACHED TASKS
* UNCOMMENT THE NEXT LINE
******** MVI   WinTRPOS,X'00'      Knock out non-term trace
         DROP  R15                 End trace parms overlay
*NSI     B     RT_Done             Done here
RT_Done  DS    0H         
         DROP  R10                 End local KCPSTART storage overlay
NOLOG    EQU   *
* FIRE UP THE NON-TERM
         CMDPROC START,ID=(R11)   START THREAD
         LTR   R15,R15            CHECK RC ?
         BNZ   ABEND666           EXIT IF BAD
         CMDPROC WRITE,KCPSTART,ID=(R11) START Z390KCP
         LTR   R15,R15            CHECK RC ?
         BNZ   ABEND666           EXIT IF BAD
         B     ICDONE             EXIT
*
ICGO     EQU   *
* ICE HAS EXPIRED
* CHECK IF THE TERMINAL IS OPERATIONAL
         L     R5,16(R3)          ADDRESS THRDCNTL
         USING THRDDSCT,R5
         CLC   ICETRMID,=C'SQ01'  IS IT SEQUENTIAL TERMINAL ?
         BNE   NOTSEQ             EXIT IF NOT
         LA    R5,THRDSEQ*THRDLEN(R5) DEFAULT TO SQ01 ENTRY
         B     CHKTERM            EXIT
*
NOTSEQ   EQU   *
         NI    ICETRMID+3,X'0F'   CONVERT ID TO HEX
         LB    R0,ICETRMID+3      R0=THREAD NUMBER
         OI    ICETRMID+3,X'F0'   CONVERT ID BACK TO CHAR
         MS    R0,=AL4(THRDLEN)   INDEX TO THREAD STATE
         AR    R5,R0              POINT TO THREAD STATE
CHKTERM  EQU   *
* IF TRANSID AND REQID ARE THE SAME AS THOSE OWNED BY THE TERMID,
* JUST UNCHAIN THE ICE
* ALTHOUGH DEFAULT REQID=TERM*TRAN IT DOESN'T MATTER
         CLC   THRDTRAN,ICETRNID  TRANSIDS THE SAME ?
         BNE   ICRUNST            EXIT IF NOT
         CLC   THRDREQD,ICEREQID  REQIDS THE SAME ?
         BE    ICUNCHN            YES, GO UNCHAIN
ICRUNST  EQU   *
* MAKE SURE THE DESTINATION TERMINAL ISN'T RUNNING OR SUSPENDED
         CLI   THRDIND,ST_OPER    TERM OPERATIONAL ?
         BNE   ICDONE             EXIT IF NOT
* IT'S POSSIBLE FOR TWO STARTS TO BE REQUESTED AT ONE TERMINAL
* BEFORE THE FIRST HAS GOT GOING...THIS FIXES IT
         MVI   THRDIND,ST_RUN     SET TERMINAL RUNNING STATUS
         MVC   S10FFTRM,ICETRMID  SET TERMID
         MVC   S10FFTRN,ICETRNID  SET TRANSID
         MVC   S10FFRQD,ICEREQID  SET REQID
         MVC   S10FFRTV,ICERETVE  SET RETRIEVE INDICATOR
ICUNCHN  EQU   *
* REPAIR THE CHAIN AND FREEMAIN THE ICE
         MVC   0(4,R8),ICECHNF    REMAKE THE CHAIN
         FREEMAIN LV=ICELEN,A=(R7) FREE ICE
         MVI   ICEFREE,X'FF'      MARK ICE FREED
* SEND A 10FF TO INITIATE A ICE TRAN
         L     R5,16(R3)          ADDRESS THRDCNTL
         NI    S10FFTRM+3,X'0F'   CONVERT ID TO HEX
         LB    R0,S10FFTRM+3      R0=THREAD NUMBER
         OI    S10FFTRM+3,X'F0'   CONVERT ID BACK TO CHAR
         MS    R0,=AL4(THRDLEN)   INDEX TO THREAD STATE
         AR    R5,R0              POINT TO THREAD STATE
         L     R15,S10FF          R15=LENGTH TO SEND
         TCPIO SEND,MSG=S10FF,LMSG=(R15),CONN=THRDCONN,PORT=3900
         DROP  R5
         LTR   R15,R15            CHECK RC ?
         BNZ   ABEND780           EXIT IF BAD
ICDONE   EQU   *
* DIRECT ENTRY HERE FOR:
*   IC DELAY COMPLETE...SEND DONE
*   NON-TERM ATTACH FAILED, MAX NON-TERMS
*   NON-TERM ATTACH COMPLETE
*   TERM ATTACH FAILED, TERM NOT OPERATIONAL
         CLI   ICEFREE,X'FF'      ANY ICE FREED ?
         MVI   ICEFREE,X'00'      CLEAR FREE ICE INDICATOR
         BE    ICRESCAN           RESCAN IF WE DID
* REJECTED EXPIRED ICE, TRY NEXT
         LTR   R8,R7              R8=CHAINED FROM ADDRESS
         BZ    ICNOSCAN           EXIT IF CHAIN END
         ICM   R7,15,ICECHNF      R7=ICE CHAIN
         BNZ   ICEXLOOP           LOOP IF MORE ICES
ICNOSCAN EQU   *
* NO MORE ICE CHAINING
         MVC   WTODESC,=CL45'>>>Z390KCP ICE SCAN   COMPLETED'
         MVC   WTOTERM,REQTERM    SET REQUESTOR TERMID
         OC    REQTERM,REQTERM    SERVER ICE SCAN ?
         BNZ   TRACEIT2           EXIT IF NOT
         MVC   WTOTERM,=4C' '     RESET REQUESTOR TERMID
         MVC   WTODESC(10),=C'---SERVER ' MODIFY MESSAGE
TRACEIT2 EQU   *
         MVI   CICSTIND,C'I'      SET INTERNAL TYPE
         BAL   R11,CICSTRCE       TRACE IT
         SUBEXIT
*
* SUBROUTINE
*
CICSTRCE DS    0H
* MODIFIED CICSTRCE
         CLI   TRCEZ390,C'N'      NO TRACING ?
         BER   R11                RETURN IF IT IS
         CLI   TRCEZ390,C'Y'      ALL TRACING ?
         BE    CICSTRGO           TRACE IF IT IS
         CLC   TRCEZ390,CICSTIND  TRACE TYPE=TRACE REQUEST ?
         BNER  R11                RETURN IF NOT
CICSTRGO EQU   *
         TIME  DEC,TIME,LINKAGE=SYSTEM GET TIME
         MVO   TIMEPACK,TIME      MOVE TO PACKED FIELD
         MVC   TIMEHERE(13),TIMEEDIT MOVE EDIT WORD
         ED    TIMEHERE(13),TIMEPACK EDIT TIME
         MVC   WTOTIME,TIMEHERE   SET TIME
         WTO   MF=(E,WTOMSG)      TRACE IT
         BR    R11                RETURN
*
ABEND666 ABEND 666,DUMP           CMDPROC FAILED
ABEND780 ABEND 780,DUMP           TCPIO SEND FAILED
*
CICSTIND DS    C                  TRACE TYPE INDICATOR
TRCEZ390 DS    C                  Z390 TRACE OPTION
ICEFREE  DS    X                  FF=ICE FREED THIS CYCLE
*
* TIME CONVERSION FIELDS
*
TIME     DS    CL4                HHMMSSTT
         DS    CL8                SPACE FOR DATE
TIMEPACK DC    PL5'0'             0HHMMSSTTC
TIMEEDIT DC    X'402021207A20207A20204B2020'
TIMEHERE DS    CL13
STCKTIME DS    XL8                SAVE STCK TIME
*
* SEND EXPIRED IC START REQUEST
*
* PROCESSED BY Z390KCP (FIELDS ARE KCPRC...)
S10FF    DC    A(S10FFLEN)        LENGTH
         DC    C'10FF'            FN
S10FFTRM DS    CL4                TERMID
S10FFTRN DS    CL4                TRANSID
S10FFRQD DS    XL8                REQID
S10FFRTV DS    X                  FF=RETRIEVE INDICATOR
S10FFLEN EQU   *-S10FF
*
* SEND EXPIRED IC DELAY REQUEST
*
S1004    DC    A(S1004LEN)        LENGTH
         DC    C'1004'            FN
         DC    X'00'              FF=TURN EDF OFF
S1004LEN EQU   *-S1004
*
* Windows:
*     CALL BAT\EZ390 %CICSPATH%\Z390KCP NOTIME GUAM PARM(LTERMTRANK)
*     SPECIFICALLY FOR NON-TERMINAL ATTACHED TASKS
* Linux/Mac:
*     bash/ez390 $cicspath/Z390KCP NOTIME GUAM 'PARM(LTERMTRANK)'
*
KCPSTART DS    CL256               Contains copy from caller
*                                  Lengths are assumed to be the same!
*
         KCPSTRTD ,                DSECT for KCPSTART primary
         KCPTRCED ,                DSECT for TRACE portion of KCPSTART 
*
* WTO AREA DSECT
*
WTODSECT DSECT
WTOMSG   DS    AL4
WTOTIME  DS    CL13               TIME STAMP
         DS    C
WTOFN    DS    CL4                MODULE/FUNCTION REFERENCE (EIBFN)
         DS    C
WTOTERM  DS    CL4                TERMID
         DS    C
WTOTRAN  DS    CL4                TRANSID (OR BLANK)
         DS    C
WTOTYPE  DS    C                  TRANSID TYPE
         DS    C
WTOTASKN DS    CL7                TASK NUMBER
         DS    C
WTODESC  DS    CL45               DESCRIPTION
*
* RECEIVE MESSAGE AREA
*
REQDSECT DSECT
         DS    AL4                REQUEST LENGTH
         DS    CL4                REQUEST CODE
REQTERM  DS    CL4                TERMINAL ID
*
         DFHICEDS                 INTERVAL CONTROL ELEMENT
         THRDDSCT                 TERMINAL THREAD CONTROL AREA
*
         EQUREGS
* R5  THRDDSCT
* R6  REQDSECT
* R7  DFHICEDS
* R9  WTODSECT
*
         END
