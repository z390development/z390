*********************************************************************
* z390 - Mainframe assembler emulator and run-time engine
* Copyright (C) 2021 z390 Assembler LLC
*
* This file is part of z390.
*
* z390 is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
* z390 is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License 
* along with this program; if not, see https://www.gnu.org/licenses.
*********************************************************************
* Author - Don Higgins                                              *
* Date   - 06/15/09                                                 *
*********************************************************************
* 06/15/09 RPI 1053 - move invalid ASCII test and missing macro warn
*          from TESTERR1 and specify ASM and CHKMAC(2).  
*********************************************************************
         TITLE 'TESTERRA TEST INVALID ASCII,missing labels CHKMAC(2)'
TESTERR1 CSECT
         USING *,15
* RPI 744 test non-ascii character string error
         DC   C'e?'  MULTI-KEY VALUES 101 AND 201
**********************************************************
* ADD DUPLICATE AND MISSING MACRO ERRORS IN OPEN CODE
*
* THIS MUST BE LAST TEST WITH FAILING AGO IN OPEN CODE
*
**********************************************************
         MACRO
         TESTLAB
.LAB1    ANOP
.LAB2    ANOP
.LAB1    ANOP
         AGO    .UNDEFINED1
         AIF    (1 EQ 1).UNDEFINED2
         MEND
.LAB1    ANOP
.LAB2    ANOP
.LAB1    ANOP
         AGO    .UNDEFINED1
         AIF    (1 EQ 1).UNDEFINED2
* ADD COMPOND AIF AND COMPUTED AGO MISSING LABELS
&I       SETA  2
         AIF   (1 EQ 2).T11,(2 EQ 2).X11
         AGO   (&I).T11,.X12,.T13
.T11     MNOTE '.T11'
.T12     MNOTE '.T12'
.T13     MNOTE '.T13'
         END 
