*********************************************************************
* z390 - Mainframe assembler emulator and run-time engine
* Copyright (C) 2021 z390 Assembler LLC
*
* This file is part of z390.
*
* z390 is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
* z390 is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License 
* along with this program; if not, see https://www.gnu.org/licenses.
*********************************************************************
* Author - Don Higgins                                              *
* Date   - 09/30/05                                                 *
*********************************************************************
* 01/22/07 RPI 542 CORRECT STORAGE OUTPUT R1=ADDR
* 04/22/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY 
*********************************************************************
         MACRO
         TESTGM &TYPE,&LV,&LOC,&HL,&REG
&RES     SETC  'BELOW' 
         AIF    ('&TYPE' EQ 'R').OBTAIN
&RES     SETC  'ABOVE'
         AIF   ('&LOC' EQ '').OBTAIN
&RES     SETC  '&LOC'
.OBTAIN  ANOP
         STORAGE OBTAIN,LENGTH=&LV,LOC=&RES
         CL    R1,=A(LINE)                      RPI 542
         RT1   CC&HL
         LR    &REG,R1                          RPI 542
         LR    R14,R1                           RPI 542
         LA    R15,GMLEN
         L     R1,=X'EE000000'
         MVCL  R14,R0
         MEND
         TITLE 'TESTMEM3 REGRSSION TEST STORAGE OBTAIN/RELEASE'
TESTMEM3 RT1   MAIN
         EQUREGS
FQE24A   DC    A(0)
FQE24    DC    AL8(0)
FQE31A   DC    A(0)
FQE31    DC    AL8(0)
LINE     EQU   X'1000000'
GMLEN    EQU   100
         RT1   START
         L     R2,=A(ZCVT)
         USING IHAZCVT,R2
         L     R3,ZCVTFQ24
         ST    R3,FQE24A    SAVE 24 BIT FQE ADDR
         MVC   FQE24,0(R3)  SAVE 24 BIT FQE
         L     R3,ZCVTFQ31
         ST    R3,FQE31A    SAVE 31 BIT FQE ADDR
         MVC   FQE31,0(R3)  SAVE 31 BIT FQE
         DROP  R2
         L     R2,=A(GMLEN)
         TESTGM R,GMLEN,,L,R3         BELOW R  DEF
         TESTGM R,GMLEN,,L,R4         BELOW R  DEF
         TESTGM R,GMLEN,,L,R5         BELOW R  DEF
         TESTGM RC,(R2),24,L,R6       BELOW EXPLICIT
         TESTGM RC,(R2),,H,R7         ABOVE RC DEF
         TESTGM RC,(R2),,H,R8         ABOVE RC DEF
         TESTGM RU,(R2),31,H,R9       ABOVE EXPLICIT
         STORAGE  RELEASE,ADDR=(R9),LENGTH=(R2)
         STORAGE  RELEASE,ADDR=(R3),LENGTH=(R2)
         STORAGE  RELEASE,ADDR=(R5),LENGTH=(R2)
         STORAGE  RELEASE,ADDR=(R4),LENGTH=(R2)
         STORAGE  RELEASE,ADDR=(R7),LENGTH=(R2)
         STORAGE  RELEASE,ADDR=(R6),LENGTH=(R2)
         STORAGE  RELEASE,ADDR=(R8),LENGTH=(R2)
         L     R2,=A(ZCVT)
         USING IHAZCVT,R2
         L     R3,ZCVTFQ24
         CL    R3,FQE24A    VER  24 BIT FQE ADDR
         RT1   CCE
         CLC   FQE24(4),0(R3)  VER  24 BIT FQE PTR
         RT1   CCE
         CLC   FQE24+4(4),4(R3)  VER  24 BIT FQE LEN
         RT1   CCE
         L     R3,ZCVTFQ31
         CL    R3,FQE31A    VER  31 BIT FQE ADDR
         RT1   CCE
         CLC   FQE31(4),0(R3)  VER  31 BIT FQE PTR
         RT1   CCE
         CLC   FQE31+4(4),4(R3)  VER  31 BIT FQE LEN
         RT1   CCE
         WTO   'TESTMEM3 ENDED OK'
         RT1   END
         ZCVTD
         END
