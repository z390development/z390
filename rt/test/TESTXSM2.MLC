* TEST ZSTRMAC CONVERSION UTILITY
* 09/17/08 RPI 911 CHANGE ASELECT>ACASE, APM>ACALL, SUPPORT LC
&I       SETA  1
.*       aif   (&I EQ 1)   TEST TRUE
           AIF   (NOT(&I EQ 1)).AIF_1_1    TEST TRUE
               MNOTE 'AIF TRUE I=&I'
.*       aend
.AIF_1_1   ANOP
&I       SETA  2
.*       aif   (&I EQ 1)   TEST FALSE
           AIF   (NOT(&I EQ 1)).AIF_2_1    TEST FALSE
               MNOTE 8,'AIF FALSE I=&I'
.*       aelseif (&I EQ 2) TEST TRUE
           AGO   .AIF_2_E
.AIF_2_1   ANOP
           AIF     (NOT(&I EQ 2)).AIF_2_2  TEST TRUE
               MNOTE 'AELSEIF TRUE I=&I'
.*       aelse
           AGO   .AIF_2_E
.AIF_2_2   ANOP
.*             aif   (&I EQ 1)   TEST FALSE
                 AIF   (NOT(&I EQ 1)).AIF_3_1    TEST FALSE
                     MNOTE 8,'NESTED AIF FALSE I=&I'
.*             aelseif (&I EQ 3) TEST FALSE
                 AGO   .AIF_3_E
.AIF_3_1         ANOP
                 AIF     (NOT(&I EQ 3)).AIF_3_2  TEST FALSE
                     MNOTE 8,'NESTED AELSEIF FALSE I=&I'
.*             aelse
                 AGO   .AIF_3_E
.AIF_3_2         ANOP
                     MNOTE 'NESTED AELSE TRUE I=&I'
.*             aend
.AIF_3_E         ANOP
.*       aend
.AIF_2_E   ANOP
&I       SETA  1
.*       auntil (&I GT 5)
           AGO   .AUN_1
.AUN_1_T   ANOP
           AIF    (&I GT 5).AUN_1_E
.AUN_1     ANOP
               MNOTE 'AUNTIL 1-5 I=&I'
.*             aif (&I EQ 3)
                 AIF (NOT(&I EQ 3)).AIF_4_1
                   MNOTE 'EXITING AUNTIL IF I=3'
.*                 AEXIT AUNTIL
                     AGO   .AUN_1_E
.*             aend
.AIF_4_1         ANOP
&I             SETA &I+1
.*       aend
           AGO   .AUN_1_T
.AUN_1_E   ANOP
&I       SETA  1
.*       awhile (&I LE 5)
.AWH_1_T   ANOP
           AIF    (NOT(&I LE 5)).AWH_1_E
               MNOTE 'AWHILE 1-5 I=&I'
&I             SETA &I+1
.*       aend
           AGO   .AWH_1_T
.AWH_1_E   ANOP
.*       acall count
&ACALL_1_COUNT SETA    1
           AGO   .ACL_1_COUNT
.ACL_1_1   ANOP
.*       ACALL COUNT
&ACALL_1_COUNT SETA    2
           AGO   .ACL_1_COUNT
.ACL_1_2   ANOP
&I       SETA 0
.*       awhile (&I LE 4)
.AWH_2_T   ANOP
           AIF    (NOT(&I LE 4)).AWH_2_E
.*               acase (&I)
                   AGO   .ACS_1_G
.*               awhen 1
.ACS_1_1           ANOP
                        MNOTE 'AWHEN I=1'
.*               awhen 2
                   AGO   .ACS_1_E
.ACS_1_2           ANOP
                        MNOTE 'AWHEN I=2'
&J                      SETA 0
.*                      awhile (&J LE 4)
.AWH_3_T                  ANOP
                          AIF    (NOT(&J LE 4)).AWH_3_E
.*                              acase (&J)
                                  AGO   .ACS_2_G
.*                              awhen 1
.ACS_2_1                          ANOP
                                       MNOTE 'AWHEN J=1'
.*                              awhen 2
                                  AGO   .ACS_2_E
.ACS_2_2                          ANOP
                                       MNOTE 'AWHEN J=2'
.*                              awhen 3
                                  AGO   .ACS_2_E
.ACS_2_3                          ANOP
                                       MNOTE 'AWHEN J=3'
.*                              aelse
                                  AGO   .ACS_2_E
.ACS_2_X                          ANOP
                                       MNOTE 'AELSE J=&J'
.*                              aend
                                  AGO   .ACS_2_E
.ACS_2_G                          ANOP
                                  AGO   (&J).ACS_2_1,.ACS_2_2,.ACS_2_3
                                  AGO   .ACS_2_X
.ACS_2_E                          ANOP
&J                              SETA &J+1
.*                      aend
                          AGO   .AWH_3_T
.AWH_3_E                  ANOP
.*               awhen 3
                   AGO   .ACS_1_E
.ACS_1_3           ANOP
                        MNOTE 'AWHEN I=3'
.*               aelse
                   AGO   .ACS_1_E
.ACS_1_X           ANOP
                        MNOTE 'AELSE I=&I'
.*               aend
                   AGO   .ACS_1_E
.ACS_1_G           ANOP
                   AGO   (&I).ACS_1_1,.ACS_1_2,.ACS_1_3
                   AGO   .ACS_1_X
.ACS_1_E           ANOP
&I               SETA &I+1
.*       aend
           AGO   .AWH_2_T
.AWH_2_E   ANOP
* PERFORMED ROUTINES
.*       aentry count
           AGO   .ACL_1_SKIP
.ACL_1_COUNT ANOP
&COUNT   SETA &COUNT+1
         MNOTE  'COUNT=&COUNT'
.*       aend
           AGO   (&ACALL_1_COUNT).ACL_1_1,.ACL_1_2
.ACL_1_SKIP ANOP
* ASM PGM
TESTZSM1 CSECT
         SR    15,15
         BR    14
         END

