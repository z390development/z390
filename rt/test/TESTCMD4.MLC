***********************************************************************
* z390 - Mainframe assembler emulator and run-time engine             *
* Copyright (C) 2021 z390 Assembler LLC                               *
*                                                                     *
* This file is part of z390.                                          *
* z390 is free software; you can redistribute it and/or modify        *
* it under the terms of the GNU General Public License as published   *
* by the Free Software Foundation; either version 2 of the License,   *
* or (at your option) any later version.                              *
*                                                                     *
* z390 is distributed in the hope that it will be useful,             *
* but WITHOUT ANY WARRANTY; without even the implied warranty of      *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       *
* GNU General Public License for more details.                        *
*                                                                     *
* You should have received a copy of the GNU General Public License   *
* along with this program; if not, see                                *
* <https://www.gnu.org/licenses/>.                                    *
***********************************************************************
*                                                                     *
* Function: CMDPROC test for Windows or Linux/Mac                     *
*                                                                     *
*           Tests two Command Processors running at the same time     *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* Input:  Environment variable TESTCMDFILE1 contains the name of      *
*         first test file                                             *
*                                                                     *
*         Environment variable TESTCMDFILE2 contains the name of      *
*         second test file                                            *
*                                                                     *
*                                                                     *
*        Test    What is tested                                       *
*        ----    -----------------------------------------------------*
*         1      Both CPs produce the same number of lines of output  *
*         2      Second CP produces more lines than first CP          *
*         3      First CP produces more lines than second CP          *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* Return codes: Value    Meaning                                      *
*               -----    -------                                      *
*                 0      Program ended without any errors             *
*                 4      A Command Processor unexpectedly ended; most *
*                        likely, the "EOF" message was not found      *    
*                16      A Command Processor abnormally ended         *
*                20      Number of CP read attempts exceeds           *
*                        maximum value                                *
*                24      Invalid/missing TESTCMDFILE1 or              *
*                        TESTCMDFILE2 environment variable            *
*                                                                     *
***********************************************************************
         TITLE 'TESTCMD4 TEST USE OF SVC 34 COMMAND PROCESSOR'
TESTCMD4 CSECT
         STM   R14,R12,12(R13)     Save caller's registers
         LR    R12,R15             R12 = base register
         USING TESTCMD4,R12        Establish addressability
         LA    R14,SA              Usable save area
         ST    R14,8(,R13)         Chain
         ST    R13,4(,R14)               save areas
         LR    R13,R14             R13 --> current save area
*
         SR    R11,R11             R11 will be the return code
*
         BAS   R14,GetEnv          Get names of test files
         LTR   R15,R15             Got names?
         BZ    GetEnvOK            Yes; continue
         WTO   'TESTCMD4: Error: invalid/missing test file name(s)'
         LA    R11,24              Return code
         B     Exit                Can't continue; exit
GetEnvOK DS    0H
         WTO   'TESTCMD4 Test SVC 34 CMDPROC multitask support'
*
CmdStart DS    0H
         MVI   EOFFlag,X'00'           Initialize EOF flags
*
*        Start first Command Processor
*
         CMDPROC START,CMDLOG=NO,ID=0  Start first CP
*
         LA    R0,CPID1                CP ID
         LA    R1,MsgStart             Message to show
         BAS   R14,ShowRC              Show return code and message
*
         L     R1,TstCmd@1             R1 --> first command
         CMDPROC WRITE,(1),ID=0        Command for first CP
*
         LA    R0,CPID1                CP ID
         LA    R1,MsgWrite             Message to show
         BAS   R14,ShowRC              Show return code and message
*
*        Start second Command Processor
*
         CMDPROC START,CMDLOG=NO,ID=1  Start second CP
*
         LA    R0,CPID2                CP ID
         LA    R1,MsgStart             Message to show
         BAS   R14,ShowRC              Show return code and message
*
         L     R1,TstCmd@2             R1 --> second command
         CMDPROC WRITE,(1),ID=1        Command for second CP
*
         LA    R0,CPID2                CP ID
         LA    R1,MsgWrite             Message to show
         BAS   R14,ShowRC              Show return code and message
*
         LA    R10,MAXLPCNT            Stop infinite loop
         LA    R6,1                    BXLE index increment
CmdLoop  DS    0H
         TM    EOFFlag,EOF1            Has first CP already ended?
         BO    Done1                   Yes; skip reading from it
CmdRead1 DS    0H
         AHI   R10,-1                  Decrement runaway count
         BZ    Error1a                 Error if reach zero
         CMDPROC READ,MSG,ID=0         Get one response line
*
         LA    R0,CPID1                CP ID
         LA    R1,MsgRead              Message to show
         BAS   R14,ShowRC              Show return code and message
*
         CHI   R15,4                   Wait time expired?
         BE    CmdRead1                Yes: try to read next line
         CHI   R15,8                   CP ended?
         BE    Error1                  Yes: end loop
         CHI   R15,16                  CP abnormally ended?
         BE    Error1                  Yes: end loop
*
         MVI   CPID,CPID1              Set CP ID in WTO
         WTO   MF=(E,WTOCMD)           Echo response
*
         LA    R1,MSG                  R1 --> output from CP command
         LA    R7,MSG+L'MSG-10         R7 --> near end of the output
ChkLast1 DS    0H
         CLC   =C'/* END',0(R1)        Response contains "last" msg?
         BNE   Next1                   No: continue looking
         OI    EOFFlag,EOF1            Yes: set EOF for first CP
         B     Done1                   Done with first CP
Next1    DS    0H
         BXLE  R1,R6,ChkLast1          Continue looking for "EOF" msg
Done1    DS    0H
         TM    EOFFlag,EOF2            Has second CP already ended?
         BO    Done2                   Yes: skip reading from it
CmdRead2 DS    0H
         AHI   R10,-1                  Decrement runaway count
         BZ    Error2a                 Error if reach zero
         CMDPROC READ,MSG,ID=1         Get one response line
*
         LA    R0,CPID2                CP ID
         LA    R1,MsgRead              Message to show
         BAS   R14,ShowRC              Show return code and message
*
         CHI   R15,4                   Wait time expired?
         BE    CmdRead2                Yes: try to read next line
         CHI   R15,8                   CP ended?
         BE    Error2                  Yes: end loop
         CHI   R15,16                  CP abnormally ended?
         BE    Error2                  Yes: end loop
*
         MVI   CPID,CPID2              Set CP ID in WTO
         WTO   MF=(E,WTOCMD)           Echo response
*
         LA    R1,MSG                  R1 --> output from CP command
         LA    R7,MSG+L'MSG-10         R7 --> near end of the output
ChkLast2 DS    0H
         CLC   =C'/* END',0(R1)        Response contains "last" msg?
         BNE   Next2                   No: continue looking
         OI    EOFFlag,EOF2            Yes: set EOF for first CP
         B     Done2                   Done with first CP
Next2    DS    0H
         BXLE  R1,R6,ChkLast2          Continue looking for "EOF" msg
Done2    DS    0H
         TM    EOFFlag,EOF1+EOF2       Have both CPs ended?
         BNO   CmdLoop                 No; continue reading
CmdEnd   DS    0H
*
         CMDPROC STOP,ID=0             Stop first CP
*
         LA    R0,CPID1                CP ID
         LA    R1,MsgStop              Message to show
         BAS   R14,ShowRC              Show return code and message
*
         CMDPROC STOP,ID=1             Stop second CP
*
         LA    R0,CPID2                CP ID
         LA    R1,MsgStop              Message to show
         BAS   R14,ShowRC              Show return code and message
*         
         WTO   'TESTCMD4 ending OK'
         B     Exit                    Exit; R11 already set
Error1   DS    0H
         LR    R11,R15                 Save return code
         WTO   'TESTCMD4 CMD1 READ error'
         B     Exit                    Exit
Error1a  DS    0H
         WTO   'TESTCMD4 CMD1 command error'
         LA    R11,20                  Return code
         B     Exit       
Error2   DS    0H
         LR    R11,R15                 Save return code
         WTO   'TESTCMD4 CMD2 READ error'
         B     Exit
Error2a  DS    0H
         WTO   'TESTCMD4 CMD2 command error'
         LA    R11,20                  Return code
*NSI     B     Exit                    Exit
Exit     DS    0H
         LR    R15,R11                 Set return code
         L     R13,4(,R13)             Caller's save area
         L     R14,12(,R13)            Restore caller's registers
         LM    R0,R12,20(R13)          ... except R15
         BR    R14                     Return to caller
*
***********************************************************************
*        Display debug info
*
*        R0  =  Command Processor ID
*        R1 --> message
*        R13 -> usable save area
*        R14 =  return address
*        R15 =  return code
***********************************************************************
*
ShowRC   DS    0H
         BR    R14                     Return to caller
         STM   R14,R1,12(R13)          Save altered registers
         STC   R0,W1CPID               Set CP ID in WTO
         MVC   W1Msg,0(R1)             Copy message to WTO
         ST    R15,FW                  Convert RC
         UNPK  DW(9),16(5,R13)         Convert RC to printable hex
         TR    DW,H2P                  Finish conversion
         MVC   W1RC,DW                 Copy to WTO
         LA    R1,WTO1                 R1 --> WTO
         WTO   MF=(E,(1))              Show message and return code
         LM    R14,R1,12(R13)          Restore altered registers
         BR    R14                     Return to caller
*
***********************************************************************
*        Get test command file names
*
*        R13 -> usable save area
*        R14 =  return address
*        R15 =  return code
*               0  test command file found
*               4  unable to find TESCMDFILE1 environment variable
*                  or unable to find TESTCMDFILE2 environment variable
*
***********************************************************************
*
GetEnv   DS    0H
         STM   R14,R12,12(R13)     Save caller's registers
*
*        WARNING: no save area
*
         GETENV TESTCMDFILE1       Get name of first test file
         LTR   R15,R15             Found TESTCMDFILE1?
         BNZ   GE8000              No
*     LA    R3,63(,R2)
*     SNAP STORAGE=((2),(3)),PDATA=,TEXT='TESTCMDFILE1'
         ST    R2,TstCmd@1         Save A(first test file name)
*
         GETENV TESTCMDFILE2       Get name of second test file
         LTR   R15,R15             Found TESTCMDFILE2?
         BNZ   GE8000              No
*     LA    R3,63(,R2)
*     SNAP STORAGE=((2),(3)),PDATA=,TEXT='TESTCMDFILE2'
         ST    R2,TstCmd@2         Save A(second test file name)
         B     GE8100              Set return code
GE8000   DS    0H
         LA    R15,4               Set return code
         B     GE9000              Return
GE8100   DS    0H
         SR    R15,R15             Set return code: success
*NSI     B     GE9000              Return
GE9000   DS    0H
         L     R14,12(,R13)        Restore caller's registers
         LM    R0,R12,20(R13)      ... except for R15
         BR    R14                 Return to caller
*
         LTORG ,
*
SA       DC    18F'0'              Current save area
*
MAXLPCNT EQU   60                  Maximum loop count
*
***********************************************************************
*        Test command files
***********************************************************************
*
TstCmd@1 DC    A(0)                A(first test command file name)
TstCmd@2 DC    A(0)                A(second test command file name)
*                                  (names terminated with X'00')
*
TestCmd1 DS    CL256               Area to contain 1st test file name;
*                                  terminated with X'00'
*
TestCmd2 DS    CL256               Area to contain 2nd test file name;
*                                  terminated with X'00'
*
***********************************************************************
*        Environment variables containing test file names
***********************************************************************
*
TESTCMDFILE1   DC    C'TESTCMDFILE1',X'00'
TESTCMDFILE2   DC    C'TESTCMDFILE2',X'00'
*
***********************************************************************
*        WTOs
***********************************************************************
*
WTO1     WTO   'CMDx after xxxxx; RC=xxxxxxxx',MF=L
W1CPID   EQU   WTO1+4+3,1,C'C'
W1Msg    EQU   WTO1+4+11,5,C'C'
W1RC     EQU   WTO1+4+21,8,C'C'
*
CPID1    EQU   C'0'                    First CP ID
CPID2    EQU   C'1'                    Second CP ID
*
MsgStart DC    CL5'START'
MsgWrite DC    CL5'WRITE'
MsgRead  DC    CL5'READ'
MsgStop  DC    CL5'STOP'
*
WTOCMD   DC    AL2(WTOEND-*,0)
         DC    C'MSG FROM CMDx='
CPID     EQU   WTOCMD+4+12,1,C'C'
MSG      DC    CL80' '
WTOEND   EQU   *
*
***********************************************************************
*        End of file flag for the two Command Processors
***********************************************************************
*
EOFFlag  DC    X'00'               EOF flags
EOF1     EQU   B'10000000'         EOF for CP 1
EOF2     EQU   B'01000000'         EOF for CP 2
*
***********************************************************************
*        Storage used to convert to printable hex
***********************************************************************
*
DW       DS    D,XL1               Doubleword work plus pad
FW       DS    F,XL1               Fullword work plus pad
*
H2P      EQU   *-240               Hex to printable hex
         DC    C'0123456789ABCDEF'
*
         EQUREGS
*
         END
