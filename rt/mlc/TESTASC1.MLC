*********************************************************************
* z390 - Mainframe assembler emulator and run-time engine
* Copyright (C) 2021 z390 Assembler LLC
*
* This file is part of z390.
*
* z390 is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
* z390 is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License 
* along with this program; if not, see https://www.gnu.org/licenses.
*********************************************************************
* Author - Don Higgins                                              *
* Date   - 09/30/05                                                 *
*********************************************************************
* NOTE: This program is bi-modal supporting EBCDIC and ASCII mode
*       This program is copied to testasc1 to test using ascii
*********************************************************************
* 10/02/05 RPI   2   - add tests for mul dup DC's
* 10/04/05 RPI   5   - add ASCII support (see TESTASC1.MLC test als)
* 10/20/05 RPI  34  - full ASCII and EBCDIC translation test
* 01/06/06 RPI 157 - correct operand errors caught by this fix
* 01/06/06 RPI 192 - test && and '' in setc, sdt, and models   
* 04/02/06 RPI 265 - test alignment within DS/DC fields     
* 04/05/06 RPI 270 - test DS/DC CA/CE/AD/FD/VD (SEE TESTSDT1 CA/CE) 
* 07/19/06 RPI 371 - support spaces within X'...' data fields          
* 07/19/06 RPI 373 - align L type 16 byte fields to multiple of 8 vs 16
* 07/19/06 RPI 367 - support floating point (MIN) and (MAX) constants     
* 07/19/06 RPI 368 - support S scale factor for F, H, EH, DH, and LH      
* 08/03/06 RPI 388 - test fix dup count for E, D, F and FD                     
* 09/21/06 RPI 458 - test DC S(rel and off(base)) constants                            
* 12/09/06 RPI 407 - test DC DD, ED, and LD (min) and (max) constants                  
* 01/19/07 RPI 538 - test duplication factors for P and all types                           
* 03/01/07 RPI 555 - test LQ quad word hex                                                  
* 03/16/07 RPI 578 - test corrected M3 complex mult S type
* 04/01/07 RPI 567 - add CCW, CCW0, and CCW1 tests                
* 01/10/08 RPI 777 - add decimal and scale for P/Z, add sign for Z 
* 04/22/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY 
* 04/24/08 RPI 840 TEST SPACES IGNORED IN P AND Z DATA FIELDS 
* 08/09/08 RPI 893 TEST SY LONG DISP, F'Unn', H'Unn'                          
* 11/10/08 RPI 946 CHANGE DS TO DC FOR INIT TO ZEROS                          
* 06/30/09 RPI 1044 CHANGE VDX DC VD(VDX) TO USE TESTSUB1                     
* 01/09/10 RPI 1101 AFHY OVERFLOW WITH NO ERRORS
* 01/25/11 RPI 1139 C2X ARG IN QUOTES FOR NOALLOW
* 2022-05-03 update copyright, add to z390\rt\mlc, fix SETC '&&' to '&'
* 2022-05-07 replace TESTSUB1 with CVTTOHEX to remove dependency
* 2024-07-24 #509 comment tests that now fail due to #509 changes
*********************************************************************
         PRINT DATA
TESTDC1  RT1   MAIN
M1       DC    AL1(1),B'10',C'3',FL1'4',HL1'5',P'6',X'7',Z'8',X'FF'
V1E      DC    X'0102F304056C07C8FF' RPI 777
V1A      DC    X'01023304056C07C8FF' RPI 777
M2       DC    L'1',D'1',E'1',X'FF'
V2       DC    X'41100000000000003300000000000000'
         DC    X'4110000000000000'
         DC    X'41100000',X'FF'
M3       DC    S(1),S(2),S(M3),S(1(2)),X'FF'
V3       DC    X'00010002',AL2(X'D000'+(M3-TESTDC1-8)),X'2001',X'FF'
M4       DC    V(TESTDC1),2V(TESTDC1),X'FF'
V4       DC    3A(TESTDC1),X'FF'
         DS    0F
V5       DC    X'AA',0H,X'BBCC' FORCE 1 ALIGNMENT BYTE WITHIN DC
L1       DC    L'1'
         DC    XL8'00'
L2       DC    L'2'
TE       DC    2E'0'
TD       DC    2D'0'
TL       DC    2L'0'
TFD      DC    2FD'0'
TF       DC    2F'0'
TFE      EQU   *
         DS    0D              RPI 1073 REQUIRED IF USING NOALIGN
TES      DC    0E,2F'0'    2E  RPI 946         
TDS      DC    0D,2FL8'0'  2D  RPI 946         
TLS      DC    0L,2FL16'0' 2L  RPI 946         
TFDS     DC    0FD,2FL8'0' 2FD RPI 946         
TFS      DC    0F,2F'0'    2F  RPI 946         
TFSE     EQU   *    
CCW      CCW   OP,DATA,FLAGS,LEN
CCWV     DC    AL1(OP),AL3(DATA),AL1(FLAGS,0),AL2(LEN)
CCW0     CCW0  OP,DATA,FLAGS,LEN
CCW0V    DC    AL1(OP),AL3(DATA),AL1(FLAGS,0),AL2(LEN)
CCW1     CCW1  OP,DATA,FLAGS,LEN
CCW1V    DC    AL1(OP),AL1(FLAGS),AL2(LEN),A(DATA)
DATA     DC    D'0'
OP       EQU   X'12'
FLAGS    EQU   X'34'
LEN      EQU   X'5678'
         RT1   START
* verify ds/dc alignment between fields
         RT1   CCE,V5,=X'AA00BBCC'
* test spaces in x'...'
         RT1   CCE,=X'1234',=X'12 34'
* test L align to mult. 8
         RT1   CCE,=A(L2-L1),=A(24)
* test scale factor for FHEDL
         RT1   CCE,=FS24'1',=X'01000000'
         RT1   CCE,=HS12'1',=X'1000'
         RT1   CCE,=ES2'1',=X'43100000'
         RT1   CCE,=DS2'1',=X'4310000000000000'
         RT1   CCE,=LS2'1',=X'43100000000000003500000000000000'
* test (MIN) and (MAX) constants
         RT1   CCE,=DB'(MIN)',=X'0010000000000000'
         RT1   CCE,=DD'(MIN)',=X'0000000000000001'
         RT1   CCE,=DH'(MIN)',=X'0110000000000000'
         RT1   CCE,=EB'(MIN)',=X'00800000'
         RT1   CCE,=ED'(MIN)',=X'00000001'
         RT1   CCE,=EH'(MIN)',=X'01100000'
         RT1   CCE,=LB'(MIN)',=X'00010000000000000000000000000000'
         RT1   CCE,=LD'(MIN)',=X'00000000000000000000000000000001'
         RT1   CCE,=LH'(MIN)',=X'01100000000000007200000000000000'
         RT1   CCE,=DB'(MAX)',=X'7FEFFFFFFFFFFFFF'
         RT1   CCE,=DD'(MAX)',=X'77FCFF3FCFF3FCFF'    
         RT1   CCE,=DH'(MAX)',=X'7FFFFFFFFFFFFFFF'    
         RT1   CCE,=EB'(MAX)',=X'7F7FFFFF'
         RT1   CCE,=ED'(MAX)',=X'77F3FCFF'
         RT1   CCE,=EH'(MAX)',=X'7FFFFFFF'
         RT1   CCE,=LH'(MAX)',=X'7FFFFFFFFFFFFFFF71FFFFFFFFFFFFFF'
         RT1   CCE,=LD'(MAX)',=X'77FFCFF3FCFF3FCFF3FCFF3FCFF3FCFF'
         RT1   CCE,=LB'(MAX)',=X'7FFEFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
* verify dc field continuations
         AIF   (C'A' EQ X'41').TEST1_ASCII
.TEST1_EBCDIC ANOP
         RT1   CCE,M1,V1E,9
         AGO   .TEST1_END
.TEST1_ASCII ANOP
         RT1   CCE,M1,V1A,9
.TEST1_END ANOP
         RT1   CCE,M2,V2,29
         RT1   CCE,M3,V3,9
         RT1   CCE,M4,V4,13
* single dup default and explicit length tests
         RT1   CCE,=A(-1),=X'FFFFFFFF'
         RT1   CCE,=A(-1,0,1),=XL4'FFFFFFFF,0,1',12
         RT1   CCE,=AL1(-1,0,1),=X'FF0001',3
         RT1   CCE,=B'11',=X'3'
         RT1   CCE,=B'1,11,111',=X'1,3,7',3
         RT1   CCE,=BL2'1,10,11',=X'000100020003',6
         RT1   CCE,=B'1,10,101',=X'1,2,5',3
         RT1   CCE,=BL2'1,10,101',=XL2'1,2,5',6
         RT1   CCE,=B'11110000,1111000111110010',=X'F0F1F2',3
         AIF   (C'A' EQ X'41').TEST2_ASCII
.TEST2_EBCDIC ANOP
         RT1   CCE,=C'1',=X'F1'
         RT1   CCE,=C'ABC',=X'C1C2C3'
         RT1   CCE,=CL3'A',=X'C14040'
         RT1   CCE,=Z'123',=X'F1F2C3' RPI 777
         RT1   CCE,=C'1''2',=X'F17DF2'
         RT1   CCE,=C"1""2",=X'312232'
         RT1   CCE,=C!1!!2!,=X'F15AF2'
         AGO   .TEST2_END
.TEST2_ASCII ANOP
         RT1   CCE,=C'1',=X'31'
         RT1   CCE,=C'ABC',=X'414243'
         RT1   CCE,=CL3'A',=X'412020'
         RT1   CCE,=Z'123',=X'3132C3' RPI 777
         RT1   CCE,=C'1''2',=X'312732'
         RT1   CCE,=C"1""2",=X'312232'
         RT1   CCE,=C!1!!2!,=X'F15AF2'
.TEST2_END   ANOP
         RT1   CCE,=D'1',=X'4110000000000000'
         RT1   CCE,=E'1',=X'41100000'
         RT1   CCE,=F'1',=X'00000001'
         RT1   CCE,=FL1'1',=X'01'
         RT1   CCE,=FL1'1,-1,3',=X'01FF03',3
         RT1   CCE,=H'1',=X'0001'
         RT1   CCE,=HL1'1',=X'01'
         RT1   CCE,=HL1'1,-1,3',=X'01FF03',3
         RT1   CCE,=L'1',=X'41100000000000003300000000000000'
         RT1   CCE,=P'1',=X'1C'
         RT1   CCE,=P'1.5',=X'015C'
         RT1   CCE,=P'-1.5',=X'015D'
         RT1   CCE,=PL2'1,-1,12',=X'001C001D012C',6
         RT1   CCE,=P'12,1234',=X'012C01234C',5
         RT1   CCE,=X'1,1',=X'0101',2
         RT1   CCE,=XL2'1,1',=X'00010001',4
* multiple dup tests
         RT1   CCE,=2A(-1),=2X'FFFFFFFF',8
         RT1   CCE,=2A(-1,0,1),=2XL4'FFFFFFFF,0,1',24
         RT1   CCE,=2AL1(-1,0,1),=2X'FF0001',6
         RT1   CCE,=2B'11',=2X'3',2
         RT1   CCE,=2B'1,11,111',=2X'1,3,7',6
         RT1   CCE,=2BL2'1,10,11',=2X'000100020003',12
         RT1   CCE,=2B'1,10,101',=2X'1,2,5',6
         RT1   CCE,=2BL2'1,10,101',=2XL2'1,2,5',12
         RT1   CCE,=2B'11110000,1111000111110010',=2X'F0F1F2',6
         AIF   (C'A' EQ X'41').TEST3_ASCII
.TEST3_EBCDIC ANOP
         RT1   CCE,=2C'1',=2X'F1',2
         RT1   CCE,=2C'ABC',=2X'C1C2C3',6
         RT1   CCE,=2CL3'A',=2X'C14040',6
         RT1   CCE,=2Z'123',=2X'F1F2C3',6   RPI 777
         RT1   CCE,=2C"1""2",=2X'312232',6
         AGO   .TEST3_END
.TEST3_ASCII ANOP
         RT1   CCE,=2C'1',=2X'31',2
         RT1   CCE,=2C'ABC',=2X'414243',6
         RT1   CCE,=2CL3'A',=2X'412020',6
         RT1   CCE,=2Z'123',=2X'3132C3',6  RPI 777
         RT1   CCE,=2C"1""2",=2X'312232',6
.TEST3_END ANOP
         RT1   CCE,=2D'1',=2X'4110000000000000',16
         RT1   CCE,=2E'1',=2X'41100000',8
         RT1   CCE,=2F'1',=2X'00000001',8
         RT1   CCE,=2FL1'1',=2X'01',2
         RT1   CCE,=2FL1'1,-1,3',=2X'01FF03',6
         RT1   CCE,=2H'1',=2X'0001',4
         RT1   CCE,=2HL1'1',=2X'01',2
         RT1   CCE,=2HL1'1,-1,3',=2X'01FF03',6                    
         RT1   CCE,=2L'1',=2X'41100000000000003300000000000000',32
         RT1   CCE,=2P'1',=2X'1C',2
         RT1   CCE,=2PL2'1,-1,12',=2X'001C001D012C',12
         RT1   CCE,=2P'12,1234',=2X'012C01234C',10
         RT1   CCE,=2X'1,1',=2X'0101',4
         RT1   CCE,=2XL2'1,1',=2X'00010001',8
* test translation tables
         AIF   (C'A' NE C!A!).TEST4_ASCII
.TEST4_EBCDIC ANOP
         CLC   =C'ABCDEFGHI',=X'C1C2C3C4C5C6C7C8C9'
         RT1   CCE
         CLC   =C"ABCDEFGHI",=X'414243444546474849'
         RT1   CCE
         CLC   =C'JKLMNOPQR',=X'D1D2D3D4D5D6D7D8D9'
         RT1   CCE
         CLC   =C"JKLMNOPQR",=X'4A4B4C4D4E4F505152'
         RT1   CCE
         CLC   =C'STUVWXYZ',=X'E2E3E4E5E6E7E8E9EA'
         RT1   CCE
         CLC   =C"STUVWXYZ",=X'535455565758595A5B'
         RT1   CCE
         CLC   =C'abcdefghi',=X'818283848586878889'
         RT1   CCE
         CLC   =C"abcdefghi",=X'616263646566676869'
         RT1   CCE
         CLC   =C'jklmnopqr',=X'919293949596979899'
         RT1   CCE
         CLC   =C"jklmnopqr",=X'6A6B6C6D6E6F707172'
         RT1   CCE
         CLC   =C'stuvwxyz',=X'A2A3A4A5A6A7A8A9AA'
         RT1   CCE
         CLC   =C"stuvwxyz",=X'737475767778797A7B'
         RT1   CCE
         CLC   =C'0123456789',=X'F0F1F2F3F4F5F6F7F8F9'     
         RT1   CCE
         CLC   =C"0123456789",=X'30313233343536373839'     
         RT1   CCE
* EBCDIC special characters
       CLC =X'405A7F7B5B6C507D4D5D5C4E6B604B61',=C' !"#$%&&''()*+,-./' 
         RT1   CCE
         CLC =X'7A5E4C7E6E6F',=C':;<=>?' 
         RT1   CCE
         CLC =X'7C',=C'@'  
         RT1   CCE
         CLC =X'E06D',=C'\_'  
         RT1   CCE
         CLC =X'4FA1',=C'|~' 
         RT1   CCE
         AGO   .TEST4_END
.TEST4_ASCII ANOP
         CLC   =C'ABCDEFGHI',=X'414243444546474849'
         RT1   CCE
         CLC   =C'JKLMNOPQR',=X'4A4B4C4D4E4F505152'
         RT1   CCE
         CLC   =C'STUVWXYZ',=X'535455565758595A5B'
         RT1   CCE
         CLC   =C'abcdefghi',=X'616263646566676869'
         RT1   CCE
         CLC   =C'jklmnopqr',=X'6A6B6C6D6E6F707172'
         RT1   CCE
         CLC   =C'stuvwxyz',=X'737475767778797A7B'
         RT1   CCE
         CLC   =C'0123456789',=X'30313233343536373839'     
         RT1   CCE
* ASCII special characters
         CLC =X'20',=C' '
         RT1   CCE
         CLC =X'3C282B7C',=C'<(+|' 
         RT1   CCE
         CLC =X'26',=C'&&'
         RT1   CCE
         CLC =X'21242A293B5E',=C'!$*);^'
         RT1   CCE
         CLC =X'2D2F',=C'-/' 
         RT1   CCE
         CLC =X'2C255F3E3F',=C',%_>?' 
         RT1   CCE
         CLC =X'603A2340273D22',=C'`:#@''="' 
         RT1   CCE
         CLC =X'7B',=C'{' 
         RT1   CCE
         CLC =X'7D',=C'}' 
         RT1   CCE
         CLC =X'7E5B',=C'~[' 
         RT1   CCE
         CLC =X'5D',=C']' 
         RT1   CCE
.TEST4_END ANOP
* test && and '' in comments (this), setc, sdt, and models
&AMP     SETC  '&'  DSH #233 fix setc single &
         AIF   ('&AMP' EQ '&').AMPOK  DSH #233
         RT1   ABORT
.AMPOK   ANOP
&SQ      SETC  ''''
         AIF   ('&SQ' EQ '''').SQOK
         RT1   ABORT
.SQOK    ANOP
         AIF   (C'A' NE C!A!).TEST5_ASCII
.TEST5_EBCDIC ANOP
         CLC   =C'&AMP&AMP',=X'50'
         RT1   CCE
         CLC   =C'&&',=X'50'
         RT1   CCE
         CLI   =C'&&',C'&&'
         RT1   CCE
         CLI   =C'&&',C!&&!
         RT1   CCE
         CLC   =C'&SQ&SQ',=X'7D'
         RT1   CCE
         CLC   =C'''',=X'7D'
         RT1   CCE
         CLI   =C'''',C''''
         RT1   CCE
         CLI   =C'''',C!''!
         RT1   CCE
         CLI   =C'!',C!!!!
         RT1   CCE
         CLI   =C'"',C!"!
         RT1   CCE
* TEST CA/CE/AD/FD/VD
         RT1   CCE,=CA'1',=X'31'
         RT1   CCE,=CE'1',=X'F1'
         RT1   CCE,=ca'1',=X'31'
         RT1   CCE,=ce'1',=X'F1'
         RT1   CCE,=AD(123),=FL8'123'
         RT1   CCE,=FD'123',=FL8'123'
CVTTOHEX1 RT1   CCE,=VD(CVTTOHEX),=AL8(CVTTOHEX) RPI 1044 DIFF ADDR
         RT1   CCE,=2C'1',=2X'F1',2
         RT1   CCE,=2Z'1',=2X'C1',2    RPI 777
         AGO   .TEST5_END
.TEST5_ASCII ANOP
         CLC   =C'&AMP&AMP',=X'26'
         RT1   CCE
         CLC   =C'&&',=X'26'
         RT1   CCE
         CLI   =C'&&',C'&&'
         RT1   CCE
         CLI   =C'&&',C"&&"
         RT1   CCE
         CLC   =C'&SQ&SQ',=X'27'
         RT1   CCE
         CLC   =C'''',=X'27'
         RT1   CCE
         CLI   =C'''',C''''
         RT1   CCE
         CLI   =C'''',C"''"
         RT1   CCE
         CLI   =C'!',C"!"
         RT1   CCE
         CLI   =C'"',C""""
         RT1   CCE
* TEST CA/CE/AD/FD/VD
         RT1   CCE,=CA'1',=X'31'
         RT1   CCE,=CE'1',=X'F1'
         RT1   CCE,=ca'1',=X'31'
         RT1   CCE,=ce'1',=X'F1'
         RT1   CCE,=AD(123),=FL8'123'
         RT1   CCE,=FD'123',=FL8'123'
CVTTOHEX2 RT1   CCE,=VD(CVTTOHEX),=AL8(CVTTOHEX) RPI 1044 DIFF ADDR
         RT1   CCE,=2C'1',=2X'31',2
         RT1   CCE,=2Z'1',=2X'C1',2  RPI 777
.TEST5_END ANOP
* TEST 2E,2D,2L, AND 2FD
         RT1   CCE,=XL8'00',TE     
         RT1   CCE,=XL16'00',TD     
         RT1   CCE,=XL32'00',TL     
         RT1   CCE,=XL16'00',TFD     
         RT1   CCE,=XL8'00',TF     
         RT1   CCE,=A(TD-TE),=F'8' 
         RT1   CCE,=A(TL-TD),=F'16'
         RT1   CCE,=A(TFD-TL),=F'32' 
         RT1   CCE,=A(TF-TFD),=F'16' 
         RT1   CCE,=A(TFE-TF),=F'8' 
         RT1   CCE,=XL8'00',TES     
         RT1   CCE,=XL16'00',TDS     
         RT1   CCE,=XL32'00',TLS     
         RT1   CCE,=XL16'00',TFDS     
         RT1   CCE,=XL8'00',TFS     
         RT1   CCE,=A(TDS-TES),=F'8' 
         RT1   CCE,=A(TLS-TDS),=F'16'
         RT1   CCE,=A(TFDS-TLS),=F'32' 
         RT1   CCE,=A(TFS-TFDS),=F'16' 
         RT1   CCE,=A(TFSE-TFS),=F'8' 
* TEST ALL DUP FACTORS
         RT1   CCE,=2A(1),=2XL4'1',8
         RT1   CCE,=2D'0',=16X'00',16
         RT1   CCE,=2E'0',=8X'00',8
         RT1   CCE,=2F'1',=2XL4'1',8
         RT1   CCE,=2H'1',=2XL2'1',4
         RT1   CCE,=2L'0',=32X'00',32
         RT1   CCE,=2PL3'0',=6X'00000C00000C',6
         RT1   CCE,=2S(1),=2XL2'1',4
* TEST LQ HEX QUAD WORD
         RT1   CCE,=LQ'1',=L'1',16
* TEST CCW, CCW0, AND CCW1
         RT1   CCE,CCW,CCWV,8
         RT1   CCE,CCW0,CCW0V,8
         RT1   CCE,CCW1,CCW1V,8
* TEST IGNORE SPACES IN P AND Z DATA FIELDS RPI 840
         RT1   CCE,=P'1',=P' 1'
         RT1   CCE,=P'1',=P'1 '
         RT1   CCE,=P'1',=P' 1 '
         RT1   CCE,=Z'1',=Z' 1'
         RT1   CCE,=Z'1',=Z'1 '
         RT1   CCE,=Z'1',=Z' 1 '
* TEST SY RPI 893
         RT1   CCE,=SY(TESTDC1+8+4096),=SY(X'1000'(13))
         RT1   CCE,=F'U4294967295',=X'FFFFFFFF'
         RT1   CCE,=H'U65535',=X'FFFF'
* TEST AFHY OVERFLOW RPI 1101 OVERFLOW WITH NO ERRORS
         RT1   CCE,=H'32767',=X'7FFF'          
         RT1   CCE,=H'32768',=X'8000'
         RT1   CCE,=H'32769',=X'8001'
         RT1   CCE,=F'2147483647',=X'7FFFFFFF'
         RT1   CCE,=F'2147483648',=X'80000000'
         RT1   CCE,=F'2147483649',=X'80000001'
         RT1   CCE,=Y(32767),=X'7FFF'
         RT1   CCE,=Y(32768),=X'8000'
         RT1   CCE,=Y(32769),=X'8001'
         RT1   CCE,=A(2147483647),=X'7FFFFFFF'
         RT1   CCE,=A(2147483648),=X'80000000'
         RT1   CCE,=A(2147483649),=X'80000001'
         RT1   CCE,=A(2147483647),=X'7FFFFFFF'
&AVAL    SETA  2147483647
&CHEX    SETC  A2X(&AVAL)
         RT1   CCE,=C'&CHEX',=C'7FFFFFFF'
* Next test succeeds; will fail when 2147483648 flagged as error #509
         RT1   CCE,=A(2147483648),=X'80000000'      TEST SETA OVERFLOW
* Before SETA; now fails, as it should                      #509
*&AVAL    SETA  2147483648                                  #509
* After SETA; did the SETA fail? Yes                        #509
*&CHEX    SETC  A2X(&AVAL)                     TEST NEG A2X #509
*         RT1   CCE,=C'&CHEX',=C'80000000'                  #509
* Next test succeeds; will fail when 2147483649 flagged as error #509
         RT1   CCE,=A(2147483649),=X'80000001'
* Before SETA; now fails, as it should                      #509
*&AVAL    SETA  2147483649                                  #509
* After SETA; did it fail? Yes                              #509
*&CHEX    SETC  A2X(&AVAL)                                  #509
*         RT1   CCE,=C'&CHEX',=C'80000001'                  #509
&AVAL    SETA  1/0
         RT1   CCE,=A(&AVAL),=A(0)              TEST SETA DIVIDE BY 0 
&CVAL    SETC  '12345'                                       
&CHEX    SETC  C2X('&CVAL') 
         AIF   (C'A' NE C!A!).TEST6_ASCII
.TEST6_EBCDIC ANOP
         RT1   CCE,=C'&CHEX',=C'F1F2F3F4F5'
         AGO   .TEST6_END
.TEST6_ASCII ANOP
         RT1   CCE,=C'&CHEX',=C'3132333435'
.TEST6_END   ANOP
         RT1   END
         END         
