OPCD_DOS TITLE 'Reference program to test opcode generation'
***********************************************************************
* Start create : 18-10-2014
* 1st delivery :
* Designer     : AF Kornelis
* Programmer   : AF Kornelis
* Purpose      : Reference assembly of HLASM-compatible instructions
*                Regression test for opcodes in optable DOS
***********************************************************************

***********************************************************************
*
* Define constants and environment
*
***********************************************************************
*
* General Purpose Register equates
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
* Access Register equates
AR0      EQU   0
AR1      EQU   1
AR2      EQU   2
AR3      EQU   3
AR4      EQU   4
AR5      EQU   5
AR6      EQU   6
AR7      EQU   7
AR8      EQU   8
AR9      EQU   9
AR10     EQU   10
AR11     EQU   11
AR12     EQU   12
AR13     EQU   13
AR14     EQU   14
AR15     EQU   15
*
* Floating Point Register equates
FPR0     EQU   0
FPR1     EQU   1
FPR2     EQU   2
FPR3     EQU   3
FPR4     EQU   4
FPR5     EQU   5
FPR6     EQU   6
FPR7     EQU   7
FPR8     EQU   8
FPR9     EQU   9
FPR10    EQU   10
FPR11    EQU   11
FPR12    EQU   12
FPR13    EQU   13
FPR14    EQU   14
FPR15    EQU   15
*
* Control Register equates
CR0      EQU   0
CR1      EQU   1
CR2      EQU   2
CR3      EQU   3
CR4      EQU   4
CR5      EQU   5
CR6      EQU   6
CR7      EQU   7
CR8      EQU   8
CR9      EQU   9
CR10     EQU   10
CR11     EQU   11
CR12     EQU   12
CR13     EQU   13
CR14     EQU   14
CR15     EQU   15

***********************************************************************
*
* Define workareas and fixed constants
*
***********************************************************************
WORKAREA DSECT ,                       *
SAVEAREA DS    18F                     * Save area for GPRs
WAEYE    DS    CL8                     * Eye Catcher
WAPRMPTR DS    A                       * Ptr to parmstring
         DS    0D
WORKAREA_LEN EQU *-WORKAREA

***********************************************************************
*
* Program entry and linkage
*
***********************************************************************
OPCD_DOS RSECT ,                       *
OPCD_DOS AMODE 24
OPCD_DOS RMODE 24
***********************************************************************
         USING OPCD_DOS,R15            * Establish addressability
         B     TESTOPC2                * Skip header data
         DC    AL1(TESTOPC2-*),C'OPCD_DOS &SYSDATE &SYSTIME'
TESTOPC2 EQU   *
         STM   R14,R12,12(R13)         * Save GPRs
         LR    R12,R15                 * Copy base address
         LR    R2,R1                   * Copy ptr to parm string
         DROP  R15                     * No longer needed
         USING OPCD_DOS,R12            * Re-establish addressability
         LA    R11,WORKAREA_LEN        * Size of req'd workarea
         GETMAIN R,LV=(R11),LOC=BELOW  * Acquire working storage
         ST    R1,8(,R13)              * Set ptr to new savearea
         ST    R13,4(,R1)              * Set ptr from ne to prev save
         LR    R13,R1                  * Activate new savearea
         USING WORKAREA,R13            * Set addressable
         XR    R0,R0                   * Set to zero
         ST    R0,SAVEAREA             * Nullify header-word
         ST    R2,WAPRMPTR             * Save pointer to parmstring

***********************************************************************
*
* Set up working storage areas
*
***********************************************************************
         MVC   WAEYE,=CL8'OPCD_DOS'    * Init Eye-catcher

***********************************************************************
*
* 04 = SPM - Set Program Mask
*
* Bits 34-35 (2-3) in first operand replace CC in PSW
* Bits 36-39 (4-7) in first operand replace mask in PSW
* R0 is usable as operand and functions normally
*
***********************************************************************
         L     R5,=X'0F000000'          * CC=0 Mask=1111
         SPM   R5                       * 0450
         L     R6,=X'19000000'          * CC=1 Mask=1001
         SPM   R6                       * 0460
         L     R5,=X'36000000'          * CC=3 Mask=0110
         SPM   R5                       * 0450
         L     R0,=X'20000000'          * CC=2 Mask=0000
SPM      SPM   R0                       * 0400
*
* EX/EXRL of SPM
         LA    R1,X'60'                 * Use R6 on EX instruction
         EX    R1,SPM                   * Reset Mask to 9 and CC to 1
         LA    R1,X'50'                 * Use R5 on EXRL instruction
         EXRL  R1,SPM                   * Reset Mask to 6 and CC to 3
***********************************************************************
*
* 05 = BALR - Branch And Link Register
* --> Modal instruction!
*
***********************************************************************
*
* --> Amode 24
* Ret_info = ILC + CC + ProgMask + 24-bit RetAddr
*   High-order word unchanged
*   R0 usable to receive Ret_info
*   CC=1 for BALR, 2 for EX.BALR, 3 for EXRL.BALR
* Branches to 24-bit address from second argument
*   unless R0 is used
* CC does not change
*
         SAM24                          * Force amode 24
         LG    R14,=X'F1F2F3F4F5F6F7F8' *
         LA    R15,BALR24X              *
         C     R15,=X'7FFFFFFF'         * Force CC=1
         BALR  R14,R0                   * 05E0 (no branch)
         CR    R14,R14                  * Force CC=0
BALR_EX  BALR  R0,R0                    * Target for EX (no branch)
         C     R15,=X'FFFFFFFF'         * Force CC=2
         BALR  R14,R15                  * 05EF (branch to BALR24X)
         DC    X'0000'                  * Instruction will be skipped
BALR_RET BR    R14                      * Return
BALR24X  LA    R5,BALR24Y               * Set branch target
         BALR  R5,R5                    * Use a single register
         DC    X'0000'                  * Instruction will be skipped
BALR24Y  DS    0H                       *
*
* EX/EXRL of BALR in Amode24
         LA    R5,BALR_RET              * Target of executed BALR
         LA    R7,16*R14+R5             * Modify BALR_EX + 1 to R14,R5
         EX    R7,BALR_EX               * Call dummy routine @BALR_RET
         XR    R14,R14                  *
         L     R6,=X'36000000'          * CC=3 Mask=0110
         SPM   R6                       * Force CC=3
         EXRL  R7,BALR_EX               * Call dummy routine @BALR_RET
*
* --> Amode 31
* Ret_info = Amode_bit + 31-bit RetAddr
*   High-order word unchanged
*   R0 usable to receive Ret_info
* Branches to 31-bit address from second argument
*   unless R0 is used
* CC does not change
*
         SAM31                          *
         LG    R4,=X'F1F2F3F4F5F6F7F8'  *
         LA    R5,BALR31X               *
         BALR  R4,R0                    * 0540 (no branch)
         BALR  R0,R0                    * 0500 no branch
         BALR  R4,R5                    * 0545
         DC    X'0000'                  * Instruction will be skipped
BALR31X  LA    R5,BALR31Y               * Set branch target
         BALR  R5,R5                    * Use a single register
         DC    X'0000'                  * Instruction will be skipped
BALR31Y  DS    0H
*
* EX/EXRL of BALR in Amode31
         LA    R5,BALR_RET              * Target of executed BALR
         LA    R7,16*R14+R5             * Modify BALR_EX + 1 to R14,R5
         EX    R7,BALR_EX               * Call dummy routine @BALR_RET
         XR    R14,R14                  *
         EXRL  R7,BALR_EX               * Call dummy routine @BALR_RET
*
* --> Amode 64
* Ret_info = 64-bit RetAddr (low_order bit remains off)
*   High-order word involved
*   R0 usable to receive Ret_info
* Branches to 64-bit address from second argument
*   unless R0 is used
* CC does not change
*
         SAM64
         LG    R15,=X'F1F2F3F4F5F6F7F8'
         LA    R15,BALR64X
         BALR  R14,R0                   * 05E0 (no branch)
         BALR  R0,R0                    * 0500 no branch
         BALR  R14,R15                  * 05EF
         DC    X'0000'                  * Instruction will be skipped
BALR64X  XGR   R5,R5                    *
         LA    R5,BALR64Y               * Set branch target
         BALR  R5,R5                    * Use a single register
         DC    X'0000'                  * Instruction will be skipped
BALR64Y  DS    0H
*
* EX/EXRL of BALR in Amode64
         LA    R5,BALR_RET              * Target of executed BALR
         LA    R7,16*R14+R5             * Modify BALR_EX + 1 to R14,R5
         EX    R7,BALR_EX               * Call dummy routine @BALR_RET
         XR    R14,R14                  *
         EXRL  R7,BALR_EX               * Call dummy routine @BALR_RET
         SAM24                          * Back to amode24
***********************************************************************
*
* 06 = BCTR = Branch on CounT Register
* --> Modal instruction!
*
***********************************************************************
*
* First argument is decremented by 1
*   High-order word is unchanged (regardless of amode)
*   Overflow is ignored
*   R0 is usable
* Second argument is used to branch
*   unless R0 is used
*   no branch occurs when first argument reaches 0
*   24 bits used when amode 24
*   31 bits used when amode 31
*   64 bits used when amode 64
* CC does not change
*
* --> Amode 24
*
         LG    R6,=X'1A1B1C1D00000003'  * set counter to 3
         BCTR  R6,R0                    * decrement to 2 (no branch)
         LA    R7,BCTR24                * create loop
         CR    R6,R7                    * Set CC
BCTR24   BCTR  R6,R7                    * 0667 (loop-back+drop-through)
         LA    R7,BCTR24X               *
         BCTR  R6,R7                    * 0667 (wrap to X'FFFFFFFF')
         DC    X'0000'                  * Instruction will be skipped
BCTR_EX  BCTR  R0,R0                    * Target for EX
BCTR24X  DS    0H
*
* EX/EXRL of BCTR in Amode24
         LA    R6,3                     * init counter
         LA    R15,16*R6+R0             * Modify BCTR_EX+1 to R6,R0
         EX    R15,BCTR_EX              * decrement R6 to 2
         LA    R7,BCTR24Y               * create loop
         LA    R15,16*R6+R7             * Modify BCTR_EX+1 to R6,R7
BCTR24Y  EXRL  R15,BCTR_EX              * Repeat until R6=0
         LA    R15,16*R6+R0             * Modify BCTR_EX+1 to R6,R0
         EXRL  R15,BCTR_EX              * Wrap R6 to -1 (no branch)
*
* --> Amode 31
*
         SAM31 ,                        * Set amode 31
         LG    R0,=X'1A1B1C1D00000003'  * set counter to 3
         BCTR  R0,R0                    * decrement to 2 (no branch)
         LA    R7,BCTR31                * create loop
         CR    R0,R7                    * Set CC
BCTR31   BCTR  R0,R7                    * 0607 (loop-back+drop-through)
         LA    R7,BCTR31X               *
         BCTR  R0,R7                    * 0607 (wrap to X'FFFFFFFF')
         DC    X'0000'                  * Instruction will be skipped
BCTR31X  DS    0H
*
* EX/EXRL of BCTR in Amode31
         LA    R0,3                     * init counter
         LA    R15,16*R0+R0             * Modify BCTR_EX+1 to R0,R0
         EX    R15,BCTR_EX              * decrement R0 to 2
         LA    R7,BCTR31Y               * create loop
         LA    R15,16*R0+R7             * Modify BCTR_EX+1 to R0,R7
BCTR31Y  EXRL  R15,BCTR_EX              * Repeat until R0=0
         LA    R15,16*R0+R0             * Modify BCTR_EX+1 to R0,R0
         EXRL  R15,BCTR_EX              * Wrap R0 to -1 (no branch)
*
* --> Amode 64
*
         SAM64 ,                        * Set amode 64
         LG    R5,=X'1A1B1C1D00000003'  * set counter to 3
         BCTR  R5,R0                    * decrement to 2 (no branch)
         LA    R7,BCTR64                * create loop
         CR    R5,R7                    * Set CC
BCTR64   BCTR  R5,R7                    * 0657 (loop-back+drop-through)
         LA    R7,BCTR64X               *
         BCTR  R5,R7                    * 0657 (wrap to X'FFFFFFFF')
         DC    X'0000'                  * Instruction will be skipped
BCTR64X  DS    0H
*
* EX/EXRL of BCTR in Amode64
         LA    R5,3                     * init counter
         LA    R15,16*R5+R0             * Modify BCTR_EX+1 to R5,R0
         EX    R15,BCTR_EX              * decrement R5 to 2
         LA    R7,BCTR64Y               * create loop
         LA    R15,16*R5+R7             * Modify BCTR_EX+1 to R5,R7
BCTR64Y  EXRL  R15,BCTR_EX              * Repeat until R5=0
         LA    R15,16*R5+R0             * Modify BCTR_EX+1 to R5,R0
         EXRL  R15,BCTR_EX              * Wrap R5 to -1 (no branch)
***********************************************************************
*
* 07 = BCR BR  /BHR /BLR /BER /BPR /BOR /BMR / BZR
*          NOPR/BNHR/BNLR/BNER/BNPR/BNOR/BNMR/BNZR
* --> Modal instruction!
*
***********************************************************************
*
*          CC=0: Zero / Equal
*          CC=1: Low / Minus / Mixed
*          CC=2: High / Plus
*          CC=3: Ones / Overflow
*
* First argument is a mask for eligible cc-values
* Second argument is contains branch target address
*   unless R0 is used
*   24 bits used when amode 24
*   31 bits used when amode 31
*   64 bits used when amode 64
* CC does not change
*
* Special case: BCR 15,0 
*   causes serialization and checkpoint synchronization
*   This is not supported on z390 where it is treated as a no-branch
*
         LA    R4,BCR24                 *
         C     R4,=F'0'                 * Set CC=2 (High)
         BCR   B'1101',R4               * 07D4 Do not branch
         BCR   B'0010',R4               * 0724 Do branch
BCR_ERR  DC    X'0000'                  * Instruction will be skipped
         BR    R1                       * 07F1
         BHR   R1                       * 0721
         BLR   R1                       * 0741
         BER   R1                       * 0781
         BPR   R1                       * 0721
         BOR   R1                       * 0711
         BMR   R1                       * 0741
         BZR   R1                       * 0781
         NOPR  R1                       * 0701
         BNHR  R1                       * 07D1
         BNLR  R1                       * 07B1
         BNER  R1                       * 0771
         BNPR  R1                       * 07D1
         BNOR  R1                       * 07E1
         BNMR  R1                       * 07B1
         BNZR  R1                       * 0771
BCR24    LA    R0,BCR_ERR               * Point branch target (useless)
         BCR   B'1111',R0               * 07F0 Should not branch
         BR    R0                       * 07F0 Should not branch
         LA    R5,NOPR24                *
         BR    R5                       * 07F5
         DC    X'0000'                  * Instruction will be skipped
NOPR24   NOPR  R5                       * 0705 Should not branch
         LA    R4,BLR24                 * CC still = 2
         BNHR  R4                       * 07D4 Do not branch
         BNPR  R4                       * 07D4 Do not branch
         BHR   R0                       * 0720 Do not branch
         BPR   R4                       * 0724 branch
         DC    X'0000'                  * Instruction will be skipped
BLR24    LA    R4,BER24                 *
         CR    R5,R4                    * Set CC=1 (Low)
         BNLR  R4                       * 07B4 should not branch
         BNMR  R4                       * 07B4 should not branch
         BLR   R0                       * 0740 should not branch
         BMR   R4                       * 0744 branch
         DC    X'0000'                  * Instruction will be skipped
BER24    LA    R4,BOR24                 *
         CR    R4,R4                    * Set CC=0
         BNER  R4                       * 0774 should not branch
         BNZR  R4                       * 0774 should not branch
         BER   R0                       * 0780 should not branch
         BZR   R4                       * 0784 branch
         DC    X'0000'                  * Instruction will be skipped
BOR24    TM    =X'FF',X'FF'             * Set CC=3
         LA    R4,BCR24_EX              *
         BNOR  R4                       * 07E4 should not branch
         BOR   R4                       * 0714 should branch
NOPR_EX  NOPR  R0                       * Template instruction for EX
*
* Test EXecute of BCR instruction
BCR24_EX LA    R4,BCR24_EXRL            * Point target address
         IC    R5,=X'F4'                * Mask B'1111' and R4 target
         EX    R5,NOPR_EX               * Should branch
         DC    X'0000'                  * Instruction will be skipped
BCR24_EXRL EXRL R0,NOPR_EX              * Execute unmodified
***********************************************************************
*
* 0A = SVC
*
***********************************************************************
         B     SVC_DONE                 * Test assembly of SVC only
         SVC   10                       * 0A0A
SVC_DONE DS    0H  
***********************************************************************
*
* 0E = MVCL
*
***********************************************************************

***********************************************************************
*
* 0F = CLCL
*
***********************************************************************

***********************************************************************
*
* 10 = LPR
*
***********************************************************************

***********************************************************************
*
* 11 = LNR
*
***********************************************************************

***********************************************************************
*
* 12 = LTR
*
***********************************************************************

***********************************************************************
*
* 13 = LCR
*
***********************************************************************

***********************************************************************
*
* 14 = NR
*
***********************************************************************

***********************************************************************
*
* 15 = CLR
*
***********************************************************************

***********************************************************************
*
* 16 = CLR
*
***********************************************************************

***********************************************************************
*
* 17 = XR
*
***********************************************************************

***********************************************************************
*
* 18 = LR
*
***********************************************************************

***********************************************************************
*
* 19 = CR
*
***********************************************************************

***********************************************************************
*
* 1A = AR
*
***********************************************************************

***********************************************************************
*
* 1B = SR
*
***********************************************************************

***********************************************************************
*
* 1C = MR
*
***********************************************************************

***********************************************************************
*
* 1D = DR
*
***********************************************************************

***********************************************************************
*
* 1E = ALR
*
***********************************************************************

***********************************************************************
*
* 1F = SLR
*
***********************************************************************

***********************************************************************
*
* 20 = LPDR
*
***********************************************************************

***********************************************************************
*
* 21 = LNDR
*
***********************************************************************

***********************************************************************
*
* 22 = LTDR
*
***********************************************************************

***********************************************************************
*
* 23 = LCDR
*
***********************************************************************

***********************************************************************
*
* 24 = HDR
*
***********************************************************************

***********************************************************************
*
* 25 = LRDR
*
***********************************************************************

***********************************************************************
*
* 26 = MXR
*
***********************************************************************

***********************************************************************
*
* 27 = MXDR
*
***********************************************************************

***********************************************************************
*
* 28 = LDR
*
***********************************************************************
 
***********************************************************************
*
* 29 = CDR
*
***********************************************************************

***********************************************************************
*
* 2A = ADR
*
***********************************************************************

***********************************************************************
*
* 2B = SDR
*
***********************************************************************

***********************************************************************
*
* 2C = MDR
*
***********************************************************************

***********************************************************************
*
* 2D = DDR
*
***********************************************************************

***********************************************************************
*
* 2E = AWR
*
***********************************************************************

***********************************************************************
*
* 2F = SWR
*
***********************************************************************

***********************************************************************
*
* 30 = LPER
*
***********************************************************************

***********************************************************************
*
* 31 = LNER
*
***********************************************************************

***********************************************************************
*
* 32 = LTER
*
***********************************************************************

***********************************************************************
*
* 33 = LCER
*
***********************************************************************

***********************************************************************
*
* 34 = HER
*
***********************************************************************

***********************************************************************
*
* 35 = LRER
*
***********************************************************************

***********************************************************************
*
* 36 = AXR
*
***********************************************************************

***********************************************************************
*
* 37 = SXR
*
***********************************************************************

***********************************************************************
*
* 38 = LER
*
***********************************************************************

***********************************************************************
*
* 39 = CER
*
***********************************************************************

***********************************************************************
*
* 3A = AER
*
***********************************************************************

***********************************************************************
*
* 3B = SER
*
***********************************************************************

***********************************************************************
*
* 3C = MER/MDER
*
***********************************************************************

***********************************************************************
*
* 3D = DER
*
***********************************************************************

***********************************************************************
*
* 3E = AUR
*
***********************************************************************

***********************************************************************
*
* 3F = SUR
*
***********************************************************************

***********************************************************************
*
* 40 = STH
*
***********************************************************************

***********************************************************************
*
* 41 = LA
*
***********************************************************************

***********************************************************************
*
* 42 = STC
*
***********************************************************************

***********************************************************************
*
* 43 = IC
*
***********************************************************************

***********************************************************************
*
* 44 = EX
*
***********************************************************************

***********************************************************************
*
* 45 = BAL
*
***********************************************************************

***********************************************************************
*
* 46 = BCT
*
***********************************************************************

***********************************************************************
*
* 47 = BC BE/BH/BL/BZ/BNE/BNH/BNL/BNZ
*
***********************************************************************

***********************************************************************
*
* 48 = LH
*
***********************************************************************

***********************************************************************
*
* 49 = CH
*
***********************************************************************

***********************************************************************
*
* 4A = AH
*
***********************************************************************

***********************************************************************
*
* 4B = SH
*
***********************************************************************

***********************************************************************
*
* 4C = MH
*
***********************************************************************

***********************************************************************
*
* 4D = CVD
*
***********************************************************************

***********************************************************************
*
* 4F = CVB
*
***********************************************************************

***********************************************************************
*
* 50 = ST
*
***********************************************************************

***********************************************************************
*
* 54 = N
*
***********************************************************************

***********************************************************************
*
* 55 = CL
*
***********************************************************************

***********************************************************************
*
* 56 = O
*
***********************************************************************

***********************************************************************
*
* 57 = X
*
***********************************************************************

***********************************************************************
*
* 58 = L
*
***********************************************************************

***********************************************************************
*
* 59 = C
*
***********************************************************************

***********************************************************************
*
* 5A = A
*
***********************************************************************

***********************************************************************
*
* 5B = S
*
***********************************************************************

***********************************************************************
*
* 5C = M
*
***********************************************************************

***********************************************************************
*
* 5D = D
*
***********************************************************************

***********************************************************************
*
* 5E = AL
*
***********************************************************************

***********************************************************************
*
* 5F = SL
*
***********************************************************************

***********************************************************************
*
* 60 = STD
*
***********************************************************************

***********************************************************************
*
* 67 = MXD
*
***********************************************************************

***********************************************************************
*
* 68 = LD
*
***********************************************************************

***********************************************************************
*
* 69 = CD
*
***********************************************************************

***********************************************************************
*
* 6A = AD
*
***********************************************************************

***********************************************************************
*
* 6B = SD
*
***********************************************************************

***********************************************************************
*
* 6C = MD
*
***********************************************************************

***********************************************************************
*
* 6D = DD
*
***********************************************************************

***********************************************************************
*
* 6E = AW
*
***********************************************************************

***********************************************************************
*
* 6F = SW
*
***********************************************************************

***********************************************************************
*
* 70 = STE
*
***********************************************************************

***********************************************************************
*
* 78 = LE
*
***********************************************************************

***********************************************************************
*
* 79 = CE
*
***********************************************************************

***********************************************************************
*
* 7A = AE
*
***********************************************************************

***********************************************************************
*
* 7B = SE
*
***********************************************************************

***********************************************************************
*
* 7C = ME/MDE
*
***********************************************************************

***********************************************************************
*
* 7D = DE
*
***********************************************************************

***********************************************************************
*
* 7E = AU
*
***********************************************************************

***********************************************************************
*
* 7F = SU
*
***********************************************************************

***********************************************************************
*
* 80 = SSM
*
***********************************************************************

***********************************************************************
*
* 82 = LPSW
*
***********************************************************************

***********************************************************************
*
* 86 = BXH
*
***********************************************************************

***********************************************************************
*
* 87 = BXLE
*
***********************************************************************
 
***********************************************************************
*
* 88 = SRL
*
***********************************************************************

***********************************************************************
*
* 89 = SLL
*
***********************************************************************

***********************************************************************
*
* 8A = SRA
*
***********************************************************************

***********************************************************************
*
* 8B = SLA
*
***********************************************************************

***********************************************************************
*
* 8C = SRDL
*
***********************************************************************

***********************************************************************
*
* 8D = SLDL
*
***********************************************************************

***********************************************************************
*
* 8E = SRDA
*
***********************************************************************

***********************************************************************
*
* 8F = SLDA
*
***********************************************************************

***********************************************************************
*
* 90 = STM
*
***********************************************************************

***********************************************************************
*
* 91 = TM
*
***********************************************************************

***********************************************************************
*
* 92 = MVI
*
***********************************************************************

***********************************************************************
*
* 93 = TS
*
***********************************************************************

***********************************************************************
*
* 94 = NI
*
***********************************************************************

***********************************************************************
*
* 95 = CLI
*
***********************************************************************

***********************************************************************
*
* 96 = OI
*
***********************************************************************

***********************************************************************
*
* 97 = XI
*
***********************************************************************

***********************************************************************
*
* 98 = LM
*
***********************************************************************

***********************************************************************
*
* AC = STNSM
*
***********************************************************************

***********************************************************************
*
* AD = STOSM
*
***********************************************************************

***********************************************************************
*
* AF = MC
*
***********************************************************************

***********************************************************************
*
* B1 = LRA
*
***********************************************************************

***********************************************************************
*
* B202 = STIDP
*
***********************************************************************

***********************************************************************
*
* B204 = SCK
*
***********************************************************************

***********************************************************************
*
* B205 = STCK
*
***********************************************************************

***********************************************************************
*
* B206 = SCKC
*
***********************************************************************

***********************************************************************
*
* B207 = STCKC
*
***********************************************************************

***********************************************************************
*
* B208 = SPT
*
***********************************************************************

***********************************************************************
*
* B209 = STPT
*
***********************************************************************

***********************************************************************
*
* B20A = SPKA
*
***********************************************************************

***********************************************************************
*
* B20B = IPK
*
***********************************************************************

***********************************************************************
*
* B20D = PTLB
*
***********************************************************************

***********************************************************************
*
* B6 = STCTL
*
***********************************************************************

***********************************************************************
*
* B7 = LCTL
*
***********************************************************************

***********************************************************************
*
* BA = CS
*
***********************************************************************

***********************************************************************
*
* BB = CDS
*
***********************************************************************

***********************************************************************
*
* BD = CLM
*
***********************************************************************

***********************************************************************
*
* BE = STCM
*
***********************************************************************

***********************************************************************
*
* BF = ICM
*
***********************************************************************

***********************************************************************
*
* D1 = MVN
*
***********************************************************************

***********************************************************************
*
* D2 = MVC
*
***********************************************************************

***********************************************************************
*
* D3 = MVZ
*
***********************************************************************

***********************************************************************
*
* D4 = NC
*
***********************************************************************

***********************************************************************
*
* D5 = CLC
*
***********************************************************************

***********************************************************************
*
* D6 = OC
*
***********************************************************************

***********************************************************************
*
* D7 = XC
*
***********************************************************************

***********************************************************************
*
* DC = TR
*
***********************************************************************

***********************************************************************
*
* DD = TRT
*
***********************************************************************

***********************************************************************
*
* DE = ED
*
***********************************************************************

***********************************************************************
*
* DF = EDMK
*
***********************************************************************

***********************************************************************
*
* E8 = MVCIN
*
***********************************************************************

***********************************************************************
*
* F0 = SRP
*
***********************************************************************

***********************************************************************
*
* F1 = MVO
*
***********************************************************************

***********************************************************************
*
* F2 = PACK
*
***********************************************************************

***********************************************************************
*
* F3 = UNPK
*
***********************************************************************

***********************************************************************
*
* F8 = ZAP
*
***********************************************************************

***********************************************************************
*
* F9 = CP
*
***********************************************************************

***********************************************************************
*
* FA = AP
*
***********************************************************************

***********************************************************************
*
* FB = SP
*
***********************************************************************

***********************************************************************
*
* FC = MP
*
***********************************************************************

***********************************************************************
*
* FD = DP
*
***********************************************************************

***********************************************************************
*
* To exit program - release all acquired storage
*
* Register allocations:
* R13 - Workarea
* R12 - Codebase
* R11 - PRIMHDR area
* R10 - bitmap pointer
*
***********************************************************************
EXIT     DS    0H
         L     R11,4(,R13)             * Get ptr to prev savearea
         LA    R10,WORKAREA_LEN        * Size of area to be freed
         FREEMAIN RU,LV=(R10),A=(R13)  * Free workarea
         DROP  R13                     * End addressability of workarea
         LR    R13,R11                 * Set prev savearea current
         LM    R14,R12,12(R13)         * Reset all registers
         XR    R15,R15                 * Set RC=0
         BR    R14                     * Return

         DROP  ,
***********************************************************************
         LTORG
         END
