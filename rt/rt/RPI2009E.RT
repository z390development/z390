*
* skip intro
t18
* skip set program mask
t2
* skip initialize R2
t1
*
* ##############################
*
* Part 1 tests that set CC only
*
* ##############################
*
* SLA tests for CC 3
*
* ############################## (@98)
*
* neg test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f4cfffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'f4f4f4f4bffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000030000000'
*
* ############################## (@105)
*
* pos test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f43fffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'f4f4f4f47ffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000030000000'
*
* ##############################
*
* SLA tests for CC 0 1 2
*
* ############################## (@112)
*
  v * 2       = x'1b00'
t3
  v 0r        = x'f4f4f4f400000000'
  v psw.cc    = x'3'
t1
  v 0r        = x'f4f4f4f400000000'
  v psw.cc    = x'0'
t1
  v 2r        = x'0000000000000000'
*
* ############################## (@120)
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f4efffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'f4f4f4f4bffffffc'
  v psw.cc    = x'1'
t1
  v 2r        = x'0000000010000000'
*
* ############################## (@127)
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f41fffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'f4f4f4f47ffffffc'
  v psw.cc    = x'2'
t1
  v 2r        = x'0000000020000000'
*
*
* ##############################
*
* SLAK tests for CC 3
*
* ############################## (@143)
*
* neg test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f412345678'
  v 1r        = x'f4f4f4f4cfffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'f4f4f4f4bffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000030000000'
*
* ############################## (@150)
*
* pos test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f412345678'
  v 1r        = x'f4f4f4f43fffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'f4f4f4f47ffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000030000000'
*
* ##############################
*
* SLAK tests for CC 0 1 2
*
* ############################## (@157)
*
  v * 2       = x'1b00'
t3
  v 0r        = x'f4f4f4f412345678'
  v 1r        = x'f4f4f4f400000000'
  v psw.cc    = x'3'
t1
  v 1r        = x'f4f4f4f400000000'
  v psw.cc    = x'0'
t1
  v 2r        = x'0000000000000000'
*
* ############################## (@165)
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f412345678'
  v 1r        = x'f4f4f4f4efffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'f4f4f4f4bffffffc'
  v psw.cc    = x'1'
t1
  v 2r        = x'0000000010000000'
*
* ############################## (@172)
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f412345678'
  v 1r        = x'f4f4f4f41fffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'f4f4f4f47ffffffc'
  v psw.cc    = x'2'
t1
  v 2r        = x'0000000020000000'
*
* ##############################
*
* SLDA tests for CC 3
*
* ############################## (@187)
*
* neg test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f4cfffffff'
  v 1r        = x'f4f4f4f4ffffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'f4f4f4f4bfffffff'
  v 1r        = x'f4f4f4f4fffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000030000000'
*
* ############################## (@194)
*
* pos test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f43fffffff'
  v 1r        = x'f4f4f4f4ffffffff'
  v psw.cc    = x'0'
t1t1
  r4
  v 0r        = x'f4f4f4f47fffffff'
  v 1r        = x'f4f4f4f4fffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000030000000'
*
* ##############################
*
* SLDA tests for CC 0 1 2
*
* ############################## (@201)
*
  v * 2       = x'1b00'
t3
  v 0r        = x'f4f4f4f400000000'
  v 1r        = x'f4f4f4f400000000'
  v psw.cc    = x'3'
t1
  v 0r        = x'f4f4f4f400000000'
  v 1r        = x'f4f4f4f400000000'
  v psw.cc    = x'0'
t1
  v 2r        = x'0000000000000000'
*
* ############################## (@209)
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f4efffffff'
  v 1r        = x'f4f4f4f4ffffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'f4f4f4f4bfffffff'
  v 1r        = x'f4f4f4f4fffffffc'
  v psw.cc    = x'1'
t1
  v 2r        = x'0000000010000000'
*
* ############################## (@216)
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f41fffffff'
  v 1r        = x'f4f4f4f4ffffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'f4f4f4f47fffffff'
  v 1r        = x'f4f4f4f4fffffffc'
  v psw.cc    = x'2'
t1
  v 2r        = x'0000000020000000'
*
* ##############################
*
* SLAG tests for CC 3
*
* ############################## (@232)
*
*
* neg test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'12345678a1b2c3d4'
  v 1r        = x'cfffffffffffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'bffffffffffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000030000000'
*
* ############################## (@239)
*
* pos test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'12345678a1b2c3d4'
  v 1r        = x'3fffffffffffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'7ffffffffffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000030000000'
*
* ##############################
*
* SLAG tests for CC 0 1 2
*
* ############################## (@246)
*
  v * 2       = x'1b00'
t3
  v 0r        = x'12345678a1b2c3d4'
  v 1r        = x'0000000000000000'
  v psw.cc    = x'3'
t1
  v 0r        = x'0000000000000000'
  v psw.cc    = x'0'
t1
  v 2r        = x'0000000000000000'
*
* ############################## (@254)
*
  v * 2       = x'1b00'
t2
  v 0r        = x'12345678a1b2c3d4'
  v 1r        = x'efffffffffffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'bffffffffffffffc'
  v psw.cc    = x'1'
t1
  v 2r        = x'0000000010000000'
*
* ############################## (@261)
*
  v * 2       = x'1b00'
t2
  v 0r        = x'12345678a1b2c3d4'
  v 1r        = x'1fffffffffffffff'
  v psw.cc    = x'0'
t1
  v 0r        = x'7ffffffffffffffc'
  v psw.cc    = x'2'
t1
  v 2r        = x'0000000020000000'
*
* ##############################
*
* Part 2 tests that overflow
*
* ##############################
*
  v 81da. 2   = x'1b00'
  a 81da.
  g
  v psw.addr  = x'000081da'
*
* ##############################
*
* SLA tests that overflow
*
* ############################## (@306)
*
* neg test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f4cfffffff'
  v psw.cc    = x'0'
  v 81f0. 4   = x'b2220020'
  a 81f0.
g
  v psw.addr  = x'000081f0'
  v 0r        = x'f4f4f4f4bffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000038000000'
  v 82fa. 1   = x'38'
*
* ############################## (@317)
*
* pos test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f43fffffff'
  v psw.cc    = x'0'
  v 820a. 4   = x'b2220020'
  a 820a.
g
  v psw.addr  = x'0000820a'
  v 0r        = x'f4f4f4f47ffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000038000000'
  v 82fa. 1   = x'38'
*
* ##############################
*
* SLAK tests that overflow
*
* ############################## (@337)
*
* neg test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f412345678'
  v 1r        = x'f4f4f4f4cfffffff'
  v psw.cc    = x'0'
  v 8226. 4   = x'b2220020'
  a 8226.
g
  v psw.addr  = x'00008226'
  v 0r        = x'f4f4f4f4bffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000038000000'
  v 82fa. 1   = x'38'
*
* ############################## (@348)
*
* pos test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f412345678'
  v 1r        = x'f4f4f4f43fffffff'
  v psw.cc    = x'0'
  v 8242. 4   = x'b2220020'
  a 8242.
g
  v psw.addr  = x'00008242'
  v 0r        = x'f4f4f4f47ffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000038000000'
  v 82fa. 1   = x'38'
*
* ##############################
*
* SLDA tests that overflow
*
* ############################## (@367)
*
* neg test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f4cfffffff'
  v 1r        = x'f4f4f4f4ffffffff'
  v psw.cc    = x'0'
  v 825c. 4   = x'b2220020'
  a 825c.
g
  v psw.addr  = x'0000825c'
  v 0r        = x'f4f4f4f4bfffffff'
  v 1r        = x'f4f4f4f4fffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000038000000'
  v 82fa. 1   = x'38'
*
* ############################## (@378)
*
* pos test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'f4f4f4f43fffffff'
  v 1r        = x'f4f4f4f4ffffffff'
  v psw.cc    = x'0'
  v 8276. 4   = x'b2220020'
  a 8276.
g
  v psw.addr  = x'00008276'
  v 0r        = x'f4f4f4f47fffffff'
  v 1r        = x'f4f4f4f4fffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000038000000'
  v 82fa. 1   = x'38'
*
* ##############################
*
* SLAG tests that overflow
*
* ############################## (@398)
*
*
* neg test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'12345678a1b2c3d4'
  v 1r        = x'cfffffffffffffff'
  v psw.cc    = x'0'
  v 8294. 4   = x'b2220020'
  a 8294.
g
  v psw.addr  = x'00008294'
  v 0r        = x'bffffffffffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000038000000'
  v 82fa. 1   = x'38'
*
* ############################## (@409)
*
* pos test
*
  v * 2       = x'1b00'
t2
  v 0r        = x'12345678a1b2c3d4'
  v 1r        = x'3fffffffffffffff'
  v psw.cc    = x'0'
  v 82b2. 4   = x'b2220020'
  a 82b2.
g
  v psw.addr  = x'000082b2'
  v 0r        = x'7ffffffffffffffc'
  v psw.cc    = x'3'
t1
  v 2r        = x'0000000038000000'
  v 82fa. 1   = x'38'
*
* ##############################
* done
* ##############################
z
