         MACRO
.*********************************************************************
.* z390 - Mainframe assembler emulator and run-time engine
.* Copyright (C) 2021 z390 Assembler LLC
.*
.* This file is part of z390.
.*
.* z390 is free software; you can redistribute it and/or modify
.* it under the terms of the GNU General Public License as published by
.* the Free Software Foundation; either version 2 of the License, or
.* (at your option) any later version.
.* z390 is distributed in the hope that it will be useful,
.* but WITHOUT ANY WARRANTY; without even the implied warranty of
.* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.* GNU General Public License for more details.
.*
.* You should have received a copy of the GNU General Public License 
.* along with this program; if not, see https://www.gnu.org/licenses.
.*********************************************************************
.* Author - Don Higgins                                              *
.* Date   - 04/16/08                                                 *
.*********************************************************************
.* 04/16/08 initial coding for global GO TO    
.* 10/06/08 ZSTRMAC
.* 08/05/09 RPI 1065 add support for SN-PG paragraph names
.* 08/16/09 RPI 1065 support GO TO without target as model for ALTER
.*          see OBNC1M NIST test.
.* 02/20/12 RPI 1182 support short form GO label 
.*********************************************************************
         GO                                  
         COPY  ZC_WS
         :&NP  SETA  N'&SYSLIST
         :&PARM_IX   SETA  1
         AIF   ('&SYSLIST(&PARM_IX)' EQ 'TO')
               :&PARM_IX SETA  &PARM_IX+1
         AEND
         AIF   (&PARM_IX GT &NP)            RPI 1065, RPI 11
               GEN_B  &LAST_PG_NAME,&LAST_SN_NAME  MODEL FOR ALTER
               MEXIT
         AEND
         :&FIRST SETA &PARM_IX                      RPI 1065
         AIF   ('&SYSLIST(&PARM_IX+1)' EQ 'OF'                         X
               OR '&SYSLIST(&PARM_IX+1)' EQ 'IN')
               :&SN_NAME SETC '&SYSLIST(&PARM_IX+2)'
               :&PG_NAME SETC '&SYSLIST(&PARM_IX)'
               :&PARM_IX SETA &PARM_IX+3
         AELSE
               :&SN_NAME SETC ''
               :&PG_NAME SETC '&SYSLIST(&PARM_IX)'
               :&PARM_IX SETA &PARM_IX+1
         AEND  
         AIF   (&NP LT &PARM_IX)
               GEN_B  &PG_NAME,&SN_NAME
         AELSE
               :&GO_LIST SETC '&SYSLIST(&FIRST)'     RPI 1065
               :&PARM_IX SETA &FIRST+1               RPI 1065
               AWHILE (&PARM_IX LT &NP-2                               X
                      AND '&SYSLIST(&PARM_IX)' NE 'DEPENDING')
                   :&GO_LIST SETC '&GO_LIST,&SYSLIST(&PARM_IX)'
                   :&PARM_IX SETA &PARM_IX+1
               AEND
               AIF  ('&SYSLIST(&PARM_IX)' EQ 'DEPENDING')              X
                    AND '&SYSLIST(&PARM_IX+1)' EQ 'ON')
                    :&PARM_IX SETA &PARM_IX+2
                    :&FIELD_REG SETC 'ZC_R2'
                    :&FIELD_SS1 SETB 0
                    ACALL GET_PARM_FIELD
                    AIF (&FIELD_IX GT 0)
                        GEN_GO_DEPEND &GO_LIST
                    AELSE
                        MNOTE 8,'GO TO DEPENDING VAR NOT FOUND - &FIELDX
               _NAME'
                    AEND
               AELSE
                    MNOTE 8,'GO TO DEPENDING CLAUSE NOT FOUND'
               AEND      
         AEND
         COPY ZCGETFLD
         MEND
