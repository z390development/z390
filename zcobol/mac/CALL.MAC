         MACRO
.*********************************************************************
.* z390 - Mainframe assembler emulator and run-time engine
.* Copyright (C) 2021 z390 Assembler LLC
.*
.* This file is part of z390.
.*
.* z390 is free software; you can redistribute it and/or modify
.* it under the terms of the GNU General Public License as published by
.* the Free Software Foundation; either version 2 of the License, or
.* (at your option) any later version.
.* z390 is distributed in the hope that it will be useful,
.* but WITHOUT ANY WARRANTY; without even the implied warranty of
.* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.* GNU General Public License for more details.
.*
.* You should have received a copy of the GNU General Public License 
.* along with this program; if not, see https://www.gnu.org/licenses.
.*********************************************************************
.* Author - Don Higgins                                              *
.* Date   - 04/07/08                                                 *
.*********************************************************************
.* 10/14/08 initial coding for global CALL     
.*********************************************************************
         CALL  &PGM,&USING      
         COPY  ZC_WS
         :&NP  SETA N'&SYSLIST
         AIF   (&NP EQ 1)
               GEN_CALL &PGM
               MEXIT
         AEND
         AIF   ('&USING' NE 'USING')
               MNOTE 8,'CALL MISSING USING'
               MEXIT
         AEND
         :&RETURN_IX SETA 0
         :&I SETA 3
         :&PARMS SETC 'USING'
         AWHILE (&I LE &NP)
               AIF ('&SYSLIST(&I)' EQ 'ON'                             X
                 OR '&SYSLIST(&I)' EQ 'NOT'                            X
                 OR '&SYSLIST(&I)' EQ 'OVERFLOW'                       X
                 OR '&SYSLIST(&I)' EQ 'EXCEPTION')
                   MNOTE 8,'CALL ON EXCEPTION/OVERFLOW NOT SUPPORTED'
                   MEXIT
               AELSEIF ('&SYSLIST(&I)' EQ 'RETURNING')
                   :&RETURN_IX SETA &I+1
                   AEXIT AWHILE
               AEND
               :&PARMS SETC '&PARMS,&SYSLIST(&I)'
               :&I SETA &I+1
         AEND
         GEN_CALL &PGM,&PARMS
         AIF (&RETURN_IX GT 0)
               :&PARM_IX SETA &RETURN_IX
               :&FIELD_REG SETC 'ZC_R2'
               :&FIELD_SS1 SETB 1
               ACALL GET_PARM_FIELD
               AIF (&FIELD_IX GT 0)
                   ZC_SYM_FIND RETURN_CODE
                   GEN_MOVE &FIELD_NAME,&FIELD_IX,RETURN_CODE,&SYM_IX
               AELSE
                   MNOTE 8,'CALL RETURNING FIELD NOT FOUND - &FIELD_NAMX
               E'
               AEND
         AEND
         MEXIT
         COPY  ZCGETFLD
         MEND
