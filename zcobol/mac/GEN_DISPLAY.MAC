         MACRO
.*********************************************************************
.* Copyright 2008 Automated Software Tools Corporation               *
.* This source code is part of z390 zCOBOL/assembler/emulator package*
.* The z390 package is distributed under GNU general public license  *
.* Author - Don Higgins                                              *
.* Date   - 04/07/08                                                 *
.*********************************************************************
.* 04/11/08 initial coding for z390 DISPLAY 'text' or label
.* 10/07/08 ZSTRMAC
.*********************************************************************
.* 11/19/08 add support for multiple field types using DISPLAY routine
.* 03/06/09 RPI 1004 add DEL DFP/BFP/HFP support                      
.* 03/10/09 RPI 1013 remove dependency on ZC_FLOAT using types 1-9        
.* 07/25/09 RPI 1065 support numeric literals                             
.* 07/30/09 RPI 1065 support ALL lit, zero, space, quote                  
.* 10/01/09 RPI 1089 generate inline WTO for sinlge character literal     
.* 01/11/10 RPI 1104 support %HEX parm to diplay non-llit flds in hex
.* 05/31/10 RPI 1122 change %HEX to only apply to next field in DISPLAY
.* 03/30/12 RPI 1182 use &FIELD_LEN to allow RMD override of length
.*********************************************************************
         GEN_DISPLAY 
         COPY  ZC_WS
       :&HEX SETB 0                                  RPI 1104
       AIF (N'&SYSLIST EQ 1 AND '&SYSLIST(1)'(1,1) EQ '''')
         WTO   &SYSLIST(1)
       AELSE
         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
         :&NP  SETA N'&SYSLIST
         :&PARM_IX SETA 1
         :&OFF     SETA 0
         AWHILE (&PARM_IX LE &NP)
.* MNOTE 'DSHX1 PARM_IX=&PARM_IX PARM=&SYSLIST(&PARM_IX)'
               AIF ('&SYSLIST(&PARM_IX)' EQ '%HEX')  RPI 1104
                   :&HEX SETB 1
                   :&PARM_IX SETA &PARM_IX+1
               AEND
.* MNOTE 'DSHX2 PARM_IX=&PARM_IX PARM=&SYSLIST(&PARM_IX)'
               :&FIELD SETC '&SYSLIST(&PARM_IX)' RPI 1065
               AIF ('&FIELD' EQ 'ALL')
                   :&PARM_IX SETA &PARM_IX+1
                   :&FIELD SETC '&SYSLIST(&PARM_IX)'
                   AIF ('&FIELD'(1,1) NE '''')
                       MNOTE 8,'GEN_DISPLAY ALL REQUIRES LIT - &FIELD'
                       MEXIT
                   AEND
                   :&TEXT SETC '&FIELD'(2,K'&FIELD-2)
                   :&DUP  SETA 78/K'&TEXT+1
                   :&TEXT SETC (&DUP)'&TEXT'
                   :&FIELD SETC ''''.'&TEXT'(1,78).''''
               AELSEIF ('&FIELD' EQ 'ZERO'                             X
                     OR '&FIELD' EQ 'ZEROS'                            X
                     OR '&FIELD' EQ 'ZEROES')
                   :&FIELD SETC '''0'''
               AELSEIF ('&FIELD' EQ 'SPACE'                            X
                     OR '&FIELD' EQ 'SPACES')
                   :&FIELD SETC ''' ''' SINGLE SPACE IN  QUOTES C?
               AELSEIF ('&FIELD' EQ 'QUOTE'                            X
                     OR '&FIELD' EQ 'QUOTES')
                   :&FIELD SETC '''''''''' SINGLE QUOTE IN QUOTES C?
               AEND    
               AIF ('&FIELD'(1,1) GE '0' OR '&FIELD'(1,1) EQ '.')
                   :&FIELD SETC '''&FIELD''' DISP NUMERIC AS LIT
               AEND
               AIF ('&FIELD'(1,1) EQ '''')  LITERAL TEXT
                   :&LEN   SETA K'&FIELD-2
                   :&LITL  SETA (&LEN+1)/2*2
         LARL  ZC_R0,=CL&LITL&FIELD PAD TO EVEN LEN LIT
         LA    ZC_R1,&LEN
         LA    ZC_R2,C'X'
         STM   ZC_R0,ZC_R2,&OFF.(ZC_R3)  SET DISPLAY LIST ENTRY              
                    :&PARM_IX SETA &PARM_IX+1        RPI 1104 MULT LITS
               AELSE
                    :&FIELD_REG SETC 'ZC_R2'
                    :&FIELD_SS1 SETB 0
                    ACALL GET_PARM_FIELD
                    AIF (&FIELD_IX EQ 0)
                        MNOTE 8,'GEN_DISPLAY FIELD NOT FOUND &FIELD_NAMX
               E'
                        MEXIT
                    AEND
         LA    ZC_R0,&FIELD_NAME
         LA    ZC_R1,&FIELD_LEN  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
      AIF (&HEX)                                    RPI 1104
         LA    ZC_R2,C'%' HEX 
         :&HEX SETB 0                               RPI 1122 ONE PARM
      AELSE
         LA    ZC_R2,C'&SYM_PIC_TYPE(&FIELD_IX)'
      AEND
         STM   ZC_R0,ZC_R2,&OFF.(ZC_R3)  SET DISPLAY LIST ENTRY              
               AEND
               :&OFF SETA &OFF+12
         AEND       
         OI    &OFF-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
         LR    ZC_R1,ZC_R3
         L     ZC_R15,ZCVT_DISPLAY
         BASR  ZC_R14,ZC_R15
       AEND
         MEXIT
         COPY  ZCGETFLD
         MEND
