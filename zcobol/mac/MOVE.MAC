         MACRO
.*********************************************************************
.* Copyright 2008 Automated Software Tools Corporation               *
.* This source code is part of z390 zCOBOL/assembler/emulator package*
.* The z390 package is distributed under GNU general public license  *
.* Author - Don Higgins                                              *
.* Date   - 04/07/08                                                 *
.*********************************************************************
.* 04/10/08 initial coding for global MOVE     
.* 05/02/08 add support for literal values by PIC_TYPE
.* 10/06/08 ZSTRMAC
.* 02/27/09 RPI 1012 SUPPORT ALL '?' LIT
.* 06/18/09 RPI 1042 add ZCDFHLIT shared by IF and MOVE                 
.* 01/01/10 RPI 1106 change target index reg to R3 from R2    
.* 03/26/12 RPI 1182 add GEN_BASE for source to support mult moves
.* 03/27/12 RPI 1182 add RMD_REG and RMD_VLEN support for MOVE's
.* 17-01-22 JH  RPI 1605 Move.mac failing to switch off Reference
.*                       Modification - causing subsequent S0C7
.*********************************************************************
.* MOVE id1 TO id2 id3 idn
.*********************************************************************
         MOVE  
         COPY  ZC_WS
         :&RMD_VLEN_ALLOW SETB 1    RPI 1182 ALLOW VAR LEN RMD
         :&SOURCE SETC '&SYSLIST(1)'
         :&ADDR_OF SETB 0
         :&PARM_IX SETA 2
         :&SOURCE_IX SETA 0
         AIF   ('&SOURCE' EQ 'ALL')
               :&SOURCE SETC '*&SYSLIST(2)' PREFIX *LIT FOR ALL LIT
               :&PARM_IX SETA 3
         AELSEIF   ('&SOURCE' EQ 'LENGTH')
               AIF ('&SYSLIST(2)' EQ 'OF')
                   :&SOURCE SETC '&SYSLIST(3)'
                   :&PARM_IX SETA 4
               AELSE
                   :&SOURCE SETC '&SYSLIST(2)'
                   :&PARM_IX SETA 3
               AEND
               ZC_SYM_FIND &SOURCE
               AIF  (&SYM_IX GT 0)
                    :&SOURCE SETC '&SYM_LEN(&SYM_IX)'
               AELSE
                    MNOTE 8,'MOVE LENGTH OF &SOURCE NOT FOUND'
                    MEXIT
               AEND
         AELSEIF ('&SOURCE' EQ 'ADDRESS')
               AIF ('&SYSLIST(2)' EQ 'OF')
                   :&SOURCE SETC '&SYSLIST(3)'
                   :&PARM_IX SETA 3
               AELSE
                   :&SOURCE SETC '&SYSLIST(2)'
                   :&PARM_IX SETA 2
               AEND
               :&FIELD_REG SETC 'ZC_R2'
               :&FIELD_SS1 SETB 0
               ACALL GET_PARM_FIELD
               AIF (&FIELD_IX EQ 0)
                   MNOTE 8,'MOVE SOURCE FIELD NOT FOUND &FIELD_NAME'
                   MEXIT
               AEND
               :&SOURCE_IX SETA &FIELD_IX
               :&SOURCE    SETC '&FIELD_NAME'
               :&ADDR_OF SETB 1
         AELSEIF   ('&SOURCE' EQ '+' OR '&SOURCE' EQ '-')
               :&SOURCE SETC '&SOURCE&SYSLIST(2)'
               :&PARM_IX SETA 3
         AELSEIF   ('&SOURCE'(1,2) EQ 'X''') OR '&SOURCE'(1,2) EQ 'X"')
               :&SOURCE SETC 'X'''.'&SOURCE'(3,K'&SOURCE-3).''''
         AELSEIF  ('&SOURCE' EQ 'DFHRESP')
               :&DFHRESP SETC '&SYSLIST(3)'
               ACALL GET_DFHRESP
               :&SOURCE  SETC '&DFHLIT'
               :&PARM_IX SETA 5
         AELSEIF  ('&SOURCE' EQ 'DFHVALUE')
               :&DFHVALUE SETC '&SYSLIST(3)'
               ACALL GET_DFHVALUE
               :&SOURCE   SETC '&DFHLIT'
               :&PARM_IX  SETA 5
         AELSEIF   ('&SOURCE'(1,1) NE ''''                             X
                  AND ('&SOURCE'(1,1) GT '9' OR '&SOURCE'(1,1) LT '0') X
                  AND '&SOURCE'(1,1) NE '.')  RPI 1065 
               AIF ('&SOURCE' EQ 'FUNCTION')
                   MNOTE 8,'MOVE FUNCTION NOT SUPPORTED YET'
                   MEXIT
               AEND
               :&PARM_IX SETA 1
               :&FIELD_REG SETC 'ZC_R2'
               :&RMD_REG   SETC 'ZC_R14' RPI 1182 MAY HAVE VLEN SOURCE
               :&FIELD_SS1 SETB 0
               ACALL GET_PARM_FIELD
               :&SOURCE_IX SETA &FIELD_IX
               :&RMD_VLEN_SRC SETB &RMD_VLEN  RPI 1182 SET GBL SRC VLEN
               AIF (&FIELD_IX GT 0)
                   :&SOURCE SETC '&FIELD_NAME'
               AEND
         AEND
         AIF   ('&SYSLIST(&PARM_IX)' NE 'TO')
               MNOTE 8,'MOVE MISSING TO'
               MEXIT
         AEND
         :&PARM_IX SETA &PARM_IX+1
       AWHILE ('&SYSLIST(&PARM_IX)' NE '')
         ACTR 4096
         :&FIELD_REG SETC 'ZC_R3' RPI 1106 WAS ZC_R2
         :&RMD_REG   SETC 'ZC_R15' RPI 1182 MAY HAVE VLEN TARGET
         :&FIELD_SS1 SETB 1
         ACALL GET_PARM_FIELD
         AIF (&FIELD_IX EQ 0)
             MNOTE 8,'MOVE TARGET FIELD NOT FOUND - &FIELD_NAME'
             MEXIT
         AEND
         :&TARGET_IX SETA &FIELD_IX
         :&TARGET SETC '&FIELD_NAME'
         :&RMD_VLEN_TAR SETB &RMD_VLEN RPI 1182 SET GBL VLEN FOR TARGET
         AIF (&SOURCE_IX GT 0)
               GEN_BASE &SOURCE_IX REPEAT FOR MULT MOVES RPI 1182
               AIF (&ADDR_OF AND '&SYM_PIC_TYPE(&TARGET_IX)' NE 'A')
                   MNOTE 8,'MOVE TARGET OF ADDRESS OF MUST BE POINTER'
                   MEXIT
               AEND
         AEND
         GEN_MOVE &TARGET,&TARGET_IX,&SOURCE,&SOURCE_IX
       AEND
         :&RMD_VLEN_ALLOW SETB 0 RPI 1182 TURN OFF
         :&RMD_VLEN_SRC SETB 0 // JCLH(RPI 1605)
         :&RMD_VLEN_TAR SETB 0 // JCLH(RPI 1605)
         MEXIT
         COPY ZCGETFLD
         COPY ZCDFHLIT
         MEND
