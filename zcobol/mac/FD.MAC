        MACRO
.*********************************************************************
.* z390 - Mainframe assembler emulator and run-time engine
.* Copyright (C) 2021 z390 Assembler LLC
.*
.* This file is part of z390.
.*
.* z390 is free software; you can redistribute it and/or modify
.* it under the terms of the GNU General Public License as published by
.* the Free Software Foundation; either version 2 of the License, or
.* (at your option) any later version.
.* z390 is distributed in the hope that it will be useful,
.* but WITHOUT ANY WARRANTY; without even the implied warranty of
.* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.* GNU General Public License for more details.
.*
.* You should have received a copy of the GNU General Public License 
.* along with this program; if not, see https://www.gnu.org/licenses.
.*********************************************************************
.* Author - Don Higgins                                              *
.* Date   - 04/07/08                                                 *
.*********************************************************************
.* 04/07/08 initial coding for global FD definition
.* 10/06/08 ZSTRMAC
.* 2023/05/12 &FILE_xxx(&PARM_IX) -> &FILE_xxx(&FILE_IX)
.*********************************************************************
.* Generate file definition using file data from SELECT in ZC_FD.CPY
.*********************************************************************
         FD    &FILE
         COPY  ZC_WS
         ZC_FILE_FIND &FILE
         AIF   (&FILE_IX EQ 0)      
               MNOTE 8,'FD FILE NAME NOT FOUND - &FILE'
               MEXIT
         AEND
         :&PARM_IX SETA 2
         AIF   ('&SYSLIST(&PARM_IX)' EQ 'IS')
               :&PARM_IX SETA &PARM_IX+1
         AEND
         AIF ('&SYSPARM(&PARM_IX)' EQ 'EXTERNAL')
             :&EXTERNAL SETB 1
             :&PARM_IX SETA &PARM_IX+1
         AELSEIF ('&SYSPARM(&PARM_IX)' EQ 'GLOBAL')
             :&GLOBAL SETB 1
             :&PARM_IX SETA &PARM_IX+1
         AEND
.*
.* PROCESS FD OPTIONS IN ANY ORDER
.*
       AWHILE  ('&SYSLIST(&PARM_IX)' NE '')
         AIF   ('&SYSLIST(&PARM_IX)' EQ 'DATA')
               :&PARM_IX SETA &PARM_IX+1
               AIF ('&SYSLIST(&PARM_IX)' EQ 'RECORD'                   X
                 OR '&SYSLIST(&PARM_IX)' EQ 'RECORDS')
                   :&PARM_IX SETA &PARM_IX+1
                   AIF ('&SYSLIST(&PARM_IX)' EQ 'IS'                   X
                     OR '&SYSLIST(&PARM_IX)' EQ 'ARE')   
                       :&PARM_IX SETA &PARM_IX+1
                   AEND
               AELSE
                   MNOTE 8,'FD UNKNOWN DATA PARM - &SYSLIST(&PARM_IX)'
                   :&PARM_IX SETA N'&SYSLIST+1
               AEND   
               :&FILE_RECORD(&FILE_IX) SETC '&SYSLIST(&PARM_IX)'
               :&PARM_IX SETA &PARM_IX+1 
         AELSEIF ('&SYSLIST(&PARM_IX)' EQ 'BLOCK')
              :&PARM_IX SETA &PARM_IX+1
              AIF ('&SYSLIST(&PARM_IX)' EQ 'CONTAINS')
                  :&PARM_IX SETA &PARM_IX+1
              AEND
              :&FILE_BLKSI2(&FILE_IX) SETC '&SYSLIST(&PARM_IX)'
              :&PARM_IX SETA &PARM_IX+1
              AIF ('&SYSLIST(&PARM_IX)' EQ 'TO')
                  :&FILE_BLKSI1(&FILE_IX) SETC '&FILE_BLKSI2(&FILE_IX)'
                  :&FILE_BLKSI2(&FILE_IX) SETC '&SYSLIST(&PARM_IX+1)'
                  :&PARM_IX SETA &PARM_IX+2
              AEND
              AIF ('&SYSLIST(&PARM_IX)' EQ 'CHARACTERS')
                  :&PARM_IX SETA &PARM_IX+1
              AEND
              AIF ('&SYSLIST(&PARM_IX)' EQ 'RECORDS')
                  :&FILE_BLOCK_RECS(&FILE_IX) SETB 1
                  :&PARM_IX SETA &PARM_IX+1
              AEND
         AELSEIF ('&SYSLIST(&PARM_IX)' EQ 'RECORD')
              :&PARM_IX SETA &PARM_IX+1
              AIF ('&SYSLIST(&PARM_IX)' EQ 'CONTAINS')
                  :&PARM_IX SETA &PARM_IX+1
              AELSE
                  AIF ('&SYSLIST(&PARM_IX)' EQ 'IS')
                      :&PARM_IX SETA &PARM_IX+1
                  AEND
                  AIF ('&SYSLIST(&PARM_IX)' EQ 'VARYING')
                      :&PARM_IX SETA &PARM_IX+1
                      AIF ('&SYSLIST(&PARM_IX)' EQ 'IN')
                          :&PARM_IX SETA &PARM_IX+1
                      AEND
                      AIF ('&SYSLIST(&PARM_IX)' EQ 'SIZE')
                          :&PARM_IX SETA &PARM_IX+1
                      AEND
                      AIF ('&SYSLIST(&PARM_IX)' EQ 'FROM')
                          :&PARM_IX SETA &PARM_IX+1
                      AEND
                  AEND
              AEND
              :&FILE_LRECL2(&FILE_IX) SETC '&SYSLIST(&PARM_IX)'
              :&PARM_IX SETA &PARM_IX+1
              AIF ('&SYSLIST(&PARM_IX)' EQ 'TO')
                  :&FILE_LRECL1(&FILE_IX) SETC '&FILE_LRECL2(&FILE_IX)'
                  :&FILE_LRECL2(&FILE_IX) SETC '&SYSLIST(&PARM_IX+1)'
                  :&PARM_IX SETA &PARM_IX+2
              AEND
              AIF ('&SYSLIST(&PARM_IX)' EQ 'CHARACTERS')
                  :&PARM_IX SETA &PARM_IX+1
              AEND
              AIF ('&SYSLIST(&PARM_IX)' EQ 'DEPENDING')
                  :&PARM_IX SETA &PARM_IX+1
                  AIF ('&SYSLIST(&PARM_IX)' EQ 'ON')
                      :&PARM_IX SETA &PARM_IX+1
                  AEND
                  :&FILE_DEPENDING(&FILE_IX) SETC '&SYSLIST(&PARM_IX)'
                  :&PARM_IX SETA &PARM_IX+1
              AEND
         AELSEIF ('&SYSLIST(&PARM_IX)' EQ 'LABEL')
              :&PARM_IX SETA &PARM_IX+1
              AIF ('&SYSLIST(&PARM_IX)' EQ 'RECORD')
                  :&PARM_IX SETA &PARM_IX+1
              AEND
              AIF ('&SYSLIST(&PARM_IX)' EQ 'RECORDS')
                  :&PARM_IX SETA &PARM_IX+1
              AEND
              AIF ('&SYSLIST(&PARM_IX)' EQ 'IS')
                  :&PARM_IX SETA &PARM_IX+1
              AEND
              AIF ('&SYSLIST(&PARM_IX)' EQ 'ARE')
                  :&PARM_IX SETA &PARM_IX+1
              AEND
              AIF ('&SYSLIST(&PARM_IX)' EQ 'STANDARD')
                  :&PARM_IX SETA &PARM_IX+1
              AEND
              AIF ('&SYSLIST(&PARM_IX)' EQ 'OMITTED')
                  :&PARM_IX SETA &PARM_IX+1
              AEND
         AELSE
              MNOTE 8,'FD OPTION NOT SUPPORTED - &SYSLIST(&PARM_IX)'
              :&PARM_IX SETA N'&SYSLIST+1
         AEND 
       AEND
         WS    91,&FILE                         ADD FILE TO WS 
         MEND
