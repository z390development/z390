         MACRO
.*********************************************************************
.* Copyright 2008 Automated Software Tools Corporation               *
.* This source code is part of z390 zCOBOL/assembler/emulator package*
.* The z390 package is distributed under GNU general public license  *
.* Author - Don Higgins                                              *
.* Date   - 03/12/09                                                 *
.*********************************************************************
.* 03/13/09 initial coding for use in GEN_MOVE to cvt P to Z fields   
.* 07/03/09 RPI 1065 OI unsigned for length < 15                       
.* 07/19/09 RPI 1065 CORRECT SET TARGET LEN test from LE to LT         
.* 08/08/09 RPI 1065 correct SET TARGET LEN to replace existing length 
.* 05/17/12 RPI 1217 correct for pad z or trunc p on intermediate sizes
.*********************************************************************
.* UNPACK 1-31 DIGIT ZD FIELD FROM PD FIELD 
.* AND SET LOW ORDER ZONE SIGN TO F IF UNSIGNED
.*********************************************************************
         ZC_UNPK31 &Z,&LZ,&SZ,&P,&LP
         COPY  ZC_WS
       :&TARGET SETC '&Z'
       :&ZLEN   SETA &LZ
       :&SOURCE SETC '&P'
       :&PLEN   SETA &LP                  
       :&ZOFF   SETA 0
       :&POFF   SETA 0
       :&T_TEMP SETC '&TARGET'
       AIF     (&ZLEN GT &PLEN*2-1) PAD Z WITH LEADING C'0'
               :&LPAD SETA &ZLEN-(&PLEN*2-1)
               :&ZLEN SETA &ZLEN-&LPAD
               :&ZOFF SETA &LPAD
               AIF (&LPAD GT 0) 
         MVI   &TARGET,C'0'
                   AIF (&LPAD GT 1)
                       :&TLEN SETA &LPAD-1
                       ACALL SET_TARGET_LEN
         MVC    1+&T_TEMP,&TARGET   
                   AEND
               AEND
       AEND
       AIF     (&PLEN GT &ZLEN/2+1)
               :&POFF SETA &PLEN-(&ZLEN/2+1)
               :&PLEN SETA &PLEN-&POFF
       AEND      
       AIF     (&ZLEN LE 15)
               :&TLEN SETA &ZLEN
               ACALL SET_TARGET_LEN       SET EXPLICIT TARGET LEN
         UNPK  &ZOFF+&T_TEMP,&POFF+&SOURCE.(&PLEN) UNPK #1 NORMAL 
               AIF (&SZ EQ 0)  RPI 1065
                   ACALL REMOVE_TARGET_LEN
         OI    &LZ-1+&T_TEMP,X'F0'  RPI 1065
               AEND            RPI 1065 
       AELSE
               :&TLEN  SETA 15
               AIF (&ZLEN/2*2 EQ &ZLEN)
                   :&TLEN SETA 14           UNPK ONE LESS IF ZLEN EVEN
               AEND
               ACALL   SET_TARGET_LEN       SET EXPLICIT TARGET LEN
         UNPK  &ZOFF+&T_TEMP,&POFF+&SOURCE.(8)     UNPK #1 FULL            
       :&ZOFF  SETA &ZOFF+&TLEN-1
       :&ZLEN  SETA &ZLEN-(&TLEN-1)
       :&POFF  SETA &POFF+7
       :&PLEN  SETA &PLEN-7
             AIF     (&ZLEN GT 15)
               :&TLEN SETA 15
               ACALL SET_TARGET_LEN       SET EXPLICIT TARGET LEN
         UNPK  &ZOFF+&T_TEMP,&POFF+&SOURCE.(8)     UNPK #2 FULL            
               :&ZOFF SETA &ZOFF+&TLEN-1
               :&ZLEN SETA &ZLEN-(&TLEN-1)
               :&POFF SETA &POFF+7
               :&PLEN SETA &PLEN-7
               :&TLEN SETA &ZLEN
               ACALL SET_TARGET_LEN       SET EXPLICIT TARGET LEN
         UNPK  &ZOFF+&T_TEMP,&POFF+&SOURCE.(&PLEN) UNPK #3 FINAL            
             AELSE
               :&TLEN SETA &ZLEN
               ACALL SET_TARGET_LEN       SET EXPLICIT TARGET LEN
         UNPK  &ZOFF+&T_TEMP,&POFF+&SOURCE.(&PLEN) UNPK #2 FINAL           
               AIF (&SZ EQ 0)
                   ACALL REMOVE_TARGET_LEN
         OI    &LZ-1+&T_TEMP,X'F0'  RPI 1065
               AEND
             AEND
       AEND
       MEXIT
.*
.* SET TARGET LEN - INSERT TLEN FOR SIX OR LABEL IN t_TEMP
.*
         AENTRY SET_TARGET_LEN
         AIF   ('&TARGET'(1,1) LT '0')  IS TARGET A LABEL   RPI 1065
               :&T_TEMP SETC '&TARGET.(&TLEN)'
         AELSE
               :&I   SETA ('&TARGET' INDEX '(')  FIND ( IN OFF(REG)
               AIF   (&I GT 0)
                     :&J SETA ('&TARGET' INDEX ',')
                     AIF (&J GT 0)
                     :&T_TEMP SETC '&TARGET'(1,&I).'&TLEN,'.'&TARGET'(&X
               J+1,*)
                     AELSE
                     :&T_TEMP SETC '&TARGET'(1,&I).'&TLEN,'.'&TARGET'(&X
               I+1,*)
                     AEND
               AELSE
                     MNOTE 8,'ZC_PACK31 N(REG) FORMAT ERROR &TARGET'
                     MEXIT
               AEND
         AEND
         AEND
.*
.* REMOVE TARGET LENGTH
.*
         AENTRY REMOVE_TARGET_LEN
         AIF   ('&TARGET'(1,1) LT '0')  IS TARGET A LABEL   RPI 1065
               :&I SETA ('&TARGET' INDEX '(')
               AIF (&I GT 0)
                   :&T_TEMP SETC '&TARGET'(1,&I-1)
               AELSE
                   :&T_TEMP SETC '&TARGET'
               AEND
         AELSE
               :&I   SETA ('&TARGET' INDEX '(')  FIND ( IN OFF(REG)
               AIF   (&I GT 0)
                     :&J SETA ('&TARGET' INDEX ',')
                     AIF (&J GT 0)
                     :&T_TEMP SETC '&TARGET'(1,&I).'&TARGET'(&J+1,*)
                     AELSE
                     :&T_TEMP SETC '&TARGET'
                     AEND
               AELSE
                     MNOTE 8,'ZC_PACK31 N(REG) FORMAT ERROR &TARGET'
                     MEXIT
               AEND
         AEND
         AEND
         MEND
