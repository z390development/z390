       IDENTIFICATION DIVISION.
       PROGRAM-ID.  COPYFILE.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
TTTTTT     SELECT LINE-FILE
TTTTTT         ASSIGN TO 'ZCOBOL\DEMO\PROGRAM.LIN'
TTTTTT         ORGANIZATION IS LINE SEQUENTIAL.
           SELECT IN-FILE
               ASSIGN TO 'ZCOBOL\DEMO\COPYFILE.IN'
               ORGANIZATION IS LINE SEQUENTIAL.
           SELECT OUT-FILE
               ASSIGN TO 'ZCOBOL\DEMO\COPYFILE.OUT'
               ORGANIZATION IS LINE SEQUENTIAL.
       DATA DIVISION.
TTTTTT FD  LINE-FILE
TTTTTT     DATA RECORD IS LINE-RECORD.
TTTTTT 01  LINE-RECORD.
TTTTTT     03  LINE-LINE-NO          PIC X(06).
TTTTTT     03  FILLER                PIC X(74).
       FD  IN-FILE
           DATA RECORD IS IN-RECORD.
       01  IN-RECORD PIC X(80).
       FD  OUT-FILE
           DATA RECORD IS OUT-RECORD.
       01  OUT-RECORD PIC X(80).
       WORKING-STORAGE SECTION.

TTTTTT 01  D1 PIC X(52) VALUE
TTTTTT       'T - Rudimentary Debugger for ZCOBOL'.
TTTTTT 01  D1B PIC X(52) VALUE
TTTTTT       '==================================='.
TTTTTT 01  D1C PIC X(52) VALUE
TTTTTT       'VERSION 1.01    John Hennesy'.
TTTTTT 01  D1D PIC X(52) VALUE
TTTTTT       '-----------------------------------'.
TTTTTT 01  D1E PIC X(52) VALUE ALL SPACES.
TTTTTT 01  D2 PIC X(52) VALUE
TTTTTT       'Enter - single step'.
TTTTTT 01  D3 PIC X(52) VALUE
TTTTTT       'H     - Here'.
TTTTTT 01  D4 PIC X(52) VALUE
TTTTTT       'E     - Erase              - E nnnnnn'.
TTTTTT 01  D5 PIC X(52) VALUE
TTTTTT       'M     - Monitor            - M vvv... (max 30 char)'.
TTTTTT 01  D6 PIC X(52) VALUE
TTTTTT       '                             M         List variables'.
TTTTTT 01  D7 PIC X(52) VALUE
TTTTTT       'B     - Break              - B nnnnnn'.
TTTTTT 01  D8 PIC X(52) VALUE
TTTTTT       '                             B         List lines'.
TTTTTT 01  D9 PIC X(52) VALUE
TTTTTT       'G     - Go                 - G nnnnnn'.
TTTTTT 01  DA PIC X(52) VALUE
TTTTTT       '                             G         Go next break'.
TTTTTT 01  DB PIC X(52) VALUE
TTTTTT       'W     - Working storage    - W         Show w/s'.
TTTTTT 01  DC PIC X(52) VALUE
TTTTTT       'P     - Procedure division - P         Show proc div'.
TTTTTT 01  DD PIC X(52) VALUE
TTTTTT       'D     - Display            - D vvv... (max 30 char)'.
TTTTTT 01  DE PIC X(52) VALUE
TTTTTT       'X     - eXit               - X         Exit'.
TTTTTT 01  DF PIC X(52) VALUE
TTTTTT       '+     - another screen     - +         of W or P'.

TTTTTT 01  BREAKIT-ARRAY.
TTTTTT     03  BREAKIT-NUMBER OCCURS 9
TTTTTT                               PIC X(06).
TTTTTT 01  BUB                       PIC 9(06).
TTTTTT 01  BUB2                      PIC 9(06).
TTTTTT 01  SIX-SPACES                PIC X(06) VALUE SPACES.
TTTTTT 01  SIX-LOW-VALUES            PIC X(06) VALUE LOW-VALUES.
TTTTTT 01  MONITORIT-ARRAY.
TTTTTT     03  MONITORIT-ENTRY OCCURS 9.
TTTTTT         05  MONITORIT-VARIABLE
TTTTTT                               PIC X(32).
TTTTTT         05  MONITORIT-FLAG    PIC X(01).
TTTTTT         05  MONITORIT-POINTER PIC 9(06).
TTTTTT         05  MONITORIT-LENGTH  PIC 9(06).
TTTTTT 01  MONITORIT-MAX             PIC 9(06) VALUE 1.
TTTTTT 01  MONITORIT-CHUNK.
TTTTTT     03  MONITORIT-CHUNK-C     PIC X(01) OCCURS 500.
TTTTTT 01  EUB                       PIC 9(06).
TTTTTT 01  NUB                       PIC 9(06).
TTTTTT 01  NUB2                      PIC 9(06).
TTTTTT 01  TH2-SPACES                PIC X(32) VALUE SPACES.
TTTTTT 01  TH2-LOW-VALUES            PIC X(32) VALUE LOW-VALUES.
TTTTTT 01  DUB                       PIC 9(06).
TTTTTT 01  MONITORIT-CHANGE          PIC X(01).
TTTTTT 01  A-CHAR                    PIC X(01).
TTTTTT 01  B-CHAR                    PIC X(01).

TTTTTT 01  GOIT-OUTSTANDING          PIC X(01) VALUE 'N'.
TTTTTT 01  GOIT-NUMBER               PIC X(06).
TTTTTT 01  WORKIT-END                PIC X(01).
TTTTTT 01  PROCIT-END                PIC X(01).
TTTTTT 01  PREV-COMMAND              PIC X(01).
TTTTTT 01  CARROTS                   PIC X(01).
TTTTTT 01  MUB2                      PIC 9(06).
TTTTTT 01  MUB3                      PIC 9(06).
TTTTTT 01  MUB4                      PIC 9(06).
TTTTTT*14/03/12 320 increased to 64000
TTTTTT 01  LUMP.
TTTTTT*    03  LUMP-C OCCURS 320     PIC X(01).
TTTTT+     03  LUMP-C OCCURS 64000   PIC X(01).
TTTTTT 01  FILLER REDEFINES LUMP.
TTTTTT*    03  LUMP-BLOCK OCCURS 10  PIC X(32).
TTTTT+     03  LUMP-BLOCK OCCURS 2000 PIC X(32).
TTTTTT 01  BLOC.
TTTTTT     03  BLOC-C OCCURS 32      PIC X(01).
TTTTTT 01  BLOCH.
TTTTTT     03  BLOCH-BI OCCURS 32.
TTTTTT         05  BLOCH-BI-LHS      PIC X(01).
TTTTTT         05  BLOCH-BI-RHS      PIC X(01).
TTTTTT 01  GUB                       PIC 9(06).
TTTTTT 01  HUB                       PIC 9(06).
TTTTTT 01  GUB2                      PIC 9(06).
TTTTTT 01  BLOCG.
TTTTTT     03  BLOCG-BI OCCURS 32.
TTTTTT         05  BLOCG-BI-LHS      PIC X(01).
TTTTTT         05  BLOCG-BI-RHS      PIC X(01).
TTTTTT 01  GUB3                      PIC 9(06).
TTTTTT 01  GUB4                      PIC 9(06).
TTTTTT 01  GUB5                      PIC 9(06).
TTTTTT 01  FLAGG                     PIC X(01).
TTTTTT 01  NINE-04-COMP              PIC 9(04) COMP.
TTTTTT 01  FILLER REDEFINES NINE-04-COMP.
TTTTTT     03  THE-1ST-CHAR          PIC X(01).
TTTTTT     03  THE-2ND-CHAR          PIC X(01).
TTTTTT 01  LHS                       PIC 9(03).
TTTTTT 01  RHS                       PIC 9(03).
TTTTTT 01  THE-ARRAY                 PIC X(16) VALUE '0123456789ABCDEF'.
TTTTTT 01  FILLER REDEFINES THE-ARRAY.
TTTTTT     03  THE-ARRAY-C OCCURS 16 PIC X(01).
TTTTTT 01  DISPLAYABLE               PIC X(01).
TTTTTT 01  NONDISPLAYABLE            PIC X(01).
TTTTTT 01  T-FIRST                   PIC X(01) VALUE SPACE.
TTTTTT 01  A-LINE                    PIC X(06).
TTTTTT 01  MUB                       PIC 9(06).
TTTTTT 01  THE-COMMAND.
TTTTTT     03  THE-COMMAND-1         PIC X(01).
TTTTTT     03  FILLER                PIC X(01).
TTTTTT     03  THE-COMMAND-3-32.
TTTTTT         05  THE-COMMAND-3-8   PIC X(06).
TTTTTT         05  FILLER            PIC X(24).
TTTTTT     03  FILLER                PIC X(48).
TTTTTT 01  FILLER REDEFINES THE-COMMAND.
TTTTTT     03  THE-COMMAND-C OCCURS 80 PIC X(01).
TTTTTT 01  T-SERVICE.
TTTTTT     03  T-PROG                PIC X(08).
TTTTTT     03  T-PARA                PIC X(30).
TTTTTT     03  T-LINE                PIC X(06).
TTTTTT     03  T-ARRAY.
TTTTTT         05  T-C               PIC X(01) OCCURS 2.
TTTTTT 01  FILLER PIC X(02) VALUE '!!'.
TTTTTT 01  FILLER PIC X(30) VALUE 'WS-LINE                       '.
       01  WS-LINE PIC X(80).
TTTTTT 01  FILLER PIC X(02) VALUE '~~'.
TTTTTT 01  FILLER PIC X(02) VALUE '!!'.
TTTTTT 01  FILLER PIC X(30) VALUE 'END-OF-FILE-FLAG              '.
       01  END-OF-FILE-FLAG PIC X VALUE 'F'.
TTTTTT 01  FILLER PIC X(02) VALUE '~~'.
TTTTTT 01  FILLER PIC X(02) VALUE '!!'.
TTTTTT 01  FILLER PIC X(30) VALUE 'COUNT                         '.
       77  COUNT COMP-3 PIC S9(4) VALUE 0.
TTTTTT 01  FILLER PIC X(02) VALUE '~~'.
TTTTTT 01  FILLER                    PIC X(02) VALUE '^^'.
TTTTTT 01  A-NUMBER                  PIC X(06).
TTTTTT 01  B-NUMBER                  PIC X(06).
TTTTTT 01  LINE-COUNT                PIC 9(06) VALUE ZERO.
TTTTTT 01  LINE-COUNT2               PIC 9(06) VALUE ZERO.
TTTTTT 01  LINE-ARRAY.
TTTTTT     03  LINE-ENTRY OCCURS 500.
TTTTTT         05  LINE-NUMBER       PIC X(06).
TTTTTT         05  FILLER            PIC X(66).
TTTTTT 01  LUB                       PIC 9(06).
TTTTTT 01  LUB2                      PIC 9(06).
TTTTTT 01  LUB-MAX                   PIC 9(06).
TTTTTT 01  LINE-FILE-ENDED           PIC X(01).
TTTTTT 01  MATCH-FOUND               PIC X(01).
TTTTTT 01  SCREEN-ARRAY.
TTTTTT     03  SCREEN-ENTRY OCCURS 17.
TTTTTT         05  SCREEN-NUMBER     PIC X(06).
TTTTTT         05  SCREEN-POINTER    PIC X(01).
TTTTTT         05  SCREEN-REST       PIC X(66).
TTTTTT 01  SCUB                      PIC 9(06).
TTTTTT 01  SCREEN-FIRST              PIC 9(06).
TTTTTT 01  SCUB2                     PIC 9(06).
TTTTTT 01  SCREEN-LAST               PIC 9(06).
TTTTTT 01  SCREEN-1ST-FLAG           PIC X(01).
TTTTTT 01  LEFFED                    PIC X(06).
TTTTTT 01  RITE                      PIC X(06).
TTTTTT 01  SEVENT2                   PIC X(72).
TTTTTT 01  THIRSTY.
TTTTTT     03  THIRSTY-C OCCURS 30   PIC X(01).
       PROCEDURE DIVISION.
       MAINLINE.
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'MAINLINE                      ' TO T-PARA
TTTTTT     MOVE '000001' TO T-LINE
TTTTTT     PERFORM T
000001     DISPLAY 'COPYFILE STARTED'
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'MAINLINE                      ' TO T-PARA
TTTTTT     MOVE '000002' TO T-LINE
TTTTTT     PERFORM T
000002     PERFORM INITIALIZATION-ROUTINE.
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'MAINLINE                      ' TO T-PARA
TTTTTT     MOVE '000003' TO T-LINE
TTTTTT     PERFORM T
000003     PERFORM THE-LOOP
                   UNTIL END-OF-FILE-FLAG = 'Y'.
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'MAINLINE                      ' TO T-PARA
TTTTTT     MOVE '000004' TO T-LINE
TTTTTT     PERFORM T
000004     PERFORM EOJ-ROUTINE.
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'MAINLINE                      ' TO T-PARA
TTTTTT     MOVE '000005' TO T-LINE
TTTTTT     PERFORM T
000005     DISPLAY 'COPYFILE RECORDS COPIED = ' COUNT.
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'MAINLINE                      ' TO T-PARA
TTTTTT     MOVE '000006' TO T-LINE
TTTTTT     PERFORM T
000006     IF COUNT NOT = 17
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'MAINLINE                      ' TO T-PARA
TTTTTT     MOVE '000007' TO T-LINE
TTTTTT     PERFORM T
000007        DISPLAY 'COPYFILE RECORD COUNT ERROR'
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'MAINLINE                      ' TO T-PARA
TTTTTT     MOVE '000008' TO T-LINE
TTTTTT     PERFORM T
000008        MOVE 16 TO RETURN-CODE
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'MAINLINE                      ' TO T-PARA
TTTTTT     MOVE '000009' TO T-LINE
TTTTTT     PERFORM T
000009        STOP RUN
           END-IF
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'MAINLINE                      ' TO T-PARA
TTTTTT     MOVE '000010' TO T-LINE
TTTTTT     PERFORM T
000010     DISPLAY 'COPYFILE ENDED OK'
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'MAINLINE                      ' TO T-PARA
TTTTTT     MOVE '000011' TO T-LINE
TTTTTT     PERFORM T
000011     STOP RUN.
       INITIALIZATION-ROUTINE.
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'INITIALIZATION-ROUTINE        ' TO T-PARA
TTTTTT     MOVE '000012' TO T-LINE
TTTTTT     PERFORM T
000012     OPEN INPUT IN-FILE.
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'INITIALIZATION-ROUTINE        ' TO T-PARA
TTTTTT     MOVE '000013' TO T-LINE
TTTTTT     PERFORM T
000013     OPEN OUTPUT OUT-FILE.
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'INITIALIZATION-ROUTINE        ' TO T-PARA
TTTTTT     MOVE '000014' TO T-LINE
TTTTTT     PERFORM T
000014     READ IN-FILE INTO OUT-RECORD
                AT END MOVE 'Y' TO END-OF-FILE-FLAG.
       THE-LOOP.
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'THE-LOOP                      ' TO T-PARA
TTTTTT     MOVE '000015' TO T-LINE
TTTTTT     PERFORM T
000015     WRITE OUT-RECORD.
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'THE-LOOP                      ' TO T-PARA
TTTTTT     MOVE '000016' TO T-LINE
TTTTTT     PERFORM T
000016     ADD 1 TO COUNT
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'THE-LOOP                      ' TO T-PARA
TTTTTT     MOVE '000017' TO T-LINE
TTTTTT     PERFORM T
000017     READ IN-FILE INTO OUT-RECORD
                AT END MOVE 'Y' TO END-OF-FILE-FLAG.
       EOJ-ROUTINE.
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'EOJ-ROUTINE                   ' TO T-PARA
TTTTTT     MOVE '000018' TO T-LINE
TTTTTT     PERFORM T
000018     CLOSE IN-FILE.
TTTTTT     MOVE 'COPYFILE' TO T-PROG
TTTTTT     MOVE 'EOJ-ROUTINE                   ' TO T-PARA
TTTTTT     MOVE '000019' TO T-LINE
TTTTTT     PERFORM T
000019     CLOSE OUT-FILE.
TTTTTT/
TTTTTT T SECTION.
      *DISPLAY '0> ' GOIT-OUTSTANDING ' ' GOIT-NUMBER
      *DISPLAY '0> T-LINE=' T-LINE.
TTTTTT     MOVE T-LINE               TO A-LINE.
TTTTTT     IF T-FIRST = SPACE
TTTTTT         MOVE SPACES           TO BREAKIT-ARRAY
TTTTTT         MOVE SPACES           TO MONITORIT-ARRAY
TTTTTT         MOVE ZEROES           TO BUB
TTTTTT         MOVE ZEROES           TO NUB
TTTTTT         MOVE 'N'              TO T-FIRST
TTTTTT         OPEN INPUT LINE-FILE
TTTTTT         MOVE 'N'              TO LINE-FILE-ENDED
      *DISPLAY 'FIRST'
TTTTTT         PERFORM READ-LINE-FILE
TTTTTT           UNTIL LINE-FILE-ENDED = 'Y'
TTTTTT         CLOSE LINE-FILE
      *DISPLAY '1>'
TTTTTT         DISPLAY D1
TTTTTT         DISPLAY D1B
TTTTTT         DISPLAY D1C
TTTTTT         DISPLAY D1D
TTTTTT         DISPLAY D1E
TTTTTT         DISPLAY D2
TTTTTT         DISPLAY D3
TTTTTT         DISPLAY D4
TTTTTT         DISPLAY D5
TTTTTT         DISPLAY D6
TTTTTT         DISPLAY D7
TTTTTT         DISPLAY D8
TTTTTT         DISPLAY D9
TTTTTT         DISPLAY DA
TTTTTT         DISPLAY DB
TTTTTT         DISPLAY DC
TTTTTT         DISPLAY DD
TTTTTT         DISPLAY DE
TTTTTT         DISPLAY DF
TTTTTT         ACCEPT THE-COMMAND FROM CONSOLE
TTTTTT     END-IF.
      *DISPLAY '2>'
TTTTTT     PERFORM DUMMY
TTTTTT         VARYING LINE-COUNT2
TTTTTT            FROM 1 BY 1
TTTTTT           UNTIL LINE-NUMBER (LINE-COUNT2) = A-LINE
TTTTTT              OR LINE-COUNT2 > LINE-COUNT.
TTTTTT     IF LINE-COUNT2 > LINE-COUNT
TTTTTT         DISPLAY 'T-LINE (' T-LINE ') NOT FOUND'
TTTTTT         STOP RUN
TTTTTT     END-IF.
      *DISPLAY '3>'
TTTTTT     PERFORM MONITORIT-FIND
TTTTTT         VARYING NUB2 FROM 1 BY 1 UNTIL NUB2 > NUB.
      *DISPLAY '4>'
TTTTTT     IF GOIT-OUTSTANDING = 'Y'
TTTTTT         IF GOIT-NUMBER = 'BREAK'
TTTTTT             PERFORM BREAKIT-FIND
TTTTTT             IF A-NUMBER
TTTTTT              = B-NUMBER
TTTTTT                 MOVE 'N'          TO GOIT-OUTSTANDING
TTTTTT             ELSE
TTTTTT                 GO TO T-EXIT
TTTTTT             END-IF
TTTTTT         ELSE
TTTTTT             IF GOIT-NUMBER = LINE-NUMBER (LINE-COUNT2)
TTTTTT                 MOVE 'N'          TO GOIT-OUTSTANDING
TTTTTT             ELSE
TTTTTT                 GO TO T-EXIT
TTTTTT             END-IF
TTTTTT         END-IF
TTTTTT     END-IF.
      *DISPLAY '5>'
TTTTTT     MOVE  1                   TO LUB.
TTTTTT     MOVE 'Y'                  TO SCREEN-1ST-FLAG.
TTTTTT     MOVE ZEROES               TO SCREEN-FIRST.
TTTTTT     MOVE ZEROES               TO SCREEN-LAST.
TTTTTT     MOVE SPACES               TO SCREEN-ARRAY.
TTTTTT     MOVE  15                  TO LUB-MAX.
TTTTTT     DISPLAY '*-------------------------------*'.
TTTTTT     DISPLAY 'PROG=' T-PROG ' PARA=' T-PARA.
TTTTTT     DISPLAY ' '.
TTTTTT     PERFORM SCREENIT.
TTTTTT     DISPLAY '*-------------------------------*'.
      *DISPLAY '6>'.
TTTTTT T-ACCEPT.
      *DISPLAY '7>'.
TTTTTT     ACCEPT THE-COMMAND      FROM CONSOLE.

TTTTTT     IF THE-COMMAND-1 = 'H'
TTTTTT         MOVE 'H'              TO PREV-COMMAND
TTTTTT         GO TO T
TTTTTT     END-IF.

TTTTTT     IF THE-COMMAND-1 = 'E'
TTTTTT         IF THE-COMMAND-3-8 = SIX-SPACES
TTTTTT             GO TO T-ACCEPT
TTTTTT         END-IF
TTTTTT         PERFORM DUMMY VARYING BUB2
TTTTTT            FROM 1 BY 1
TTTTTT           UNTIL BREAKIT-NUMBER (BUB2) = THE-COMMAND-3-8
TTTTTT              OR BREAKIT-NUMBER (BUB2) = SIX-LOW-VALUES
TTTTTT              OR BUB2 > 8
TTTTTT         IF BUB2 NOT > 8
TTTTTT             MOVE SIX-LOW-VALUES   TO BREAKIT-NUMBER (BUB2)
TTTTTT         END-IF
TTTTTT         PERFORM DUMMY VARYING NUB2
TTTTTT            FROM 1 BY 1
TTTTTT           UNTIL MONITORIT-VARIABLE (NUB2) = THE-COMMAND-3-32
TTTTTT              OR MONITORIT-VARIABLE (NUB2) = TH2-LOW-VALUES
TTTTTT              OR NUB2 > 8
TTTTTT         IF NUB2 NOT > 8
TTTTTT             MOVE TH2-LOW-VALUES   TO MONITORIT-VARIABLE (NUB2)
TTTTTT         END-IF
TTTTTT         MOVE 'E'              TO PREV-COMMAND
TTTTTT         GO TO T-ACCEPT
TTTTTT     END-IF.

TTTTTT     IF THE-COMMAND-1 = 'M'
TTTTTT         IF THE-COMMAND-3-8 = SIX-SPACES
TTTTTT             DISPLAY '*----------------------------*'
TTTTTT             DISPLAY 'MONITOR LIST'
TTTTTT             DISPLAY ' '
TTTTTT             PERFORM MONITORIT-LIST VARYING NUB2
TTTTTT                FROM 1 BY 1
TTTTTT               UNTIL MONITORIT-VARIABLE (NUB2) = TH2-SPACES
TTTTTT                  OR NUB2 > 9
TTTTTT             DISPLAY '*----------------------------*'
TTTTTT             MOVE 'M'          TO PREV-COMMAND
TTTTTT             GO TO T-ACCEPT
TTTTTT         ELSE
TTTTTT             PERFORM MATCHIT
TTTTTT             IF THE-COMMAND-3-32 NOT = THIRSTY
TTTTTT                 MOVE'M'       TO PREV-COMMAND
TTTTTT                 GO TO T-ACCEPT
TTTTTT             END-IF
TTTTTT             PERFORM DUMMY VARYING NUB
TTTTTT                FROM 1 BY 1
TTTTTT               UNTIL MONITORIT-VARIABLE (NUB) = TH2-SPACES
TTTTTT                  OR MONITORIT-VARIABLE (NUB) = THE-COMMAND-3-32
TTTTTT                  OR MONITORIT-VARIABLE (NUB) = TH2-LOW-VALUES
TTTTTT                  OR NUB > 8
TTTTTT             IF NUB > 8
TTTTTT                 DISPLAY 'MAX MONITORS EXCEEDED'
TTTTTT             ELSE
TTTTTT                 MOVE THE-COMMAND-3-32 TO MONITORIT-VARIABLE (NUB)
TTTTTT                 MOVE 'N'              TO MONITORIT-FLAG     (NUB)
TTTTTT                 MOVE ZEROES           TO MONITORIT-POINTER  (NUB)
TTTTTT                 MOVE ZEROES           TO MONITORIT-LENGTH   (NUB)
TTTTTT             END-IF
TTTTTT             PERFORM DUMMY VARYING NUB
TTTTTT                FROM 1 BY 1
TTTTTT               UNTIL MONITORIT-VARIABLE (NUB) = TH2-SPACES
TTTTTT             MOVE 'M'              TO PREV-COMMAND
TTTTTT             GO TO T-ACCEPT
TTTTTT         END-IF
TTTTTT     END-IF.

TTTTTT     IF THE-COMMAND-1 = 'B'
TTTTTT         IF THE-COMMAND-3-8 = SIX-SPACES
TTTTTT             DISPLAY '*----------------------------*'
TTTTTT             DISPLAY 'BREAK LIST'
TTTTTT             DISPLAY ' '
TTTTTT             PERFORM BREAKIT-LIST VARYING BUB2
TTTTTT                FROM 1 BY 1
TTTTTT               UNTIL BREAKIT-NUMBER (BUB2) = SIX-SPACES
TTTTTT                  OR BUB2 > 9
TTTTTT             DISPLAY '*----------------------------*'
TTTTTT             MOVE 'B'          TO PREV-COMMAND
TTTTTT             GO TO T-ACCEPT
TTTTTT         ELSE
TTTTTT*MOVE 'Y'          TO GOIT-OUTSTANDING
TTTTTT             MOVE 'BREAK'      TO GOIT-NUMBER
TTTTTT             PERFORM DUMMY VARYING BUB
TTTTTT                FROM 1 BY 1
TTTTTT               UNTIL BREAKIT-NUMBER (BUB) = SIX-SPACES
TTTTTT                  OR BREAKIT-NUMBER (BUB) = THE-COMMAND-3-8
TTTTTT                  OR BREAKIT-NUMBER (BUB) = SIX-LOW-VALUES
TTTTTT                  OR BUB > 8
TTTTTT             IF BUB > 8
TTTTTT                 DISPLAY 'MAX BREAKS EXCEEDED'
TTTTTT             ELSE
TTTTTT                 MOVE THE-COMMAND-3-8  TO BREAKIT-NUMBER (BUB)
TTTTTT             END-IF
TTTTTT             PERFORM DUMMY VARYING BUB
TTTTTT                FROM 1 BY 1
TTTTTT               UNTIL BREAKIT-NUMBER (BUB) = SIX-SPACES
TTTTTT             MOVE 'B'              TO PREV-COMMAND
TTTTTT             GO TO T-ACCEPT
TTTTTT         END-IF
TTTTTT     END-IF.

TTTTTT     IF THE-COMMAND-1 = 'G'
TTTTTT         MOVE 'Y'              TO GOIT-OUTSTANDING
TTTTTT         IF THE-COMMAND-3-8 NOT = SIX-SPACES
TTTTTT             MOVE THE-COMMAND-3-8  TO GOIT-NUMBER
TTTTTT         END-IF
TTTTTT         MOVE THE-COMMAND-1    TO PREV-COMMAND
TTTTTT         GO TO T
TTTTTT     END-IF.

TTTTTT     IF THE-COMMAND-1 = 'W'
TTTTTT         PERFORM WORKIT
TTTTTT         MOVE THE-COMMAND-1    TO PREV-COMMAND
TTTTTT         GO TO T-ACCEPT
TTTTTT     END-IF.

TTTTTT     IF THE-COMMAND-1 = 'P'
TTTTTT         PERFORM PROCIT
TTTTTT         MOVE THE-COMMAND-1    TO PREV-COMMAND
TTTTTT         GO TO T-ACCEPT
TTTTTT     END-IF.

TTTTTT     IF THE-COMMAND-1 = 'D'
TTTTTT         PERFORM MATCHIT
TTTTTT         IF THE-COMMAND-3-32 = THIRSTY
TTTTTT             PERFORM DO-DISPLAYIT
TTTTTT             MOVE THE-COMMAND-1    TO PREV-COMMAND
TTTTTT             GO TO T-ACCEPT
TTTTTT         ELSE
TTTTTT             IF MATCH-FOUND = 'N'
TTTTTT                 DISPLAY  'VARIABLE WAS NOT FOUND '
TTTTTT                           THE-COMMAND-3-32
TTTTTT             END-IF
TTTTTT         END-IF
TTTTTT     END-IF.

TTTTTT     IF THE-COMMAND-1 = 'X'
TTTTTT         DISPLAY 'EXITING'
TTTTTT         STOP RUN
TTTTIT     END-IF.

TTTTTT     IF THE-COMMAND-1 = '+'
TTTTTT         IF PREV-COMMAND = 'W'
TTTTTT             PERFORM WORKIT-PLUS
TTTTTT             GO TO T-ACCEPT
TTTTTT         END-IF
TTTTTT         IF PREV-COMMAND = 'P'
TTTTTT             PERFORM PROCIT-PLUS
TTTTTT             GO TO T-ACCEPT
TTTTTT         END-IF
TTTTTT     END-IF.

TTTTTT T-EXIT. EXIT.

TTTTTT BREAKIT-LIST SECTION.
TTTTTT     IF BREAKIT-NUMBER (BUB2) NOT = SIX-LOW-VALUES
TTTTTT         DISPLAY BREAKIT-NUMBER (BUB2)
TTTTTT     END-IF.
TTTTTT BREAKIT-LIST-EXIT. EXIT.

TTTTTT BREAKIT-FIND SECTION.
TTTTTT     MOVE 1                    TO BUB2.
TTTTTT BREAKIT-FIND-LOOP.
TTTTTT     IF BUB2 > BUB
TTTTTT        GO TO BREAKIT-FIND-EXIT
TTTTTT     END-IF.
TTTTTT     MOVE BREAKIT-NUMBER (BUB2) TO A-NUMBER.
TTTTTT     MOVE LINE-NUMBER (LINE-COUNT2) TO B-NUMBER.
TTTTTT     IF A-NUMBER = B-NUMBER
TTTTTT         NEXT SENTENCE
TTTTTT     ELSE
TTTTTT         ADD 1                 TO BUB2
TTTTTT         GO TO BREAKIT-FIND-LOOP
TTTTTT     END-IF.
TTTTTT BREAKIT-FIND-EXIT. EXIT.

TTTTTT MONITORIT-FIND SECTION.
TTTTTT     MOVE MONITORIT-VARIABLE (NUB2)
TTTTTT       TO THE-COMMAND-3-32.
TTTTTT     PERFORM MATCHIT.
TTTTTT
TTTTTT     IF THE-COMMAND-3-32 = THIRSTY
      *DISPLAY 'M> MUB=' MUB
TTTTTT         MOVE 'Y'              TO MATCH-FOUND
TTTTTT         MOVE 'N'              TO DISPLAYABLE
TTTTTT         MOVE 'N'              TO NONDISPLAYABLE
TTTTTT         ADD 30                TO MUB
TTTTTT*DISPLAY THE-COMMAND-3-32
TTTTTT         MOVE SPACES           TO LUMP
TTTTTT         MOVE 1                TO MUB2
TTTTTT         PERFORM DISPLAYIT
TTTTTT         SUBTRACT 1          FROM MUB
TTTTTT         SUBTRACT 1          FROM MUB2
TTTTTT         IF MONITORIT-FLAG (NUB2) = 'N'
TTTTTT             MOVE MONITORIT-MAX
TTTTTT               TO MONITORIT-POINTER (NUB2)
TTTTTT             ADD  MUB2         TO MONITORIT-MAX
TTTTTT             MOVE MUB2
TTTTTT               TO MONITORIT-LENGTH  (NUB2)
TTTTTT             MOVE 'Y'
TTTTTT               TO MONITORIT-FLAG    (NUB2)
TTTTTT*DISPLAY 'M> ' MONITORIT-VARIABLE (NUB2)
TTTTTT*DISPLAY 'M> ' MONITORIT-POINTER  (NUB2)
TTTTTT*DISPLAY 'M> ' MONITORIT-LENGTH   (NUB2)
TTTTTT*DISPLAY 'M> ---------------------------'
TTTTTT         END-IF
TTTTTT         PERFORM MONITORIT-CHECK
TTTTTT         IF MONITORIT-CHANGE = 'Y'
      *DISPLAY 'M> DO-DISPLAYIT'
TTTTTT             PERFORM MATCHIT
TTTTTT             PERFORM DO-DISPLAYIT
TTTTTT         END-IF
TTTTTT         PERFORM MONITORIT-UPDATE
TTTTTT     END-IF.
TTTTTT MONITORIT-FIND-EXIT. EXIT.

TTTTTT MONITORIT-CHECK SECTION.
TTTTTT     MOVE 1                     TO DUB.
TTTTTT     MOVE MONITORIT-POINTER (NUB2)
TTTTTT                                TO EUB.
TTTTTT     MOVE 'N'                   TO MONITORIT-CHANGE.
TTTTTT MONITORIT-CHECK-LOOP.
TTTTTT     IF DUB > MUB2
TTTTTT         GO TO MONITORIT-CHECK-EXIT
TTTTTT     END-IF.
TTTTTT     MOVE MONITORIT-CHUNK-C (EUB) TO A-CHAR.
TTTTTT     MOVE LUMP-C (DUB)            TO B-CHAR.
TTTTTT     IF A-CHAR NOT = B-CHAR
TTTTTT         MOVE 'Y'                 TO MONITORIT-CHANGE
TTTTTT         GO TO MONITORIT-CHECK-EXIT
TTTTTT     END-IF.
TTTTTT     ADD 1                        TO DUB.
TTTTTT     ADD 1                        TO EUB.
TTTTTT     GO TO MONITORIT-CHECK-LOOP.
TTTTTT MONITORIT-CHECK-EXIT. EXIT.

TTTTTT MONITORIT-UPDATE SECTION.
TTTTTT     MOVE 1                     TO DUB.
TTTTTT     MOVE MONITORIT-POINTER (NUB2)
TTTTTT                                TO EUB.
TTTTTT     MOVE 'N'                   TO MONITORIT-CHANGE.
TTTTTT MONITORIT-UPDATE-LOOP.
TTTTTT     IF DUB > MUB2
TTTTTT         GO TO MONITORIT-UPDATE-EXIT
TTTTTT     END-IF.
TTTTTT     MOVE LUMP-C (DUB)
TTTTTT       TO MONITORIT-CHUNK-C (EUB).
TTTTTT     ADD 1                        TO DUB.
TTTTTT     ADD 1                        TO EUB.
TTTTTT     GO TO MONITORIT-UPDATE-LOOP.
TTTTTT MONITORIT-UPDATE-EXIT. EXIT.

TTTTTT MONITORIT-LIST SECTION.
TTTTTT     IF MONITORIT-VARIABLE (NUB2) NOT = TH2-LOW-VALUES
TTTTTT         DISPLAY MONITORIT-VARIABLE (NUB2)
TTTTTT     END-IF.
TTTTTT MONITORIT-LIST-EXIT. EXIT.

TTTTTT MATCHIT SECTION.
TTTTTT     MOVE 'N'                  TO MATCH-FOUND.
TTTTTT     MOVE 'N'                  TO CARROTS.
TTTTTT     MOVE  2                   TO MUB.
TTTTTT MATCH-LOOP.
TTTTTT     ADD   1                   TO MUB.
TTTTTT     IF   T-C (MUB     )   = '!'
TTTTTT       IF T-C (MUB +  1)   = '!'
TTTTTT           NEXT SENTENCE
TTTTTT       ELSE
TTTTTT           IF   T-C (MUB     )   = '^'
TTTTTT               IF T-C (MUB +  1)   = '^'
TTTTTT                   MOVE 'Y'    TO CARROTS
TTTTTT               END-IF
TTTTTT           ELSE
TTTTTT               GO TO MATCH-LOOP
TTTTTT           END-IF
TTTTTT       END-IF
TTTTTT     ELSE
TTTTTT           IF   T-C (MUB     )   = '^'
TTTTTT               IF T-C (MUB +  1)   = '^'
TTTTTT                   MOVE 'Y'    TO CARROTS
TTTTTT               END-IF
TTTTTT           ELSE
TTTTTT               GO TO MATCH-LOOP
TTTTTT           END-IF
TTTTTT     END-IF.
TTTTTT     ADD 2                     TO MUB.
TTTTTT     MOVE T-C (MUB     )       TO THIRSTY-C (01).
TTTTTT     MOVE T-C (MUB +  1)       TO THIRSTY-C (02).
TTTTTT     MOVE T-C (MUB +  2)       TO THIRSTY-C (03).
TTTTTT     MOVE T-C (MUB +  3)       TO THIRSTY-C (04).
TTTTTT     MOVE T-C (MUB +  4)       TO THIRSTY-C (05).
TTTTTT     MOVE T-C (MUB +  5)       TO THIRSTY-C (06).
TTTTTT     MOVE T-C (MUB +  6)       TO THIRSTY-C (07).
TTTTTT     MOVE T-C (MUB +  7)       TO THIRSTY-C (08).
TTTTTT     MOVE T-C (MUB +  8)       TO THIRSTY-C (09).
TTTTTT     MOVE T-C (MUB +  9)       TO THIRSTY-C (10).
TTTTTT     MOVE T-C (MUB + 10)       TO THIRSTY-C (11).
TTTTTT     MOVE T-C (MUB + 11)       TO THIRSTY-C (12).
TTTTTT     MOVE T-C (MUB + 12)       TO THIRSTY-C (13).
TTTTTT     MOVE T-C (MUB + 13)       TO THIRSTY-C (14).
TTTTTT     MOVE T-C (MUB + 14)       TO THIRSTY-C (15).
TTTTTT     MOVE T-C (MUB + 15)       TO THIRSTY-C (16).
TTTTTT     MOVE T-C (MUB + 16)       TO THIRSTY-C (17).
TTTTTT     MOVE T-C (MUB + 17)       TO THIRSTY-C (18).
TTTTTT     MOVE T-C (MUB + 18)       TO THIRSTY-C (19).
TTTTTT     MOVE T-C (MUB + 19)       TO THIRSTY-C (20).
TTTTTT     MOVE T-C (MUB + 20)       TO THIRSTY-C (21).
TTTTTT     MOVE T-C (MUB + 21)       TO THIRSTY-C (22).
TTTTTT     MOVE T-C (MUB + 22)       TO THIRSTY-C (23).
TTTTTT     MOVE T-C (MUB + 23)       TO THIRSTY-C (24).
TTTTTT     MOVE T-C (MUB + 24)       TO THIRSTY-C (25).
TTTTTT     MOVE T-C (MUB + 25)       TO THIRSTY-C (26).
TTTTTT     MOVE T-C (MUB + 26)       TO THIRSTY-C (27).
TTTTTT     MOVE T-C (MUB + 27)       TO THIRSTY-C (28).
TTTTTT     MOVE T-C (MUB + 28)       TO THIRSTY-C (29).
TTTTTT     MOVE T-C (MUB + 29)       TO THIRSTY-C (30).
TTTTTT     IF THE-COMMAND-3-32 NOT = THIRSTY
TTTTTT         IF CARROTS = 'N'
TTTTTT             GO MATCH-LOOP
TTTTTT         END-IF
TTTTTT*     ELSE
TTTTTT*         PERFORM DO-DISPLAYIT
TTTTTT     END-IF.
TTTTTT*     IF MATCH-FOUND = 'N'
TTTTTT*         DISPLAY  'VARIABLE WAS NOT FOUND ' THE-COMMAND-3-32
TTTTTT*     END-IF.
TTTTTT MATCHIT-EXIT. EXIT.

TTTTTT DO-DISPLAYIT SECTION.
TTTTTT     MOVE 'Y'                  TO MATCH-FOUND.
TTTTTT     MOVE 'N'                  TO DISPLAYABLE.
TTTTTT     MOVE 'N'                  TO NONDISPLAYABLE.
TTTTTT     ADD 30                    TO MUB.
TTTTTT     IF MONITORIT-CHANGE = 'Y'
TTTTTT         DISPLAY THE-COMMAND-3-32
TTTTTT               ' AT LINE '
TTTTTT                 LINE-NUMBER (LINE-COUNT2)
TTTTTT     ELSE
TTTTTT         DISPLAY THE-COMMAND-3-32
TTTTTT     END-IF.
TTTTTT     MOVE SPACES               TO LUMP.
TTTTTT     MOVE 1                    TO MUB2.
TTTTTT     PERFORM DISPLAYIT.
TTTTTT     SUBTRACT 1              FROM MUB.
TTTTTT     SUBTRACT 1              FROM MUB2.
TTTTTT     COMPUTE GUB = (MUB2 / 32).
TTTTTT     COMPUTE HUB = MUB2 - (GUB * 32).
TTTTTT     COMPUTE GUB = GUB + 1.
TTTTTT     MOVE 1                    TO GUB2.
TTTTTT     IF DISPLAYABLE = 'Y'
TTTTTT         IF NONDISPLAYABLE = 'N'
TTTTTT             PERFORM DISPLAYABLE-LUMP GUB TIMES
TTTTTT         ELSE
TTTTTT             MOVE 1            TO GUB3
TTTTTT             PERFORM NONDISP-LUMP
TTTTTT         END-IF
TTTTTT     ELSE
TTTTTT             MOVE 1            TO GUB3
TTTTTT             PERFORM NONDISP-LUMP
TTTTTT     END-IF.
TTTTTT DO-DISPLAYIT-EXIT. EXIT.

TTTTTT DISPLAYABLE-LUMP SECTION.
TTTTTT     DISPLAY LUMP-BLOCK (GUB2).
TTTTTT     ADD 1                     TO GUB2.
TTTTTT DISPLAYABLE-LUMP-EXIT. EXIT.

TTTTTT NONDISP-LUMP SECTION.
TTTTTT     MOVE LUMP-BLOCK (GUB3)    TO BLOC.
TTTTTT     MOVE 1                    TO GUB4.
TTTTTT     MOVE SPACES               TO BLOCG.
TTTTTT     MOVE SPACES               TO BLOCH.
TTTTTT     PERFORM EACH-ND-LUMP 32 TIMES.
TTTTTT     DISPLAY BLOCG.
TTTTTT     DISPLAY BLOCH.
TTTTTT     ADD 1                     TO GUB3.
TTTTTT     IF GUB3 > GUB
TTTTTT         GO TO NONDISP-LUMP-EXIT
TTTTTT     ELSE
TTTTTT         GO TO NONDISP-LUMP
TTTTTT     END-IF.
TTTTTT NONDISP-LUMP-EXIT. EXIT.

TTTTTT EACH-ND-LUMP SECTION.
TTTTTT     IF GUB3 = GUB
TTTTTT         IF GUB4 > HUB
TTTTTT             ADD 1             TO GUB4
TTTTTT             GO TO EACH-ND-LUMP-EXIT
TTTTTT         END-IF
TTTTTT     END-IF.
TTTTTT     MOVE '. '                 TO BLOCG-BI (GUB4).
TTTTTT     IF (BLOC-C (GUB4) = SPACE)
TTTTTT         MOVE 'SP'             TO BLOCG-BI (GUB4)
TTTTTT         GO TO EACH-ND
TTTTTT     END-IF.
TTTTTT     IF (BLOC-C (GUB4) NOT < 'A' AND  BLOC-C (GUB4) NOT > 'Z')
TTTTTT         MOVE BLOC-C (GUB4)    TO BLOCG-BI (GUB4)
TTTTTT         GO TO EACH-ND
TTTTTT     END-IF.
TTTTTT     IF (BLOC-C (GUB4) NOT < 'a' AND BLOC-C (GUB4) NOT > 'z')
TTTTTT         MOVE BLOC-C (GUB4)    TO BLOCG-BI (GUB4)
TTTTTT         GO TO EACH-ND
TTTTTT     END-IF.
TTTTTT     IF (BLOC-C (GUB4) = '@' OR '$' OR '*' OR '&' OR '%' OR '+')
TTTTTT         MOVE BLOC-C (GUB4)    TO BLOCG-BI (GUB4)
TTTTTT         GO TO EACH-ND
TTTTTT     END-IF.
TTTTTT     IF (BLOC-C (GUB4) = X'4D')
TTTTTT         MOVE BLOC-C (GUB4)    TO BLOCG-BI (GUB4)
TTTTTT         GO TO EACH-ND
TTTTTT     END-IF.
TTTTTT     IF (BLOC-C (GUB4) = X'5D')
TTTTTT         MOVE BLOC-C (GUB4)    TO BLOCG-BI (GUB4)
TTTTTT         GO TO EACH-ND
TTTTTT     END-IF.
TTTTTT     IF (BLOC-C (GUB4) = X'6B')
TTTTTT         MOVE BLOC-C (GUB4)    TO BLOCG-BI (GUB4)
TTTTTT         GO TO EACH-ND
TTTTTT     END-IF.
TTTTTT     IF (BLOC-C (GUB4) = '-' OR '=' OR '{' OR '}' OR '[' OR ']')
TTTTTT         MOVE BLOC-C (GUB4)    TO BLOCG-BI (GUB4)
TTTTTT         GO TO EACH-ND
TTTTTT     END-IF.
TTTTTT     IF (BLOC-C (GUB4) = ':' OR '"' OR '<' OR '>' OR '?' OR '.')
TTTTTT         MOVE BLOC-C (GUB4)    TO BLOCG-BI (GUB4)
TTTTTT         GO TO EACH-ND
TTTTTT     END-IF.
TTTTTT     IF (BLOC-C (GUB4) = '/' OR '''')
TTTTTT         MOVE BLOC-C (GUB4)    TO BLOCG-BI (GUB4)
TTTTTT         GO TO EACH-ND
TTTTTT     END-IF.
TTTTT+     IF (BLOC-C (GUB4) NOT < '0' AND BLOC-C (GUB4) NOT > '9')
TTTTT+         MOVE BLOC-C (GUB4)    TO BLOCG-BI (GUB4)
TTTTT+         GO TO EACH-ND
TTTTT+     END-IF.

TTTTTT EACH-ND.
TTTTTT     MOVE LOW-VALUES           TO THE-1ST-CHAR.
TTTTTT     MOVE BLOC-C (GUB4)        TO THE-2ND-CHAR.
TTTTTT     COMPUTE LHS = NINE-04-COMP / 16.
TTTTTT     COMPUTE RHS = NINE-04-COMP - (LHS * 16).
TTTTTT     ADD 1                     TO LHS.
TTTTTT     ADD 1                     TO RHS.
TTTTTT     MOVE THE-ARRAY-C (LHS)    TO BLOCH-BI-LHS (GUB4).
TTTTTT     MOVE THE-ARRAY-C (RHS)    TO BLOCH-BI-RHS (GUB4).
TTTTTT     ADD 1                     TO GUB4.
TTTTTT EACH-ND-LUMP-EXIT. EXIT.

TTTTTT DISPLAYIT SECTION.
TTTTTT     IF (T-C (MUB) = '~' AND T-C (MUB + 1) = '~')
TTTTTT         GO TO DISPLAYIT-EXIT
TTTTTT     END-IF.
TTTTTT     IF (T-C (MUB) = SPACE)
TTTTTT         MOVE T-C (MUB)        TO LUMP-C (MUB2)
TTTTTT         GO TO D-ADD
TTTTTT     END-IF.
TTTTTT     IF (T-C (MUB) NOT < 'A' AND  T-C (MUB) NOT > 'Z')
TTTTTT         MOVE T-C (MUB)        TO LUMP-C (MUB2)
TTTTTT         GO TO D-ADD
TTTTTT     END-IF.
TTTTTT     IF (T-C (MUB) NOT < 'a' AND T-C (MUB) NOT > 'z')
TTTTTT         MOVE T-C (MUB)        TO LUMP-C (MUB2)
TTTTTT         GO TO D-ADD
TTTTTT     END-IF.
TTTTTT     IF (T-C (MUB) = '@' OR '$' OR '*' OR '&' OR '%' OR '+')
TTTTTT         MOVE T-C (MUB)        TO LUMP-C (MUB2)
TTTTTT         GO TO D-ADD
TTTTTT     END-IF.
TTTTTT     IF (T-C (MUB) = X'4D')
TTTTTT         MOVE T-C (MUB)        TO LUMP-C (MUB2)
TTTTTT         GO TO D-ADD
TTTTTT     END-IF.
TTTTTT     IF (T-C (MUB) = X'5D')
TTTTTT         MOVE T-C (MUB)        TO LUMP-C (MUB2)
TTTTTT         GO TO D-ADD
TTTTTT     END-IF.
TTTTTT     IF (T-C (MUB) = X'6B')
TTTTTT         MOVE T-C (MUB)        TO LUMP-C (MUB2)
TTTTTT         GO TO D-ADD
TTTTTT     END-IF.
TTTTTT     IF (T-C (MUB) = '-' OR '=' OR '{' OR '}' OR '[' OR ']')
TTTTTT         MOVE T-C (MUB)        TO LUMP-C (MUB2)
TTTTTT         GO TO D-ADD
TTTTTT     END-IF.
TTTTTT     IF (T-C (MUB) = ':' OR '"' OR '<' OR '>' OR '?' OR '.')
TTTTTT         MOVE T-C (MUB)        TO LUMP-C (MUB2)
TTTTTT         GO TO D-ADD
TTTTTT     END-IF.
TTTTTT     IF (T-C (MUB) = '/' OR '''')
TTTTTT         MOVE T-C (MUB)        TO LUMP-C (MUB2)
TTTTTT         GO TO D-ADD
TTTTTT     END-IF.
TTTTT+     IF (T-C (MUB) NOT < '0' AND T-C (MUB) NOT > '9')
TTTTT+         MOVE T-C (MUB)        TO LUMP-C (MUB2)
TTTTT+         GO TO D-ADD
TTTTT+     END-IF.
TTTTTT
TTTTTT     MOVE T-C (MUB)            TO LUMP-C (MUB2).
TTTTTT     ADD 1                     TO MUB.
TTTTTT     ADD 1                     TO MUB2.
TTTTTT*14/03/12 3200 changed to 64000
TTTTT+      IF MUB2 > 64000
TTTTT+          DISPLAY 'MAX OF 64000 CHARACTERS HAS BEEN EXCEEDED'
TTTTTT*     IF MUB2 > 3200
TTTTTT*        DISPLAY 'MAX OF 3200 CHARACTERS HAS BEEN EXCEEDED'
TTTTTT         DISPLAY 'BOMBING'
TTTTTT         STOP RUN
TTTTTT     END-IF.
TTTTTT     MOVE 'Y'                  TO NONDISPLAYABLE.
TTTTTT     GO TO DISPLAYIT.
TTTTTT D-ADD.
TTTTTT     ADD 1                     TO MUB.
TTTTTT     ADD 1                     TO MUB2.
TTTTTT*14/03/12 3200 changed to 64000
TTTTT+      IF MUB2 > 64000
TTTTT+          DISPLAY 'MAX OF 64000 CHARACTERS HAS BEEN EXCEEDED'
TTTTTT*    IF MUB2 > 3200
TTTTTT*        DISPLAY 'MAX OF 3200 CHARACTERS HAS BEEN EXCEEDED'
TTTTTT         DISPLAY 'BOMBING'
TTTTTT         STOP RUN
TTTTTT     END-IF.
TTTTTT     MOVE 'Y'                  TO DISPLAYABLE.
TTTTTT     GO TO DISPLAYIT.
TTTTTT DISPLAYIT-EXIT. EXIT.

TTTTTT READ-LINE-FILE SECTION.
TTTTTT     READ LINE-FILE
TTTTTT         AT END
TTTTTT             MOVE 'Y' TO LINE-FILE-ENDED.
           DISPLAY LINE-COUNT ' ' LINE-FILE-ENDED.
TTTTTT     IF LINE-FILE-ENDED = 'N'
TTTTTT         ADD 1                 TO LINE-COUNT
TTTTTT         IF LINE-COUNT > 500
TTTTTT             DISPLAY 'MAX OF 500 LINES EXCEEDED'
TTTTTT             DISPLAY 'BOMBING'
TTTTTT             STOP RUN
TTTTTT         END-IF
TTTTTT         MOVE LINE-RECORD      TO LINE-ENTRY (LINE-COUNT)
TTTTTT     END-IF.
TTTTTT READ-LINE-FILE-EXIT. EXIT.

TTTTTT WORKIT SECTION.
TTTTTT     MOVE  2                   TO MUB3.
TTTTTT     MOVE  1                   TO MUB4.
TTTTTT     MOVE 'N'                  TO WORKIT-END.
TTTTTT     DISPLAY '*----------------------------*'.
TTTTTT WORKIT-LOOP.
TTTTTT     ADD   1                   TO MUB3.
TTTTTT     IF   T-C (MUB3     )   = '!'
TTTTTT       IF T-C (MUB3 +  1)   = '!'
TTTTTT           NEXT SENTENCE
TTTTTT       ELSE
TTTTTT           IF   T-C (MUB3     )   = '^'
TTTTTT               IF T-C (MUB3 +  1)   = '^'
TTTTTT                   MOVE 'Y'    TO WORKIT-END
TTTTTT                   GO TO WORKIT-LAST
TTTTTT               END-IF
TTTTTT           ELSE
TTTTTT               GO TO WORKIT-LOOP
TTTTTT           END-IF
TTTTTT       END-IF
TTTTTT     ELSE
TTTTTT           IF   T-C (MUB3     )   = '^'
TTTTTT               IF T-C (MUB3 +  1)   = '^'
TTTTTT                   MOVE 'Y'    TO WORKIT-END
TTTTTT                   GO TO WORKIT-LAST
TTTTTT               END-IF
TTTTTT           ELSE
TTTTTT               GO TO WORKIT-LOOP
TTTTTT           END-IF
TTTTTT     END-IF.
TTTTTT     ADD 2                      TO MUB3.
TTTTTT     MOVE T-C (MUB3     )       TO THIRSTY-C (01).
TTTTTT     MOVE T-C (MUB3 +  1)       TO THIRSTY-C (02).
TTTTTT     MOVE T-C (MUB3 +  2)       TO THIRSTY-C (03).
TTTTTT     MOVE T-C (MUB3 +  3)       TO THIRSTY-C (04).
TTTTTT     MOVE T-C (MUB3 +  4)       TO THIRSTY-C (05).
TTTTTT     MOVE T-C (MUB3 +  5)       TO THIRSTY-C (06).
TTTTTT     MOVE T-C (MUB3 +  6)       TO THIRSTY-C (07).
TTTTTT     MOVE T-C (MUB3 +  7)       TO THIRSTY-C (08).
TTTTTT     MOVE T-C (MUB3 +  8)       TO THIRSTY-C (09).
TTTTTT     MOVE T-C (MUB3 +  9)       TO THIRSTY-C (10).
TTTTTT     MOVE T-C (MUB3 + 10)       TO THIRSTY-C (11).
TTTTTT     MOVE T-C (MUB3 + 11)       TO THIRSTY-C (12).
TTTTTT     MOVE T-C (MUB3 + 12)       TO THIRSTY-C (13).
TTTTTT     MOVE T-C (MUB3 + 13)       TO THIRSTY-C (14).
TTTTTT     MOVE T-C (MUB3 + 14)       TO THIRSTY-C (15).
TTTTTT     MOVE T-C (MUB3 + 15)       TO THIRSTY-C (16).
TTTTTT     MOVE T-C (MUB3 + 16)       TO THIRSTY-C (17).
TTTTTT     MOVE T-C (MUB3 + 17)       TO THIRSTY-C (18).
TTTTTT     MOVE T-C (MUB3 + 18)       TO THIRSTY-C (19).
TTTTTT     MOVE T-C (MUB3 + 19)       TO THIRSTY-C (20).
TTTTTT     MOVE T-C (MUB3 + 20)       TO THIRSTY-C (21).
TTTTTT     MOVE T-C (MUB3 + 21)       TO THIRSTY-C (22).
TTTTTT     MOVE T-C (MUB3 + 22)       TO THIRSTY-C (23).
TTTTTT     MOVE T-C (MUB3 + 23)       TO THIRSTY-C (24).
TTTTTT     MOVE T-C (MUB3 + 24)       TO THIRSTY-C (25).
TTTTTT     MOVE T-C (MUB3 + 25)       TO THIRSTY-C (26).
TTTTTT     MOVE T-C (MUB3 + 26)       TO THIRSTY-C (27).
TTTTTT     MOVE T-C (MUB3 + 27)       TO THIRSTY-C (28).
TTTTTT     MOVE T-C (MUB3 + 28)       TO THIRSTY-C (29).
TTTTTT     MOVE T-C (MUB3 + 29)       TO THIRSTY-C (30).
TTTTTT     DISPLAY '>>>>' THIRSTY.
TTTTTT     ADD  1                     TO MUB4.
TTTTTT     IF MUB4 > 15
TTTTTT         GO TO WORKIT-LAST
TTTTTT     END-IF.
TTTTTT     GO WORKIT-LOOP.
TTTTTT WORKIT-LAST.
TTTTTT     DISPLAY '*----------------------------*'.
TTTTTT WORKIT-EXIT. EXIT.

TTTTTT WORKIT-PLUS SECTION.
TTTTTT     IF WORKIT-END = 'Y'
TTTTTT         GO TO WORKIT-PLUS-EXIT
TTTTTT     END-IF.
TTTTTT     MOVE  1                   TO MUB4.
TTTTTT     MOVE 'N'                  TO WORKIT-END.
TTTTTT     DISPLAY '*----------------------------*'.
TTTTTT WORKIT-PLUS-LOOP.
TTTTTT     ADD   1                   TO MUB3.
TTTTTT     IF   T-C (MUB3     )   = '!'
TTTTTT       IF T-C (MUB3 +  1)   = '!'
TTTTTT           NEXT SENTENCE
TTTTTT       ELSE
TTTTTT           IF   T-C (MUB3     )   = '^'
TTTTTT               IF T-C (MUB3 +  1)   = '^'
TTTTTT                   MOVE 'Y'    TO WORKIT-END
TTTTTT                   GO TO WORKIT-PLUS-LAST
TTTTTT               END-IF
TTTTTT           ELSE
TTTTTT               GO TO WORKIT-PLUS-LOOP
TTTTTT           END-IF
TTTTTT       END-IF
TTTTTT     ELSE
TTTTTT           IF   T-C (MUB3     )   = '^'
TTTTTT               IF T-C (MUB3 +  1)   = '^'
TTTTTT                   MOVE 'Y'    TO WORKIT-END
TTTTTT                   GO TO WORKIT-PLUS-LAST
TTTTTT               END-IF
TTTTTT           ELSE
TTTTTT               GO TO WORKIT-PLUS-LOOP
TTTTTT           END-IF
TTTTTT     END-IF.
TTTTTT     ADD 2                      TO MUB3.
TTTTTT     MOVE T-C (MUB3     )       TO THIRSTY-C (01).
TTTTTT     MOVE T-C (MUB3 +  1)       TO THIRSTY-C (02).
TTTTTT     MOVE T-C (MUB3 +  2)       TO THIRSTY-C (03).
TTTTTT     MOVE T-C (MUB3 +  3)       TO THIRSTY-C (04).
TTTTTT     MOVE T-C (MUB3 +  4)       TO THIRSTY-C (05).
TTTTTT     MOVE T-C (MUB3 +  5)       TO THIRSTY-C (06).
TTTTTT     MOVE T-C (MUB3 +  6)       TO THIRSTY-C (07).
TTTTTT     MOVE T-C (MUB3 +  7)       TO THIRSTY-C (08).
TTTTTT     MOVE T-C (MUB3 +  8)       TO THIRSTY-C (09).
TTTTTT     MOVE T-C (MUB3 +  9)       TO THIRSTY-C (10).
TTTTTT     MOVE T-C (MUB3 + 10)       TO THIRSTY-C (11).
TTTTTT     MOVE T-C (MUB3 + 11)       TO THIRSTY-C (12).
TTTTTT     MOVE T-C (MUB3 + 12)       TO THIRSTY-C (13).
TTTTTT     MOVE T-C (MUB3 + 13)       TO THIRSTY-C (14).
TTTTTT     MOVE T-C (MUB3 + 14)       TO THIRSTY-C (15).
TTTTTT     MOVE T-C (MUB3 + 15)       TO THIRSTY-C (16).
TTTTTT     MOVE T-C (MUB3 + 16)       TO THIRSTY-C (17).
TTTTTT     MOVE T-C (MUB3 + 17)       TO THIRSTY-C (18).
TTTTTT     MOVE T-C (MUB3 + 18)       TO THIRSTY-C (19).
TTTTTT     MOVE T-C (MUB3 + 19)       TO THIRSTY-C (20).
TTTTTT     MOVE T-C (MUB3 + 20)       TO THIRSTY-C (21).
TTTTTT     MOVE T-C (MUB3 + 21)       TO THIRSTY-C (22).
TTTTTT     MOVE T-C (MUB3 + 22)       TO THIRSTY-C (23).
TTTTTT     MOVE T-C (MUB3 + 23)       TO THIRSTY-C (24).
TTTTTT     MOVE T-C (MUB3 + 24)       TO THIRSTY-C (25).
TTTTTT     MOVE T-C (MUB3 + 25)       TO THIRSTY-C (26).
TTTTTT     MOVE T-C (MUB3 + 26)       TO THIRSTY-C (27).
TTTTTT     MOVE T-C (MUB3 + 27)       TO THIRSTY-C (28).
TTTTTT     MOVE T-C (MUB3 + 28)       TO THIRSTY-C (29).
TTTTTT     MOVE T-C (MUB3 + 29)       TO THIRSTY-C (30).
TTTTTT     DISPLAY '>>>>' THIRSTY.
TTTTTT     ADD  1                     TO MUB4.
TTTTTT     IF MUB4 > 15
TTTTTT         GO TO WORKIT-PLUS-LAST
TTTTTT     END-IF.
TTTTTT     GO WORKIT-PLUS-LOOP.
TTTTTT WORKIT-PLUS-LAST.
TTTTTT     DISPLAY '*----------------------------*'.
TTTTTT WORKIT-PLUS-EXIT. EXIT.

TTTTTT PROCIT SECTION.
TTTTTT     MOVE  1                    TO LUB.
TTTTTT     DISPLAY '*----------------------------*'.
TTTTTT PROCIT-LOOP.
TTTTTT     DISPLAY LINE-ENTRY (LUB).
TTTTTT     IF LUB = LINE-COUNT
TTTTTT         GO TO PROCIT-LAST
TTTTTT     END-IF.
TTTTTT     ADD  1                     TO LUB.
TTTTTT     IF LUB > 15
TTTTTT         GO TO PROCIT-LAST
TTTTTT     END-IF.
TTTTTT     GO TO PROCIT-LOOP.
TTTTTT PROCIT-LAST.
TTTTTT     DISPLAY '*----------------------------*'.
TTTTTT PROCIT-EXIT. EXIT.
TTTTTT PROCIT-PLUS SECTION.
TTTTTT     MOVE 1                     TO LUB2.
TTTTTT     DISPLAY '*----------------------------*'.
TTTTTT PROCIT-PLUS-LOOP.
TTTTTT     DISPLAY LINE-ENTRY (LUB).
TTTTTT     IF LUB = LINE-COUNT
TTTTTT         GO TO PROCIT-PLUS-LAST
TTTTTT     END-IF.
TTTTTT     ADD  1                     TO LUB.
TTTTTT     ADD  1                     TO LUB2.
TTTTTT     IF LUB2 > 15
TTTTTT         GO TO PROCIT-PLUS-LAST
TTTTTT     END-IF.
TTTTTT     GO TO PROCIT-PLUS-LOOP.
TTTTTT PROCIT-PLUS-LAST.
TTTTTT     DISPLAY '*----------------------------*'.
TTTTTT PROCIT-PLUS-EXIT. EXIT.

TTTTTT SCREENIT SECTION.
TTTTTT     MOVE  1                    TO SCUB.
TTTTTT SCREENIT-LOOP.
TTTTTT     MOVE LINE-ENTRY (LUB)      TO SCREEN-ENTRY (SCUB).
TTTTTT     IF SCREEN-NUMBER (SCUB) IS NUMERIC
TTTTTT         IF SCREEN-1ST-FLAG = 'Y'
TTTTTT             MOVE SCREEN-NUMBER (SCUB)
TTTTTT                                TO SCREEN-FIRST
TTTTTT             MOVE 'N'           TO SCREEN-1ST-FLAG
TTTTTT         END-IF
TTTTTT     END-IF.
TTTTTT     IF SCREEN-NUMBER (SCUB) IS NUMERIC
TTTTTT         MOVE SCREEN-NUMBER (SCUB)
TTTTTT                                TO SCREEN-LAST
TTTTTT     END-IF.
TTTTTT     IF LUB = LINE-COUNT
TTTTTT         GO TO SCREENIT-DISPLAY
TTTTTT     END-IF.
TTTTTT     ADD  1                     TO LUB.
TTTTTT     IF LUB > LUB-MAX
TTTTTT         ADD 15                 TO LUB-MAX
TTTTTT         GO TO SCREENIT-LAST
TTTTTT     END-IF.
TTTTTT     ADD  1                     TO SCUB.
TTTTTT     GO TO SCREENIT-LOOP.
TTTTTT SCREENIT-LAST.
TTTTTT     IF LINE-NUMBER (LINE-COUNT2) NOT LESS THAN SCREEN-FIRST
TTTTTT        IF LINE-NUMBER (LINE-COUNT2) NOT GREATER THAN SCREEN-LAST
TTTTTT            GO TO SCREENIT-DISPLAY
TTTTTT        ELSE
TTTTTT            MOVE 'Y'            TO SCREEN-1ST-FLAG
TTTTTT            MOVE ZEROES         TO SCREEN-FIRST
TTTTTT            MOVE ZEROES         TO SCREEN-LAST
TTTTTT            MOVE SPACES         TO SCREEN-ARRAY
TTTTTT            GO TO SCREENIT
TTTTTT        END-IF
TTTTTT     ELSE
TTTTTT        MOVE 'Y'                TO SCREEN-1ST-FLAG
TTTTTT        MOVE ZEROES             TO SCREEN-FIRST
TTTTTT        MOVE ZEROES             TO SCREEN-LAST
TTTTTT        MOVE SPACES             TO SCREEN-ARRAY
TTTTTT        GO TO SCREENIT
TTTTTT     END-IF.
TTTTTT SCREENIT-DISPLAY.
TTTTTT     MOVE 1                     TO SCUB2.
TTTTTT SCREEN-D-LOOP.
TTTTTT     MOVE LINE-NUMBER (LINE-COUNT2) TO LEFFED.
TTTTTT     MOVE SCREEN-NUMBER (SCUB2)     TO RITE.
TTTTTT     MOVE SPACE                 TO SCREEN-POINTER (SCUB2).
TTTTTT     IF LEFFED = RITE
TTTTTT         MOVE '>'               TO SCREEN-POINTER (SCUB2)
TTTTTT     END-IF.
TTTTTT     MOVE SCREEN-ENTRY (SCUB2)  TO SEVENT2.
TTTTTT     DISPLAY SEVENT2.
TTTTTT     ADD 1                      TO SCUB2.
TTTTTT     IF SCUB2 > SCUB
TTTTTT         IF SCUB2 < 16
TTTTTT             MOVE '*------- END OF PROGRAM - -----*'
TTTTTT                                TO SCREEN-ENTRY (SCUB2)
TTTTTT             GO TO SCREEN-D-LOOP
TTTTTT         ELSE
TTTTTT             GO TO SCREENIT-EXIT
TTTTTT         END-IF
TTTTTT     ELSE
TTTTTT         GO TO SCREEN-D-LOOP
TTTTTT     END-IF.
TTTTTT SCREENIT-EXIT. EXIT.

TTTTTT DUMMY SECTION. EXIT.
TTTTTT*--1---------2--------3---------4---------5---------6---------7-*
