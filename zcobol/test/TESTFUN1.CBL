       IDENTIFICATION DIVISION.
       PROGRAM-ID.    TESTFUN1.
       AUTHOR.        DON HIGGINS.
       DATE-WRITTEN.  10/13/08.
      * TEST FUNCTIONS - LENGTH OF, ADDRESS OF                              
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       77 PTR-1   USAGE POINTER.    
       77 PTR-2   USAGE POINTER.           
       77 PTR-3   USAGE POINTER.           
       77 W1      PIC 9(9) COMP VALUE 0.           
       77 ADDR-1  PIC X(20).
       77 ADDR-2  PIC X(20).
       77 TP1     COMP-3 PIC S9.
       77 TP2     COMP-3 PIC S9.
       77 TZ1     PIC S9.
       77 TZ2     PIC S99.
       77 TX3     PIC X(3).
       77 TRM1    PIC X(3) VALUE 'ABC'.
      * THE FOLLOWING 3 TYPES ARE MAPPED TO DFP USING FLOAT(DECIMAL)
      * NOTE: FLOAT(DECIMAL) IS THE DEFAULT 
       77 FLT-SRT FLOAT-SHORT.
       77 FLT-LNG FLOAT-LONG. 
       77 FLT-EXT FLOAT-EXTENDED.
      * THE FOLLOWING 9 TYPES ALWAYS MAP TO HFP, BFP, AND DFP.
       77 HFP-SRT FLOAT-HEX-7      VALUE 1234567.
       77 HFP-LNG FLOAT-HEX-15     VALUE 123456789012345.
       77 HFP-EXT FLOAT-HEX-30 
                  VALUE 123456789012345678901234567890.
       77 BFP-SRT FLOAT-BINARY-7   VALUE 1234567.
       77 BFP-LNG FLOAT-BINARY-16  VALUE 1234567890123456.
       77 BFP-EXT FLOAT-BINARY-34
                  VALUE 1234567890123456789012345678901234.
       77 DFP-SRT FLOAT-DECIMAL-7  VALUE 1234567.
       77 DFP-LNG FLOAT-DECIMAL-16 VALUE 1234567890123456.
       77 DFP-EXT FLOAT-DECIMAL-34
                  VALUE 1234567890123456789012345678901234.
      * THE FOLLOWING 4 TYPES DEFINE 16, 32, 64, AND 128 BINARY TYPES
      * NOTE 39 DIGIT QW LIMITED TO 34 DIGITS TO FIT IN BFP/DFP_EXT
       77 HW      COMP PIC S9(4)  VALUE 1234.
       77 FW      COMP PIC S9(9)  VALUE 123456789.
       77 DW      COMP PIC S9(18) VALUE 123456789012345.
       77 QW      COMP PIC S9(39) 
                  VALUE 1234567890123456789012345678901234.
      * THE FOLLOWING 2 TYPES DEFINE 31 DIGIT PACKED AND ZONED DECIMAL
       77 PD      COMP-3 PIC S9(31) 
                  VALUE 1234567890123456789012345678901.
       77 ZD             PIC S9(31) 
                  VALUE 1234567890123456789012345678901.
       77 P1      COMP-3 PIC S9(31) VALUE 1.           
       77 Q1      COMP   PIC S9(39) VALUE 1.
       77 Z1             PIC S9(4)  VALUE 1.           
       77 D2      COMP-2            VALUE 2.           
       77 GOOD   COMP-3 PIC 9(4)   VALUE 0.
       PROCEDURE DIVISION.
       MAINLINE.
           DISPLAY 'TESTFUN1 FUNCTIONS STARTING'
           NOTE TEST COMMENT SENTENCE
      * TEST LENGTH OF
           DISPLAY 'TEST LENGTH OF'
           MOVE LENGTH OF PTR-1 TO W1
            IF W1 = 4 PERFORM GOOD ELSE PERFORM BAD.
      * TEST ADDRESS OF
           DISPLAY 'TEST ADDRESS OF'
           MOVE ADDRESS OF ADDR-1 TO PTR-1
           MOVE ADDRESS OF ADDR-2 TO PTR-2
           SUBTRACT PTR-1 FROM PTR-2
            IF PTR-2 = 20 PERFORM GOOD ELSE PERFORM BAD.           
      * TEST NUMERIC
           DISPLAY 'TEST NUMERIC'
           MOVE 1 TO TP1
            IF TP1 = NUMERIC PERFORM GOOD ELSE PERFORM BAD.           
           MOVE SPACES TO TP1
            IF TP1 NOT = NUMERIC PERFORM GOOD ELSE PERFORM BAD.           
           MOVE LOW-VALUES TO TP1
            IF TP1 NOT = NUMERIC PERFORM GOOD ELSE PERFORM BAD.           
           MOVE HIGH-VALUES TO TP1
            IF TP1 NOT = NUMERIC PERFORM GOOD ELSE PERFORM BAD.           
           MOVE 123 TO TP2
            IF TP2 = NUMERIC PERFORM GOOD ELSE PERFORM BAD.           
           MOVE SPACES TO TP2
            IF TP2 NOT = NUMERIC PERFORM GOOD ELSE PERFORM BAD.           
           MOVE 1 TO TZ1
            IF TZ1 = NUMERIC PERFORM GOOD ELSE PERFORM BAD.           
           MOVE SPACES TO TZ1
            IF TZ1 NOT = NUMERIC PERFORM GOOD ELSE PERFORM BAD.           
           MOVE -12 TO TZ2
            IF TZ2 = NUMERIC PERFORM GOOD ELSE PERFORM BAD.           
           MOVE SPACES TO TZ2
            IF TZ2 NOT = NUMERIC PERFORM GOOD ELSE PERFORM BAD.           
           MOVE '123' TO TX3
            IF TX3 = NUMERIC PERFORM GOOD ELSE PERFORM BAD.           
           MOVE SPACES TO TX3
            IF TX3 NOT = NUMERIC PERFORM GOOD ELSE PERFORM BAD.           
      * TEST ALPHANUMERIC
           DISPLAY 'TEST ALPHANUMERIC'
           MOVE 'ABC' TO TX3
            IF TX3 = ALPHABETIC PERFORM GOOD ELSE PERFORM BAD.           
           MOVE SPACES TO TX3
           IF TX3 NOT = ALPHABETIC PERFORM GOOD ELSE PERFORM BAD.           
      * TEST TRANSFORM
           DISPLAY 'TEST TRANSFORM'
           TRANSFORM TRM1 CHARACTERS FROM 'CBA' TO '321'
           IF TRM1 = '123' PERFORM GOOD ELSE PERFORM BAD.           
      * TEST CVTQTLB CONVERT Q 128 INT TO BFP LB
           DISPLAY 'TEST CVTQTLB'
           MOVE 1  TO Q1
           MOVE Q1 TO BFP-EXT
           DISPLAY 'BFP-EXT 1 =' BFP-EXT
            IF Q1 = 1 PERFORM GOOD ELSE PERFORM BAD.
           MOVE -1  TO Q1
           MOVE Q1 TO BFP-EXT
           DISPLAY 'BFP-EXT -1 =' BFP-EXT
            IF Q1 = -1 PERFORM GOOD ELSE PERFORM BAD.
           MOVE 0  TO Q1
           MOVE Q1 TO BFP-EXT
           DISPLAY 'BFP-EXT 0 =' BFP-EXT
            IF Q1 = 0 PERFORM GOOD ELSE PERFORM BAD.
           MOVE 1234567890123456789012345678901234 TO Q1
           MOVE Q1 TO BFP-EXT
           DISPLAY 'BFP-EXT 1234567890123456789012345678901234 =' 
              BFP-EXT
            IF Q1 = 1234567890123456789012345678901234 
               PERFORM GOOD ELSE PERFORM BAD.
           MOVE 123456789012345678901234567890123456789 TO Q1
           MOVE Q1 TO BFP-EXT
           DISPLAY 'BFP-EXT 123456789012345678901234567890123456789 ='
              BFP-EXT
            IF Q1 = 123456789012345678901234567890123456789 
               PERFORM GOOD ELSE PERFORM BAD.
      * TEST CVTLBTQ CONVERT BFP LB TO Q 128 BIT INTEGER
           DISPLAY 'TEST CVTLBTQ'
           MOVE 1  TO BFP-EXT
           MOVE BFP-EXT TO Q1
           DISPLAY 'Q1 1 =' Q1
            IF Q1 = 1 PERFORM GOOD ELSE PERFORM BAD.

           MOVE -1  TO BFP-EXT
           MOVE BFP-EXT TO Q1
           DISPLAY 'Q1 -1 =' Q1
            IF Q1 = -1 PERFORM GOOD ELSE PERFORM BAD.
           MOVE 0  TO BFP-EXT
           MOVE BFP-EXT TO Q1
           DISPLAY 'Q1 0 =' Q1
            IF Q1 = 0 PERFORM GOOD ELSE PERFORM BAD.
           MOVE 1234567890123456789012345678901234 TO BFP-EXT
           MOVE BFP-EXT TO Q1
           DISPLAY 'Q1 1234567890123456789012345678901234 =' Q1
            IF Q1 = 1234567890123456789012345678901234 
               PERFORM GOOD ELSE PERFORM BAD.
      * TEST CVTLDTP  CVT LD TO PD31
           DISPLAY 'TEST CVTLDTP'
           MOVE 1  TO DFP-EXT
           MOVE DFP-EXT TO P1
           DISPLAY 'P1 1 =' P1
            IF P1 = 1 PERFORM GOOD ELSE PERFORM BAD.
           MOVE -1  TO DFP-EXT
           MOVE DFP-EXT TO P1
           DISPLAY 'P1 -1 =' P1
            IF P1 = -1 PERFORM GOOD ELSE PERFORM BAD.
           MOVE 0  TO DFP-EXT
           MOVE DFP-EXT TO P1
           DISPLAY 'P1 0 =' P1
            IF P1 = 0 PERFORM GOOD ELSE PERFORM BAD.
           MOVE 1234567890123456789012345678901 TO DFP-EXT
           MOVE DFP-EXT TO P1
           DISPLAY 'P1 1234567890123456789012345678901 =' P1
            IF P1 = 1234567890123456789012345678901 
               PERFORM GOOD ELSE PERFORM BAD.
      * TEST MPYQ 128 BIT R0-R1 * 128 BIT R2-R3
           DISPLAY 'TEST MPYQ'
           MOVE     3  TO D2
           MOVE     2  TO Z1
           MULTIPLY D2 BY Z1 
            IF Z1 = 6 PERFORM GOOD ELSE PERFORM BAD.
           MOVE     3  TO D2
           MOVE     -2 TO Z1
           MULTIPLY D2 BY Z1 
            IF Z1 = -6 PERFORM GOOD ELSE PERFORM BAD.
           MOVE     -3  TO D2
           MOVE     2 TO Z1
           MULTIPLY D2 BY Z1 
            IF Z1 = -6 PERFORM GOOD ELSE PERFORM BAD.
           MOVE     -3  TO D2
           MOVE     -2 TO Z1
           MULTIPLY D2 BY Z1 
            IF Z1 = 6 PERFORM GOOD ELSE PERFORM BAD.
           MOVE     -3  TO D2
           MOVE     -2 TO Z1
           MULTIPLY D2 BY Z1 
            IF Z1 = 6 PERFORM GOOD ELSE PERFORM BAD.
           DISPLAY 'TESTFUN1 GOOD TESTS =' GOOD
           STOP RUN.
       GOOD. 
           ADD 1 TO GOOD.
       BAD.
           MOVE 16 TO RETURN-CODE
           STOP RUN.
