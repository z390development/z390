         MACRO                                                             
.********************************************************************
.* z390 - Mainframe assembler emulator and run-time engine
.* Copyright (C) 2021 z390 Assembler LLC
.*
.* This file is part of z390.
.*
.* z390 is free software; you can redistribute it and/or modify
.* it under the terms of the GNU General Public License as published by
.* the Free Software Foundation; either version 2 of the License, or
.* (at your option) any later version.
.* z390 is distributed in the hope that it will be useful,
.* but WITHOUT ANY WARRANTY; without even the implied warranty of
.* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.* GNU General Public License for more details.
.*
.* You should have received a copy of the GNU General Public License 
.* along with this program; if not, see https://www.gnu.org/licenses.
.********************************************************************
.* 09/23/08 DON HIGGINS ADD SPM MACROS FOR CASENTRY, CASE, ENDCASE
.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.
.* 11/10/08 RPI 946 fill address table to avoid INIT x'F6' in 390  
.* 11/19/08 RPI 964 allow use of self defining terms for index values
.********************************************************************
         CASE  &VALUE                                                                        
         COPY  ZSTRGBL
         AIF   (&ZSTR_LVL EQ 0)
               MNOTE 8,'CASE - MISSING CASENTRY'                                     
               MEXIT
         AEND     
         AIF   (&ZSTR_LVL_TYPE(&ZSTR_LVL) NE 'CASENTRY')
               MNOTE 8,'CASE - MISSING CASENTRY'                                     
               MEXIT
         AEND    
         AIF   (T'&VALUE EQ 'N') 
               :&NVALUE SETA &VALUE
         AELSEIF ('&VALUE'(1,2) EQ 'C''')
               :&NVALUE SETA C2A('&VALUE'(3,1))
         AELSEIF ('&VALUE'(1,2) EQ 'X''')
               :&NVALUE SETA X2A('&VALUE'(3,K'&VALUE-3))
         AELSE
               MNOTE 8,'CASE INVALID INDEX VALUE - &VALUE'
               MEXIT
         AEND
         AIF   (&NVALUE GT &ZSTR_CASE_MAX(&ZSTR_LVL))
               :&ZSTR_CASE_MAX(&ZSTR_LVL) SETA &NVALUE
         AEND
         AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) GT 0)
         B     #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E
         AEND
         :&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1
#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&NVALUE DS 0H
#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_L LOCTR
         AIF   (&NVALUE GT &ZSTR_CASE_LAST_INDEX) rpi 946
               :&LFILL SETA (&NVALUE-&ZSTR_CASE_LAST_INDEX-1)
               AIF (&LFILL GT 0)
         DC    (&LFILL)A(0)
               AEND
               :&ZSTR_CASE_LAST_INDEX SETA &NVALUE
         AELSE
               MNOTE 8,'CASE VALUE NOT IN ASCENDING SEQUENCE - &VALUE'
         AEND         
         DC    A(#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&NVALUE)
&SYSECT  CSECT         
         MEND
