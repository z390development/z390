         MACRO
.**********************************************************************
.* z390 - Mainframe assembler emulator and run-time engine
.* Copyright (C) 2021 z390 Assembler LLC
.*
.* This file is part of z390.
.*
.* z390 is free software; you can redistribute it and/or modify
.* it under the terms of the GNU General Public License as published by
.* the Free Software Foundation; either version 2 of the License, or
.* (at your option) any later version.
.* z390 is distributed in the hope that it will be useful,
.* but WITHOUT ANY WARRANTY; without even the implied warranty of
.* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.* GNU General Public License for more details.
.*
.* You should have received a copy of the GNU General Public License 
.* along with this program; if not, see https://www.gnu.org/licenses.
.**********************************************************************
.* 03/02/19 CODING FOR zVSAM V2 BY MELVYN MALTZ
.**********************************************************************
&N       EXLST &AM=VSAM,          VSAM                                 X
               &EODAD=,           END OF DATA EXIT                     X
               &LERAD=,           LOGICAL ERROR EXIT                   X
               &SYNAD=,           PHYSICAL ERROR EXIT                  X
               &JRNAD=,           JOURNALLING EXIT (NOT SUPPORTED)     X
               &UPAD=,            USER EXIT (NOT SUPPORTED)            X
               &RLSWAIT=          RLS WAIT EXIT (NOT SUPPORTED)
.*
.* VALID ENTRIES ARE:
.*   0
.*   (0,N)
.*   (0,A)
.*   address
.*   (address,A)
.*   (address,N)
.*
.* modifier of L is not supported
.*
         LCLB  &EOD_A,&EOD_N,&EOD_L
         LCLB  &LER_A,&LER_N,&LER_L
         LCLB  &SYN_A,&SYN_N,&SYN_L
.*
         AIF   ('&N' NE '')
&N       DS    0D
         AELSE
         DS    0D
         AEND
.*
.* ELIMINATE POSITIONALS
&NPOS    SETA  N'&SYSLIST
.POSLOOP ANOP
         AIF   (&NPOS EQ 0).POSEND
         MNOTE 12,'EXLST UNSUPPORTED OPERAND - &SYSLIST(&NPOS)'
&NPOS    SETA  &NPOS-1
         AIF   (&NPOS GT 0).POSLOOP
.*
.POSEND  ANOP
         AIF   ('&AM' NE 'VSAM')
         MNOTE 12,'ONLY AM=VSAM IS SUPPORTED'
         AEND
         AIF   ('&JRNAD' NE '')
         MNOTE 12,'JRNAD IS NOT SUPPORTED'
         AEND
         AIF   ('&UPAD' NE '')
         MNOTE 12,'UPAD IS NOT SUPPORTED'
         AEND
         AIF   ('&RLSWAIT' NE '')
         MNOTE 12,'RLSWAIT IS NOT SUPPORTED'
         AEND
.*
.* GENERATE zVSAM V2 EXLST
.*
         DC    C'zLST'            EXLEYE    EYECATCHER
         DC    AL2(9+3*5)         EXLLEN    EXLST LENGTH
         DC    X'10'              EXLSTYP   VSAM SUBTYPE
.* PROCESS EODAD
         AIF   ('&EODAD' EQ '')
         DC    X'00'              EXLEODF   NOT PRESENT AND INACTIVE
         DC    XL4'00'            EXLEODP   EODAD ADDRESS
         AGO   .DOLERAD
         AEND
.*
         AIF   ('&EODAD(1)' EQ '')
&EODADDR SETC  '0'
         AELSE
&EODADDR SETC  '&EODAD(1)'
         AEND
.*
&EODCNT  SETA  2
.EODLOOP ANOP
         AIF   (&EODCNT GT N'&EODAD).EODDUN
         AIF   ('&EODAD(&EODCNT)' EQ 'A')
&EOD_A   SETB  1
         AEND
         AIF   ('&EODAD(&EODCNT)' EQ 'N')
&EOD_N   SETB  1
         AEND
         AIF   ('&EODAD(&EODCNT)' EQ 'L')
&EOD_L   SETB  1
         AEND
         AIF   ('&EODAD(&EODCNT)' NE 'A' AND                           X
               '&EODAD(&EODCNT)' NE 'N' AND                            X
               '&EODAD(&EODCNT)' NE 'L')
         MNOTE 12,'EODAD INVALID MODIFIER - &EODAD(&EODCNT)'
         AEND
&EODCNT  SETA  &EODCNT+1
         AGO   .EODLOOP
.*
.EODDUN  ANOP
         AIF   (&EOD_L)
         MNOTE 12,'EODAD MODIFIER L IS NOT SUPPORTED'
         AEND
         AIF   (&EOD_A AND &EOD_N)
         MNOTE 12,'EODAD MODIFIERS A AND N ARE MUTUALLY EXCLUSIVE'
         AEND
         AIF   (NOT(&EOD_A OR &EOD_N))
&EOD_A   SETB  1
         AEND
.*
         AIF   (&EOD_A)
         DC    X'C0'              EXLEODF   PRESENT AND ACTIVE
         AELSE
         DC    X'80'              EXLEODF   PRESENT AND INACTIVE
         AEND
         DC    AL4(&EODADDR)      EXLEODP   EODAD ADDRESS
.*
.DOLERAD ANOP
.* PROCESS LERAD
         AIF   ('&LERAD' EQ '')
         DC    X'00'              EXLLERF   NOT PRESENT AND INACTIVE
         DC    XL4'00'            EXLLERP   LERAD ADDRESS
         AGO   .DOSYNAD
         AEND
.*
         AIF   ('&LERAD(1)' EQ '')
&LERADDR SETC  '0'
         AELSE
&LERADDR SETC  '&LERAD(1)'
         AEND
.*
&LERCNT  SETA  2
.LERLOOP ANOP
         AIF   (&LERCNT GT N'&LERAD).LERDUN
         AIF   ('&LERAD(&LERCNT)' EQ 'A')
&LER_A   SETB  1
         AEND
         AIF   ('&LERAD(&LERCNT)' EQ 'N')
&LER_N   SETB  1
         AEND
         AIF   ('&LERAD(&LERCNT)' EQ 'L')
&LER_L   SETB  1
         AEND
         AIF   ('&LERAD(&LERCNT)' NE 'A' AND                           X
               '&LERAD(&LERCNT)' NE 'N' AND                            X
               '&LERAD(&LERCNT)' NE 'L')
         MNOTE 12,'LERAD INVALID MODIFIER - &LERAD(&LERCNT)'
         AEND
&LERCNT  SETA  &LERCNT+1
         AGO   .LERLOOP
.*
.LERDUN  ANOP
         AIF   (&LER_L)
         MNOTE 12,'LERAD MODIFIER L IS NOT SUPPORTED'
         AEND
         AIF   (&LER_A AND &LER_N)
         MNOTE 12,'LERAD MODIFIERS A AND N ARE MUTUALLY EXCLUSIVE'
         AEND
         AIF   (NOT(&LER_A OR &LER_N))
&LER_A   SETB  1
         AEND
.*
         AIF   (&LER_A)
         DC    X'C0'              EXLLERF   PRESENT AND ACTIVE
         AELSE
         DC    X'80'              EXLLERF   PRESENT AND INACTIVE
         AEND
         DC    AL4(&LERADDR)      EXLLERP   LERAD ADDRESS
.*
.DOSYNAD ANOP
.* PROCESS SYNAD
         AIF   ('&SYNAD' EQ '')
         DC    X'00'              EXLSYNF   NOT PRESENT AND INACTIVE
         DC    XL4'00'            EXLSYNP   SYNAD ADDRESS
         AGO   .EXIT
         AEND
.*
         AIF   ('&SYNAD(1)' EQ '')
&SYNADDR SETC  '0'
         AELSE
&SYNADDR SETC  '&SYNAD(1)'
         AEND
.*
&SYNCNT  SETA  2
.SYNLOOP ANOP
         AIF   (&SYNCNT GT N'&SYNAD).SYNDUN
         AIF   ('&SYNAD(&SYNCNT)' EQ 'A')
&SYN_A   SETB  1
         AEND
         AIF   ('&SYNAD(&SYNCNT)' EQ 'N')
&SYN_N   SETB  1
         AEND
         AIF   ('&SYNAD(&SYNCNT)' EQ 'L')
&SYN_L   SETB  1
         AEND
         AIF   ('&SYNAD(&SYNCNT)' NE 'A' AND                           X
               '&SYNAD(&SYNCNT)' NE 'N' AND                            X
               '&SYNAD(&SYNCNT)' NE 'L')
         MNOTE 12,'SYNAD INVALID MODIFIER - &SYNAD(&SYNCNT)'
         AEND
&SYNCNT  SETA  &SYNCNT+1
         AGO   .SYNLOOP
.*
.SYNDUN  ANOP
         AIF   (&SYN_L)
         MNOTE 12,'SYNAD MODIFIER L IS NOT SUPPORTED'
         AEND
         AIF   (&SYN_A AND &SYN_N)
         MNOTE 12,'SYNAD MODIFIERS A AND N ARE MUTUALLY EXCLUSIVE'
         AEND
         AIF   (NOT(&SYN_A OR &SYN_N))
&SYN_A   SETB  1
         AEND
.*
         AIF   (&SYN_A)
         DC    X'C0'              EXLSYNF   PRESENT AND ACTIVE
         AELSE
         DC    X'80'              EXLSYNF   PRESENT AND INACTIVE
         AEND
         DC    AL4(&SYNADDR)      EXLSYNP   SYNAD ADDRESS
.*
.EXIT    ANOP
         DC    XL2'00'            ALIGN
         DS    0D
         EXLSTD
.*
         MEXIT
         MEND
