         MACRO
.*********************************************************************
.* z390 - Mainframe assembler emulator and run-time engine
.* Copyright (C) 2021 z390 Assembler LLC
.*
.* This file is part of z390.
.*
.* z390 is free software; you can redistribute it and/or modify
.* it under the terms of the GNU General Public License as published by
.* the Free Software Foundation; either version 2 of the License, or
.* (at your option) any later version.
.* z390 is distributed in the hope that it will be useful,
.* but WITHOUT ANY WARRANTY; without even the implied warranty of
.* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.* GNU General Public License for more details.
.*
.* You should have received a copy of the GNU General Public License 
.* along with this program; if not, see https://www.gnu.org/licenses.
.*********************************************************************
.* MAINTENANCE
.* 01/01/07 INITIAL CODING BY DON HIGGINS
.* 01/01/07 RPI 524 ADD TCPIO MACRO AND SVC X'7C' SUPPORT FOR SOCKETS
.* 02/21/07 RPI 554 ADD TCPIO NOWAIT OPTION FOR RECEIVE   
.*                  REMOVE LMAX AND USE LMSG FOR SEND/RECEIVE
.*                  ADD CONN= CONNECTION ID FOR SEND OR RECEIVE
.*                  (CONN ID IS RETURNED IN R2 BY SERVER RECEIVE)
.* 03/11/07 RPI 573 ALLOW CONN=-1 IN ADDITION TO DEFAULT CONN=-1
.* 08/21/07 RPI 670 ADD REG OPTIMIZATION TO HANDLE ANY REG SYMBOL
.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility
.*********************************************************************
.* SVC INPUT:
.*   R0 OP CODE 1=OPEN SERVER ON CURRENT HOST TO ACCEPT CONNECTIONS
.*     R1  PORT #
.*   R0 OP CODE 2=OPEN CLIENT CONNECTION TO ACTIVE SERVER ON HOST
.*     R1  PORT #
.*     R14 HOST IP ADDR NULL TERMINATED OR 0 FOR LOCAL HOST (HOST=*)
.*   R0 OP CODE 3=CLOSE
.*     R1  PORT #
.*   R0 OP CODE 4=SEND
.*     R1  PORT #
.*     R2  CONN # (ONLY REQUIRED FOR SERVER PORT DUE TO MULT. CONN)
.*     R14 MSG ADDRESS                                        
.*     R15 MSG LENGTH FOR SEND                                        
.*   R0 OP CODE 5= RECEIVE WITH OPTIONAL NOWAIT BIT 15
.*     R1  PORT # 
.*     R2  CONN # (IF -1 THEN NEXT MSG FROM ANY CONNECTION)
.*     R14 MSG ADDRESS                                        
.*     R15 MAX MESSAGE LENGTH FOR RECEOVE (ACTUAL RETURNED IN R1)
.* SVC OUTPUT
.*     R15 =  0 OK 
.*     R15 =  4 NOWAIT SPECIFIED ON RECEIVE AND NO MSG READY
.*     R15 = 12 ERROR OCCURRED (SEE ERROR MESSAGES)       
.*     R1  = ACTUAL MESSAGE LENGTH RETURNED FOR RECEIVE        
.*     R2  = CONNECTION ID FOR SERVER PORT RECEIVE (REQUIRED FOR SEND)
.*********************************************************************
&N       TCPIO &OP,         OPERATION - OPEN, CLOSE, SEND, RECEIVE     X
               &OPTION,     NOWAIT OPTION FOR RECIEVE                  X
               &MSG=,       RX/REG ADDRESS OF MESSAGE TO SEND/RECEIVE  X
               &LMSG=,      RX,REG MSG SEND LENGTH OR RECEIVE MAX LEN  X
               &HOST=,      RX/REG ADDR OF HOST IP ADDRESS (*=LOCAL)   X
               &PORT=,      PORT NUMBER FOR ALL OPERATIONS             X
               &CONN=-1     CONNECTION NUMBER FOR SERVER SEND/RECEIVE
         AIF   ('&OP' EQ 'OPEN').OPEN
         AIF   ('&OP' EQ 'CLOSE').CLOSE
         AIF   ('&OP' EQ 'SEND').SEND
         AIF   ('&OP' EQ 'RECEIVE').RECEIVE
         AGO   .ERR1
.OPEN    ANOP
         AIF   ('&HOST' NE '').OPEN_CLIENT
.OPEN_SERVER ANOP
         LA    0,1           R0 = TCPIO OP OPEN SERVER PORT ON HOST
         AGO   .PORT
.OPEN_CLIENT ANOP
         LA    0,2           R0 = TCPIO OP OPEN CLIENT PORT CONN7ECTION
         AIF   ('&HOST' EQ '*').HOST_LOCAL
         AIF   ('&HOST'(1,1) EQ '(').HOSTREG
         LA    14,&HOST      R14= TCPIO HOST IP NULL TERMINATED
         AGO   .PORT
.HOST_LOCAL ANOP
         LA    14,0          R14= 0 FOR LOCAL HOST
         AGO   .PORT
.HOSTREG ANOP
         ZOPTLR 14,&HOST(1)   R14= TCPIO HOST IP NULL TERMINATED
         AGO   .PORT         
.CLOSE   ANOP
         LA    0,3           R0 = TCPIO OP CLOSE PORT
         AGO   .PORT
.SEND    ANOP
         LA    0,4           R0 = TCPIO OP SEND MSG VIA PORT CONNECTION
         AGO   .CONN
.RECEIVE ANOP
         LA    0,5           R0 = TCPIO OP RECV MSG VIA PORT CONNECTION
         AIF   ('&OPTION' EQ '').CONN
         AIF   (UPPER '&OPTION' EQ 'NOWAIT').NOWAIT
         AGO   .ERR5
.NOWAIT  ANOP
         OILH  0,1           R0 BIT 15 FOR NOWAIT  RPI 554
.CONN    AIF   ('&CONN' EQ '').NOCONN 
         AIF   ('&CONN' EQ '-1').NOCONN
         AIF   ('&CONN'(1,1) EQ '(').CONNREG
         L     2,&CONN
         AGO   .MSG
.NOCONN  ANOP          ASSUME CLIENT PORT SEND 
         SR    2,2     (SVC WILL ISSUE ERROR IF SERVER PORT AND R2=-1)
         BCTR  2,0
         AGO   .MSG 
.CONNREG ANOP
         ZOPTLR 2,&CONN(1)
.MSG     ANOP
         AIF   ('&MSG' EQ '').ERR2
         AIF   ('&MSG'(1,1) EQ '(').MSGREG
         LA    14,&MSG
         AGO   .LMSG
.MSGREG  ANOP
         ZOPTLR 14,&MSG(1)
.LMSG    ANOP
         AIF   ('&LMSG' EQ '').ERR4
         AIF   ('&LMSG'(1,1) EQ '(').LMSGREG
         AIF   (T'&LMSG EQ 'N').LMSGLIT
         L     15,&LMSG
         AGO   .PORT
.LMSGLIT ANOP
         L     15,=F'&LMSG'
         AGO   .PORT
.LMSGREG ANOP
         ZOPTLR 15,&LMSG(1)
.PORT    ANOP
         AIF   ('&PORT' EQ '').ERR3
         AIF   ('&PORT'(1,1) EQ '(').PORTREG
         LA    1,&PORT
         AGO   .SVC
.PORTREG ANOP
         ZOPTLR 1,&PORT(1)
.SVC     ANOP
         SVC   X'7C' R0=OP(1-5) R1=PORT R14=HOST/MSG R15=LMSG
         MEXIT
.ERR1    MNOTE 12,'TCPIO - INVALID OP - OPEN, CLOSE, SEND, RECEIVE'
         MEXIT
.ERR2    MNOTE 12,'TCPIO - MISSING KEYWORD MSG= FOR SEND/RECV'
         MEXIT
.ERR3    MNOTE 12,'TCPIO - MISSING KEYWORD PORT= FOR SEND/RECV'
         MEXIT
.ERR4    MNOTE 12,'TCPIO - LMSG LENGTH FOR SEND/RECEIVE REQUIRED'
         MEXIT
.ERR5    MNOTE 12,'TCPIO - INVALID OPTION - &OPTION'
         MEXIT
         MEND
