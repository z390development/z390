.*********************************************************************
.* Copyright 2007 Automated Software Tools Corporation               *
.* This source code is part of z390 assembler/emulator package       *
.* The z390 package is distributed under GNU general public license  *
.* Author - Don Higgins                                              *
.* Date   - 04/19/07                                                 *
.* Modified by Melvyn Maltz                                          *
.* Date   - 02/16/16                                                 *
.*********************************************************************
.* 09/04/07 RPI 681 DEFINE ZDEFINE TO GENERATE VCDT CATALOG TABLE
.* 09/23/07 RPI 704 DEFINE VCLRCI OPTIONAL CONTROL INTERVAL SIZE
.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility
.* 07/17/10 RPI 865 add C'PATH' ID
<<<<<<< HEAD:mac/ZDEFINE.MAC
.* 02/16/16 zVSAM rewrite...SEE DEFINE.MAC for full details
.*********************************************************************
         MACRO
         ZDEFINE
         COPY  ZDEFINE.CPY       INCLUDE GLOBALS SET BY DEFINE
=======
.*********************************************************************
         MACRO
         ZDEFINE1
         COPY  ZDEFINE1.CPY      INCLUDE GLOBALS SET BY DEFINE
>>>>>>> main:mac/ZDEFINE1.MAC
         AIF   ('&CATALOG' NE '').GEN_VCDT
         MNOTE 12,'ZDEFINE MISSING DEFINE CATALOG NAME='
         MEXIT
*
* VCDT VSAM CATALOG DEFINITION TABLE
*
.GEN_VCDT ANOP
VCDT     CSECT
         DC    CL4'VCDT'      VCDTID   VSAM CATALOG DEFINITION TABLE ID
         DC    CL8'&CATALOG'  VCDTNAME CATALOG NAME
         DC    F'&CLR_TOT'    VCDTCLRT TOTAL CLR BASE CLUSTER ENTRIES
         DC    A(VCLR)        VCDTCLRA ADDR  CLR ENTRIES
         DC    F'&AIX_TOT'    VCDTAIXT TOTAL AIX ALTERNATE INDEXES
         DC    A(VAIX)        VCDTAIXA ADDR  AIX ALTERNATE INDEX TABLE
         DC    F'&PTH_TOT'    VCDTPTHT TOTAL PTH PATH ENTRIES
         DC    A(VPTH)        VCDTPTHA ADDR  PTH PATH TABLE
VCLR     CSECT , BASE CLUSTER TABLE ENTRIES
VCLRAIXS CSECT , BASE CLUSTER AIX UPGRADE ADDRESS LISTS
VCLRDSNS CSECT , BASE CLUSTER DSNAME'S (DEFAULT OR OVERRIDES)
VAIX     CSECT , ALTERNATE INDEX TABLE ENTRIES
VAIXDSNS CSECT , ALTERNATE INDEX DSNAME'S (DEFAULT OR OVERRIDES)
VPTH     CSECT , PATH TABLE ENTRIES
&CLR_CUR SETA  0
.GEN_CLR_LOOP ANOP
&CLR_CUR SETA  &CLR_CUR+1
         AIF   (&CLR_CUR GT &CLR_TOT).GEN_AIX
*
* VCLR VSAM BASE CLUSTER TABLE ENTRY
*
VCLR     CSECT
&CLR_NAME(&CLR_CUR) DS 0F
         DC    CL4'VCLR'                  VCLRID  BASE CLUSTER ID
         DC    CL8'&CLR_NAME(&CLR_CUR)'   VCLRNAME BASE CLUSTER NAME
         DC    CL4'&CLR_TYPE(&CLR_CUR)'   VCLRTYPE BASE CLUSTER TYPE
         DC    0XL4                       VCLRFLAG BASE CLUSTER OPTIONS
         DC    BL1'&CLR_VREC(&CLR_CUR)&CLR_REUSE(&CLR_CUR).0&CLR_SPAN(&-
               CLR_CUR)&CLR_KSDS(&CLR_CUR)&CLR_RRDS(&CLR_CUR)&CLR_ESDS(-
               &CLR_CUR)&CLR_LDS(&CLR_CUR)'
         DC    BL1'&CLR_DADJ(&CLR_CUR)&CLR_IADJ(&CLR_CUR).000000'
         DC    BL2'0'
         DC    F'&CLR_LAVG(&CLR_CUR)'     VCLRLAVG AVERAGE RCD LENGTH
         DC    F'&CLR_LMAX(&CLR_CUR)'     VCLRLMAX MAXIMUM RCD LENGTH
         DC    F'&CLR_KLEN(&CLR_CUR)'     VCLRKLEN KSDS PRI KEY LENGTH
         DC    F'&CLR_KOFF(&CLR_CUR)'     VCLRKOFF KSDS PRI KEY OFFSET
<<<<<<< HEAD:mac/ZDEFINE.MAC
         DC    A(&CLR_NAME(&CLR_CUR)_DTA) VCLRDTAA ADDR CLR DATA DSN
         DC    A(&CLR_NAME(&CLR_CUR)_IDX) VCLRIDXA ADDR CLR INDEX DSN
         DC    F'&CLR_DBS(&CLR_CUR)'      VCLRDBS  DATA BLOCKSIZE
         DC    F'&CLR_IBS(&CLR_CUR)'      VCLRIBS  INDEX BLOCKSIZE
         DC    AL1(&CLR_DCA(&CLR_CUR))    VCLRDCA  DATA CA PERCENT
         DC    AL1(&CLR_DCI(&CLR_CUR))    VCLRDCI  DATA CI PERCENT
         DC    AL1(&CLR_ICA(&CLR_CUR))    VCLRICA  INDEX CA PERCENT
         DC    AL1(&CLR_ICI(&CLR_CUR))    VCLRICI  INDEX CI PERCENT
.*
=======
         DC    A(&CLR_NAME(&CLR_CUR)_VES) VCLRVESA ADDR CLR DATA  DSN
         DC    A(&CLR_NAME(&CLR_CUR)_VX0) VCLRVX0A ADDR CLR INDEX DSN
         DC    A(&CLR_CI(&CLR_CUR))       VCLRCI   OPTIONAL CI SIZE
>>>>>>> main:mac/ZDEFINE1.MAC
VCLRAIXS CSECT
&CLR_NAME(&CLR_CUR)_AIX_UPGRADES DS 0F
&AIX_CUR SETA  0
.AIX_UPGRADE_LOOP ANOP
&AIX_CUR SETA  &AIX_CUR+1
         AIF   (&AIX_CUR GT &AIX_TOT).AIX_UPGRADE_END
         AIF   ('&CLR_NAME(&CLR_CUR)' EQ '&AIX_RELATE(&AIX_CUR)' AND &AX
               IX_UPGRADE(&AIX_CUR)).AIX_UPGRADE_LOOP
&CLR_AIX_UPGRADE(&CLR_CUR) SETA &CLR_AIX_UPGRADE(&CLR_CUR)+1
         DC    A(&AIX_NAME(&AIX_CUR))
         AGO   .AIX_UPGRADE_LOOP
.AIX_UPGRADE_END ANOP
<<<<<<< HEAD:mac/ZDEFINE.MAC
.*
=======
>>>>>>> main:mac/ZDEFINE1.MAC
VCLR     CSECT
         DC    F'&CLR_AIX_TOT(&CLR_CUR)'  VCLRAIXT TOTAL UPGRADE AIX'S
         DC    A(&CLR_NAME(&CLR_CUR)_AIX_UPGRADES) VCLRAIXA ADDR AIX'S
.*
VCLRDSNS CSECT
         AIF   (&CLR_DTA(&CLR_CUR) EQ '')
            :&CLR_NAME(&CLR_CUR)_DTA DC X'00' NULL DTA DSNAME
         AELSE
            :&CLR_NAME(&CLR_CUR)_DTA DC C'&CLR_DTA(&CLR_CUR)',X'00' DTA DSNAME
         AEND
         AIF   (&CLR_IDX(&CLR_CUR) EQ '')
            :&CLR_NAME(&CLR_CUR)_IDX DC X'00' NULL IDX DSNAME
         AELSE
            :&CLR_NAME(&CLR_CUR)_IDX DC C'&CLR_IDX(&CLR_CUR)',X'00' IDX DSNAME
         AEND
         AGO   .GEN_CLR_LOOP
.*
.GEN_AIX ANOP
&AIX_CUR SETA  0
.GEN_AIX_LOOP ANOP
&AIX_CUR SETA  &AIX_CUR+1
         AIF   (&AIX_CUR GT &AIX_TOT).GEN_PTH
*
* CLR VSAM ALTERNATE INDEX TABLE ENTRY
*
VAIX     CSECT
&AIX_NAME(&AIX_CUR) DS 0F
         DC    CL4'VAIX'                  VAIXID
         DC    CL8'&AIX_NAME(&AIX_CUR)'   VAIXNAME ALTERNATE INDEX NAME
         DC    CL8'&AIX_RELATE(&AIX_CUR)' VAIXCLRN BASE CLUSTER NAME
         DC    0XL4                       VAIXFLAG AIX FLAGS
<<<<<<< HEAD:mac/ZDEFINE.MAC
         DC    BL1'&AIX_REUSE(&AIX_CUR)&AIX_UNIQUEKEY(&AIX_CUR)&AIX_UPG-
               RADE(&AIX_CUR)&AIX_SPAN(&AIX_CUR).0000'
         DC    BL1'&AIX_DADJ(&AIX_CUR)&AIX_IADJ(&AIX_CUR).000000'
         DC    BL2'0'
=======
         DC    BL1'&AIX_REUSE(&AIX_CUR)&AIX_UNIQUEKEY(&AIX_CUR)&AIX_UPGX
               RADE(&AIX_CUR).00000'
         DC    BL3'0'
>>>>>>> main:mac/ZDEFINE1.MAC
         DC    F'&AIX_KLEN(&AIX_CUR)'     VAIXKLEN AIX KEY LENGTH
         DC    F'&AIX_KOFF(&AIX_CUR)'     VAIXKOFF AIX KEY OFFSET
         DC    A(&AIX_NAME(&AIX_CUR)_DTA) VAIXDTAA ADDR AIX DATA DSN
         DC    A(&AIX_NAME(&AIX_CUR)_IDX) VAIXIDXA ADDR AIX INDEX DSN
         DC    A(&AIX_RELATE(&AIX_CUR))   VAIXRELA ADDR RELATED CLR/AIX
         DC    F'&AIX_DBS(&AIX_CUR)'      VAIXDBS  DATA BLOCKSIZE
         DC    F'&AIX_IBS(&AIX_CUR)'      VAIXIBS  INDEX BLOCKSIZE
         DC    AL1(&AIX_DCA(&AIX_CUR))    VAIXDCA  DATA CA PERCENT
         DC    AL1(&AIX_DCI(&AIX_CUR))    VAIXDCI  DATA CI PERCENT
         DC    AL1(&AIX_ICA(&AIX_CUR))    VAIXICA  INDEX CA PERCENT
         DC    AL1(&AIX_ICI(&AIX_CUR))    VAIXICI  INDEX CI PERCENT
VAIXDSNS CSECT
<<<<<<< HEAD:mac/ZDEFINE.MAC
         AIF   (&AIX_DTA(&AIX_CUR) EQ '')
            :&AIX_NAME(&AIX_CUR)_DTA DC X'00' NULL DTA DSNAME
         AELSE
            :&AIX_NAME(&AIX_CUR)_DTA DC C'&AIX_DTA(&AIX_CUR)',X'00' DTA DSNAME
         AEND
         AIF   (&AIX_IDX(&AIX_CUR) EQ '')
            :&AIX_NAME(&AIX_CUR)_IDX DC X'00' NULL IDX DSNAME
         AELSE
            :&AIX_NAME(&AIX_CUR)_IDX DC C'&AIX_IDX(&AIX_CUR)',X'00' IDX DSNAME
         AEND
=======
&AIX_NAME(&AIX_CUR)_VXN DC C'&AIX_VXN(&AIX_CUR)',X'00'
>>>>>>> main:mac/ZDEFINE1.MAC
         AGO   .GEN_AIX_LOOP
.*
.GEN_PTH ANOP
&PTH_CUR SETA  0
.GEN_PTH_LOOP ANOP
&PTH_CUR SETA  &PTH_CUR+1
         AIF   (&PTH_CUR GT &PTH_TOT).GEN_END
*
* PTH VSAM PATH TABLE ENTRY
*
VPTH     CSECT
&PTH_NAME(&PTH_CUR) DS 0F
         DC    C'PATH'                    PATH    ID   RPI 865
         DC    CL8'&PTH_NAME(&PTH_CUR)'   PTHNAME PATH NAME
         DC    CL8'&PTH_ENTRY(&PTH_CUR)'  PTHENTN BASE CLR OR AIX NAME
         DC    0XL4                       AIXFLAG PATH FLAGS
         DC    BL1'&PTH_AIXP(&PTH_CUR)&PTH_AIXU(&PTH_CUR).000000'
         DC    BL3'0'
         DC    A(&PTH_ENTRY(&PTH_CUR))    PTHENTA ADDR OF CLR OR AIX
         AGO   .GEN_PTH_LOOP
.GEN_END ANOP
         MEND
