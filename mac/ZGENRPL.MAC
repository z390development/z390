         MACRO
.*********************************************************************
.* z390 - Mainframe assembler emulator and run-time engine
.* Copyright (C) 2021 z390 Assembler LLC
.*
.* This file is part of z390.
.*
.* z390 is free software; you can redistribute it and/or modify
.* it under the terms of the GNU General Public License as published by
.* the Free Software Foundation; either version 2 of the License, or
.* (at your option) any later version.
.* z390 is distributed in the hope that it will be useful,
.* but WITHOUT ANY WARRANTY; without even the implied warranty of
.* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.* GNU General Public License for more details.
.*
.* You should have received a copy of the GNU General Public License 
.* along with this program; if not, see https://www.gnu.org/licenses.
.*********************************************************************
.* 09/14/07 RPI 682 INITIAL CODING TO GEN RPL AT R1 DON HIGGINS
.* 09/14/07 RPI 703 SKIP GENERATING ZERO VALUE ARGS                   
.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility
.*********************************************************************
         ZGENRPL &ACB=0,  VSAM ACCESS CONTROL BLOCK ADDRESS            X
               &AREA=0,   RECORD WORK AREA (DATA FOR MVE, ADDR FOR LOC)X
               &AREALEN=0, LENGTH OF AREA (MAX LRECL IF MVS, 4 FOR LOC)X
               &ARG=0,    KEY FIELD FOR KSDS ACCESS                    X
               &ECB=0,    ECB TO BE POSTED ON COMPLETION               X
               &KEYLEN=0, KEY LENGTH FOR GENERIC KEY SEARCH            X
               &OPTCD=,   OPTIONS (SEE SUPPORTED OPTIONS ABOVE)        X
               &RECLEN=0  RECORD LENGTH FOR VARIABLE LENGTH PUT
         AIF   (N'&SYSLIST EQ 0).NPOK
         MNOTE 12,'ZGENRPL UNSUPPORTED OPERANDS - &SYSLIST(1)'
         MEXIT
.NPOK    ANOP
.*
.* SET RPL ID,TYPE,LEN
.*
         MVC   RPLID-IHARPL(3,1),=AL1(0,10,RPLEND-IHARPL)
.*
.* SET RPL ECB
.*
         AIF   ('&ECB' EQ '0').END_ECB              RPI 703
         ZMODCB (1),RPLECB-IHARPL,&ECB,4
.END_ECB ANOP
.*
.* SET RPL KEYLEN
.*
         AIF   ('&KEYLEN' EQ '0').END_KEYLEN        RPI 703
         ZMODCB (1),RPLLKEY-IHARPL,&KEYLEN,4
.END_KEYLEN ANOP
.*
.* SET RPL ACB
.*
         AIF   ('&ACB' EQ '0').END_ACB              RPI 703
         ZMODCB (1),RPLACB-IHARPL,&ACB,4
.END_ACB ANOP
.*
.* SET RPL AREA
.*
         AIF   ('&AREA' EQ '0').END_AREA            RPI 703
         ZMODCB (1),RPLAREA-IHARPL,&AREA,4
.END_AREA ANOP
.*
.* SET RPL ARG
.*
         AIF   ('&ARG' EQ '0').END_ARG              RPI 703
         ZMODCB (1),RPLARG-IHARPL,&ARG,4
.END_ARG ANOP
.*
.* SET RPL OPTCD NON-ZERO FIELD
.*
         AIF   ('&OPTCD' EQ '').END_OPTCD
         GBLC  ZGENOPT1,&ZGENOPT2
         ZGENOPTD OPTCD=&OPTCD
         MVC   RPLOPTCD-IHARPL(2,1),=B'&ZGENOPT1&ZGENOPT2'
.END_OPTCD ANOP
.*
.* SET RPL RECLEN
.*
         AIF   ('&RECLEN' EQ '0').END_RECLEN        RPI 703
         ZMODCB (1),RPLLREC-IHARPL,&RECLEN,4
.END_RECLEN ANOP
.*
.* SET RPL AREALEN
.*
         AIF   ('&AREALEN' EQ '0').END_AREALEN      RPI 703
         ZMODCB (1),RPLLAREA-IHARPL,&AREALEN,4
.END_AREALEN ANOP
         MEND
