*********************************************************************
* z390 - Mainframe assembler emulator and run-time engine
* Copyright (C) 2021 z390 Assembler LLC
*
* This file is part of z390.
*
* z390 is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
* z390 is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License 
* along with this program; if not, see https://www.gnu.org/licenses.
***********************************************************************
* Author - Don Higgins                                                *
* 05/15/06 RPI 316 DEMO USE OF STRUCTURED PROGRAMMING MACROS
*********************************************************************
         PRINT NOGEN
         COPY  ASMMSP      COPY STRUCTURED MACROS FROM STRMAC\*.*
DEMOSTR1 SUBENTRY
         WTO   'DEMOSTR1 - DEMO STRUCTURED PROGAMMING MACROS'
         ZAP   PCOUNT,=P'1'
         DO    WHILE=(CP,PCOUNT,LT,=P'3')
               WTO '  WHILE LOOP TWO TIMES'
               AP    PCOUNT,=P'1'
         ENDDO
         ZAP   PCOUNT,=P'0'
         DO    UNTIL=(CP,PCOUNT,EQ,=P'3')
               AP    PCOUNT,=P'1'
               WTO '  UNTIL LOOP THREE TIMES'
         ENDDO
         IF    CP,PCOUNT,EQ,=P'3'
               WTO '  IF PCOUNT = 3'
         ENDIF
         IF    (CP,PCOUNT,EQ,=P'2')
               WTO '  IF PCOUNT = 2'
         ELSE
               WTO '  IF PCOUNT NE 2'
         ENDIF
         IF    (CP,PCOUNT,EQ,=P'2')
               WTO '  IF PCOUNT = 2'
         ELSEIF (CP,PCOUNT,EQ,=P'3')
               WTO '  ELSE IF PCOUNT EQ 3'
         ENDIF
         WTO   'DEMOSTR1 ENDING'
         SUBEXIT
         LTORG
PCOUNT   DC    P'0'
         END
