**********************************************************************
* z390 - Mainframe assembler emulator and run-time engine
* Copyright (C) 2021 z390 Assembler LLC
*
* This file is part of z390.
*
* z390 is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
* z390 is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License 
* along with this program; if not, see https://www.gnu.org/licenses.

         TITLE 'STDDEVLB.MLC - Calc BFP 128 Bit Standard Deviation'
*
* Program ID.  STDDEVLB.MLC
* Author.      Don Higgins.
* Date.        06/20/07.
*
STDDEV   SUBENTRY          SAVE REGS AND DEFINE BASE REG
         COPY  ASMMSP      STRUCTURED PROGRAMMING MACRO LIBRARY
         CALL  STDDEVLB,(LBX,N,LBSD)  CALCULATE STANDARD DEVIATION
         IF    (CHI,R15,NE,0)         ABORT IF RC NE 0
               WTO 'CALCLBSD RETURN CODE ERROR - ABORTING'
               ABEND 111,DUMP
         ENDIF
         CTD   CTD_LB,IN=LBSD,OUT=DLBSD,LINKAGE=SVC DISPLAY STD. DEV.
         WTO   MF=(E,WTOMSG)
         SUBEXIT           RESTORE REGS AND EXIT
         EQUREGS REGS=GPR,TYPE=DEC  EQU'S FOR R0-R15
         EQUREGS REGS=FPC,TYPE=DEC  EQU'S FOR F0-F15
         LTORG
LBX      DC    LB'1,2,3,6' BINARY EXTENDED PRECISION (BFP) ARRAY 
N        DC    F'4'        INTEGER NUMBER OF ARRAY ELEMENTS
LBSD     DC    LB'0'       STANDARD DEVIATION BFP VALUE
WTOMSG   DC    AL2(WTOEND-*,0),C'STANDARD DEVIATION ='
DLBSD    DC    CL45' '     STANDARD DEVIATION IN SCIENTIFIC NOTATION 
WTOEND   EQU   *
         TITLE 'STDDEVLB - CALC BFP 128 BIT STANDARD DEVIATION'
STDDEVLB SUBENTRY
*
* CALCULATE BFP 128 BIT STANDARD DEVIATION FOR ARRAY OF BFP ELEMENTS
*
* CALL PARAMETERS:
*
*  1 = INPUT  ADDRESS OF BFP ARRAY ELEMENTS (16 BYTE BFP LB FORMAT)
*  2 - INPUT  FULL WORD ARRAY ELEMENT COUNT (MUST BE >= 1)
*  3 - OUTPUT STANDARD DEVIATION IN 16 BYTEBFP LB FORMAT
*
* RETURN CODES:
*
*   0 - STANDARD DEVIATION STORED SUCCESSFULLY IN PARAMETER 3
*  16 - ELEMENT COUNT LESS THAN 1 (STD.DEV. UNDEFINED)
*
*
* CALCULATE BFP LBXM MEAN = (SUM X(I))/N AND SAVE IN F4+F6
*
         LM    R3,R5,0(R1) R3=A(ARRAY) R4=A(N) R5=A(LBSD)
         L     R4,0(R4)    R4=N ELEMENT COUNT
         LR    R6,R3       R6=AARRY ELEMENT ADDRESS
         LR    R7,R4       R7=ELEMENTS TO PROCESS IN LOOP         
         IF    (CHI,R7,LT,1)
               SUBEXIT RC=16  EXIT WITH RC=16 IF COUNT < 1
         ENDIF
         STFPC  R8      SAVE FPC IN R8
         LR     R1,R8
FPC_MASK_UNF EQU X'01000000' BFP UNDERFLOW MASK BIT
         N      R1,=A(X'FFFFFFFF'-FPC_MASK_UNF)  TURN OFF UNDERFLOW
         LFPC   R1
         SXBR  F4,F4       F4+F6 = SUM X(I) TO CALC MEAN
         DO    WHILE=(CHI,R7,GT,0)
               LD  F1,0(R6) F1+F3 = ELEMENT
               LD  F3,8(R6)
               AXBR F4,F1  ADD ELEMENT TO SUM
               AHI R6,16   NEXT ELEMENT
               AHI R7,-1   REDUCE ELEMENTS REMAINING
         ENDDO
         CXFBR F1,R4       F1+F3 = N
         DXBR  F4,F1       F4+F6 = F4+F6 / F1+F3 = BFP LB MEAN
*
* DISPLAY MEAN FOR DEBUGGING PURPOSES
*
         STD   F4,LBXM                 
         STD   F6,LBXM+8
         CTD   CTD_LB,IN=LBXM,OUT=DLBXM,LINKAGE=SVC DISPLAY STD. DEV.
         WTO   MF=(E,WTOXM)
*
* CALCULATE SUM OF VARIANCE SQUARED IN F0+F2
*       
         LR    R6,R3       R6 = ADDRESS FIRST ARRAY ELEMENT
         LR    R7,R4       R7 = ELEMENTS TO PROCESS IN LOOP
         SXR   F0,F0       F0+F2 = (SUM X(I)-MEAN)**2
         DO    WHILE=(CHI,R7,GT,0)
               LD  F1,0(R6) F1+F3 = BFP LB ELEMENT
               LD  F3,8(R6)
               SXBR F1,F4  SUBTRACT MEAN
               MXBR F1,F1  SQUARE   DIFF
               AXBR F0,F1  ADD      DIFF * DIFF
               AHI R6,16   NEXT ELEMENT
               AHI R7,-1   REDUCE ELEMENTS REMAINING
         ENDDO
         CXFBR F1,R4       F1+F3 = N
         DXBR  F0,F1       F0+F2 = F0+F2 / F1+F3 = (SUM DIFF*DIFF)/N
*
* DISPLAY (SUM OF VARIANCE SQUARED)/N FOR DEBUGGING PURPOSES
*
         STD   F0,LBXV2    DSHX2
         STD   F2,LBXV2+8
         CTD   CTD_LB,IN=LBXV2,OUT=DLBV2,LINKAGE=SVC DISPLAY (SUM V2)/N
         WTO   MF=(E,WTOV2)
*
* CALCULATE STANDARD DEVIATION
*
         SQXBR F0,F0     CALC SQRT SUM OF VAR**2 IN F0+F2
         STD   F0,0(R5)  STORE F0+F2 LB STANDARD DEVIATION RESULT
         STD   F2,8(R5)
         LFPC  R8        RESTORE FPC REG
         SUBEXIT RC=0
LBXM     DS    LB        VARIANCE FOR DEBUG DISPLAY
LBXV2    DS    LB        (SUM DIFF*DIFF)/N FOR DEBUG DISPLAY
WTOXM    DC    AL2(WTOXMEND-*,0),C'MEAN               ='
DLBXM    DC    CL45' '     MEAIN IN SCIENTIFIC NOTATION 
WTOXMEND EQU   *
WTOV2    DC    AL2(WTOV2END-*,0),C'SUM VAR. SQUARED   ='
DLBV2    DC    CL45' '     MEAIN IN SCIENTIFIC NOTATION 
WTOV2END EQU   *
         LTORG
         END
