**********************************************************************
* z390 - Mainframe assembler emulator and run-time engine
* Copyright (C) 2021 z390 Assembler LLC
*
* This file is part of z390.
*
* z390 is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
* z390 is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License 
* along with this program; if not, see https://www.gnu.org/licenses.
**********************************************************************
* 04/08/85 CODED
* 04/28/85 ADD DISPLAY OF DATE, TIME, INSTRUCTION COUNTER, INS/SEC
* 01/01/87 CHANGE SVC 16 TO USE CONTENTS OF R1 FOR COUNT IN R2.0
* 10/06/09 UPDATE TO RUN ON Z390
**********************************************************************
         TITLE 'PET - PRINT ELAPSED TIME IN SECONDS SINCE LAST CALL'
PET      SUBENTRY
	L     R15,=V(DAT)       DISPLAY DATE AND TIME
	BALR  R14,R15
	USING *,R14
         TIME  INS               R1=64 BIT INSTRUCTION COUNTER
	LR    R0,R1
	L     R1,INSCOUNT
	ST    R0,INSCOUNT       SAVE LAST INSTR. COUNT
	CVD   R0,PWORK
	MVC   DCOUNT,MASKCNT
	ED    DCOUNT,PWORK+4
         WTO   MF=(E,DCNTMSG)
	SR    R0,R1
	ST    R0,INSDIFF        SAVE TOTAL SINCE LAST CALL
         TIME  BIN               REPLACE CALL TIMER TO GET R0=0.01 SEC
	L     R1,TSAVE
	ST    R0,TSAVE         SAVE CURRENT TIMER VALUE IN 100TH SEC.
	LTR   R1,R1
	BZR   R14              EXIT NOW IF FIRST CALL
	SR    R0,R1
	ST    R0,SEC100        SAVE ELAPSED TIME IN 100TH SEC
	CVD   R0,PWORK
	MVC   DTIME,MASKSEC
	ED    DTIME,PWORK+4
	L     R1,INSDIFF
	MH    R1,=H'100'       SET R0-R1 = 100 * INSTRUCTIONS IN INTERVAL
	SR    R0,R0
	D     R0,SEC100        SET R1 = INSTRUCTIONS PER SECOND
	CVD   R1,PWORK
	MVC   DIPS,MASKCNT
	ED    DIPS,PWORK+4
         WTO   MF=(E,DTIMEMSG)
         SUBEXIT
R15      EQU   15
R14      EQU   14
R2       EQU   2
R1       EQU   1
R0       EQU   0
TSAVE    DC    F'0'
INSCOUNT DC    F'0'
INSDIFF  DC    F'0'
SEC100   DC    F'0'
PWORK    DC    D'0'
MASKSEC  DC    X'402020',C',',X'202120',C'.',X'2020'
MASKCNT  DC    X'4020',C',',X'202020',C',',X'202020'
DCNTMSG  DC    AL2(DCNTMSG_END-*,0),C' INSTRUCTION COUNTER ='
DCOUNT   DC    CL10' Z,ZZZ,ZZZ'
DCNTMSG_END EQU *
DTIMEMSG DC    AL2(DTIMEMSG_END-*,0),C' ELAPSED TIME ='
DTIME    DC    CL10' ZZ,ZZ9.99',C' SEC    INSTR/SEC = '
DIPS     DC    CL10' Z,ZZZ,ZZZ'
DTIMEMSG_END EQU *
         END
