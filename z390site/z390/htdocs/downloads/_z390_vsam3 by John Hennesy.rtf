{\rtf1\ansi\ansicpg1252\uc1\deff0{\fonttbl
{\f0\fnil\fcharset0\fprq2 Arial;}
{\f1\fswiss\fcharset0\fprq2 Arial;}
{\f2\froman\fcharset0\fprq2 Times New Roman;}
{\f3\fmodern\fcharset0\fprq1 Courier New;}
{\f4\fswiss\fcharset0\fprq0 Helvetica;}
{\f5\fmodern\fcharset0\fprq1 Lucida Console;}
{\f6\froman\fcharset2\fprq2 Symbol;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red255\green0\blue0;\red0\green0\blue255;\red255\green255\blue255;\red0\green128\blue128;\red0\green128\blue0;\red0\green255\blue255;\red0\green255\blue0;}
{\stylesheet{\s0\itap0\nowidctlpar\f0\fs24 [Normal];}{\*\cs10\additive Default Paragraph Font;}}
{\*\generator TX_RTF32 19.0.542.500;}
\paperw11906\paperh16838\margl1134\margt1134\margr1134\margb1134\deftab1134\widowctrl\lytexcttp\formshade\sectd
\titlepg\headery720\footery720\pgwsxn15840\pghsxn12240\marglsxn283\margtsxn1803\margrsxn283\margbsxn1803\lndscpsxn\pgbrdropt0 
{\header\pard\itap0\nowidctlpar\plain\f0\fs24\par}
{\footer\pard\itap0\nowidctlpar\plain\f0\fs24{\txfielddef{\*\txfieldstart\txfieldtype3\txfieldflags26}{\*\txfielddatadef\txfielddatatype3\txfielddata 00030001}{\*\txfieldtext 159{\*\txfieldend}}{\field{\*\fldinst{ PAGE \\* Arabic }}{\fldrslt{1}}}}\par}
{\headerf\pard\itap0\nowidctlpar\plain\f0\fs24\par}
{\footerf\pard\itap0\nowidctlpar\plain\f0\fs24\par}\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\par\par\par\par\tab\tab\tab\plain\f1\fs32\cf1 An Analysis of Don Higgins\par\tab\tab\tab Z390 VSAM\plain\f1\fs20\b\ul\cf1\page INDEX\par\par\plain\f1\fs20\i\cf1 INTRODUCTION\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 3\par OBSERVATIONS\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 4\par ACKNOWLEDGEMENT OF COPYRIGHT\tab\tab\tab\tab\tab\tab\tab\tab 18\par A summary of the ACB and RPL parameters and sub-parameters used by z390 vsam vz390.java.\tab 19\par Analysis of cur_rpl_fields that are updated during processing\tab\tab\tab\tab\tab\tab 22\par ACB MACRF in vz390.java\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 31\par RPL OPTCD in vz390.java \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 33\par MESSAGES in z390 vsam vz390.java\tab\tab\tab\tab\tab\tab\tab\tab\tab 35\par sz390.abort_error\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 36\par A summary of the error messages in vz390.java.\tab\tab\tab\tab\tab\tab\tab\tab 37\par The original unsummarised error message listing follows\tab\tab\tab\tab\tab\tab\tab 47\par reason codes specified in z290 vz390.java but not used\tab\tab\tab\tab\tab\tab\tab 62\par sz390.put_log\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 63\par Parameters passed to acb.mac\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 64\par Explanation of ACB MACRF sub-parameters\tab\tab\tab\tab\tab\tab\tab\tab 67\par Parameters passed to rpl.mac\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 70\par Explanation of RPL OPTCD sub-parameters\tab\tab\tab\tab\tab\tab\tab\tab 73\par An extract from the first of the IBM VSAM manuals SC26-7410-11\tab\tab\tab\tab\tab 78\par An extract from the second of the IBM VSAM manuals SC26-7408-10\tab\tab\tab\tab\tab 176\par ANALYSIS OF EXISTING TESTING\tab\tab\tab\tab\tab\tab\tab\tab\tab 374\par Tests in z390\\vsam\\demo mlc\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 374\par Tests in z390\\rt\\vsam\\test\\save\\ mlc\tab\tab\tab\tab\tab\tab\tab\tab\tab 377\par BAT files used to load the datasets in TESTCAT\tab\tab\tab\tab\tab\tab\tab\tab 380\par There are other BAT files that might be involved in the loading of KSDS and the creation of the\par variable length TF1 and TQ1\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 381\par THE 20 SPECIFIC TESTS FOLLOW\tab\tab\tab\tab\tab\tab\tab\tab\tab 479 \par\plain\f1\fs20\b\ul\cf1\par Finished on 14th December 2016 by JCLH\page INTRODUCTION\par\plain\f1\fs20\cf1\par This document was written primarily for myself, John Hennesy, to record my findings\par while investigating Don Higgins z390 vsam (vz390.java).\par\par It has taken me a calendar year in the production of this document, so it is inevitable that\par it contain errors, omissions, inconsistencies, misunderstandings and other assorted stuff-ups.\par\plain\f1\fs20\b\ul\cf1\par\plain\f1\fs20\cf1 My original intention was to extend my knowledge of java and vsam and all things z390\par by attempting to make the changes that Melvyn Maltz wanted done to vz390.java for zcics.\par\par So I cloned ez390/pz390/sz390/vz390 and added heaps of "System.out.println" lines\par so that I could "trace" the paths taken and see some of the values of the variables.\par\par I spent a long time reading and re-reading the code for the POINT macro, until I\par finally understood what it was doing and how it achieved it.\par\par I then set out to understand it better by testing it.\par\par So I created a simple KSDS with 7 keys and then cloned some assembler to directly\par POINT at each of the keys.\par\par I ,immediately, found 2 errors with the POINT macro.\par\par So I decided to do a thorough investigation of vz390, comparing it with IBM vsam.\par\par I, also, needed to look at the testing, that was in place, to see whether it was complete.\par\par\plain\f1\fs20\b\ul\cf1\page OBSERVATIONS\par\plain\f1\fs20\cf1\par My findings follow:-\par\par 1. z390 vsam does not support multiple concurrent usage of a single vsam sphere.\par\tab\par\tab So that precludes a single user from using that sphere within multiple concurrent processes.\par\tab And for multiple users from using that sphere within a single process each or within multiple concurrent processes.\par\tab Therefore the concept of sharing is not supported.\par\par\tab\tab Since there is only a single user for a single use, \par\tab\tab\tab\par\tab\tab\tab currently z390 vsam\par\par\tab\tab\tab\tab does not forget where it is positioned\par\tab\tab\tab\tab and thus there is no need for NSP.\par\par\tab\tab\tab\tab does not support concurrent requests.\par\par\tab\tab\tab\tab does not support a resource pool.\par\par\tab\tab\tab\tab\tab There is no need for SHRPOOL, BLDVRP, DLVRP, Hiperspace Buffers, LSR, GSR, and therefore NSR. .\par\tab\tab\tab\tab\par\tab\tab\tab\tab\tab\tab Since resources cannot be shared, there is no need for LEW or NLW, or WAITX or NWAITX.\par\par 2. Records are written immediately, there being no concept of write deferment.\par\par\tab There is no need to maintain multiple instances of buffers.\par\par\tab\tab There is no support of UBF and therefore no support of NUB.\par\tab\tab There is no need for BUFSP, BUFNI, BUFND.\par\par\tab\tab\tab I don't know whether\plain\f1\fs20\b\cf1  "\plain\f1\fs20 Obtaining Buffers Above 16 MB" has any relevance,\par\tab\tab\tab except that it would require 31 bit addressing. \plain\f1\fs20\cf1\par\par\tab There is no need for DFR and therefore no need for NFR.\par\par 3. Asynchronous processing is not supported.\par\par\tab There is no need for ASY and therefore no need for SYN.\par\par 4. There is no support for NRM. Although it is the default of NRM|AIX, where NRM means "\plain\f1\fs20 The object to be processed is the one named in the specified "ddname".\par The ACB macro supports DDNAME. The vsam code doesn't seem to support acb_macrf_aix, although the AIX should be available. This is a bit of a puzzle.\par\plain\f1\fs20\cf1\par 5. Emulation of IBM vsam architecture is not supported\par\par\tab Control Area, Control Interval, Control Interval Splits,, Free Space, CIDF,\par\tab RDF, Spanned Records, Data Stripimg, Data/Key Compression, Extended Format,\par\tab Simulated Access to Unix Files, VERIFY, CHECK, ENDREQ,  Sequence Set, Index Set, \par\tab Exit Lists, Automatic Upgrade of Alternate Key Structure,\par\par\tab\tab Since there is no CIDF/RDF, there would need to be some other mechanism for flagging deleted/erased records.\par\tab\tab The ERASE macro is not supported, but a variable-length record can change in length (ESDS/vRRDS/KSDS)...\par\tab\tab\par\tab\tab When this occurs the new VES record is added at EOF, the existing record is\par\par\tab\tab\tab "orphaned" (KSDS, vRRDS) by changing the value of the VES xrba in the VX0 index to point to the new VES record\par\par\tab\tab\tab left alone (ESDS) since the old VES record cannot be flagged as inactive\par\par\tab\tab\tab\tab In IBM vsam, a value of X'FF' is written in the first byte of the VES record\par\tab\tab\tab\tab to indicate that the record is inactive;.\par\par\tab\tab There is no method for reclaiming the inactive/orphaned space.\par\par\tab\tab\tab There is code in z390 vsam for Reuse but RST/NRS are not supported, so this is anomalous.\par\par\tab\tab\tab There won't be any empty slots in RRDS/vRRDS (see 27).\par\par\tab\tab ibm vsam maintains KSDS in key collating sequence using Control Interval, Free Space, CIDF, RDF, sequence set, index set\par\tab\tab since none of these is available to z390, it must maintain the same sequence via a different mechanism, which is VX0/KSIT/KSIR/AVL.\par\par\tab\tab\tab There is no need for SIS now and therefore no need for NIS.\par\par\tab\tab Since there are no Control Intervals, there is no support for CNV (or ICI or NCI)..\par\tab\tab\par\tab\tab There is no support on z390 vsam for DIR, for either ACB or RPL.\par\par\tab\tab z390 vsam has no means of Automatic Upgrade, the only method of creating/maintaining the AIX is via REPRO.\par\par 6. Various other IBM features are not supported\par\par\tab SMS, SMF, RACF, passwords, SRB or Cross-Memory Mode, SMB,\par\par 7. Data Type LDS is not supported\par\par 8. The following vsam Access method is not supported\par\par\tab Skip Sequential\par\par 9. There is no support for Enciphering/Deciphering for the protection of vsam Data Sets\par and therefore no need for any Header Data \par\par 10. There is no support for Multistring Processing\par\par\tab STRNO and BSTRNO are not supported\par\par 11. Page-fixing is not supported\par\par\tab There is no support for CFX and therefore no support for NFX.\par\par 12. z390 vsam doesn't support accessing KSDS via ADR..\par\par\plain\f1\fs20\cf2 Note to Self:\tab in Java\par\tab\tab if (A || B || C && D)\par\tab\tab should be read as\par\tab\tab if ((A) or (B) or (C and D))\par\tab\tab [See POINT with ESDS]\par\plain\f1\fs20\cf1\par 13. RPL LOC and MVE are not supported and neither is LAREA but AREA is\par\par 14, There is code for the POINT macro that should only be used when at the very beginning of the index (VX0) file, which\par is being used under other circumstances. In these cases, it POINTs at an incorrect record.\par\par\tab It may be that AIX processing is present in vz390 and I just haven't understood the code, maybe this seemingly\par\tab invalid code is used with this when there is a duplicate key\par\par 15. In z390 vsam, ESDS records may have a fixed length or a variable length. Variable length records have a 4-byte prefix\par and the ESDS has a 4-byte suffix, the prefix/suffix hold the length of the record. Fixed length records have neither. \par The prefix enables reading the file sequentially in a forward direction, whilst the suffix enables sequential reading in a backward direction.\par\par\tab The XRBA sub-parameter is only used with ESDS.\par\par\tab\tab rba/xrba is validated for fixed-length ESDS as being a multiple of vclr record length\par\par\tab\tab rba/xrba could be validated for variable-length ESDS by checking whether we can find prefix and suffix\par\tab\tab in the appropriate places\par\par\tab\tab\tab This is not done for GET\par\par\tab\tab\tab And cannot be done for POINT (since POINT doesn't actually get the record)\par\par 16. In z390 vsam, RRDS have fixed-length records, vRRDS have variable-length records and KSDS may have either\par fixed or variable-length records. Variable-length records have a 4-byte prefix being the length of the record.\par Fixed-length records don't have this prefix.\par\par 17. z390 vsam doesn't support the chaining of RPLs via RPLNEXT.\par\par 18. z390 vsam doesn't validate all combinations of sub-parameters between acb macrf and rpl optcd.\par\par\tab ACB and RPL should agree with regard to access options \par\tab so if RPL specifies SEQ then ACB should specify SEQ too\par\par\tab If we OPEN  an RRDS or a KSDS and we process it sequentially, it does\par\tab not require that we specify the KEY sub-parameter                                                                                                                                 ----\par\par\tab ACB and RPL should agree with regard to access options  \par\tab so if RPL specifies ADR then ACB should specify ADR too\par\par 19. RRDS/VRRDS are implemented on z390 vsam with indexes replacing "slots".\par And a VRRDS is an RRDS with variable-length records.\par\par\tab "empty slots" won't occur since records are always added at EOF and there is no erasure/deletion. (see 27)\par\par 20. z390 vsam does not currently support the ERASE macro.\par\par\tab Since we cannot delete a record, there, obviously, are no deleted records.\par\par\tab And we have no defined way of knowing how deleted records would be "flagged".\par\par\tab Of course, we can guess that ESDS might have low-values moved to the VES record (see above)'.\par\par\tab RRDS/vRRDS might have low-values moved to the VES record and zeroes moved to the VX0 record.\par\par\tab But with KSDS things start to get hard, because it's not just straight VES and VX0 records, but KSIT/KSIR.\par\tab And deleting a KSIR record is certainly non-trivial, in fact, it was this very point that made me abandon\par\tab this vsam model and move towards Melvyn's solution, very reluctantly.\par\par\tab We could set the VX0's pointer to the ves xrba to -1, indicating that the primary key points "into space".\par\par 21. In z390 vsam, changing the size of VES records is a problem,\par\par\tab When PUTting a variable-length record, it's length must be in the RPL RECLEN, which "fetch_rpl_fields" retrieves\par\tab and stores in cur_rpl_lrec. Which may subsequently be tested against an existing variable-length record's length prefix.\par\par\tab If "rewrite_ves_rec" detects a change in length of a variable-length record, it'll add the changed record\par\tab WITHOUT doing anything about the "old" record.\par\par\tab The old variable-length ESDS VES record will remain, since there's no way of marking it as inactive.\par\par\tab vRRDS VES records can be added with a different size but the "old" record isn't removed. It is orphaned.\par\par\tab variable-length KSDS VES records seem to be able to be added with a different size, but the "old" record isn't removed.\par\tab It becomes orphaned, when the VX0 index is updated to point to the new VES record.\par\par 22.  in z390 vsam, the VES records are kept in logical collating sequence in the KSDS\par but not in physical collating sequence. So processing the data component alone\par might not find the data in the sequence required, and it might find orphaned records.\par\par 23. on z390 vsam, can we PUT RRDS/vRRDS with an rrn beyond the EOF?\par\par\tab What does it do about any "empty slots" for rrn which are beyond the EOF" (see 27)\par\tab Does it create them before it creates the new record beyond them?\par\par\tab When we attempt to PUT RRDS with an rrn, it converts it to an xrba by \par\tab multiplying the rrn by 8. It then checks if the xrba is greater than the EOF.\par\tab If it is then it then adds the VES record to the EOF of the RRDS and updates the VX0.\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\tab The original rrn is effectively discarded, because the VES record is added\par\tab at the end of the VES file, not at the position pointed to by the rrn.\par\par\tab Although this rrn is not used, it is not reported as an error.\par\par 24. on z390 vsam, when OPTCD=LRD is specified for POINT or GET, then OPTCD=BWD should also be specified.\par\par 25. on ibm vsam, If the relative record number is greater than the highest existing record and OPTCD=KGE \par , EOD is returned. \par\par\tab On z390 vsam, If the relative record number is greater than the highest existing record \par\par\tab\tab we get an error of "rn_rba_not_rcd" if POINT.\par\par\tab\tab we get an error if GET KEY and RPL OPTCD=KGE\par\par\tab\tab we get an EOD if GET SEQ regardless whether KGE or not..\par\par 26. RBA's occupy 4 bytes which will address 4 gigabytes of file. I can't see the need for XRBA's.\par In tz390, the mx_file_size is 50 megabytes. So unless this value is overridden, then the maximum\par RBA/XRBA value is also 50 meg. So any check in vz390 against max_rba_size is pointless because\par there is also a check, at the same time, for being greater than max_file_size, too.\par\par 27. In z390 vsam java, the VX0, VXN, VES files are RandomAccessFile's.\par Which are treated as an array of bytes, which means that they can be expanded beyond the EOF.\par A new record doesn't have to be written immediately after the EOF, if the EOF was at relative record 10, \par we could write a new record at relative record 100, the intervening space would be filled by the java class.\par Thus we could create an RRDS/vRRDS other than in load sequence and there could be "empty" slots\par in an RRDS.\par\par 28. RPL OPTCD sub-parameters are subdivided into 10 groups of 2 or 3, \par thus \plain\f2\fs18\b [ADR|CNV\plain\f2\fs18 |\plain\f2\fs18\b\ul KEY\plain\f2\fs18\b ]\par [,DIR|\plain\f2\fs18\b\ul SEQ\plain\f2\fs18\b |SKP]\par [,\plain\f2\fs18\b\ul ARD\plain\f2\fs18\b |LRD]\par [,\plain\f2\fs18\b\ul FWD\plain\f2\fs18\b |BWD]\par [,ASY|\plain\f2\fs18\b\ul SYN\plain\f2\fs18\b ]\par [,NSP|\plain\f2\fs18\b\ul NUP\plain\f2\fs18\b |UPD]\par [,\plain\f2\fs18\b\ul KEQ\plain\f2\fs18\b |KGE]\par [,\plain\f2\fs18\b\ul FKS\plain\f2\fs18\b |GEN]\par [,LOC|\plain\f2\fs18\b\ul MVE\plain\f2\fs18\b ]\par [,NRI|CR]\par [,\plain\f2\fs18\b\ul RBA\plain\f2\fs18\b |XRBA].\par\plain\f1\fs20 IBM indicates default values by underlining the choice.\par\par\plain\f1\fs20\cf1 ZGENOPTD is missing processing for XRBA, thus\par\par .CHK17   AIF   (NOT(&RBA AND &XRBA)).CHKEND\par          MNOTE 12,'ZGENRPL RBA AND XRBA MUTUALLY EXCLUSIVE'\par\par ZGENOPTD, which is the MACro which handles RPL OPTCD, maintains 16 bits.\par which indicate which sub-parameters are set on and which are set off.\par They represent\par 1 LOC, 2 DIR, 3 SEQ, 4 SKP, 5 ASY, 6 KGE, 7 GEN, 8 XRBA\par 9 KEY, 10 ADR, 11 CNV, 12 BWD, 13 LRD, 14 WAITX, 15 UPD, 16 NSP.\par\par There is also code in ZGENOPTD which unsets bit flags where an alternate value is\par received within a group.\par\par The flags are only unset in MODCB, not in RPL or GENCB.\par\par The code was added by JM in 2009 to ZMODCB and ZGENOPTD and there are some\par errors in them, I think,\par\par\plain\f3\fs20\cf1 ZMODCB starts \par &N       ZMODCB &CB,         ACB/RPL ADDRESS OR (REG)                  X\par                &OFFSET,      OFFSET TO TARGET FIELD                    X\par                &SOURCE,      ABS VAL, RX ADDR, (REG), (S,SCON),(*,SCON)X\par                &LENGTH,      LENGTH FOR ABS VAL MODS LIKE MACRF/OPTCD  X\par                &CLEAN        MODCB CLEAN UP     jm2\par The last line should initialise &CLEAN=0\par\par ZGENOPTD has code\par\par &XADR     SETB  (&KEY OR &CNV)                              jm2\par &XARD     SETB  (&LRD)                                      jm2\par &XASY     SETB  (&SYN)                                      jm2\par &XBWD     SETB  (&FWD)                                      jm2\par &XCNV     SETB  (&KEY OR &ADR)                              jm2\par &XDIR     SETB  (&SEQ OR &SKP )                             jm2\par &XFKS     SETB  (&GEN)                                      jm2\par &XFWD     SETB  (&BWD)                                      jm2\par &XGEN     SETB  (&FKS)                                      jm2\par &XKEY     SETB  (&ADR OR &CNV OR &KGE)                      jm2\par &XKGE     SETB  (&KEY)                                      jm2\par &XLOC     SETB  (&MVE)                                      jm2\par &XLRD     SETB  (&ARD)                                      jm2\par &XMVE     SETB  (&LOC)                                      jm2\par &XNSP     SETB  (&NUP OR &UPD)                              jm2\par &XNUP     SETB  (&NUP OR &NSP)                              jm2\par &XNWAITX  SETB  (&WAITX)                                    jm2\par &XSEQ     SETB  (&DIR OR &SKP)                              jm2\par &XSKP     SETB  (&DIR OR &SEQ)                              jm2\par &XSYN     SETB  (&ASY)                                      jm2\par &XUPD     SETB  (&NUP OR &NSP)                              jm2\par &XWAITX   SETB  (&NWAITX)                                   jm2\par\plain\f1\fs20\cf1\par which should be\par\par\plain\f3\fs20\cf1 &XADR     SETB  (&KEY OR &CNV)                              jm2\par &XARD     SETB  (&LRD)                                      jm2\par &XASY     SETB  (&SYN)                                      jm2\par &XBWD     SETB  (&FWD)                                      jm2\par &XCNV     SETB  (&KEY OR &ADR)                              jm2\par &XDIR     SETB  (&SEQ OR &SKP)                              jm2\par &XFKS     SETB  (&GEN)                                      jm2\par &XFWD     SETB  (&BWD)                                      jm2\par &XGEN     SETB  (&FKS)                                      jm2\par\plain\f3\fs20\b\ul\cf1 &XKEY     SETB  (&ADR OR &CNV)       jclh\par &XKEQ     SETB  (&KGE)               jclh\par\plain\f3\fs20\cf1 &XKGE     SETB  (&KEQ)                                      jm2\par &XLOC     SETB  (&MVE)                                      jm2\par &XLRD     SETB  (&ARD)                                      jm2\par &XMVE     SETB  (&LOC)                                      jm2\par &XNSP     SETB  (&NUP OR &UPD)                              jm2\par\plain\f3\fs20\b\ul\cf1 &XNUP     SETB  (&UPD OR &NSP)       jclh\par\plain\f3\fs20\cf1 &XNWAITX  SETB  (&WAITX)                                    jm2\par &XSEQ     SETB  (&DIR OR &SKP)                              jm2\par &XSKP     SETB  (&DIR OR &SEQ)                              jm2\par &XSYN     SETB  (&ASY)                                      jm2\par &XUPD     SETB  (&NUP OR &NSP)                              jm2\par &XWAITX   SETB  (&NWAITX)                                   jm2\par\plain\f3\fs20\b\ul\cf1 &XXRBA    SETB  (&RBA)               jclh\par\plain\f1\fs20\cf1\par I have \plain\f1\fs20\b\cf1 bolded\plain\f1\fs20\cf1  (emboldened?) and \plain\f1\fs20\ul\cf1 underlined\plain\f1\fs20\cf1  the lines that I've changed or added,\par plus I've added my initials.\par\par Z390 vsam vz390 doesn't implement all of the OPTCD,\par missing are CNV. DIR, SKP, ARD, ASY, SYN, NSP, NUP, FKS, LOC, MVE,\par NRI.,CR.\par\par As you can see only half-ish of these are implemented in z390 vsam vz390.\par But all of them are implemented in z390 MACros RPL, GENCB, MODCB.\par\plain\f3\fs20\cf2\par\plain\f1\fs20\cf1 Because they are not implemented in vz390, they haven't been\par used in the Test Files (see the end of this document).\par Which means that certain flags which have been set on, cannot \par be switched off, and vice versa.\par Which means that inappropriate functioning could ensue.\par If the full set of sub-parameters were used in the testing, the problem\par would go away.\par\par Absence of all alternatives of sub-parameters in an RPL OPTCD group should never\par be taken to imply that the default value for that group is intended.\par\par Perhaps it would be a good idea to explicitly use all of the ACB MACRF and RPL OPTCD sub-parameters \par that would apply in IBM VSAM, even though they have no effect on z390 vsam. \par Although, there are some RPL groups in which no alternative is relevant,\par i.e. ASY|SYN, LOC|MVE, NRI|CR.\par\par ZGENOPTD should be changed to implement the defaults.\par\par 29. There is no error message when KSDS is used with ADR\par\par 30. There is confusion as to what constitutes an "rn_rba_not_rcd" \par as opposed to an "rn_inv_rba_req" error (see the error message summary below)\par\plain\f1\fs20\i\cf1\par\plain\f1\fs20\cf1 31\plain\f1\fs20\i\cf1 . \plain\f1\fs20\cf1 There is validation that the ESDS ves xrba, when it's a fixed-length, is a multiple of the record length.\par There is no check for the ESDS VES xrba when its a variable length data set. \par\par 32. When processing RRDS GET RPL via rpl_get_rrds_key, the variable \plain\f1\fs20\b\cf1 cur_vx0_xrba doesn't get initialised\par\plain\f1\fs20\cf1\par 33. When testing ESF1ERR1, I found a bug in vz390.java, in the POINT macro, which is storing the XRBA in cur_rpl_arg \par in both the left hand word and again in the right hand word, e.g. 0000050 00000050., \par\par I am including the relevant code from vz390.java and bolding and underlining and reddening the lines which cause the conflict,\page\par\par\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\par\tab\tab if ((cur_vclr_flag & vclr_flag_esds) != 0) \{\par\tab\tab\tab // ESDS POINT\par\tab\tab\tab if ((cur_rpl_opt & rpl_opt_lrd) != 0) \{\par\tab\tab\tab\tab // position to eof xrba\par\tab\tab\tab\tab cur_ves_xrba = sz390.tiot_eof_rba[cur_ves_tiot_index];\par\tab\tab\tab\} else \{\par\tab\tab\tab\tab if ((cur_rpl_opt & rpl_opt_xrba) != 0) \{\par\tab\tab\tab\tab\tab cur_ves_xrba = pz390.mem.getLong(cur_rpl_arg);\par\tab\tab\tab\tab\tab if (cur_ves_xrba == -1) \{\par\tab\tab\tab\tab\tab\tab // replace high value XRBA with eof xrba\par\tab\tab\tab\tab\tab\tab cur_ves_xrba = sz390.tiot_eof_rba[cur_ves_tiot_index];\par\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab if (tz390.opt_tracev) \{\par\tab\tab\tab\tab\tab\tab tz390.put_trace("VSAM POINT XRBA="\par\tab\tab\tab\tab\tab\tab\tab\tab + tz390.get_long_hex(cur_ves_xrba, 16));\par\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab if (cur_ves_xrba < 0\par\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba > sz390.tiot_eof_rba[cur_ves_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba > tz390.max_file_size // RPI 707\par\tab\tab\tab\tab\tab\tab\tab || ((cur_vclr_flag & vclr_flag_vrec) == 0 // RPI\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // 706\par\tab\tab\tab\tab\tab\tab\tab && cur_ves_xrba / cur_vclr_lrec * cur_vclr_lrec != cur_ves_xrba)) \{\par\tab\tab\tab\tab\tab\tab // return logical invalid rba request error\par\tab\tab\tab\tab\tab\tab set_feedback(pdf_def, rc_log, cmp_ves, rn_rba_not_rcd); // RPI\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // 697\par\tab\tab\tab\tab\tab\tab return;\par\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\plain\f1\fs20\b\ul\cf3 pz390.mem.putLong(cur_rpl_arg, cur_ves_xrba);\plain\f1\fs20\cf1\par\tab\tab\tab\tab\} else \{\par\tab\tab\tab\tab\tab cur_ves_xrba = pz390.mem.getInt(cur_rpl_arg);\par\tab\tab\tab\tab\tab if (cur_ves_xrba == -1) \{\par\tab\tab\tab\tab\tab\tab // replace high value XRBA with eof xrba\par\tab\tab\tab\tab\tab\tab cur_ves_xrba = sz390.tiot_eof_rba[cur_ves_tiot_index];\par\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab if (tz390.opt_tracev) \{\par\tab\tab\tab\tab\tab\tab tz390.put_trace("VSAM POINT  RBA="\par\tab\tab\tab\tab\tab\tab\tab\tab + tz390.get_hex((int) cur_ves_xrba, 8));\par\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab if (cur_ves_xrba < 0\par\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba > sz390.tiot_eof_rba[cur_ves_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba > tz390.max_file_size // RPI 707\par\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba > tz390.max_rba_size // RPI 707\par\tab\tab\tab\tab\tab\tab\tab || ((cur_vclr_flag & vclr_flag_vrec) == 0 // RPI\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // 706\par\tab\tab\tab\tab\tab\tab\tab && cur_ves_xrba / cur_vclr_lrec * cur_vclr_lrec != cur_ves_xrba)) \{\par\tab\tab\tab\tab\tab\tab // return logical invalid rba request error\par\tab\tab\tab\tab\tab\tab set_feedback(pdf_def, rc_log, cmp_ves, rn_rba_not_rcd); // RPI\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // 697\par\tab\tab\tab\tab\tab\tab return;\par\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\}\par\tab\tab\tab\tab\plain\f1\fs20\b\ul\cf3 pz390.mem.putInt(cur_rpl_arg, (int) cur_ves_xrba);\plain\f1\fs20\cf1\par\tab\tab\tab\}\par\cell\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par 34. OPTCD=(ADR) is ignored by the vsam command POINT.\par\par 35 There is no DEFINE or testing of a KSDS dataset with variable-length records, perhaps KSF2 should have been.\par\par 36 There is no testing of AIX.\par\par 37 There is little testing of the production of error messages from vz390.java and ZGENOPTD.MAC.\par\par 38 There is no testing of the deliberate wrong usage of GENCB, MODCB, SHOWCB, TESTCB, or of the usage of\par unsupported IBM features.\par 39 There is no testing of the updating of a variable-length ESDS dataset, where the record length is shortened\par or lengthened. Maybe, there ought to be some way of marking the "old" record as "replaced", and to detect and\par subsequently ignore it's presence.\par\par 40 There should be testing with a KSDS dataset of inserts with a key lower than the existing lowest key and with\par a key higher than the existing highest key.\par\par 41 There should be testing with RRDS/vRRDS where data is "inserted" between two existing rrn's.\par\par 42 There should be testing with.RRDS/vRRDS where data is added with an rrn higher than the existing highest rrn.\page\par\plain\f3\fs20\cf2\par Note to Self:\par\plain\f1\fs20\b\cf1\par\plain\f3\fs20\cf2\par z390 has a Service Routine called SYSTRACE\par This ought to be used in testing\par\par SYSTRACE\par Turn on and off tracing options.\par        SYSTRACE options\par        If options are omitted, all tracing is turned off.\par        The following options are allowed, others are ignored:\par              E   Instruction\par              G   GETMAIN/FREEMAIN \par              Q   QSAM I/O\par              T   TCPIO I/O\par              V   VSAM I/O\par         eg. Turn on all traces except QSAM\par                SYSTRACE EGTV \par\par This sets up tz390.opt_trace with a matching suffix as above.\par\plain\f1\fs20\cf1\par\plain\f1\fs20\b\ul\cf1\page ACKNOWLEDGEMENT OF COPYRIGHT\par\plain\f1\fs20\cf1\par I have included excerpts from 2 IBM VSAM manuals, namely  SC26-7410-11 and \plain\f1\fs20 SC26-7408-10.\par\par This was so that I could compare and contrast the implementation of IBM VSAM with z390 VSAM.\plain\f1\fs20\cf1\par\par\plain\f1\fs20\b\ul\cf1\page A summary of the ACB and RPL parameters and sub-parameters used by z390 vsam vz390.java.\par\plain\f1\fs20\cf1\par The cur_rpl_ fields are set up as the addresses of the rpl_ fields with their displacements.\par\par So if the rpl_ fields need to be updated, within the assembler, then the assembler fields are updated directly via their\par cur_rpl_ addresses.\par\par I was initially confused, as always, about the container and the contained, and didn't realise that the cur_rpl_ fields were addresses\par and not the fields themselves.\par\par OPEN\tab\tab\tab\tab ACB\tab DDNAME=ddname,MACRF(KEY) // RRDS\par\par POINT\tab ESDS\tab\tab\tab RPL\tab OPTCD(ADR,LRD,XRBA),ARG=rba/xrba\par\tab\tab\tab\tab returns \plain\f1\fs20 XRBA/RBA at address cur_rpl_arg\plain\f1\fs20\cf1\par\par POINT\tab RRDS\tab\tab\tab RPL\tab OPTCD(LRD),ARG=rrn\par\par POINT\tab KSDS\tab\tab\tab RPL\tab OPTCD(SEQ,LRD,KGE,KEQ,GEN,BWD),ARG=key,KEYLEN=length\par\par\par GET\tab\tab\tab\tab returns values at addresses cur_rpl_lrec and cur_rpl_area\par\par GET\tab ESDS\tab\tab\tab returns \plain\f1\fs20 XRBA/RBA at address cur_rpl_arg\par\par GET\tab ESDS\tab\tab\tab RPL\tab OPTCD(BWD)\par\pard\itap0\nowidctlpar\tab\tab            returns suffix to move backward at address cur_rpl_lrec\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1          \par GET\tab ESDS\tab\tab\tab ACB\tab MACRF(SEQ,ADR)\par\tab\tab\tab\tab RPL\tab OPTCD(SEQ,ADR),AREA=address\par\tab\tab\tab\tab RPL\tab OPTCD(KEY) \tab\tab\tab\tab\tab reported as Invalid RPL Option\par\tab\tab\tab\tab\par GET\tab ESDS\tab SEQ\tab\tab RPL\tab OPTCD(BWD,UPD)\par\par GET\tab ESDS\tab ADR\tab\tab RPL\tab OPTCD(XRBA),ARG=rba/xrba\par\par GET\tab RRDS\tab\tab\tab RPL\tab OPTCD(SEQ),AREA=address\par\tab\tab\tab\tab RPL\tab OPTCD(ADR)\tab\tab\tab\tab\tab reported as Invalid RPL Option\par\par\pard\itap0\nowidctlpar GET     RRDS    SEQ                 returns \plain\f1\fs20 rrn at address cur_rpl_arg\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\par GET\tab RRDS\tab SEQ\tab\tab RPL\tab OPTCD(BWD),ARG=rrn\par\par GET\tab RRDS\tab KEY\tab\tab RPL\tab OPTCD(KGE),ARG=rrn\par\par GET\tab KSDS\tab\tab\tab RPL\tab OPTCD(GEN)\par\tab\tab\tab\tab returns \plain\f1\fs20 full-length key at address cur_rpl_arg\plain\f1\fs20\cf1\par\par GET\tab KSDS\tab\tab\tab RPL\tab OPTCD(SEQ),AREA=address\par\par GET\tab KSDS\tab SEQ\tab\tab RPL\tab OPTCD(BWD)\par\par GET\tab KSDS\tab KEY\tab\tab RPL\tab OPTCD(GEN,KGE),KEYLEN=length\par\par\par PUT\tab\tab\tab\tab ACB\tab MACRF(OUT)\par\tab\tab\tab\tab RPL\tab RECLEN=reclen\tab\tab\tab\tab (should be provided for variable-length records)\par\par PUT\tab ESDS\tab\tab\tab returns \plain\f1\fs20 XRBA/RBA at address cur_rpl_arg\par\plain\f1\fs20\cf1\par PUT\tab ESDS\tab\tab\tab RPL\tab OPTCD(UPD,ADR,SEQ),AREA=address\par\tab\tab\tab\tab RPL\tab OPTCD(KEY)\tab\tab\tab\tab\tab reported as Invalid RPL Option\par\par PUT\tab RRDS\tab\tab\tab RPL\tab OPTCD(BWD),ARG=rrn,AREA=address\par\tab\tab\tab\tab RPL\tab OPTCD(ADR)\tab\tab\tab\tab\tab reported as Invalid RPL Option\par\par PUT\tab KSDS\tab\tab\tab RPL\tab OPTCD(UPD,SEQ),AREA=address\par\par\par ERASE\par\par CLOSE\par\par\par\par\par\pard\itap0\nowidctlpar\plain\f1\fs20\b\ul\cf1\page Analysis of cur_rpl_fields that are updated during processing\par\par\plain\f1\fs20\cf1 I have analysed vz390.java in respect of those cur_rpl_ fields that are updated during processing of various vsam calls.\par\plain\f1\fs20 So you'll see the cascading methods followed by an indication of the fields involved and sometimes the circumstances involved.\par\par\par A.\par (  \par     svc_rpl_get\par     (\par          rpl_get_esds_seq\par              set_rpl_arg_rba\par     )\par     svc_rpl_put\par     (\par          rpl_put_esds\par              set_rpl_arg_rba\par     )\par ) \par set_rpl_arg_rba\par store XRBA/RBA in cur_rpl_arg\par 01 store cur_ves_xrba in cur_rpl_arg as XRBA\par 02 store cur_ves_xrba in cur_rpl_arg as RBA\par\par\par B.\par (\par     svc_rpl_get\par     (\par         rpl_get_ksds_key\par     )\par )\par rpl_get_ksds_key\par if ((cur_rpl_opt & rpl_opt_gen) != 0) \{\par     store full-length key in cur_rpl_arg when GEN\par     03 store cur_rpl_area at offset of cur_vclr_koff\par          in\par          cur _rpl_arg for length of cur_vclr_klen\}\par\par C.\par (\par     svc_rpl_get\par     (\par         rpl_get_rrds_seq\par     )\par )\par rpl_get_rrds_seq\par convert index pointer into rrn and store in cur_rpl_arg\par 04 store (cur_vx0_xrba * 8) + 1\par    in\par    cur_rpl_arg (as int)\par 05 store (cur_vx0_xrba * 8) + 1\par    in\par    cur_rpl_arg (as int) \par\par\par D.\par (\par     svc_rpl_point\par )\par svc_rpl_point\par store XRBA/RBA in cur_rpl_arg\par 06 store cur_ves_xrba in cur_rpl_arg as XRBA\par 07 store cur_ves_xrba in cur_rpll_arg as RBA\par\par\par\page E.\par (   svc_rpl_get\par     (\par         rpl_get_esds_seq\par         (\par             read_ves_rec\par         )\par     )\par     (\par         rpl_get_esds_adr\par         (\par             read_ves_rec\par         )\par     )\par     (\par         rpl_get_ksds_seq\par         (\par             read_ves_rec\par         )\par     )\par     (\par         rpl_get_ksds_seq\par         (\par             read_ksir_cur_rec\par             (\par                 read_ves_rec\par             )\par         )\par     )            \par     (\par         rpl_get_ksds_key\par         (\par             read_ves_rec\par         )\par     )\par     (    \par         rpl_get_rrds_key\par         (\par             read_ves_rec\par         )\par     )\par     (\par         rpl_get_rrds_seq\par         (\par             read_ves_rec\par         )\par     )\par )\par read_ves_rec\par If variable-length record \{\par     store 4-byte prefix in RPLLREC\par     and remainder in RPLAREA\par     08 store vcb buffer in cur_rpl_lrec (as int)\}\par     09 store tiot buffer in cur_rpl_lrec (as int)\}\par     10 store cur_rpl_lrec in at rpl_lrec (as int)\par     11 store vcb buffer at cur_rpl_area\par          for length cur_rpl_lrec\}\par\par If fixed-length record \{\par     store catalog cluster lrec as RPLLREC\par     and vcb buffer as RPLAREA\par     12 store cur_vclr_lrec in cur_rpl_lrec\par     13 store vcb buffer at cur_rpl_area\par          for length cur_rpl_lrec\}\par\par\page\par F.\par (   \par     svc_rpl_put\par     (\par         rpl_put_esds\par         (\par             write_ves_rec\par         )\par     )\par     (            \par         rpl_put_rrds\par         (\par             write_ves_rec\par         )\par     )\par     (\par         rpl_put_rrds\par         (\par             rewrite_ves_rec\par             (\par                 write_ves_rec\par             )\par         )\par     )\par     (\par         rpl_put_ksds\par         (\par             update_ksds_rec\par             (\par                 rewrite_ves_rec\par                 (\par                     write_ves_rec\par                 )\par             )\par         )\par     )\par     (\par         rpl_put_rrds\par         (\par             add_ves_rec\par             (\par                 write_ves_rec\par             )\par         )\par     )\par     (\par         rpl_put_ksds\par         (\par             insert_ksds_rec\par             (\par                 add_ves_rec\par                 (\par                     write_ves_rec\par                 )\par             )\par         )\par     )\par     (\par         rpl_put_ksds\par         (\par             insert_ksds_rec\par             (\par                 insert_ksit\par                 (\par                     add_ves_rec\par                     (\par                         write_ves_rec\par                     )\par                 )\par                 insert_ksir\par                 (\par                     add_ves_rec\par                     (\par                         write_ves_rec\par                     )\par                 )\par             )\par         )\par     )\par )\par write_ves_rec\par fixed-length record\par 14 store cur_vclr_lrec in cur_rpl_lrec\par I wouldn't make too much about this, it's just resetting the record-length to the catalog value for fixed-length processing.\par So I'll ignore this.\par\par\page G.\par (\par     svc_rpl_get\par     (\par         rpl_get_esds_seq\par         (\par             set_esds_bwd_next\par         )\par     )\par )\par set_esds_bwd_next\par use suffix to move backward\par 15 store vcb buffer in cur_rpl_lrec (as int)\par 16 store tiot buffer in cur_rpl_lrec (as int)\par\page\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1 A full listing of vz390.java can be found at the end of this document which has the individual relevant  cur_rpl_ fields colour coded.\page\plain\f1\fs20\b\ul\cf1 ACB MACRF in vz390.java\par\plain\f1\fs20\cf1\par Defaults for ACB are KEY, NFX, DDN, NDF, SEQ, NCI, IN, NIS, NRM, NUB \par\par key        \tab OPEN (RRDS) \tab\tab\tab\tab\tab Open fails if RRDS and not KEY\par\par\plain\f1\fs20\cf3 ----If we OPEN  a RRDS or a KSDS and we process it sequentially, it does----\par ----not require that we specify the KEY sub-parameter----\par\plain\f1\fs20\cf1  \par adr        \tab GET_ESDS_ADR  (only with ESDS/(RPL_OPT_ADR and ACB_MACRF_ADR)\par\par cnv        \tab associated variable is defined, but not used\par\par seq        \tab GET_ESDS_SEQ (only with ESDS/(RPL_OPT_SEQ and ACB_MACRF_SEQ)\par\par dir        \tab\tab associated variable is defined, but not used\par\par in         \tab\tab associated variable is defined, but not used\par\par out        \tab PUT (without ACB_MACRF_OUT set, is an error RN_INV_RPL_OPT)\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\par ubf        \tab associated variable is defined, but not used\par\par skp        \tab associated variable is defined, but not used\par\par nlogon     \tab associated variable is defined, but not used\par\par rst        \tab\tab associated variable is defined, but not used\par\par dsn        \tab associated variable is defined, but not used\par\par aix        \tab\tab associated variable is defined, but not used\par\par lsr        \tab\tab associated variable is defined, but not used\par\par gsr        \tab associated variable is defined, but not used\par\par ici        \tab associated variable is defined, but not used\par\par dfx        \tab associated variable is defined, but not used\par\par sis        \tab associated variable is defined, but not used\par\par cfx        \tab associated variable is defined, but not used\par\par\plain\f1\fs20\b\ul\cf1\page RPL OPTCD in vz390.java \par\plain\f1\fs20\cf1\par Defaults for RPL are KEY, SEQ, ARD, FWD, SYN, NUP, KEQ, FKS, MVE\par  \par loc       \tab  \tab associated variable is defined, but not used\par\par dir        \tab\tab associated variable is defined, but not used\par\par seq\tab\tab\plain\f1\fs20\cf3 ----ACB and RPL should agree with regard to access options  ----\par\tab\tab ----so if RPL specifies SEQ then ACB should specify SEQ too----\par\plain\f1\fs20\cf1\par\tab         \tab GET_ESDS_SEQ (RPL_OPT_SEQ and ACB_MACRF_SEQ)\par\tab\tab GET_RRDS_SEQ (RPL_OPT_SEQ)\par\tab\tab GET_KSDS_SEQ (RPL_OPT_SEQ)\par\par\tab\tab RPL_PUT_ESDS (RPL_OPT_UPD and RPL_OPT_SEQ) \par\tab\tab\tab update cur_ves_xrba and sz390.tiot_eof_rba\par\tab\tab RPL_PUT_KSDS (RPL_OPT_SEQ) \par\tab\tab\tab update cur_ves_xrba and cur_vx0_xrba  \par\par skp        \tab associated variable is defined, but not used\par\par asy        \tab associated variable is defined, but not used\par\par kge        \tab GET/KSDS/RRDS, POINT/KSDS\par\par gen        \tab GET/KSDS, POINT/KSDS\par\par xrba       \tab GET/ESDS(ADR), POINT/ESDS\par\par key        \tab GET/ESDS (RPL_OPT_KEY) \par\tab\tab\tab error RN_INV_RPL_OPT\par\tab\tab PUT/ESDS (RPL_OPT_KEY) \par\tab\tab\tab error RN_INV_RPL_OPT\par\par adr\tab\tab\plain\f1\fs20\cf3 ----ACB and RPL should agree with regard to access options  ----\par\tab\tab ----so if RPL specifies ADR then ACB should specify ADR too----\par\plain\f1\fs20\cf1\tab\par\tab         \tab GET_ESDS_ADR (RPL_OPT_ADR and ACB_MACRF_ADR)\par\tab\tab GET/RRDS (RPL_OPT_ADR) \par\tab\tab\tab error RN_INV_RPL_OPT)\par\tab\tab PUT_ESDS ((RPL_OPT_ADR or RPL_OPT_UPD) and RPL_FLD_GETOK) \par\tab\tab\tab turn off successful get flag and set xrba to rewrite record\tab\par\tab\tab PUT_ESDS ((RPL_OPT_ADR or RPL_OPT_UPD) and !RPL_FLD_GETOK) \par\tab\tab\tab error RN_INV_ACC_TYPE\par\tab\tab PUT_RRDS (RPL_OPT_ADR) \par\tab\tab\tab error RN_INV_RPL_OPT\par\par cnv        \tab associated variable is defined, but not used\par\par bwd        \tab GET/ESDS(SEQ)/KSDS(SEQ)/RRDS(SEQ), PUT/RRDS\par\par lrd        \tab\tab POINT/ESDS/KSDS/RRDS\par\par waitx      \tab associated variable is defined, but not used\par\par upd        \tab GET_ESDS_SEQ (RPL_OPT_UPD) \par\tab\tab\tab set successful get flag for possible UPD put update\par\tab\tab PUT_ESDS ((RPL_OPT_UPD or RPL_OPT_ADR) and RPL_FLAG_GETOK) \par\tab\tab\tab turn off successful get flag and set xrba to rewrite record\par\tab\tab PUT_ESDS (RPL_OPT_UPD and RPL_OPT_SEQ) \par\tab\tab\tab update eof for sequential ESDS put\par\tab\tab PUT_KSDS (RPL_OPT_UPD and RPL_FLAG_GETOK) \par\tab\tab\tab update KSDS or insert KSDS or error RN_INV_ACC_TYPE\par\par nsp        \tab associated variable is defined, but not used \par\par\plain\f1\fs20\b\ul\cf1\page MESSAGES in z390 vsam vz390.java\plain\f1\fs20\cf1\par\par The java code that is presented for each error has been stripped of any reference to TRACEV and where possible redundant IF/code/ELSE has been converted to IF NOT.\par\par\plain\f1\fs20\b\ul\cf1\page sz390.abort_error\plain\f1\fs20\cf1\par 22\tab\tab\tab VSAM DCB/TIOT Corrupted\tab\tab\tab\tab\tab\tab\tab if ((cur_acb_oflgs & acb_oflgs_open) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_ves_tiot_index = pz390.mem.getInt\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ves_dcba + sz390.dcb_iobad) - 1;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_ves_tiot_index < 0)\par\par\page\plain\f1\fs20\b\ul\cf1 A summary of the error messages in vz390.java.\par\plain\f1\fs20\cf1\par The following represents the bulk of the messages and shows the reason code, it's explanation, the java methods in which it is reported and the java code\par that causes it's production.\par\plain\f1\fs20\b\ul\cf1\par set_feedback reason codes (see MVS 3.8 IDARMRCD.MAC) with vz390 method and java code precedimg feedback cause\par reason code\tab\tab explanation\tab\tab\tab\tab\tab\tab method\tab\tab java code\par\plain\f1\fs20\cf1\par rn_acb_not_open\tab z390 catch all\tab\tab\tab\tab\tab\tab get/put/erase/point\tab ACB OFLGS not set to 1 \par\par rn_inv_rpl_opt\tab\tab RPLINVP invalid RPL options\tab\tab\tab\tab svc_rpl_get\tab\tab ESDS GET RPL OPTCD(KEY)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ESDS GET RPL OPTCD(SEQ) \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab and \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ACB MACRF(not SEQ) \par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ESDS GET RPL OPTCD(ADR) \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab and \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ACB MACRF(not ADR) \par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ESDS GET RPL OPTCD(neither SEQ nor ADR)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RRDS GET RPL OPTCD(ADR)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab GET LDS\par\par  \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab svc_rpl_put\tab\tab PUT ACB OFLGS not set to 1 \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab or \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ACB MACRF(not OUT)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab PUT LDS\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rpl_put_esds\tab\tab ESDS PUT RPL OPTCD(KEY)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rpl_put_rrds\tab\tab RRDS PUT RPL OPTCD(ADR)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab svc_rpl_point\tab\tab POINT LDS\par\par\plain\f1\fs20\cf4 There is no error message for KSDS with ADR\par\plain\f1\fs20\cf1\par rn_eod\tab\tab\tab RPLEODER end of data\par\par rn_ok\tab\tab\tab ok\par\par rn_rba_not_rcd\tab\tab RPLNOREC record not found\tab\tab\tab\tab rpl_get_esds_adr\tab ESDS GET RPL OPTCD(ADR)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ves_xrba >= EOF or < 0) \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\b\i\ul\cf3 return logical invalid rba request error\par\plain\f1\fs20\b\i\ul\cf5\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\b\i\ul\cf1 This shows that there is confusion as to \par\plain\f1\fs20\b\i\ul\cf5\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\b\i\ul\cf1 what constitutes an "rn_rba_not_rcd" \par\plain\f1\fs20\b\i\ul\cf5\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\b\i\ul\cf1 as opposed to an "rn_inv_rba_req" error*\plain\f1\fs20\cf3\par\plain\f1\fs20\b\i\ul\cf3 The comment that attends the code for this error doesn't refer to this error  \par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab svc_rpl_point\tab\tab ESDS POINT \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ves_xrba < 0 or > EOF or > max_file_size \par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\cf4 which is 50 << 20 = 50 MEG\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab or\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (fixed-length record and not a multiple of \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab VCLR LREC)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\b\i\ul\cf3 return logical invalid rba request error*\plain\f1\fs20\cf1\par\plain\f1\fs20\b\i\ul\cf3 The comment that attends the code for this error doesn't refer to this error  \par\plain\f1\fs20\cf3\par This validates that the ESDS ves xrba, when it's a fixed-length, is a multiple of the record length.\par There is no check for the ESDS VES xrba when its a variable length data set. \par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RRDS/vRRDS POINT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_vx0_xrba > max_file_size or < 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\b\i\ul\cf3 return logical invalid rba request error*\par The comment that attends the code for this error doesn't refer to this error  \par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ves_rec\tab\tab GET \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab and \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab not RRDS \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab and \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ves_xrba >= EOF or < 0)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\cf6 when RRDS/vRRDS either EOD or different error \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab msg\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_ves_rec\tab\tab PUT (cur_ves_xrba > max_file_size or < 0)\par\par rn_inv_rba_req\tab\tab RPLINRBA RBA not a record address\tab\tab\tab set_rpl_arg_rba\tab\tab store cur_ves_xrba as RBA or XRBA in RPLARG \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab and check limit \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\{cur_ves_xrba > max_file_size or < 0)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ves_xrba > max_file_size or < 0\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab or\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab > max_rba_size)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\cf4 which is 0x7fffffff = 2 GIG < 0\par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab set_ksds_next_index\tab KSDS (cur_vx0_xrba > max_file_size or < 0)\par\plain\f1\fs20\cf3 By what mechanism are we to validate a given RBA/XRBA for a KSDS\par accessed via ADR? There is no code in vz390 for KSDS with ADR\par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab get_rrds_ves_xrba\tab RRDS GET \{cur_rpl_arg < -1) \par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RRDS GET (cur_vx0_xrba > max_file_size or < 0) \par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RRDS GET (cur_ves_xrba > max_file_size or < 0)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ves_rec\tab\tab GET \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ves_xrba >= EOF or < 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RRDS\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RPL OPTCD(not SEQ) \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab return logical invalid rba request error\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\cf7 when not RRDS different error msg\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab when SEQ, then EOD\par\plain\f1\fs20\cf3 cur_rpl_opt for RRDS can be either 'key' or 'seq'\par here 'seq' would give EOD, whilst 'key' as above\par would give an error of "record not found"\par\plain\f1\fs20\cf1\tab\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_ves_cb\tab\tab PUT (cb_xrba > max_file_size)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ves_cb\tab\tab GET (cb_xrba > max_file_size)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksds_index\tab KSDS GET (cur_vx0_xrba + 8 > max_file_size)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksir_key\tab\tab KSDS GET \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ves_xrba + cur_vclr_koff > max_file_size)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_xrba_ptr\tab\tab GET (cur_vx0_xrba > max_file_size)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_ksds_index\tab KSDS PUT (cur_vx0_xrba + 8 > max_file_size) \par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_xrba_ptr\tab\tab PUT (xrba_index > max_file_size)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksir\tab\tab KSDS GET (cur_ksir_xrba < cur_ksit_xrba)\par\par rn_read_data_err\tab RPLRDERD data read error\tab\tab\tab\tab broken_ksir_link\tab method\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab display error message for KSIR broken links \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab and set feedback ves data error\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab find_ksir\tab\tab KSDS GET (prev_node_height != -1)\{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (prev_node_height != cur_node_height + 1)\par\par\par\plain\f1\fs20\cf4 JAVA uses TRY/CATCH structure to detect code that is in error\par due an user entering invalid data or a programmer's error or a\par hardware error\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ves_rec\tab\tab GET variable length record putting\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 4 length prefix into RPLLREC and the remainder\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab in RPLAREA\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab GET fixed length record\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ves_cb\tab\tab GET control block in VES at xrba into cb byte\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab array\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\tab\tab\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksir_key\tab\tab KSDS \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab GET KSIR key at cur_ksir_rec + cur_vclr_koff into\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_key\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab set_esds_bwd_next\tab ESDS GET previous record suffix record length\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab at cur xrba - 4 and update tiot\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur rec rba to rba - lrec - 8\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\plain\f1\fs20\cf3 When processing "bwd" it accesses the previous records' length.via it's suffix\par when it's a variable-length data set. Check whether it makes this distinction \par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksit\tab\tab KSDS GET KSIT into cb array and set cur_ksit \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab xrbas\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ksit_id != ksit_id_val)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab KSDS GET \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab not (read_ves_cb(cur_ksit_xrba, ksit_len))\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\cf6 read_ves_cb either retrieves from the buffer\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab or retrieves from the file\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab so if neither then error \par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksir\tab\tab KSDS GET \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (read_ves_cb(cur_ksir_xrba, ksir_len)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_ksir_id = cb.getInt(ksir_id)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ksir_id != ksir_id_val)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab KSDS GET \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab not (read_ves_cb(cur_ksir_xrba, ksir_len))\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\cf6\tab\tab read_ves_cb either retrieves from the buffer\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab or retrieves from the file\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab so if neither then error\par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab unbalanced_ksir_error\tab method\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab display unbalanced KSIR found\par\par rn_rcd_not_fnd\tab\tab RPLNOREC record not found\tab\tab\tab\tab rpl_get_ksds_key\tab KSDS GET RPL OPTCD(KEY)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (!find_ksds_key()) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\cf6\tab key not found - set "get not found" flag for possible\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab UPD insert\par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rpl_get_rrds_key\tab RRDS GET RPL \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab for open RRDS file \par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab Notes: \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 1  Read VX0 XRBA for relative record #\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RPL OPTCD(KGE) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab while (\plain\f1\fs20\b\cf1 cur_vx0_xrba\plain\f1\fs20\cf1  < EOF \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab and\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab !get_rrds_ves_xrba(true)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_vx0_xrba = cur_vx0_xrba + 8\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_vx0_xrba >= EOF)\par\plain\f1\fs20\b\cf3 cur_vx0_xrba hasn't been initialised\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RRDS GET RPL OPTCD(not KGE) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (!get_rrds_ves_xrba(true)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RRDS record not written or too big\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\cf6\tab "get_rrds_ves_xrba" checks the size of\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab the rrn passed in cur_rpl_arg or the rrn\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab when converted to an xrba is greater than\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab EOF\par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab svc_rpl_point\tab\tab KSDS POINT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RPL OPTCD(not LRD) \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (!find_ksds_key()) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RPL OPTCD(not KGE)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\cf6\tab\tab where POINTing at KSDS and cannot\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab find key and KGE has not been chosen\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab then it's an error\par\plain\f1\fs20\cf1\par rn_read_index_err\tab RPLRDERI index read error\tab\tab\tab\tab get_rrds_ves_xrba\tab RRDS GET (!read_xrba_ptr()) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab I/O error on index\par\plain\f1\fs20\cf7\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\cf6 where xrba is within limits and within file size\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab yet when an attempt is made to access index \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab buffer or file for that xrba a TRY FAILED occurs \par\tab\par\plain\f1\fs20\cf1\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksds_index\tab KSDS GET index entry with key at cur_vx0_xrba \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab and set cur_ves_xrba  and cur_key\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par rn_inv_acc_type\tab RPLINACC invalid RPL access for ACB MACRF\tab\tab rpl_put_esds\tab\tab ESDS PUT RPL OPTCD(not KEY)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab OPTCD(UPD or ADR) \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RPL FLAG NOT GETOK  \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab required GET not done successfully\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\cf6 presumably, one uses UPD with \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab SEQuential processing and not when\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab PUTting directly via ADR\par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rpl_put_ksds\tab\tab KSDS PUT RPL OPTCD(UPD) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RPL FLAG neither GETOK nor GETNF \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab required KSDS GET not done successfully\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab KSDS PUT RPL OPTCD(neither UPD nor SEQ) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab KSDS put requires UPD or SEQ\par\par rn_write_data_err\tab RPLWTERD data write error\tab\tab\tab\tab rpl_put_esds\tab\tab ESDS PUT RPL OPTCD(not UPD and is SEQ)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab update EOF for sequential ESDS PUT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rpl_put_ksds\tab\tab KSDS PUT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab update VES EOF for sequential KSDS PUT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab KSDS PUT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab update VX0 EOF for sequential KSDS PUT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rewrite_ves_rec\tab\tab RRDS/KSDS PUT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rewrite RRDS or KSDS record at cur_ves_xrba \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab and update index xrba if it changed due to\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab variable length change.\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab add_ves_rec\tab\tab RRDS/KSDS PUT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab add RRDS or KSDS record to VES and update\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab index XRBA address which may be in VX0 or in\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab VES KSIR\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab update VES end of file address\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par .\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_ves_rec\tab\tab PUT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write current RPL record in RPLAREA with length \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab RPLLREC to the VES base cluster data file at\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab specified xrba. \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab Notes: \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 1. Variable length records have 4 byte length\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab     preceding record. \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 2  ESDS variable length records also have 4 byte\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab     length following record to support BWD read\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab     backward option without any index. \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 3. Used by ESDS, RRDS, and KSDS when not\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab     inserted record\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write variable length record 4 byte prefix\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write VES variable prefix lrec\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write VES variable record\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write ESDS variable record suffix lrec used to read\par  \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab backward\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_ves_cb\tab\tab PUT Variable-length\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write control block in VES at xrba into cb byte\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab array \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par rn_dup_key\tab\tab RPLDUP attempt to write dup pri or unique aix key\tab rpl_put_ksds\tab\tab KSDS PUT RPL OPTCD(SEQ)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab KSDS duplicate primary key\par\plain\f1\fs20\cf3 PUTting SEQuentially and current primary key is equal to the last primary key\plain\f1\fs20\cf1\par\par rn_out_of_seq\tab\tab RPLSEQCK skip seq key out of sequence\tab\tab rpl_put_ksds\tab\tab KSDS PUT RPL OPTCD(SEQ)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab KSDS out of sequence primary key\par\plain\f1\fs20\cf3 PUTting SEQuentially and current primary key is less than last primary key\plain\f1\fs20\cf1\par\par rn_inv_rec_len\tab\tab RPLINLEN rec len > max or <> fixed len\tab\tab\tab read_ves_rec\tab\tab GET Variable-length\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read variable length record putting\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 4 length prefix into RPLLREC and the remainder\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab in RPLAREA\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab then\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_rpl_lrec < 1 or  > cur_vclr_lrec) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab prefix lrec invalid\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\plain\f1\fs20\cf6 where it's a variable-length record and\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab the retrieved prefix length value of the stored \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab record is less than 1 or greater than the catalog \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab logical record size,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab then it's an error\par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab GET ESDS\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (ver_rpl_lrec != cur_rpl_lrec) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab prefix lrec not equal suffix lrec\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab get_esds_bwd_next\tab ESDS GET RPL Variable-length \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read previous record suffix record length\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab at cur xrba - 4 and update tiot\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab then\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read variable record suffix length at xrba-4 to go \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab backward from buffer or file and set cur_rpl_lrec\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab then\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_rpl_lrec <= 0 || cur_rpl_lrec > cur_vclr_lrec)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\par rn_write_index_err\tab RPLWTERI index write erro\tab\tab\tab\tab read_xrba_ptr\tab\tab GET\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read VES xrba pointer in VX0 at cur_vx0_xrba \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab and set cur_ves_xrba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_ksds_index\tab KSDS PUT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write VES xrba and key from rpl area + koff - 8\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_xrba_ptr\tab\tab PUT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write VES record xrba pointer at VX0/VES(KSIR) \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab index xrba in and update cache for reuse\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab reuse_file\tab\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab reset file length and tiot_eof address for files being\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab reused either due to reuse option or REPRO SEQ\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab OUT options..\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\page\plain\f1\fs20\b\ul\cf1 The original unsummarised error message listing follows\par\plain\f1\fs20\cf1\par You don't have to read this. It is included to centralise the documentation.\par\par\plain\f1\fs20\b\ul\cf1 set_feedback reason codes (see MVS 3.8 IDARMRCD.MAC) with vz390 method and java code precedimg feedback cause\par reason code\tab\tab explanation\tab\tab\tab\tab\tab\tab method\tab\tab java code\par\par\plain\f1\fs20\cf1 rn_acb_not_open\tab z390 catch all\tab\tab\tab\tab\tab\tab get/put/erase/point\tab if ((cur_acb_oflgs & acb_oflgs_open) == 0) \par\par rn_inv_rpl_opt\tab\tab RPLINVP invalid RPL options\tab\tab\tab\tab svc_rpl_get\tab\tab // ESDS get\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if ((cur_rpl_opt & rpl_opt_key) != 0)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if ((cur_rpl_opt & rpl_opt_seq) != 0) \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not ((cur_acb_macrf & acb_macrf_seq) != 0) \par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if ((cur_rpl_opt & rpl_opt_adr) != 0\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not ((cur_acb_macrf & acb_macrf_adr) != 0) \par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab "unkown or unsupported operation"\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not RPL key, seq or adr\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // RRDS get\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if ((cur_rpl_opt & rpl_opt_adr) != 0)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab "LDS not supported"\par\par  \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab svc_rpl_put\tab\tab if ((cur_acb_oflgs & acb_oflgs_out) == 0\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || (cur_acb_macrf & acb_macrf_out) == 0)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab else "LDS not supported"\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rpl_put_esds\tab\tab if ((cur_rpl_opt & rpl_opt_key) != 0)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rpl_put_rrds\tab\tab if ((cur_rpl_opt & rpl_opt_adr) != 0)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab svc_rpl_point\tab\tab "LDS not supported"\par\par rn_eod\tab\tab\tab RPLEODER end of data\par\par rn_ok\tab\tab\tab ok\par\par rn_rba_not_rcd\tab\tab RPLNOREC record not found\tab\tab\tab\tab rpl_get_esds_adr\tab if (cur_ves_xrba >= sz390.tiot_eof_rba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab [cur_ves_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba < 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // return logical invalid rba request error\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab svc_rpl_point\tab\tab // ESDS POINT\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_ves_xrba < 0\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba > sz390.tiot_eof_rba\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab [cur_ves_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba > tz390.max_file_size \tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || ((cur_vclr_flag & vclr_flag_vrec) == 0 \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab && cur_ves_xrba / cur_vclr_lrec * cur_vclr_lrec !=\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_ves_xrba)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // return logical invalid rba request error\par\plain\f1\fs20\cf3 This validates that the ESDS ves xrba, when it's a fixed-length, is a multiple of the record length.\par There is no check for the ESDS VES xrba when it's a variable length data set. \par\plain\f1\fs20\cf1\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_ves_xrba < 0\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba > sz390.tiot_eof_rba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab [cur_ves_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba > tz390.max_file_size \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba > tz390.max_rba_size \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || ((cur_vclr_flag & vclr_flag_vrec) == 0 \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab && cur_ves_xrba / cur_vclr_lrec * cur_vclr_lrec !=\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_ves_xrba)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // return logical invalid rba request error\par\plain\f1\fs20\cf3 This is the same as above\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab //RRDS/VRRDS\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_vx0_xrba > tz390.max_file_size\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_vx0_xrba < 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // return logical invalid rba request error\par\tab\tab\tab\tab\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ves_rec\tab\tab if (cur_ves_xrba >= sz390.tiot_eof_rba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ves_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba < 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not ((cur_vclr_flag & vclr_flag_rrds) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_ves_rec\tab\tab if (cur_ves_xrba > tz390.max_file_size \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba < 0)\par\par rn_inv_rba_req\tab\tab RPLINRBA RBA not a record address\tab\tab\tab set_rpl_arg_rba\tab\tab if ((cur_rpl_opt & rpl_opt_xrba) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_ves_xrba > tz390.max_file_size \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba < 0)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_ves_xrba > tz390.max_file_size\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba > tz390.max_rba_size \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba < 0\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab set_ksds_next_index\tab if (cur_vx0_xrba > tz390.max_file_size \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_vx0_xrba < 0)\par\plain\f1\fs20\cf3 By what mechanism are we to validate a given RBA/XRBA for a KSDS\par accessed via ADR? There is no code in vz390 for KSDS with ADR\par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab get_rrds_ves_xrba\tab if (key) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab long rrn = (long) pz390.mem.getInt(cur_rpl_arg)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if  (rrn < -1) \par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_vx0_xrba > tz390.max_file_size \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_vx0_xrba < 0) \par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_ves_xrba > tz390.max_file_size \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba < 0)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ves_rec\tab\tab if (cur_ves_xrba >= sz390.tiot_eof_rba\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ves_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || cur_ves_xrba < 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if ((cur_vclr_flag & vclr_flag_rrds) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not ((cur_rpl_opt & rpl_opt_seq) != 0) \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // return logical invalid rba request error\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab [cur_rpl_opt for RRDS can be either 'key' or 'seq'\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab here 'seq' would give EOD, whilst 'key' as above\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab would give an error of "record not found"]\par\tab\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_ves_cb\tab\tab if (cb_xrba > tz390.max_file_size)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ves_cb\tab\tab if (cb_xrba > tz390.max_file_size)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksds_index\tab if (cur_vx0_xrba + 8 > tz390.max_file_size)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksir_key\tab\tab cur_ves_xrba = cur_ves_xrba + cur_vclr_koff;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_ves_xrba > tz390.max_file_size)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_xrba_ptr\tab\tab if (cur_vx0_xrba > tz390.max_file_size)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_ksds_index\tab if (cur_vx0_xrba + 8 > tz390.max_file_size) \par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_xrba_ptr\tab\tab if (xrba_index > tz390.max_file_size)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksir\tab\tab if (cur_ksir_xrba < cur_ksit_xrba) \par\par rn_read_data_err\tab RPLRDERD data read error\tab\tab\tab\tab broken_ksir_link\tab method\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab display error message for KSIR broken links and set feedback VES data error\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab find_ksir\tab\tab if (prev_node_height != -1)\{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (prev_node_height != cur_node_height + 1)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ves_rec\tab\tab // read variable length record putting\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // 4 length prefix into RPLLREC and the remainder\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // in RPLAREA\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // read fixed length record\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ves_cb\tab\tab // read control block in VES at xrba into cb byte\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // array Notes\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\tab\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksir_key\tab\tab // read ksir key at cur_ksir_rec + cur_vclr_koff into\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // cur_key\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab set_esds_bwd_next\tab // read prev rcd suffix record length\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // at cur xrba - 4 and update tiot\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // cur rec rba to rba - lrec - 8\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\plain\f1\fs20\cf3 When processing "bwd" it accesses the previous records' length.via it's suffix\par when it's a variable-length data set. Check whether it makes this distinction \par\plain\f1\fs20\cf1\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksit\tab\tab // read KSIT into cb array and set cur_ksit xrbas\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_rpl_flag = cur_rpl_flag | rpl_flag_ksit\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_ksit_xrba = xrba_max_pos & cur_ves_xrba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (read_ves_cb(cur_ksit_xrba, ksit_len)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_ksit_id = cb.getInt(ksit_id)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_ksit_id != ksit_id_val)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not (read_ves_cb(cur_ksit_xrba, ksit_len))\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksir\tab\tab if (read_ves_cb(cur_ksir_xrba, ksir_len)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_ksir_id = cb.getInt(ksir_id)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_ksir_id != ksir_id_val)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not (read_ves_cb(cur_ksir_xrba, ksir_len))\par  \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab unbalanced_ksir_error\tab method\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab display unbalanced KSIR found\par\par rn_rcd_not_fnd\tab\tab RPLNOREC record not found\tab\tab\tab\tab rpl_get_ksds_key\tab if (!find_ksds_key()) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // key not found - set get not found flag for possible\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // UPD insert\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rpl_get_rrds_key\tab // get for open RRDS file \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // Notes: 1. Read VX0 XRBA for rel. rcd #\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if ((cur_rpl_opt & rpl_opt_kge) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab while (cur_vx0_xrba < sz390.tiot_eof_rba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab [cur_vx0_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab && !get_rrds_ves_xrba(true)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_vx0_xrba = cur_vx0_xrba + 8\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_vx0_xrba >= sz390.tiot_eof_rba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab [cur_vx0_tiot_index])\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not ((cur_rpl_opt & rpl_opt_kge) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (!get_rrds_ves_xrba(true)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // RRDS rec not written or too big\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab svc_rpl_point\tab\tab if (!find_ksds_key()) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not ((cur_rpl_opt & rpl_opt_kge) != 0)\par\par rn_read_index_err\tab RPLRDERI index read error\tab\tab\tab\tab get_rrds_ves_xrba\tab if (!read_xrba_ptr()) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // I/O error on index\par\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab read_ksds_index\tab // read ksds index entry with key at cur_vx0_xrba \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // and set cur_ves_xrba  and cur_key\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par rn_inv_acc_type\tab RPLINACC invalid RPL access for ACB MACRF\tab\tab rpl_put_esds\tab\tab if ((cur_rpl_opt & rpl_opt_upd) != 0\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || (cur_rpl_opt & rpl_opt_adr) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not ((cur_rpl_flag & rpl_flag_getok) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // required get not done successfully\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rpl_put_ksds\tab\tab if ((cur_rpl_opt & rpl_opt_upd) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not ((cur_rpl_flag & rpl_flag_getok) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not ((cur_rpl_flag & rpl_flag_getnf) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // required ksds get not done successfully\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not ((cur_rpl_opt & rpl_opt_upd) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not ((cur_rpl_opt & rpl_opt_seq) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // ksds put rquires UPD or SEQ\par\par rn_write_data_err\tab RPLWTERD data write error\tab\tab\tab\tab rpl_put_esds\tab\tab if ((cur_rpl_opt & rpl_opt_upd) == 0\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab && (cur_rpl_opt & rpl_opt_seq) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // update eof for sequential ESDS put\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rpl_put_ksds\tab\tab // update VES eof for sequential KSDS put\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab try \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_eof_rba[cur_VES_tiot_index] =\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index].length();\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} catch\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // update VX0 eof for sequential KSDS put\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab try \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_eof_rba[cur_vx0_tiot_index] =\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_vx0_tiot_index].length();\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} catch\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab rewrite_ves_rec\tab\tab // rewrite RRDS or KSDS record at cur_ves_xrba \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // and update index xrba if it changed due to\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // variable length change.\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab try \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if ((cur_vclr_flag & vclr_flag_vrec) == 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // fixed length\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_lrec = cur_rpl_lrec;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} else \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // var length\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (get_vcb_buff(cur_ves_tiot_index, cur_ves_xrba,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab  4)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_lrec = vcb_buff.getInt(vcb_addr[vcb_index]);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} else \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index].seek ves_xrba);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_lrec = sz390.tiot_file_ves_tiot_index].readInt\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ();\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (vcb_alloc) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab vcb_buff.putInt(vcb_addr[vcb_index], write_lrec);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (write_lrec == cur_rpl_lrec) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // rewrite record\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (!write_ves_rec()) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab return false;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} else \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (!add_ves_rec(tiot_index, xrba_index)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab return false;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} catch\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab add_ves_rec\tab\tab // add RRDS or KSDS record to VES and update\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // index XRBA address which may be in VX0 or in\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // VES KSIR\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ry \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // update VES end of file addr\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_eof_rba[cur_ves_tiot_index] =\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index].length();\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} catch\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par .\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_ves_rec\tab\tab // write current RPL record in RPLAREA with length \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // RPLLREC to the VES base cluster data file at\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // specified xrba. \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // Notes: \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // 1. Variable length records have 4 byte length\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab //     preceeding record. \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // 2  ESDS variable length records also have 4 byte\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab //     length following record to support BWD read\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab //     backward option without any index. \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // 3. Used by ESDS, RRDS, and KSDS when not\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab //     inserted record\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if ((cur_vclr_flag & vclr_flag_vrec) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // write variable length record 4 byte prefix\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab try \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab tot_ves_write++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // write ves var prefix lrec\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index].seek\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ves_xrba);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index].writeInt\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_rpl_lrec);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (get_vcb_buff(cur_ves_tiot_index, cur_ves_xrba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab , 4)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || vcb_alloc) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab vcb_buff.putInt(vcb_addr[vcb_index], cur_rpl_lrec);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab tot_ves_write++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // write ves var rec\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index].seek\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab  (cur_ves_xrba + 4);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index].write\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (pz390.mem_byte,cur_rpl_area, cur_rpl_lrec);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (get_vcb_buff(cur_ves_tiot_index, cur_ves_xrba\par   \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab + 4,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_rpl_lrec)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || vcb_alloc) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab System.arraycopy(pz390.mem_byte, cur_rpl_area,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab  vcb_byte,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab vcb_addr[vcb_index], cur_rpl_lrec);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (tz390.opt_tracev) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab tz390.put_trace("VSAM EXCP WRITE VREC \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab XRBA="+ tz390.get_long_hex(cur_ves_xrba + 4,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 16)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab + " LEN=" + tz390.get_hex(cur_rpl_lrec, 8))\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if ((cur_vclr_flag & vclr_flag_esds) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_lrec = 4 + cur_rpl_lrec + 4;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab tot_ves_write++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // write ESDS var rec sfx lrec used to read \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // backward\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index].seek\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ves_xrba + 4 + cur_rpl_lrec);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index].writeInt\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_rpl_lrec);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (get_vcb_buff(cur_ves_tiot_index, cur_ves_xrba \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab + 4+ cur_rpl_lrec, 4)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || vcb_alloc) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab vcb_buff.putInt(vcb_addr[vcb_index], cur_rpl_lrec);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} else \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_lrec = 4 + cur_rpl_lrec;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab last_ves_xrba = cur_ves_xrba; \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_ves_xrba = cur_ves_xrba + write_lrec;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tot_dcb_write++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tot_dcb_oper++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab return true;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} catch\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_ves_cb\tab\tab //  write control block in VES at xrba into cb byte \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // array Notes\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if ((cur_vclr_flag & vclr_flag_vrec) = 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // write fixed length record\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_rpl_lrec = cur_vclr_lrec;\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab try \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab tot_ves_write++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index].seek\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (cur_ves_xrba);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index].write\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (pz390.mem_byte,\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_rpl_area, cur_rpl_lrec);\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (get_vcb_buff(cur_ves_tiot_index, cur_ves_xrba,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_rpl_lrec)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab || vcb_alloc) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab System.arraycopy(pz390.mem_byte, cur_rpl_area\par , \tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab vcb_byte,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab vcb_addr[vcb_index], cur_rpl_lrec)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab last_ves_xrba = cur_ves_xrba;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_ves_xrba = cur_ves_xrba + cur_rpl_lrec;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tot_dcb_write++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tot_dcb_oper++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab return true;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} catch\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par rn_dup_key\tab\tab RPLDUP attempt to write dup pri or unique aix key\tab rpl_put_ksds\tab\tab if ((cur_rpl_opt & rpl_opt_seq) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_ves_xrba = sz390.tiot_eof_rba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab [cur_ves_tiot_index];\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_vx0_xrba = sz390.tiot_eof_rba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab [cur_vx0_tiot_index];\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (last_key != null)\{ \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_vx0_xrba > 0\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab && comp_key(cur_rpl_area + cur_vclr_koff\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab , last_key) <= 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (comp_rc == 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // ksds dup primary key\par\plain\f1\fs20\cf3 PUTting SEQuentially and current primary key is equal to the last primary key\plain\f1\fs20\cf1\par\par rn_out_of_seq\tab\tab RPLSEQCK skip seq key out of sequence\tab\tab rpl_put_ksds\tab\tab if ((cur_rpl_opt & rpl_opt_seq) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_ves_xrba = sz390.tiot_eof_rba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab [cur_ves_tiot_index];\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_vx0_xrba = sz390.tiot_eof_rba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab [cur_vx0_tiot_index];\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (last_key != null)\{ \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_vx0_xrba > 0\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab && comp_key(cur_rpl_area + cur_vclr_koff\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab , last_key) <= 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (comp_rc < 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // ksds out of seq primary key\par\plain\f1\fs20\cf3 PUTting SEQuentially and current primary key is less than last primary key\plain\f1\fs20\cf1\par\par rn_inv_rec_len\tab\tab RPLINLEN rec len > max or <> fixed len\tab\tab\tab read_ves_rec\tab\tab if ((cur_vclr_flag & vclr_flag_vrec) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // read variable length record putting\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // 4 length prefix into RPLLREC and the remainder\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab //  in RPLAREA\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab try \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not (get_vcb_buff(cur_ves_tiot_index,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab  cur_ves_xrba,4)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab tot_ves_read++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // read var ves rec len prefix\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab .seek(cur_ves_xrba);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_rpl_lrec = sz390.tiot_file[cur_ves_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab .readInt();\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (vcb_alloc) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab vcb_buff.putInt(vcb_addr[vcb_index], cur_rpl_lrec);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (cur_rpl_lrec < 1 || cur_rpl_lrec > cur_vclr_lrec) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // prefix lrec invalid\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (ver_rpl_lrec != cur_rpl_lrec) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // prefix lrec not equal sfx lrec\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab If (cur_rpl_lrec <= 0 || cur_rpl_lrec > cur_vclr_lrec)\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab get_esds_bwd_next\tab if ((cur_vclr_flag & vclr_flag_vrec) != 0) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // read prev rcd suffix record length\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // at cur xrba - 4 and update tiot\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // cur rec rba to rba - lrec - 8\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab try \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not (get_vcb_buff(cur_ves_tiot_index,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab  cur_ves_xrba - 4, 4)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab tot_ves_read++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // read var rec suffix length at xrba-4 to go \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // backward\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_ves_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab .seek(cur_ves_xrba - 4);\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_rpl_lrec = sz390.tiot_file[cur_ves_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab .readInt();\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (vcb_alloc) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab vcb_buff.putInt(vcb_addr[vcb_index], cur_rpl_lrec);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab (if (cur_rpl_lrec <= 0 || cur_rpl_lrec > cur_vclr_lrec)\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab OR\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab bwd_xrba = cur_ves_xrba - cur_rpl_lrec - 8;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (bwd_xrba < 0))\par "\plain\f1\fs20\cf3 cur_vclr_flag & vclr_flag_vrec) != 0" means that ESDS records are treated as variable length\par\plain\f1\fs20\cf1\tab\tab\tab\tab\tab\tab\par rn_write_index_err\tab RPLWTERI index write erro\tab\tab\tab\tab read_xrba_ptr\tab\tab try \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if not (get_vcb_buff(cur_vx0_tiot_index, \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_vx0_xrba, 8)) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab tot_vxn_read++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // read vrrds ves xrba\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_vx0_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab .seek(cur_vx0_xrba);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_ves_xrba = sz390.tiot_file\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab [cur_vx0_tiot_index].readLong();\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (vcb_alloc) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab vcb_buff.putLong(vcb_addr\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab [vcb_index], cur_ves_xrba);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tot_dcb_read++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tot_dcb_oper++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab return true;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} catch\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_ksds_index\tab try \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab tot_vxn_write++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // write VES xrba and key from rpl area + koff - 8\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_vx0_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab .seek(cur_vx0_xrba + 8);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[cur_vx0_tiot_index]\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab .write(pz390.mem_byte,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_rpl_area + cur_vclr_koff, cur_vclr_klen);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (get_vcb_buff(cur_vx0_tiot_index, \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_vx0_xrba + 8,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_vclr_klen)|| vcb_alloc) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab System.arraycopy(pz390.mem_byte, \par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_rpl_area + cur_vclr_koff,\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab vcb_byte, vcb_addr[vcb_index], cur_vclr_klen);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab cur_vx0_xrba = cur_vx0_xrba + 8 + cur_vclr_klen;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tot_dcb_write++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tot_dcb_oper++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab return true;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} catch\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab write_xrba_ptr\tab\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab try \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // write index\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab tot_vxn_write++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[tiot_index].seek(xrba_index);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[tiot_index].writeLong(xrba_rec);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if (get_vcb_buff(tiot_index, xrba_index, 8) ||\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab  vcb_alloc) \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab vcb_buff.putLong(vcb_addr[vcb_index], xrba_rec);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tot_dcb_write++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tot_dcb_oper++;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab return true;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} catch\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab reuse_file\tab\tab // reset file length and tiot_eof addr for files being\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // reused either due to reuse option or REPRO seq\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab // out options..\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab int tiot_index = pz390.mem.getInt(adcb +\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab           sz390.dcb_iobad) - 1;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab try \{\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_file[tiot_index].setLength(0);\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab sz390.tiot_eof_rba[tiot_index] = 0;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab return true;\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\} catch\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab 'TRY' FAILED\par\par\plain\f1\fs20\b\ul\cf1\page reason codes specified in z290 vz390.java but not used\plain\f1\fs20\cf1\par rn_area_len_err \tab\tab RPLINBUF record area too small\par rn_inv_key_req \tab\tab\tab RPLINKEY invalid key req for ESDS/RRDS\par rn_inv_key_len\tab\tab\tab RPLKEYLC key len > max or 0\par rn_inv_rec_num\tab\tab RPLIRRNO invalid RRDS record #\par\par\plain\f1\fs20\b\ul\cf1\page sz390.put_log\plain\f1\fs20\cf1\par\par There are some instances where a message is output via a put_log.\par The VSAM messages probably emanate from Don's testing.\par\tab\par OPEN \tab\tab\tab ACB RRDS requires KEY rel rcd access\tab\tab\tab // RRDS\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if ((cur_acb_macrf & acb_macrf_key) == 0)\par VSAM \tab\tab\tab KSIR BROKEN LINK\par VSAM \tab\tab\tab AVL NODE HEIGHT ERROR\tab\tab\tab\tab if (prev_node_height != cur_node_height + 1)\par VSAM \tab\tab\tab AVL UNBALANCED KSIR ERROR TYPE\par\par\plain\f1\fs20\b\ul\cf1\page Parameters passed to acb.mac\par\plain\f1\fs20\cf1\par Now we look at how acb.mac deals with the parameters passed to it and the fields that are passed to vz390.\par\par &bufsp \tab\tab\tab not supported\par &exlst \tab\tab\tab not supported\par\par ACB.MAC checks for &AM=VSAM, &EXLST=0  and it allocates CL8(&DDNAME)/CL8'&N'\par and A(&DSNAME)\par but it doesn't do anything with &BUFSP [MAXIMUM BUFFER SPACE FOR CLUSTER].\par\par ZGENMACF.MAC doesn't check whether the MACRF sub-parameters are wrong\par it assumes that what's provided is right, with the exception of those pairs which\par are mutually exclusive like UBF and NUF.\par\par The following shows the java field names passed from acb.mac, it's displacement, the java comment, whether the field is used in the body of the code,\par whether that field is stored in it's cur_ field and whether that cur_ field is subsequently used.\par  \par\plain\f1\fs20\ul\cf1 java field name\tab displacement\tab comment against this java field\tab\tab\tab usage in \tab 2ndary\tab\tab usage in\par\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab vz390 body\tab java field\tab vz390 body\par\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1 acb_id \tab\tab = 0; \tab\tab // ACBID x'A0'\tab\tab\tab\tab\tab not used\tab cur_acb_id\tab not used\par acb_stype \tab = 1; \tab\tab // ACBSTYPE x'11' - x'1F' for VSAM vs VTAM\tab not used\tab cur_acb_stype\tab not used\par acb_len \tab = 2; \tab\tab // ACBLEN half word length of ACB\tab\tab not used\tab cur_acb_len\tab not used\par acb_ambl \tab = 4; \tab\tab // ACBAMBL AMB list\tab\tab\tab\tab not used\tab cur_acb_ambl\tab not used\par acb_ifr \tab\tab = 8; \tab\tab // ACBIFR VTAM interface routine (0 for VSAM)\tab not used\tab cur_acb_ifr\tab not used\par acb_macrf \tab = 12; \tab\tab // ACBMACRF macrf flags\tab\tab\tab used\tab\tab cur_acb_macrf\tab used\par\par acb_macrf_key \tab = 0x80000000; \tab // ACBMACR1_KEY key access\tab\tab\tab used\par acb_macrf_adr \tab = 0x40000000; \tab // ACBMACR1_ADR access bu RBA or XRBA\tab used\par acb_macrf_cnv \tab = 0x20000000; \tab // ACBMACR1_CNV control interval access \par\tab\tab\tab\tab // (not supported)\tab\tab\tab\tab not used\par acb_macrf_seq \tab = 0x10000000; \tab // ACBMACR1_SEQ sequential access\tab\tab used\par acb_macrf_dir \tab = 0x08000000; \tab // ACBMACR1_DIR direct access\tab\tab not used\par acb_macrf_in \tab = 0x04000000; \tab // ACBMACR1_IN input only\tab\tab\tab not used\par acb_macrf_out \tab = 0x02000000; \tab // ACBMACR1_OUT output add, update, delete\tab used\par acb_macrf_ubf \tab = 0x01000000; \tab // ACBMACR1_UBF user buffer management\tab not used\par\tab\tab\tab\tab // (ignored)\par acb_macrf_skp \tab = 0x00800000; \tab // ACBMACR2_SKP skip sequential access\tab not used\par acb_macrf_nlogon \par\tab\tab = 0x00400000;  // ACBMACR2_NLOGON no logon required\tab not used\tab\par acb_macrf_rst \tab = 0x00200000; \tab // ACBMACR2_RST data set reusable (reset rba\tab not used\par\tab\tab\tab\tab // at open)\par acb_macrf_dsn \tab = 0x00100000; \tab // ACBMACR2_DSN subtask sharing based on\par\tab\tab\tab\tab //  DSN\tab\tab\tab\tab\tab\tab not used\par acb_macrf_aix \tab = 0x00080000; \tab // ACBMACR2_AIX process alt. index versus\tab not used\par\tab\tab\tab\tab // base\par acb_macrf_lsr \tab = 0x00040000; \tab // ACBMACR2_LSR local shared resources\tab not used\par acb_macrf_gsr \tab = 0x00020000; \tab // ACBMACR2_GSR global shared resources\tab not used\par acb_macrf_ici \tab = 0x00010000; \tab // ACBMACR2_ICI improve control interval\tab not used\par\tab\tab\tab\tab // processing\par acb_macrf_dfr \tab = 0x00008000; \tab // ACBMACR3_DFR defer puts until WRTBUF\par\tab\tab\tab\tab // or required\tab\tab\tab\tab\tab not used\par acb_macrf_sis \tab = 0x00004000; \tab // ACBMACR3_SIS sequential insert strategy\tab not used\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1 acb_macrf_cfx \tab = 0x00002000; \tab // ACBMACR3_CFX fix control blocks and\tab not used\par\tab\tab\tab\tab // buffers\par\par acb_oflgs \tab = 16; \tab\tab // ACBPFLGS offset to open flag\tab\tab used\tab\tab cur_acb_oflgs\tab used\par\par acb_oflgs_open\tab = (byte) 0x80; \tab // ACB_OPEN open\tab\tab\tab\tab used\par acb_oflgs_in \tab = (byte) 0x40; \tab // ACBGET only\tab\tab\tab\tab\tab not used\par acb_oflgs_out \tab = (byte) 0x20; \tab // ACBPUT output add, update, delete\tab\tab used\par acb_oflgs_aixp \tab = (byte) 0x10; \tab // ACBAIXP use aix vs primary key\tab\tab used\par acb_oflgs_aixu \tab = (byte) 0x08; \tab // ACBAIXU ugrade aix indexes for VCLR\tab used\par\par acb_ddnam \tab = 20; \tab\tab // ACBDDNAM DDNAME > env. var.> \par\tab\tab\tab\tab // VCDT[.VCLR/VPTH)\tab\tab\tab\tab used\par acb_dsnam \tab = 28; \tab\tab // ACBDSNAM DSNAME addr > \par\tab\tab\tab\tab // VCDT[.VCLR/VPTH]\tab\tab\tab\tab used\par acb_vclrn \tab = 32; \tab\tab // ACBVCLRN name from label field \par\tab\tab\tab\tab // (def VCDT entry)\tab\tab\tab\tab used\tab\tab cur_acb_vclrn\tab not used\par acb_vclra \tab = 40; \tab\tab // ACBVCLRA addr VCLR in VCDT catalog\tab used\tab\tab cur_acb_vclra\tab used\par acb_vaixa \tab = 44; \tab\tab // ACBVAIXA addr VAIX in VCDT catalog for alt \par\tab\tab\tab\tab // path\tab\tab\tab\tab\tab\tab used\tab\tab cur_acb_vaixa\tab used\par acb_dcbt \tab = 48; \tab\tab // ACBDCBN total DCB's for this ACB\tab\tab used\tab\tab cur_acb_dcbt\tab used\par acb_dcba \tab = 52; \tab\tab // ACBDCBA addr of dynamically allocated \par\tab\tab\tab\tab // DCB's\tab\tab\tab\tab\tab used\tab\tab cur_acb_dcba\tab used\par acb_openc \tab = 56; \tab\tab // ACBOPENC unique open ACB ocunt!!!!!!!!\tab used\tab\tab cur_acb_openc\tab used\par\par Now we look at how rpl.mac deals with the parameters passed to it and the fields that are passed to vz390.\par\par\plain\f1\fs20\b\ul\cf1\page Explanation of ACB MACRF sub-parameters\par\plain\f1\fs20\cf1\par This is an extract from an IBM manual.\plain\f1\fs20\b\ul\cf1\par\plain\f1\fs20\cf1\par ADR\tab\tab Addressed access to a key-sequenced or an entry-sequenced data set; \par\tab\tab RBAs are used as search arguments and sequential access is by entry sequence\par\tab\tab VSAM RLS does not support ADR access to a KSDS\par\par CNV\tab\tab Access is to the entire contents of a control interval rather than to an individual\par\tab\tab data record. If the data set is password protected, you must supply the address of\par\tab\tab the control or higher-level password in the ACB PASSWD parameter.\par  \par KEY\tab\tab Keyed access to a relative record data set (RRDS) or key-sequenced data set. \par\tab\tab Keys or relative record numbers are used as search arguments and sequential access \par\tab\tab is by key or relative record number. \par\tab\tab KEY processing is not affected by RLS.\par ----------------------------------------------------------------------------------------------------------------\par\par CFX\tab\tab Control blocks built by OPEN are page-fixed\par\par NFX\tab\tab Control blocks built by OPEN are page-fixed only during actual I/O\par ----------------------------------------------------------------------------------------------------------------\par\par DDN\tab\tab Subtask shared control block connection based on common ddnames \par\par DSN\tab\tab Subtask shared control block connection based on common data set names\par ----------------------------------------------------------------------------------------------------------------\par\par DFR\tab\tab Writes deferred when possible\par\par NFR\tab\tab Writes not deferred\par ----------------------------------------------------------------------------------------------------------------\par\par DIR\tab\tab Direct access to a key-sequenced, entry-sequenced, or a relative record data set\par\par SEQ\tab\tab Sequential access to a key-sequenced, entry-sequenced, or a relative record data set\par\par SKP\tab\tab Skip-sequential access to a key-sequenced or a relative record data set; \par\tab\tab used only with keyed access in a forward direction.\par ----------------------------------------------------------------------------------------------------------------\par\par ICI\tab\tab Processing limited to control-interval processing\par\par NCI\tab\tab Processing other than control-interval processing\par ----------------------------------------------------------------------------------------------------------------\par\par IN\tab\tab Retrieval of records of a key-sequenced, entry-sequenced, or a relative record data set\par\par OUT\tab\tab Storage of new records in a key-sequenced, entry-sequenced, or relative record data set\par\tab\tab (not allowed with addressed access to a key-sequenced data set); \par\tab\tab update of records in a key-sequenced, entry-sequenced, or relative record data set; \par\tab\tab deletion of records from a key-sequenced data set\par ----------------------------------------------------------------------------------------------------------------\par\par NIS\tab\tab Normal insert strategy \par\par SIS\tab\tab Sequential insert strategy (split control intervals and control areas at the insert\par\tab\tab point rather Than at the midpoint when doing direct PUTs)\par ----------------------------------------------------------------------------------------------------------------\par\par NRM\tab\tab The object to be processed is the one named in the specified ddname\par\par AIX\tab\tab The object to be processed is the alternate index of the path specified by ddname\par ----------------------------------------------------------------------------------------------------------------\par\par NRS\tab\tab Data set is not reusable\par\par RST\tab\tab Data set is reusable (high-used RBA is reset to 0 during OPEN processing)\par ----------------------------------------------------------------------------------------------------------------\par\par NSR\tab\tab Nonshared resources\par\par LSR\tab\tab Local shared resources\par\par GSR\tab\tab Global shared resources\par ----------------------------------------------------------------------------------------------------------------\par\par NUB\tab\tab Management of I/O buffers is left up to VSAM \par UBF\tab\tab Management of I/O buffers is left up to the user; \par\tab\tab allowed only with control-interval access\par ----------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3\par ----z390 vsam ACB does not support these sub-parameters                 ----\par ----CNV,CFX,NFX,DFR,NFR.SKP,ICI,LEW,NCI,NIS,NLW,SIS,NRM,AIX----\par ----NRS,RST,NSR,LSR,GSR,NUB,UBF                                             ----\plain\f1\fs20\cf1\par\par\plain\f1\fs20\b\ul\cf1\page Parameters passed to rpl.mac\par\plain\f1\fs20\cf1\par Checks AM=VSAM, all the other validation is done within vz390.java\par\plain\f1\fs20\b\ul\cf1\par\plain\f1\fs20\cf1 ASY \tab\tab\tab ignored\par CNV \tab\tab\tab not supported\par CR \tab\tab\tab ignored\par CRE \tab\tab\tab ignored\par LOC \tab\tab\tab ignored\par MVE \tab\tab\tab ignored - always in RPL AREA=\par NRI \tab\tab\tab ignored\par NWAITX \tab\tab ignored\par RBA \tab\tab\tab default\par SYN \tab\tab\tab always\par WAITX \tab\tab\tab ignored\par &AREA=0,   \tab\tab RECORD WORK AREA \par &AREALEN=0, \tab\tab LENGTH OF AREA  ignored\par\par The following shows the java field names passed from rpl.mac, it's displacement, the java comment, whether the field is used in the body of the code,\par whether that field is stored in it's cur_ field and whether that cur_ field is subsequently used.\par\par\plain\f1\fs20\ul\cf1 java field name\tab displacement\tab comment against this java field\tab usage in\tab 2ndary java\tab usage in \par\tab\tab\tab\tab\tab\tab\tab\tab vz390 body\tab field\tab\tab vz390 body\par\plain\f1\fs20\cf1\par rpl_ecb \tab = 4; \tab\tab // RPL address ecb to post\tab ------>\tab\tab cur_rpl_ecb\tab not used\par rpl_feedb \tab = 8; \tab\tab // RPL feedback\tab\tab\tab used\tab\tab cur_rpl_feedb\tab not used\par rpl_lkey \tab = 12; \tab\tab // RPL length of generic key\tab used\tab\tab cur_rpl_lkey\tab used\par rpl_acb \tab = 16; \tab\tab // RPL acb addr\tab\tab\tab used\tab\tab\par rpl_area \tab = 20; \tab\tab // RPL record area\tab\tab used\tab\tab cur_rpl_area\tab used\par rpl_arg \tab\tab = 24; \tab\tab // RPL argument for KSDS key, \par\tab\tab\tab\tab // RRDS #, \tab\tab\tab used\tab\tab cur_rpl_arg\tab used\par\tab\tab\tab\tab    ESDS/LDS RBA/XRBA\par rpl_opt \tab\tab = 28; \tab\tab // RPL options 2 bytes & 2 \par\tab\tab\tab\tab // bytes filler\tab\tab\tab used\tab\tab cur_rpl_opt\tab used\par\par rpl_opt_loc \tab = 0x8000; \tab // RPL option leave rec in buffer\tab not used\par rpl_opt_dir \tab = 0x4000; \tab // RPL option direct access\tab not used\par rpl_opt_seq \tab = 0x2000; \tab // RPL option sequential access\tab used\par rpl_opt_skp \tab = 0x1000; \tab // RPL option skip sequential \par\tab\tab\tab\tab // access\tab\tab\tab not used\par rpl_opt_asy \tab = 0x0800; \tab // RPL option\tab\tab\tab not used\par rpl_opt_kge \tab = 0x0400; \tab // RPL option\tab\tab\tab used\par rpl_opt_gen \tab = 0x0200; \tab // RPL option\tab\tab\tab used\par rpl_opt_xrba \tab = 0x0100; \tab // RPL option\tab\tab\tab used\par rpl_opt_key \tab = 0x0080; \tab // RPL option\tab\tab\tab used\par rpl_opt_adr \tab = 0x0040; \tab // RPL option\tab\tab\tab used\par rpl_opt_cnv \tab = 0x0020; \tab // RPL option\tab\tab\tab not used\par rpl_opt_bwd \tab = 0x0010; \tab // RPL option\tab\tab\tab used\par rpl_opt_lrd \tab = 0x0008; \tab // RPL option\tab\tab\tab used\par rpl_opt_waitx \tab = 0x0004; \tab // RPL option\tab\tab\tab not used\par rpl_opt_upd \tab = 0x0002; \tab // RPL option\tab\tab\tab used\par rpl_opt_nsp \tab = 0x0001; \tab // RPL option\tab\tab\tab not used\par\par rpl_next \tab = 32; \tab\tab // RPL next RPL in chain\tab ------>\tab\tab cur_rpl_next\tab not used\par rpl_lrec \tab = 36; \tab\tab // RPL length of record for \par\tab\tab\tab\tab // recv PUT\tab\tab\tab used\tab\tab cur_rpl_lrec\tab used (NOTE)\par rpl_lxrba \tab = 40; \tab\tab // RPL last rec XRBA in VES \par\tab\tab\tab\tab // or VX0 \tab\tab\tab used\tab\tab cur_rpl_lxrba\tab used\par rpl_cxrba \tab = 48; \tab\tab // RPL cur pos XRBA in VES \par\tab\tab\tab\tab // or VX0 \tab\tab\tab used\tab\tab cur_rpl_cxrba\tab used\par rpl_openc \tab = 56; \tab\tab // RPL unique open ACB count \tab used\tab\tab cur_rpl_openc\tab used\par rpl_larea \tab = 60; \tab\tab // RPL length of record area\tab ------>\tab\tab cur_rpl_larea\tab not used\par rpl_flag \tab = 64; \tab\tab // RPL flags for UPD positioning \par\tab\tab\tab\tab // etc.\tab\tab\tab\tab used\tab\tab cur_rpl_flag\tab used\par\par rpl_flag_getok \tab = 0x80000000; \tab // prev RPL GET successful\tab used\par rpl_flag_getnf \tab = 0x40000000; \tab // prev RPL GET record not \par\tab\tab\tab\tab // found\tab\tab\tab\tab used\par rpl_flag_ksit \tab = 0x20000000; \tab // get/put in KSIT\tab\tab used\par\par rpl_ksit \tab\tab = 68; \tab\tab // RPL current KSIT XRBA\tab used\tab\tab cur_rpl_ksit\tab used\par rpl_ksir \tab\tab = 76; \tab\tab // RPL current KSIR XRBA\tab used\tab\tab cur_rpl_ksir\tab used\par rpl_len \tab\tab = 84; \tab\tab\tab\tab\tab\tab used\tab\tab\par\par "------>" is used to mean that the value in the first field is used only to pass it's value to the second field.\par\par Thus the rpl_ecb/cur_rpl_ecb, rpl_next/cur_rpl_next, rpl_larea/cur_rpl_larea are not really used by vz390.java.\par\par NOTE:- "cur_rpl_rec" formerly was marked as "not used" incorrectly.\par\par\plain\f1\fs20\b\ul\cf1\page Explanation of RPL OPTCD sub-parameters\par\par\plain\f1\fs20\cf1 This is an extract from an IBM manual.\par\par ADR\tab\tab Addressed access to a key-sequenced or an entry-sequenced data set: \par\tab\tab RBAs are used as search arguments and sequential access is done by entry sequence\par\par CNV\tab\tab Control-interval access (this type of access is described in OS/VS Virtual Storage\par\tab\tab Access Method (VSAM) Options for Advanced Applications)\par\par KEY\tab\tab Keyed access to a key-sequenced or relative record data set: \par\tab\tab Keys or relative record numbers are used as search arguments and sequential access is done by key or\par\tab\tab relative record number sequence\par ----------------------------------------------------------------------------------------------------------------\par\par\par DIR\tab\tab Direct access to a key-sequenced, entry-sequenced, or relative record data set\par\par SEQ\tab\tab Sequential access to a key-sequenced, entry-sequenced, or relative record data set\par\par SKP\tab\tab Skip sequential access to a key-sequenced or a relative record data set: \par\tab\tab used with keyed access only\par ----------------------------------------------------------------------------------------------------------------\par\par\par ARD\tab\tab User's argument determines record to be located, retrieved, or stored\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\par LRD\tab\tab Last record in the data set is to be located (POINT) or retrieved (GET direct\par\tab\tab requires OPTCD=BWD\par ----------------------------------------------------------------------------------------------------------------\par\par\par FWD\tab\tab Processing to proceed in forward direction\par\par BWD\tab\tab Processing to proceed in backward direction; for keyed (KEY) or addressed (ADR)\par\tab\tab sequential (SEQ) or direct (DIR) requests; \par\tab\tab valid for POINT, GET, PUT, and ERASE operations; \par\tab\tab establish positioning by a POINT with OPTCD-BWD or by a GET direct with OPTCD-NSP\par ----------------------------------------------------------------------------------------------------------------\par\par\par ASY\tab\tab Asynchronous access; \par\tab\tab VSAM returns to the processing program after scheduling a request So the program can do other \par\tab\tab processing while the request is being carried out\par\par SYN\tab\tab Synchronous access; \par\tab\tab VSAM returns to the processing program after completing a request \par ----------------------------------------------------------------------------------------------------------------\par\par\par NSP\tab\tab With OPTCD-DIR only, VSAM is to remember its position (for subsequent sequential access); \par\tab\tab that is, the position is not to be forgotten unless an ENDREQ macro is issued \par\par NUP\tab\tab A data record that is being retrieved will not be updated or deleted; \par\tab\tab a record that is being stored is a new record; \par\tab\tab VSAM doesn't remember its position for direct requests into a work area \par\par UPD\tab\tab A data record that is being retrieved may be updated or deleted; \par\tab\tab a record that is being stored or deleted was previously retrieved with OPTCD-UPD; \par\tab\tab VSAM remembers its position for sequential and direct requests\par\tab\tab This parameter is not supported for UNIX files and if it is specified, \par\tab\tab results in an error on a subsequent GET, PUT, or POINT request. \par ----------------------------------------------------------------------------------------------------------------\par\par\par KEQ\tab\tab For GET with OPTCD-(KEY,DIR) or (KEY,SKP) and for POINT with OPTCD==KEY, \par\tab\tab the key (full or generic) that you provide for a search argument must equal the key or \par\tab\tab relative record number of a record \par\tab\tab For a RRDS, KEQ is assumed except for POINT.\par\par KGE\tab\tab For the same cases as KEQ, if the key (full or generic) that you provide for a\par\tab\tab search argument doesn't equal that of a record, the request applies to the record\par\tab\tab that has the next higher key \par\tab\tab If using POINT with a RRDS, KGE positions to the specified relative record number \par\tab\tab whether the slot is empty or not. \par\tab\tab If the relative record number is greater than the highest existing record, EOD is returned. \par\tab\tab A subsequent PUT will insert the record at this position.\par ----------------------------------------------------------------------------------------------------------------\par\par\par FKS\tab\tab A full key is provided as a search argument \par\par GEN\tab\tab A generic key is provided as a search argument; \par\tab\tab give the length in the KEYLEN operand \par\tab\tab Generic keys are not supported for a variable-length RRDS.\par ----------------------------------------------------------------------------------------------------------------\par\par\par NWAITX \tab Never take the UPAD or RLSWAIT exit.\par\par WAITX \tab\tab If OPTCD=SYN and the ACB's MACRF=LSR GSR and UPAD exit routing is specified, \par\tab\tab VSAM takes the UPAD exit at points when VSAM would normally issue a WAIT.\par\tab\tab For VSAM RLS and DFSMStvs, take the RLSWAIT exit, which is active for this request.\par ----------------------------------------------------------------------------------------------------------------\par\par\par LOC\tab\tab For retrieval, VSAM leaves the data record in the I/O buffer for processing; \par\tab\tab not valid for PUT or ERASE; \par\tab\tab valid for GET with OPTCD==UPD, but to update the record, you must build a new\par  \tab\tab version of the record in a work area and modify the request parameter list OPTCD \par\tab\tab from LOC to MVE before issuing a PUT\par\par MVE\tab\tab For retrieval, VSAM moves the data record to a work area for processing, and for\par\tab\tab storage, VSAM moves it from the work area to the I/O buffer\par\par ----------------------------------------------------------------------------------------------------------------\par\par\par RBA \tab\tab For addressed accessing (OPTCD=ADR), the ARG field contains the address of a 4-byte\par  \tab\tab RBA. RBA is the default. \par\tab\tab Extended addressing is not to be used for this request.\par\par XRBA \tab\tab For addressed accessing (OPTCD=ADR), the ARG field contains the address of an 8-\par\tab\tab byte RBA search argument.\par\tab\tab While you can specify RBA while using XRBA, the following considerations apply to\par  \tab\tab accessing by RBA values:\par\par\plain\f1\fs20\cf3 ----z390 vsam RPL does not support these sub-parameters----\par ----CNV,SKP,ASY,SYN,NSP,NWAITX,WAITX,LOC,MVE   ----\plain\f1\fs20\cf1\par\par\tab\tab For a GET extended addressing request, you must specify an OPTCD that includes DIR,\par  \tab\tab ADR, and XRBA.\par\par\tab\tab For a POINT extended addressing request, you must specify an OPTCD that includes\par  \tab\tab ADR and XRBA.\par\par\tab\tab The ARG field has the address of a 16 byte field containing the beginning and ending 8\par  \tab\tab byte RBAs of the range.\par\par\tab\tab The ARG field has the address of a 16 byte field containing the beginning and ending 8\par  \tab\tab byte RBAs of the range.\par\par\tab\tab The ARG field has the address of an 8 byte field containing the 8 byte RBA to be located\par  \tab\tab and written.\par\par\tab\tab If the data being referenced by RBA for an extended addressing KSDS is less than 4GB,\par  \tab\tab you do not have to code this parameter. \par\par\tab\tab For data with RBA greater than 4GB the RPL must specify extended addressing (XRBA)\par  \tab\tab and an 8-byte RBA is required. \par\par\tab\tab Also, to retrieve an 8-byte RBA using SHOWCB for the RPL, XRBA must be used\par  \tab\tab instead.\par\par\tab\tab XRBA specification can be used for any data set (whether or not it is extended\par\tab\tab addressable).\par\par\plain\f1\fs20\b\ul\cf1\page An extract from the first of the IBM VSAM manuals \plain\f1\fs28\b\i\ul\cf1 SC26-7410-11\par\plain\f1\fs20\cf1\par I have marked differences with z390 vsam in red ink\par\par\plain\f1\fs28\b\cf1\page z/OS DFSMS Using Data Sets\plain\f1\fs28\cf1  \par\plain\f1\fs20\cf1\par\plain\f1\fs32\b Chapter 6. Organizing VSAM Data Sets\plain\f1\fs20\b\ul\cf1\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b VSAM Data Formats\plain\f1\fs20\b\ul\cf1\par\plain\f1\fs20\cf1 The organization of data in all VSAM data sets, except linear data sets, \par\par ----vsam data formats----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Linear Data Sets----\plain\f1\fs20\cf1\par\par is arranged\par in records, also called logical records. A logical record is the user record requested\par from, or given to, the VSAM record management function.\par\par Logical records of VSAM data sets are stored differently from logical records in\par non-VSAM data sets. VSAM stores records in control intervals.\par\par ----vsam data formats----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Control Intervals----\par\plain\f1\fs20\cf1\par A control interval is\par a continuous area of direct access storage that VSAM uses to store data records\par and control information that describes the records. Whenever a record is retrieved\par from direct access storage, the entire control interval containing the record is read\par into a VSAM I/O buffer\par\par ----vsam data formats----\par\plain\f1\fs20\cf3 ----z390 vsam, of course, has a vsam I/O buffer----\par ----in fact, it stores records in an array with a maximum of 40,003 entries----\par ----this is used to minimise I/O on later processing, writes occur immediately----\par ----but a copy is kept in the array----\par\plain\f1\fs20\cf1\par in virtual storage. The desired record is transferred from\par the VSAM buffer to a user-defined buffer or work area.\par\par ----vsam data formats----\par\plain\f1\fs20\cf3 ----z390 vsam does not use a user-defined buffer or work-area----\par ----It does use RPL AREA for KSDS----\plain\f1\fs20\cf1\par\par\plain\f1\fs28\b\page\tab Data Set Size\par\plain\f1\fs20\cf1\tab The maximum size of a VSAM data set is 4 GB (4 294 967 295 bytes) unless it is\par\tab defined with a data class that specifies a DSNTYPE of EXT (extended format) with\par\tab the extended addressability (also in the data class) set to Y (yes).\par\par ----vsam data formats----\par ----data set size----\par\plain\f1\fs20\cf3 ----An RBA (4-bytes) addresses a maximum of 4GB (unsigned), whilst an XRBA addresses RBA squared----\par ----The maximum file size is limited by available space on the PC,the value of max_rba_size and max_file_size----\par\plain\f1\fs20\cf1\par\tab A VSAM data set\par\tab can be expanded to 123 extents per volume. In addition to the limit of 123 extents\par\tab per volume, these are the other limits on the number of extents for a VSAM data\par\tab set:\par\par\tab v \tab If non-SMS-managed, then up to 255 extents per component\par\par ----vsam data formats----\par ----data set size----\par\plain\f1\fs20\cf3 ----z390 vsam doesn't support SMS----\par\plain\f1\fs20\cf1\par\tab v \tab If SMS-managed, then the following are true:\par\tab\tab\loch\f1\hich\f1\'96 \tab If not striped\par\par ----vsam data formats----\par ----data set size----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Striping----\plain\f1\fs20\cf1\par\par\tab\tab\tab and without the extent constraint removal parameter in the data\par\tab\tab\tab class, then up to 255 extents per component.\par\tab\tab\loch\f1\hich\f1\'96 \tab If striped and without the extent constraint removal parameter in the data\par\tab\tab\tab class, then up to 255 extents per stripe.\par\tab\tab\'96 \tab If the extent constraint removal parameter in the data class is set to a value of\par\tab\tab\tab Y, then the number of extents is limited by the number of volumes for the\par\tab\tab\tab data set.\par\par\tab VSAM attempts to extend a data set when appropriate. Each attempt to extend the\par\tab data set might result in up to five extents.\par\par ----vsam data formats----\par ----data set size----\par\plain\f1\fs20\cf3 ----An "extent" is an IBM term and is not supported in z390 vsam----\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b\page\tab Control Intervals\par\plain\f1\fs20\cf1 ----vsam data formats----\par ----control intervals----\par\plain\f1\fs20\cf3 ----z390 vsam doesn't support Control Intervals----\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\par\tab The size of control intervals can vary from one VSAM data set to another, but all\par\tab the control intervals within the data portion of a particular data set must be the\par\tab same length. Use the access method services DEFINE command\par\par ----vsam data formats----\par ----control intervals----\par\plain\f1\fs20\cf3 ----z390 uses the DEFINE command to define vsam data sets----\par\plain\f1\fs20\cf1\par\tab and let VSAM\par\tab select the size of a control interval for a data set, or request a particular control\par\tab interval size. \par\par\tab A control interval consists of:\par\par\tab v \tab Logical records\par\par\tab v \tab Free space\par\par\tab v \tab Control information fields\par\par ----vsam data formats----\par ----control intervals----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Free Space                    ----\par ----z390 vsam does not support Control Information Fields----\par\plain\f1\fs20\cf1\par\tab In a linear data set\par\par ----vsam data formats----\par ----control intervals----\par\plain\f1\fs20\cf3 ----z390 does not support Linear Data Sets----\plain\f1\fs20\cf1\par\par\tab all of the control interval bytes are data bytes. There is no\par\tab imbedded control information.\par\par\plain\f1\fs28\b\page\tab Control Information Fields\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1 ----vsam data formats----\par ----control information fields----\par\plain\f1\fs20\cf3 ----z390 vsam does not support either CIDF or RDF----\plain\f1\fs20\cf1\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\par\tab CIDFs are 4 bytes long, and contain the amount and location of free space. RDFs\par\tab are 3 bytes long, and describe the length of records and how many adjacent\par\tab records are of the same length.\par\par\tab If two or more adjacent records have the same length, only two RDFs are used for\par\tab this group. One RDF gives the length of each record, and the other gives the\par\tab number of consecutive records of the same length. \par\par\tab If a record exceeds the maximum record length, an error message is generated.\par\par ----vsam data formats----\par ----control information fields----\par\plain\f1\fs20\cf3 ----If a record exceeds the maximum record length, an error message is generated----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----true----\plain\f1\fs20\cf1\par\par  \tab If a\par\tab record in an entry-sequenced or key-sequenced data set, or variable-length RRDS\par\par ----vsam data formats----\par ----control information fields----\par\plain\f1\fs20\cf3 ---in z390 vsam, VRRDS is implemented as an RRDS with variable-length records----\par\plain\f1\fs20\cf1\par\tab is\par\tab smaller than the maximum record length, VSAM saves disk space by storing the\par\tab actual record length in the RDF.\par\par ----vsam data formats----\par ----control information fields----\par\plain\f1\fs20\cf3 ----z390 vsam doesn't implement RDF, so the actual record length isn't stored in it----\par ----so it would need to employ a different mechanism for this----\par ----The length of a variable-length record is held in a prefix to the VES record----\par ----The length of a fixed-length record is in the vclr----\par ----There is no method of saving disk space where the record size----\par ----is smaller than the maximum record length---- \par\plain\f1\fs20\cf1\par  \tab However, in a fixed-length RRDS, records do not\par\tab vary in length. The RDF reflects the length of the record slot, and cannot be\par\tab adjusted.\par\par ----vsam data formats----\par ----control information fields----\par\plain\f1\fs20\cf3 ----in z390 vsam the length of a fixed-length record is held in the vclr----\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b\page\tab Compressed Control Information Field\par\plain\f1\fs20\cf1 ----vsam data formats----\par ----compressed control information field----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Compressed Control Information Field----\par ----z390 vsam does not support Data Compression                           ----\par\plain\f1\fs20\cf1\par\tab Compressed data records in an extended-format key-sequenced data set have a\par\tab different format than noncompressed data records. This format includes a record\par\tab prefix that contains internal compression information. When the record is a\par\tab spanned record, each segment of the record contains a segment prefix with\par\tab information similar to the record prefix for describing the segment. The length of\par\tab the record prefix for nonspanned records is 3 bytes, and the length for spanned\par\tab records is 5 bytes.\par\par ----vsam data formats----\par ----compressed control information field----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Spanned Records----\plain\f1\fs20\cf1\par\par\plain\f1\fs28\b\page\tab Control Areas\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1 ----vsam data formats----\par ----control area----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Control Areas----\plain\f1\fs20\cf1\par\par\plain\f1\fs28\b\page Selection of VSAM Data Set Types\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b\tab Entry-Sequenced Data Sets\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab An entry-sequenced data set is comparable to a sequential (non-VSAM) data set. It\par\tab contains records that can be either spanned or nonspanned. \par\par ----selection of vsam data set types----\par ----entry-sequenced data sets----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Spanned Records----\plain\f1\fs20\cf1\par\plain\f1\fs28\b\par\plain\f1\fs20\cf1\tab Records are added only at the end of the data set. Existing records cannot be\par\tab deleted. If you want to delete a record, you must flag that record as inactive.\par\par ----selection of vsam data set types----\par ----entry-sequenced data sets----\par\plain\f1\fs20\cf3 ----Since z390 vsam does not support CIDF or RDF "flagging" of inactive records----\par ----must be achieved in a different way----\par ----There is no way currently to do this flagging with ESDS----\par ----And there is no support for the ERASE macro----\par ----If an ESDS record was changed in length, then it would be added at EOF but the old one would----\par ----need to be flagged as inactive----\par\plain\f1\fs20\cf1\par\tab As\par\tab far as VSAM is concerned, the record is not deleted. Records can be updated, but\par\tab they cannot be lengthened. To change the length of a record in an entry-sequenced\par\tab data set, you must store it either at the end of the data set (as a new record) or in\par\tab the place of a record of the same length that you have flagged as inactive or that is\par\tab no longer required.\par\par ----selection of vsam data set types----\par ----entry-sequenced data sets----\par\plain\f1\fs20\cf3 ----Since z390 vsam does not support CIDF or RDF "flagging" as inactive must be achieved in a different way----\par\plain\f1\fs20\cf1\par\tab When a record is loaded or added, VSAM indicates its relative byte address (RBA).\par\par ----selection of vsam data set types----\par ----entry-sequenced data sets----\par\plain\f1\fs20\cf3 ----z390 vsam always has access to the RBA/XRBA of the record to be read, written or pointed to----\plain\f1\fs20\cf1\par\par\tab The RBA is the offset of this logical record from the beginning of the data set. The\par\tab first record in a data set has an RBA of 0. The value of the RBA for the second and\par\tab subsequent records depends on whether the file is spanned and on the control\par\tab interval size chosen for the file, either manually or automatically. In general, it is\par\tab not possible to predict the RBA of each record, except for the case of fixed-length\par\tab records and a known control interval size. \par\par\tab You build an alternate index to keep track of these RBAs. Although an\par\tab entry-sequenced data set does not contain an index component, alternate indexes\par\tab are permitted. \par\par\plain\f1\fs28\b\page\tab Simulated VSAM Access to UNIX files\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1 ----selection of vsam data set types----\par ----simulated vsam access to unix filws----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Simulated Access to UNIX Files----\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b\page\tab Key-Sequenced Data Sets\par\plain\f1\fs20\cf1\tab In a key-sequenced data set, logical records are placed in the data set in ascending\par\tab collating sequence by a field, called the key. .\par\par\tab The key must be in the same position in each record, the key data must be\par\tab contiguous, and each record's key must be unique. After it is specified, the value of\par\tab the key cannot be altered, but the entire record can be erased or deleted. \par\par ----selection of vsam data set types----\par ----key-sequenced data sets----\par\plain\f1\fs20\cf3 ----z390 vsam does not currently support the ERASE macro----\par\plain\f1\fs20\cf1\par\tab For\par\tab compressed data sets, the key itself and any data before the key will not be\par\tab compressed.\par\par ----selection of vsam data set types----\par ----key-sequenced data sets----\par\plain\f1\fs20\cf3 ----z390 vsam does not support key or data compression----\plain\f1\fs20\cf1\par\par\tab When a new record is added to the data set, it is inserted in its collating sequence\par\tab by key.\par\par ----selection of vsam data set types----\par ----key-sequenced data sets----\par\plain\f1\fs20\cf3 ----for z390 vsam, inserts are managed via code that supports KSIT/KSIR/AVL---- \par\plain\f1\fs20\cf1\par\plain\f1\fs24\b\page\tab\tab Free Space\par\plain\f1\fs20\cf1 ----selection of vsam data set types----\par ----key-sequenced data sets----\par ----free space----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Free Space----\plain\f1\fs20\b\par\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab When a key-sequenced data set is defined, unused space can be scattered\par\tab\tab throughout the data set to permit records to be inserted or lengthened. The unused\par\tab\tab space is called free space. When a new record is added to a control interval (CI) or\par\tab\tab an existing record is lengthened, subsequent records are moved into the following\par\tab\tab free space to make room for the new or lengthened record. Conversely, when a\par\tab\tab record is deleted or shortened, the space given up is reclaimed as free space for\par\tab\tab later use. When you define your data set, use the FREESPACE parameter to specify\par\tab\tab what percentage of each CI is to be set aside as free space when the data set is\par\tab\tab initially loaded.\par\par\tab\tab Within each CA, reserve free space by using free CIs. If you have free space in\par\tab\tab your CA, it is easier to avoid splitting your control area when you want to insert\par\tab\tab additional records or lengthen existing records. When you define your data set,\par\tab\tab specify what percentage of the control area is to be set aside as free space, using\par\tab\tab the FREESPACE parameter.\par\par ----selection of vsam data set types----\par ----key-sequenced data sets----\par ----free space----\par\plain\f1\fs20\cf3 ----Since Free Space is not supported by z390 vsam, all new data records are added----\par ----at the end of the VES, as are data records whose length is changed----                                                         ---- \par\plain\f1\fs20\cf1\par\plain\f1\fs24\b\page\tab\tab Considerations for Increasing Keys and Space\par\plain\f1\fs20\cf1\tab\tab The structure of VSAM prime indexes for a KSDS and a VRRDS \par\par ----selection of vsam data set types----\par ----key-sequenced data sets----\par ----considerations for increasing keys and space----\par\plain\f1\fs20\cf3 ----z390 vsam supports VRRDS as an RRDS with variable-length records----\par\plain\f1\fs20\cf1\par\tab\tab is built to create a\par\tab\tab single index record at the lowest level of the index, the sequence set, to provide\par\tab\tab pointers to each CI within a single CA. \par\par ----selection of vsam data set types----\par ----key-sequenced data sets----\par ----considerations for increasing keys and space----\par\plain\f1\fs20\cf3 ----z390 vsam does not support the concept of "a sequence set". Keys are sought via----\par ----a binary search on the KSDS index and the KSIT/KSIR, if necessary----\par\plain\f1\fs20\cf1\par\tab\tab Each entry contains a compressed value\par\tab\tab representing the highest key that can be contained within that control interval. The\par\tab\tab value stored for the control interval containing records with the highest key in that\par\tab\tab control area represents the highest record-key value that can be contained in that\par\tab\tab control area. Once all the records are deleted from any single control interval, the\par\tab\tab current high-key value is no longer associated with that control interval's entry in\par\tab\tab the sequence set record. It becomes a \loch\f1\hich\f1\'93free\'94 control interval in which records\par\tab\tab containing any key within the range of keys for that control area can be inserted.\par\par\tab\tab This is called a CI reclaim.\par\par ----selection of vsam data set types----\par ----key-sequenced data sets----\par ----considerations for increasing keys and space----\par\plain\f1\fs20\cf3 ----There is no equivalent to "a reclaim" under z390 vsam----\par\plain\f1\fs20\cf1\par\tab\tab The last empty control interval within the control area is not CI reclaimed. The\par\tab\tab high-key value for that control interval is maintained and it becomes the highest\par\tab\tab key for any record that can be inserted into that control area.When CA reclaim is\par\tab\tab not enabled, a KSDS may have many empty control areas and may continue to\par\tab\tab grow in size. This will result when applications continually add records with keys\par\tab\tab that are in ascending sequence, followed by another or the same application that\par\tab\tab deletes old records. During the deletion processing, the high-key value that was\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\tab\tab associated with that CA will be maintained, requiring that only records falling\par\tab\tab within that high-key range are eligible for insertion into that control area. If the\par\tab\tab record keys are always getting higher, no new records will qualify for insertion\par\tab\tab into those empty control areas. The result is a data set in which a majority of the\par\tab\tab space is occupied by empty control intervals.\par\par\tab\tab One option a user has to reclaim this space is to reorganize the data set. This will\par\tab\tab require a logical copy of the data set, followed by a deletion of the old data set and\par\tab\tab a reload operation from the logical copy. However, such data set reorganization is\par\tab\tab time consuming. To minimize the need for reorganizing data sets, use the CA\par\tab\tab reclaim function. With CA reclaim, empty CA space is reclaimed automatically and\par\tab\tab CA split processing uses control areas that have been reclaimed instead of using\par\tab\tab space at the end of the data and index. \par\par ----selection of vsam data set types----\par ----key-sequenced data sets----\par ----considerations for increasing keys and space----\par\plain\f1\fs20\cf3 ----z390 does support REPRO by which an unload/reload is, indeed, possible----\par\plain\f1\fs20\cf1\par\plain\f1\fs24\b\page\tab\tab Prime Index\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab A key-sequenced data set always has a prime index \par\par ----selection of vsam data set types----\par ----key-sequenced data sets----\par ----prime index----\par\plain\f1\fs20\cf3 ----z390 vsam has an index file (VX0) which has records holding the prime keys which point to----\par ----the XRBA of the data record residing in the VES file. Prime keys are maintained in the----\par ----file in collating sequence. KSIT/KSIR will be used for inserts to maintain the collating ----\par ----sequence. A binary search on these indexes(VX0) is used in locating the XRBA of a data record(VES)----\par\plain\f1\fs20\cf1\par\tab\tab that relates key values to the\par\tab\tab relative locations of the logical records in a data set. The prime index, or simply\par\tab\tab index, has two uses in locating:\par\par\tab\tab v \tab The collating position when inserting records\par\par\tab\tab v \tab Records for retrieval\par\par\tab\tab When initially loading a data set, records must be presented to VSAM in key\par\tab\tab sequence. The index for a key-sequenced data set is built automatically by VSAM\par\tab\tab as the data set is loaded with records.\par\par\tab\tab When a data control interval is completely loaded with logical records, free space,\par\tab\tab and control information, VSAM makes an entry in the index. The entry consists of\par\tab\tab the highest possible key in the data control interval and a pointer to the beginning\par\tab\tab of that control interval.\par\par ----selection of vsam data set types----\par ----key-sequenced data sets----\par ----prime index----\par\plain\f1\fs20\cf3 ----"The entry in the index of the highest possible key in the data control interval           ----\par ----and a pointer to the beginning of that control interval, when a data control                 ----\par ----interval is completely loaded with logical records", is not supported under z390 vsam----\par\par\plain\f1\fs20\cf1 ----selection of vsam data set types----\par ----key-sequenced data sets----\par ----prime index----\par\plain\f1\fs20\cf3 ----z390 vsam can detect the length of a file and thus know the XRBA of that location   ----\par\plain\f1\fs20\cf1\par\plain\f1\fs24\b\page\tab\tab Key Compression\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab The key in an index entry is stored by VSAM in a compressed form. Compressing\par\tab\tab the key eliminates from the front and back of a key those bytes that are not\par\tab\tab necessary to distinguish it from the adjacent keys. Compression helps achieve a\par\tab\tab smaller index by reducing the size of keys in index entries. VSAM automatically\par\tab\tab does key compression in any key-sequenced data set. It is independent of whether\par\tab\tab the data set is in compressed format.\par\par ----selection of vsam data set types----\par ----key-sequenced data sets----\par ----key compression----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Key Compression----\par\plain\f1\fs20\cf1\par\plain\f1\fs24\b\page\tab\tab Control Interval Splits\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1 ----selection of vsam data set types----\par ----key-sequenced data sets----\par ----control interval splits----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Control Interval Splits----\plain\f1\fs20\cf1\par\par\tab\tab When a data set is first loaded, the key sequence of data records and their physical\par\tab\tab order are the same. However, when data records are inserted, control interval splits\par\tab\tab can occur, causing the data control intervals to have a physical order that differs\par\tab\tab from the key sequence.\par\par ----selection of vsam data set types----\par ----key-sequenced data sets----\par ----control interval splits----\par\plain\f1\fs20\cf3 ----z390 vsam maintains the VX0 (index file) in logical collating sequence, but not in physical collating sequence----\plain\f1\fs20\cf1\par\par\plain\f1\fs28\b\page\tab Linear Data Sets\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1 ----selection of vsam data set types----\par ----linear data sets----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Linear Data Sets----\par\plain\f1\fs20\cf1\par\tab A linear data set is a VSAM data set with a control interval size of 4096 bytes to 32\par\tab 768 bytes in increments of 4096 bytes. A linear data set does not have imbedded\par\tab control information. All linear data set bytes are data bytes.\par\par\tab A linear data set is processed as an entry-sequenced data set, with certain\par\tab restrictions. Because a linear data set does not contain control information (CIDFs\par\tab and RDFs), it cannot be accessed as if it contained individual records. You can\par\tab access a linear data set using these techniques:\par\par\tab v \tab VSAM\par\par\tab v\tab  DIV, if the control interval size is 4096 bytes.\par\par\tab v \tab Window services, if the control interval size is 4096 bytes.\par\par\plain\f1\fs28\b\page\tab Fixed-Length Relative-Record Data Sets\plain\f1\fs20\cf1\par\tab A fixed-length RRDS consists of several fixed-length slots. \par\par ----selection of vsam data set types----\par ----fixed-length relative-record data sets----\par\plain\f1\fs20\cf3 ----z390 vsam replaces the concept of "slots" in RRDS/vRRDS with an index(VX0)----\par\plain\f1\fs20\cf1\par\tab A fixed-length RRDS is\par\tab defined using NUMBERED and a RECORDSIZE whose average and maximum\par\tab lengths are the same.\par\par\tab Each slot has a unique relative record number, and the slots are sequenced by\par\tab ascending relative record number. Each record occupies a slot and is stored and\par\tab retrieved by the relative record number of that slot. The position of a data record is\par\tab fixed; its relative record number cannot change. A fixed-length RRDS cannot have\par\tab a prime index or an alternate index.\par\par ----selection of vsam data set types----\par ----fixed-length relative-record data sets----\par\plain\f1\fs20\cf3 ----in z390 vsam the relative record number of an RRDS is translated into a VX0 XRBA----\par ----by multiplying the rrn by 8 (the size of an individual XRBA)----\par\plain\f1\fs20\cf1\par\tab Because the slot can either contain data or be empty, a data record can be inserted\par\tab or deleted without affecting the position of other data records in the fixed-length\par\tab RRDS. The record definition field (RDF) shows whether the slot is occupied or\par\tab empty.\par\par ----selection of vsam data set types----\par ----fixed-length relative-record data sets----\par\plain\f1\fs20\cf3 ----z390 vsam must provide a different mechanism since it doesn't support RDF----\par ----Empty "slots" won't occur because the ERASE macro is not supported and----\par ----records are always added at EOF, so we never create "empty "slots"----\par\par\plain\f1\fs20\cf1\tab Free space is not provided in a fixed-length RRDS because the entire data\par\tab set is divided into fixed-length slots.\par\par\tab In a fixed-length RRDS, each control interval contains the same number of slots.\par\tab The number of slots is determined by the control interval size and the record\par\tab length. \par\par\plain\f1\fs28\b\page\tab Variable-Length Relative-Record Data Sets\plain\f1\fs20\cf1\par ----selection of vsam data set types----\par ----variable-length relative-record data sets----\par\plain\f1\fs20\cf3 ----z390 vsam supports VRRDS as variable-length RRDS----\par ----vRRDS are treated in the same way as RRDS----\par\par\plain\f1\fs20\cf1\tab A variable-length RRDS (VRRDS) is similar to a fixed-length RRDS, except that it\par\tab contains variable-length records. Each record has a unique relative record number,\par\tab and is placed in ascending relative record number order. Each record is stored and\par\tab retrieved using its relative record number. Unlike a fixed-length RRDS, a\par\tab variable-length RRDS does not have slots. The relative record number of a record\par\tab cannot change. When that record is erased, the relative record number can be\par\tab reused for a new record.\par\par ----selection of vsam data set types----\par ----variable-length relative-record data sets----\par\plain\f1\fs20\cf3 ----in z390 vsam, the VRRDS is treated as a variable-length RRDS----\par ----in z390 vsam, deletion/erasure is not supported----\par ----in z390 vsam, vRRDS has "slots" implemented via an index in VX0----\par\plain\f1\fs20\cf1\par\tab You must load the variable-length RRDS sequentially in ascending relative record\par\tab number order. To define a variable-length RRDS, specify NUMBERED and\par\tab RECORDSIZE. The average record length and maximum record length in\par\tab RECORDSIZE must be different.\par\par\tab Free space is used for inserting and lengthening variable-length RRDS records.\par\tab When a record is deleted or shortened, the space given up is reclaimed as free\par\tab space for later use. When you define your data set, use the FREESPACE parameter\par\tab to specify what percentage of each control interval and control area is to be set\par\tab aside as free space when the data set is initially loaded.\par\par ----selection of vsam data set types----\par ----variable-length relative-record data sets----\par\plain\f1\fs20\cf3 ----z390 vsam does not support "free space"----\par ----z390 vsam does not support reclaimed space----\par ----since there is no way to flag a record as being empty/erased/inactive----\par ----Since there are no empty/erased/inactive records, "inserts" are not possible----\par ----except at EOF----\par\plain\f1\fs20\cf1\par\tab A variable-length RRDS cannot have spanned records and alternate indexes.\par\tab VRRDS is a KSDS processed as an RRDS so a prime index is created.\par\par\tab Variable-length RRDS performance is similar to a key-sequenced data set, and is\par\tab slower than for a fixed-length RRDS. .\par\par\plain\f1\fs28\b\page\tab Extended-Format VSAM Data Sets\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1 ----selection of vsam data set types----\par ----extended-format vsam data sets----\par\plain\f1\fs20\cf3 ----z290 vsam does not support extended-format vsam data sets----\par\par\plain\f1\fs28\b\page Access to Records in a VSAM Data Set\par\plain\f1\fs20\cf1 You can use addressed-sequential and addressed-direct access for the following\par types of data sets:\par\par v \tab Entry-sequenced data sets\par\par v \tab Key-sequenced data sets\par\par ----access to records in a vsam data set----\par\plain\f1\fs20\cf3 ----z390 vsam does not support addressed access of KSDS----\par\plain\f1\fs20\cf1\par You can use keyed-sequential, keyed-direct, and skip-sequential\par\par ----access to records in a vsam data set----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Skip Sequential----\plain\f1\fs20\cf1  \par\par access for the\par following types of data sets:\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\par v \tab Key-sequenced data sets\par\par v \tab Fixed-length RRDSs\par\par v \tab Variable-length RRDS\par\par All types of VSAM data sets, including linear, can be accessed by control interval\par access, but this is used only for very specific applications. CI mode processing is\par not permitted when accessing a compressed data set. The data set can be opened\par for CI mode processing to permit VERIFY and VERIFY REFRESH processing only.\par\par ----access to records in a vsam data set----\par\plain\f1\fs20\cf3 ----z390 vsam does not support VERIFY or VERIFY REFRESH----\plain\f1\fs20\cf1\par\par\plain\f1\fs28\b\page\tab Access to Entry-Sequenced Data Sets\par\plain\f1\fs20\cf1\tab Entry-sequenced data sets are accessed by address, either sequentially or directly.\par\tab When addressed sequential processing is used to process records in ascending\par\tab relative byte address (RBA) sequence, VSAM automatically retrieves records in\par\tab stored sequence.\par\par ----access to records in a vsam data set----\par ----access to entry-sequenced data sets----\par\plain\f1\fs20\cf3 ----z390 vsam does not support CIDF/RDF thus detection of empty records must be achieved via a different mechanism----\par ----There won't be empty ESDS records because the ERASE macro is not supported----\plain\f1\fs20\cf1\par\par\tab To access a record directly from an entry-sequenced data set, you must supply the\par\tab RBA for the record as a search argument. \par\par ----access to records in a vsam data set----\par ----access to entry-sequenced data sets----\par\plain\f1\fs20\cf3 ----in z390 vsam, To access a record directly from an entry-sequenced data set, you must supply the----\par ----\plain\f1\fs20\b\i\ul\cf3 XRBA \plain\f1\fs20\cf3 or RBA for the record as a search argument----\par\plain\f1\fs20\cf1\par\tab Skip-sequential processing is not supported for entry-sequenced data sets.\par\par ----access to records in a vsam data set----\par ----access to entry-sequenced data sets----\par\plain\f1\fs20\cf3 ----ibm vsam doesn't support skip-sequential processing for ESDS----\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b\page\tab Access to Key-Sequenced Data Sets\par\plain\f1\fs20\cf1\tab The most effective way to access records of a key-sequenced data set is by key,\par\tab using the associated prime index.\par\par\plain\f1\fs24\b\tab\tab Keyed-Sequential Access\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab Sequential access is used to load a key-sequenced data set and to retrieve, update,\par\tab\tab add, and delete records in an existing data set. When you specify sequential as the\par\tab\tab mode of access, VSAM uses the index to access data records in ascending or\par\tab\tab descending sequence by key. When retrieving records, you do not need to specify\par\tab\tab key values because VSAM automatically obtains the next logical record in\par\tab\tab sequence.\par\par ----access to records in a vsam data set----\par ----access to key-sequenced data sets----\par ----keyed-sequential access----\par\plain\f1\fs20\cf3 ----z390 vsam, with sequential access of KSDS, the index (VX0/KSIT/KSIR) is processed sequentially----\par ----and initially and subsequently, you do not need to provide a key---- \plain\f1\fs20\cf1\par\par\tab\tab Sequential processing can be started anywhere within the data set. While\par\tab\tab positioning is not always required (for example, the first use of a data set starts\par\tab\tab with the first record), it is best to specify positioning using one of the following\par\tab\tab methods:\par\par\tab\tab v \tab Use the POINT macro.\par\par\tab\tab v \tab Issue a direct request with note string positioning (NSP),\par\par ----access to records in a vsam data set----\par ----access to key-sequenced data sets----\par ----keyed-sequential access----\par\plain\f1\fs20\cf3 ----z390 vsam does not support NSP for string positioning----\plain\f1\fs20\cf1\par\par\tab\tab\tab and change the request\par\tab\tab\tab parameter list with the MODCB macro from \loch\f1\hich\f1\'93direct\'94 to \'93sequential\'94 or \'93skip\par\tab\tab\tab sequential\'94.\par\par ----access to records in a vsam data set----\par ----access to key-sequenced data sets----\par ----keyed-sequential access----\par\plain\f1\fs20\cf3 ----z390 vsam does not support skip sequential----\par\plain\f1\fs20\cf1\par\tab\tab v \tab Use MODCB to change the request parameter list to last record (LRD)\par\tab\tab\tab backward (BWD), and direct NSP; then change the RPL to SEQ, BWD, and\par  \tab\tab\tab SEQ.\par\tab\tab\tab Sequential access enables you to avoid searching the index more than once.\par\tab\tab\tab Sequential is faster than direct for accessing multiple data records in ascending\par  \tab\tab\tab key order.\par\par ----access to records in a vsam data set----\par ----access to key-sequenced data sets----\par ----keyed-sequential access----\par\plain\f1\fs20\cf3 ----z390 vsam vz390 doesn't do any explicit processing for GENCB, MODCB, TESTCB or SHOWCB----\par ----The processing is done within the mac routines themselves----                                            ----\par ----One would have to test the transition of RPL parameters/sub-parameters (LRD,BWD/SEQ,BWD/SEQ)----\par ----for KSDS----\plain\f1\fs20\cf1  \par\par\plain\f1\fs24\b\tab\tab Keyed-Direct Access\par\plain\f1\fs20\cf1\tab\tab Direct access is used to retrieve, update, delete and add records. When direct\par\tab\tab processing is used, VSAM searches the index from the highest level index-set\par\tab\tab record to the sequence-set for each record to be accessed.\par\par ----access to records in a vsam data set----\par ----access to key-sequenced data sets----\par ----keyed-direct access----\par\plain\f1\fs20\cf3 ----z390 vsam does not support the "index set"---\par ----it uses a binary search on the VX0/KSIT/KSIR to find a prime key directly----\par ----Sequential processing of the index(VX0) is possible----\par\plain\f1\fs20\cf1\par\tab\tab Searches for single\par\tab\tab records with random keys is usually done faster with direct processing. You need\par\tab\tab to supply a key value for each record to be processed.\par\par ----access to records in a vsam data set----\par ----access to key-sequenced data sets----\par ----keyed-direct access----\par\plain\f1\fs20\cf3 ----z390 vsam uses a binary search on the index records(vx0/KSIT/KSIR) to locate a record for a KSDS key----\plain\f1\fs20\cf1\par\par\tab\tab For retrieval processing, either supply the full key or a generic key. The generic\par\tab\tab key is the high-order portion of the full key. For example, you might want to\par\tab\tab retrieve all records whose keys begin with the generic key AB, regardless of the\par\tab\tab full key value. Direct access lets you avoid retrieving the entire data set\par\tab\tab sequentially to process a small percentage of the total number of records.\par\par ----access to records in a vsam data set----\par ----access to key-sequenced data sets----\par ----keyed-direct access----\par\plain\f1\fs20\cf3 ----z390 vsam supports the usage of RPL OPTCD(KGE and GEN) for a KSDS data set----\plain\f1\fs20\cf1\par\par\par\plain\f1\fs24\b\tab\tab Skip-Sequential Access\par\plain\f1\fs20\cf1 ----access to records in a vsam data set----\par ----access to key-sequenced data sets----\par ----skip-sequential access----\par\plain\f1\fs20\cf3 ----z390 vsam does not support "skip sequential" access----\plain\f1\fs24\par\plain\f1\fs20\cf1\par\tab\tab Skip-sequential access is used to retrieve, update, delete, and add records. When\par\tab\tab skip-sequential is specified as the mode of access, VSAM retrieves selected records,\par\tab\tab but in ascending sequence of key values. Skip-sequential processing lets you avoid\par\tab\tab retrieving a data set or records in the following inefficient ways:\par\par\tab\tab v \tab Entire data set sequentially to process a small percentage of the total number of\par\tab\tab\tab records\par\par\tab\tab v \tab Desired records directly, which would cause the prime index to be searched\par\tab\tab\tab from the top to the bottom level for each record\par\par\plain\f1\fs24\b\tab\tab Addressed Access\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab Another way of accessing a key-sequenced data set is addressed access, using the\par\tab\tab RBA\par\par ----access to records in a vsam data set----\par ----access to key-sequenced data sets----\par ----addressed access----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Addressed Access for KSDS----\par ----addressed access is only permitted with ESDS----\plain\f1\fs20\cf1\par\par  \tab\tab of a logical record as a search argument. If you use addressed access to\par\tab\tab process key-sequenced data, you should be aware that RBAs might change when a\par\tab\tab control interval split occurs or when records are added, deleted, or changed in size.\par\par\tab\tab With compressed data sets, the RBAs for compressed records are not predictable.\par\par\tab\tab Therefore, access by address is not suggested for normal use.\par\par\plain\f1\fs28\b\page\tab Access to Linear Data Sets\par\par\plain\f1\fs20\cf1 ----access to records in a vsam data set----\par ----access to linear data sets----\par\plain\f1\fs18\b\cf3 ----z390 vsam does not support LDS----\plain\f1\fs28\b\par\plain\f1\fs20\cf1\par\tab You can access a linear data set with VSAM, the DIV macro, or window services.\par\par\tab To update a linear data set using VSAM, you must use control interval access, and\par\tab must have control authority. To read a linear data set with VSAM, you must use\par\tab control interval access, and must have read authority.\par  \par\tab DFSMS Access Method Services for Catalogs for available options and associated\par\tab restrictions for the LINEAR parameter.\par\par\tab The following family of window services for accessing linear data sets is described\par\tab in z/OS MVS Programming: Assembler Services Guide and z/OS MVS Programming:\par\tab Assembler Services Reference ABE-HSP:\par\par\tab v \tab CSRIDAC \tab -- \tab Request or Terminate Access to a Data Object\par\tab v \tab CSRVIEW \tab -- \tab View an Object\par\tab v \tab CSREVW \tab -- \tab View an Object and Sequentially Access It\par\tab v \tab CSRREFR \tab -- \tab Refresh an Object\par\tab v \tab CSRSCOT \tab -- \tab Save Object Changes in a Scroll Area\par\tab v \tab CSRSAVE \tab -- \tab Save Changes Made to a Permanent Object\par\par\plain\f1\fs28\b\page\tab Access to Fixed-Length Relative-Record Data Sets\plain\f1\fs20\cf1\par\tab The relative record number is always used as a search argument for a fixed-length \par\tab RRDS.\par\par\plain\f1\fs24\b\tab\tab Keyed-Sequential Access\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab Sequential processing of a fixed-length RRDS is the same as sequential processing\par\tab\tab of an entry-sequenced data set. Empty slots are automatically skipped by VSAM.\par\par ----access to records in a vsam data set----\par ----access to fixed-length relative-record data sets----\par ----keyed-sequential access----\par\plain\f1\fs20\cf3 ----z390 vsam does not support CIDF/RDF thus detection of empty slots must be achieved via a different mechanism----\par ----There won't be "empty slots" in a fixed-length RRDS----\plain\f1\fs20\cf1\par\par\plain\f1\fs24\b\tab\tab Skip-Sequential Access\par\par\plain\f1\fs20\cf1 ----access to records in a vsam data set----\par ----access to fixed-length relative-record data sets----\par ----skip-sequential access----\par\plain\f1\fs20\b\cf3 ----z390 vsam does not support "skip sequential" access----\par\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab Skip-sequential processing is treated like direct requests, except that VSAM\par\tab\tab maintains a pointer to the record it just retrieved. When retrieving subsequent\par\tab\tab records, the search begins from the pointer, rather than from the beginning of the\par\tab\tab data set. Records must be retrieved in ascending sequence.\par\par\plain\f1\fs24\b\tab\tab Keyed-Direct Access\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab A fixed-length RRDS can be processed directly by supplying the relative record\par\tab\tab number as a key. VSAM converts the relative record number to an RBA and\par\tab\tab determines the control interval containing the requested record. If a record in a slot\par\tab\tab flagged as empty is requested, a no-record-found condition is returned.\par\par ----access to records in a vsam data set----\par ----access to fixed-length relative-record data sets----\par ----keyed-direct access----\par\plain\f1\fs20\cf3 ----z390 vsam must provide a different method to "flag" a slot as empty----\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf3 ----RRDS doesn't have "empty slots"---- \par\plain\f1\fs20\cf1\par\tab\tab You cannot\par\tab\tab use an RBA value to request a record in a fixed-length RRDS.\par\par ----access to records in a vsam data set----\par ----access to fixed-length relative-record data sets----\par ----keyed-direct access----\par\plain\f1\fs20\cf3 ----in z390 vsam, We should test requesting a record in a fixed-length RRDS via RBA to ensure it's failure----\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b\page\tab Access to Variable-Length Relative-Record Data Sets\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab The relative record number is used as a search argument for a variable-length RRDS.\par\par ----access to records in a vsam data set----\par ----access to variable-length relative-record data sets----\par\plain\f1\fs20\cf3 ----in z390 vsam, a variable-length RRDS is treated in the same way as an RRDS----\par\plain\f1\fs20\cf1\par\plain\f1\fs24\b\tab\tab Keyed-Sequential Access\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab Sequential processing of a variable-length RRDS is the same as for an\par\tab\tab entry-sequenced data set. On retrieval, relative record numbers that do not exist\par\tab\tab are skipped.\par\par ----access to records in a vsam data set----\par ----access to variable-length relative-record data sets----\par ----keyed-sequential access----\par\plain\f1\fs20\cf3 ----z390 vsam never writes a RRDS/vRRDS which is empty or that doesn't have a VES record----\par ----and thus they all will "exist"----\par\plain\f1\fs20\cf1\par\tab\tab On insert, if no relative record number is supplied, VSAM uses the\par\tab\tab next available relative record number.\par\par ----access to records in a vsam data set----\par ----access to variable-length relative-record data sets----\par ----keyed-sequential access----\par\plain\f1\fs20\cf3 ----z390 vsam, all records in an RRDS/vRRDS are occupied, so one cannot "insert" a record----\par ----one can add records at EOF----\par\plain\f1\fs20\cf1\par\plain\f1\fs24\b\tab\tab Skip-Sequential Access\par\plain\f1\fs20\cf1 ----access to records in a vsam data set----\par ----access to variable-length relative-record data sets----\par ----skip-sequential access----\par\plain\f1\fs20\cf3 ----on z390 vsam skip-sequential access is not supported----\plain\f1\fs20\b\cf3\par\par\plain\f1\fs20\cf1\tab\tab Skip-sequential processing is used to retrieve, update, delete, and add\par\tab\tab variable-length RRDS records. Records must be retrieved in ascending sequence.\par\par\plain\f1\fs24\b\tab\tab Keyed-Direct Access\plain\f1\fs20\cf1\par\tab\tab A variable-length RRDS can be processed directly by supplying the relative record\par\tab\tab number as a key. If you want to store a record in a specific relative record position,\par\tab\tab use direct processing and assign the desired relative record number. VSAM uses\par\tab\tab the relative record number to locate the control interval containing the requested\par\tab\tab record. You cannot use an RBA value to request a record in a variable-length RRDS.\par\par ----access to records in a vsam data set----\par ----access to variable-length relative-record data sets----\par ----keyed-direct access----\par\plain\f1\fs20\cf3 ----on z390 vsam, We should test requesting a record of a variable-length RRDS via an RBA----\plain\f1\fs20\b\cf3\par\plain\f1\fs20\cf3 ----to ensure it's failure----\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b\page Access to Records through Alternate Indexes\par\plain\f1\fs20\cf1 You can use access method services to define and build one or more alternate\par indexes over a key-sequenced or entry-sequenced data set, which is called the base\par cluster. An alternate index provides access to records by using more than one key.\par\par ----access to records through alternate indexes----\par\plain\f1\fs20\cf3 ----z390 vsam allows an alternate index to be built but does not appear to support----\par ----the automatic upgrade of alternate indexes----\par ----We should test the use of Alternate Indexes----\par\par\plain\f1\fs20\cf1 ----access to records through alternate indexes----\par\plain\f1\fs20\cf3 ----z390 vsam, the usage of alternate indexes will have to be investigated----\par ----Alternate Indexes and Paths are referenced within the OPEN java code----\par\plain\f1\fs20\cf1\par The alternate index accesses records in the same way as the prime index of a\par key-sequenced data set. An alternate index eliminates the need to store multiple\par copies of the same information for different applications. The alternate index is\par built from all the records in a base cluster. However, it is not possible to build an\par alternate index from only specific records in the base cluster.\par\par Unlike a primary key, which must be unique, the key of an alternate index can\par refer to more than one record in the base cluster. An alternate-key value that points\par to more than one record is nonunique. If the alternate key points to only one\par record, the pointer is unique.\par\par Restriction: The maximum number of nonunique pointers associated with an\par alternate index data record cannot exceed 32 767.\par\par ----access to records through alternate indexes----\par\plain\f1\fs20\cf3 ----the limit of 32,767 alternate indexes does not apply to z390 vsam----\par\plain\f1\fs20\cf1\par Alternate indexes are not supported for linear data sets, RRDS, or reusable data\par sets (data sets defined with the REUSE attribute). \par\par ----access to records through alternate indexes----\par\plain\f1\fs20\cf3 ----z390 vsam does not seem to support REUSE----\par\par\plain\f1\fs20\cf1 ----access to records through alternate indexes----\par\plain\f1\fs20\cf3 ----z390 vsam only supports the index data for the alternate index----\par ----which points to the primary key of the KSDS----\par\par\plain\f1\fs20\cf1 ----access to records through alternate indexes----\par\plain\f1\fs20\cf3 ----z390 vsam's alternate index for an ESDS resides in the VXN  ----\par ----file, which may have duplicate indexes. Indexes hold the ----\par ----XRBA of the prime data record----\plain\f1\fs20\cf1\par\par The alternate index is a key-sequenced data set; it consists of an index component\par and a data component. The records in the data component contain an alternate key\par and one or more pointers to data in the base cluster. \par\par ----access to records through alternate indexes----\par\plain\f1\fs20\cf3 ----Finding the location of the start or end of a group of duplicate alternate keys via a binary search----\par ----in z390 vsam would be somewhat difficult----\par\plain\f1\fs20\cf1\par For an entry-sequenced base\par cluster, the pointers are RBA values. For a key-sequenced base cluster, the pointers\par are primary-key values.\par\par Each record in the data component of an alternate index is of variable length and\par contains header data, the alternate key, and at least one pointer to a base data\par record. Header data is fixed length and provides the following information:\par\par ----access to records through alternate indexes----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Header data----\plain\f1\fs20\cf1\par\par v \tab Whether the alternate index data record contains primary keys or RBA pointers\par v \tab Whether the alternate index data record contains unique or nonunique keys\par v \tab The length of each pointer\par v \tab The length of the alternate key\par v \tab The number of pointers\par\par\plain\f1\fs28\b\page\tab Alternate Index Structure for a Key-Sequenced Data Set\par\plain\f1\fs20\cf1\par ----access to records through alternate indexes----\par ----alternate index structure for a key-sequenced data set----\par\plain\f1\fs20\cf3 ----in z390 vsam, the searching of an alternate key for a KSDS will have to be investigated and tested----\plain\f1\fs20\cf1\par\par\plain\f1\fs28\b\page\tab Alternate Index Structure for an Entry-Sequenced Data Set\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\par ----access to records through alternate indexes----\par ----alternate index structure for a entry-sequenced data set----\par\plain\f1\fs20\cf3 ----in z390 vsam, the searching of an alternate key for a ESDS will have to be investigated and tested----\plain\f1\fs20\cf1\par\par\plain\f1\fs28\b\tab\page\tab Building of an Alternate Index\par\plain\f1\fs20\cf1 ----access to records through alternate indexes----\par ----building of an alternate index----\par\plain\f1\fs20\cf3 ----z390 vsam builds an alternate index via REPRO----\par\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab When you build an alternate index, the alternate key can be any field in the base\par\tab data set's records that has a fixed length and a fixed position in each record. The\par\tab alternate-key field must be in the first segment of a spanned record. Keys in the\par\tab data component of an alternate index are not compressed; the entire key is\par\tab represented in the alternate-index data record.\par\par\tab A search for a given alternate key reads all the base cluster records containing this\par\tab alternate key. For the key-sequenced data set, several\par\tab primary-key pointers (customer numbers) are in the alternate-index data record.\par\tab\par\tab There is one for each occurrence of the alternate key (salesman's name) in the base\par\tab data set. For the entry-sequenced data set, several RBA pointers are in the alternate\par\tab index data record. There is one for each occurrence of the alternate key (salesman's\par\tab name) in the base data set. The pointers are ordered by arrival time.\par\par ----access to records through alternate indexes----\par ----building of an alternate index----\par\plain\f1\fs20\cf3 ----in z390, we'll have to test that the pointers in the Alternate Index are indeed in the sequence of their arrival time----\par\plain\f1\fs20\cf1\par\tab Before a base cluster can be accessed through an alternate index, a path must be\par\tab defined. A path provides a way to gain access to the base data through a specific\par\tab alternate index. To define a path use the access method services command DEFINE\par\tab PATH.\par\par\plain\f1\fs28\b\page\tab Automatic Upgrade of Alternate Indexes\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\par ----access to records through alternate indexes----\par ----automatic upgrade of alternate indexes----\par\plain\f1\fs20\cf3 ----z390 vsam does not support the Automatic Upgrade of Alternate Indexes----\plain\f1\fs20\cf1\par\par\tab VSAM determines the number of resources required to complete upgrading all the\par\tab alternate indexes defined for the base VSAM cluster. If there are insufficient\par\tab resources, the request fails and the application has the option of retrying the failed\par\tab request.\par\par\plain\f1\fs28\b\page Data Compression\par\plain\f1\fs20\cf1 ----data compression----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Data Compression---\plain\f1\fs28\b\par\par\plain\f1\fs20\cf1 When deciding whether to compress data, consider the following guidelines and\par rules:\par\par v \tab Compress when an existing data set is approaching the 4 gigabyte VSAM size\par\tab limit or when you have capacity constraints\par\par v \tab Only SMS-managed data is eligible for compression\par\par v \tab The data set must be an extended format key-sequenced data set\par\par v \tab Control interval access is not permitted\par\par v \tab Compression could require excessive amounts of storage when processed in\par\tab locate mode (OPTCD=LOC)\par\par v \tab The GSR option is not permitted for compressed data sets\par\par v \tab Compression processing can negatively impact CPU and elapsed times.\par\tab You can convert an application to compression processing if the application uses\par\tab data that can be highly compressible based on the structure or type of data. One\par\tab consideration could be the length of the data records:\par\par v \tab The records can be large relative to the size of a control interval.\par\par v \tab Smaller control interval sizes can be desirable because of the random structure of\par\tab the data.\par\par v \tab When a smaller control interval size is used without compressing data records,\par\tab the length of the records can require a spanned data set. Records placed in a\par\tab spanned data set are less likely to span control intervals when compression is\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\tab used. The result could improve performance when VSAM processes the data\par\tab because the amount of input/output required to GET or PUT the record is\par\tab reduced.\par\par Any program other than DFSMSdss, REPRO, and any other physical data\par copy/move program that does direct input/output to DASD for data sets which\par have data in compressed format can compromise data integrity. These programs\par must be modified to access the data using VSAM keyed access to permit expansion\par of compressed data.\par\par\plain\f1\fs32\b\page Chapter 9. Processing VSAM Data Sets\par\plain\f1\fs20\cf1 To process VSAM data sets, you use VSAM macros. You can use the following\par procedure for processing a VSAM data set to read, update, add, or delete data:\par\par 1. \tab Create an access method control block to identify the data set to be opened\par\tab using the ACB or GENCB macro.\par\par 2. \tab Create an exit list to specify the optional exit routines that you supply, using\par\tab the EXLST or GENCB macro.\par\par ----processing vsam data sets----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Exit Lists----\plain\f1\fs20\cf1\par\par 3. \tab Optionally, create a resource pool, using the BLDVRP macro. \par\par ----processing vsam data sets----\par\plain\f1\fs20\cf3 ----z390 vsam does not support the BLDVRP macro----\plain\f1\fs20\cf1  \par\par 4. \tab Connect your program to the data set you want to process, using the OPEN \par\tab macro.\par\par ----processing vsam data sets----\par\plain\f1\fs20\cf3 ----in z390 vsam, the OPEN macro actually will have to be looked at more thoroughly----\par\plain\f1\fs20\cf1\par 5. \tab Create a request parameter list to define your request for access, using the RPL\par\tab or GENCB macro.\par\par 6. \tab Manipulate the control block contents using the GENCB, TESTCB, MODCB and\par\tab SHOWCB macros.\par\par ----processing vsam data sets----\par\plain\f1\fs20\cf3 ----in z390 vsam, GENCB, MODCB, SHOWCB and TESTCB need further investigation,----\par ----All of their code is external in MACs----\par ----GENCB, MODCB, SHOWCB and TESTCB use GETMAIN to build the CB for the ACB and the RPL, which they----\par ----then populate with appropriate field values. Presumably, a pointer to the appropriate address is maintained----\par\plain\f1\fs20\cf1\par 7. \tab Request access to the data set, using one or more of the VSAM request macros\par\tab (GET, PUT, POINT, ERASE, CHECK, and ENDREQ).\par\par ----processing vsam data sets----\par\plain\f1\fs20\cf3 ----z390 vsam does not support CHECK or ENDREQ (although there was the intention of supporting the latter)----\par ----The ERASE macro is there but has no code to delete anything---- \plain\f1\fs20\cf1\par\par 8. \tab Disconnect your program from the data set, using the CLOSE macro.\par\tab The virtual resource pool for all components of the clusters or alternate indexes\par\tab must be successfully built before any open is issued to use the resource pool;\par\tab otherwise, the results might be unpredictable or performance problems might\par\tab occur.\par\par ----processing vsam data sets----\par\plain\f1\fs20\cf3 ----in z390 vsam, further investigation is needed for the CLOSE macro----\par\plain\f1\fs20\cf1\par The ACB, RPL, and EXLST are created by the caller of VSAM. When storage is\par obtained for these blocks, virtual storage management assigns the PSW key of the\par requestor to the subpool storage. An authorized task can change its PSW key. Since\par VSAM record management runs in the protect key of its caller, such a change\par might make previously acquired control blocks unusable because the storage key\par of the subpool containing these control blocks no longer matches the VSAM caller's\par key.\par\par ----processing vsam data sets----\par\plain\f1\fs20\cf3 ----in z390 vsam, theris no concept of an authorized task----\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b\page Creating an Access Method Control Block\plain\f1\fs20\cf1\par Before opening a data set for processing, you must create an access method control\par block (ACB) that:\par\par v \tab Identifies the data set to be opened\par\par v \tab Specifies the type of processing\par\par v \tab Specifies the basic options\par\par v \tab Indicates if a user exit routine is to be used while the data set is being processed\par\tab Include the following information in your ACB for OPEN to prepare the kind of\par\tab processing your program requires:\par\par ----creating an access method control block----\par\plain\f1\fs20\cf3 ----z390 vsam does not support user exit routines----\plain\f1\fs20\cf1\par\par v \tab The address of an exit list for your exit routines. Use the EXLST macro to\par\tab construct the list.\par\par ----creating an access method control block----\par\plain\f1\fs20\cf3 ----z390 vsam does not support exit lists----\plain\f1\fs20\cf1\par\par v \tab If you are processing concurrent requests, the number of requests (STRNO)\par\tab defined for processing the data set. .\par\par ----creating an access method control block----\par\plain\f1\fs20\cf3 ----z390 vsam does not support concurrent requests or STRNO----\plain\f1\fs20\cf1\par\par v \tab The size of the I/O buffer virtual storage space and/or the number of I/O\par\tab buffers that you are supplying for VSAM to process data and index records.\par\par ----creating an access method control block----\par\plain\f1\fs20\cf3 ----z390 vsam just has a single buffer for data and index records----\par ----although there is room in the VCB for 40,003 records----\plain\f1\fs20\cf1\par\par v \tab The password required for the type of processing desired. Passwords are not\par\tab supported for system-managed data sets. You must have RACF authorization for\par\tab the type of operation to be performed.\par\par ----creating an access method control block----\par\plain\f1\fs20\cf3 ----z390 vsam does not support SMS, RACF or passwords----\plain\f1\fs20\cf1\par\par v \tab The processing options that you plan to use:\par\tab\tab\loch\f1\hich\f1\'96 \tab Keyed, addressed, or control interval, or a combination\par\tab\tab\'96 \tab Sequential, direct, or skip sequential access, or a combination\par\tab\tab\'96 \tab Retrieval, storage, or update (including deletion), or a combination\par\tab\tab\'96 \tab Shared or nonshared resources.\par\par v \tab The address and length of an area for error messages from VSAM.\par\par ----creating an access method control block----\par\plain\f1\fs20\cf3 ----z390 vsam does not support an address and length for vsam error messages----\par ----z390 vsam produces it's own error messages----\par\plain\f1\fs20\cf1\par You can use the ACB macro to build an access method control block when the\par program is assembled, or the GENCB macro to build a control block when the\par program is run. \par\par\par\plain\f1\fs28\b\page Creating an Exit List\par\par\plain\f1\fs20 ----creating an exit list----\plain\f1\fs28\par\plain\f1\fs20\cf3 ----z390 vsam does not support Exit Lists----\plain\f1\fs28\b\par\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1 To access exit routines during data set processing, you must specify the addresses\par of your exit routines using the EXLST macro. Any number of ACB macros in a\par program can indicate the same exit list for the same exit routines to do all the\par special processing for them, or they can indicate different exit lists. Use exit\par routines for the following tasks:\par\par v \tab Analyzing physical errors. When VSAM finds an error in an I/O operation that\par\tab the operating system's error routine cannot correct, the error routine formats a\par\tab message for your physical error analysis routine (the SYNAD user exit) to act\par\tab on.\par\par v \tab Analyzing logical errors. Errors not directly associated with an I/O operation,\par\tab such as an nonvalid request, cause VSAM to exit to your logical error analysis\par\tab routine (the LERAD user exit).\par\par v \tab End-of-data-set processing. When your program requests a record beyond the\par\tab last record in the data set, your end-of-data-set routine (the EODAD user exit) is\par\tab given control. The end of the data set is beyond either the highest addressed or\par\tab the highest keyed record, if your program is using addressed or keyed access.\par\par v \tab Journalizing transactions. To journalize the transactions against a data set, you\par\tab might specify a journal routine (the JRNAD user exit). To process a\par\tab key-sequenced data set using addressed access, you need to know if any RBAs\par\tab changed during keyed processing. When you are processing by key, VSAM exits\par\tab to your routine for noting RBA changes before writing a control interval in\par\tab which there is an RBA change. When journalizing transactions for compressed\par\tab data sets, the RBAs and data lengths represent compressed data. VSAM does not\par\tab exit to the JRNAD routine for RBA change if the data set is extended\par\tab addressable.\par\par v \tab User processing. User processing exits (UPAD) are available to assist subsystems\par\tab that need to dispatch new units of work. The UPAD wait exit is given control\par\tab before VSAM issues any WAIT SVCs. Use the UPAD post exit to make it easier\par\tab to use cross-memory processing. \par\par The EXLST macro is coordinated with the EXLST parameter of an ACB or GENCB\par macro used to generate an ACB. To use the exit list, you must code the EXLST\par parameter in the ACB.\par\par You can use the EXLST macro to build an exit list when the program is assembled,\par or the GENCB macro to build an exit list when the program is run. \par\par\plain\f1\fs28\b\page Opening a Data Set\par\plain\f1\fs20\cf1 ----opening a data set----\par\plain\f1\fs20\cf3 ----z390 vsam's use of the OPEN macro needs further investigation----\par\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1 Before accessing a data set, your program must issue the OPEN macro to open the\par data set for processing. Opening a data set causes VSAM to take the following\par actions:\par\par v \tab Verify that the data set matches the description specified in the ACB or GENCB\par\tab macro (for example, MACRF=KEY implies that the data set is a key-sequenced\par\tab data set).\par\par v \tab Construct the internal control blocks that VSAM needs to process your requests\par\tab for access to the data set.\par\tab To determine which processing options to use, VSAM merges information from\par\tab the data definition (DD) statement and catalog definition of the data set with\par\tab information in the access method control block and exit list. The order of\par\tab precedence follows:\par\tab 1. \tab The DD statement AMP parameters\par\tab 2. \tab The ACB, EXLST, or GENCB parameters\par\tab 3. \tab The catalog entry for the data set\par\par\tab For example, if both an ACB or GENCB macro and the DD statement have\par\tab values for buffer space, the values in the DD statement override those in the\par\tab macro. The catalog entry is the minimum buffer space when it is not specified in\par\tab the DD statement or macro or when it is less than the amount specified in the\par\tab data set definition.\par\par v \tab Check for consistency of updates to the prime index and data components if you\par\tab are opening a key-sequenced data set, an alternate index, or a path. If separate\par\tab updates occur to data set and its index, VSAM issues a warning message to\par\tab indicate a time stamp discrepancy.\par\par v \tab An error during OPEN can cause a component that is open for update\par\tab processing to close improperly, leaving on the open-for-output indicator. When\par\tab VSAM detects an open-for-output indicator, it issues an implicit VERIFY\par\tab command and a message that indicates whether the VERIFY command was\par\tab successful.\par\par\tab If a subsequent OPEN is issued for update, VSAM turns off the open-for-output\par\tab indicator at CLOSE. If the data set was open for input, however, VSAM leaves\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\tab on the open-for-output indicator.\par\par v \tab Check the password your program specified in the ACB PASSWD parameter\par\par ----opening a data set----\par\plain\f1\fs20\cf3 ----z390 vsam does not support ACB PASSWD----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam does not support RACF----\par\par\plain\f1\fs20\cf1\tab against the appropriate password (if any) in the catalog definition of the data.\par\tab The system does not support passwords for system-managed data sets. A\par\tab password of one level authorizes you to do everything that a password of a\par\tab lower level authorizes. You must have RACF authorization for the operation.\par\tab The password requirement depends on the kind of access that is specified in the\par\tab access method control block:\par\tab\loch\f1\hich\f1\'96 \tab Full access lets you perform all operations (retrieve, update, insert, and\par\tab\tab delete) on a data set on any associated index or catalog record. The master\par\tab\tab password lets you delete or alter the catalog entry for the data set or catalog\par\tab\tab it protects.\par\tab\'96 \tab Control-interval update access requires the control password or RACF control\par\tab\tab authority. The control lets you use control-interval access to retrieve, update,\par\tab\tab insert, or delete records in the data set it protects. \par\par\tab Control-interval read access requires only the read password or RACF read\par\tab authority, that lets you examine control intervals in the data set it protects.\par\tab The read password or RACF read authority does not let you add, change, or\par\tab delete records.\par\tab\'96 \tab Update access requires the update password, which lets you retrieve, update,\par\tab\tab insert, or delete records in the data set it protects.\par\tab\'96 \tab Read access requires the read password, that lets you examine records in the\par\tab\tab data set it protects. The read password does not permit you to add, change,\par\tab\tab or delete records.\par\par\tab Note: RACF protection supersedes password protection for a data set. RACF\par\tab checking is bypassed for a caller that is in supervisor state or key 0. \par\par\plain\f1\fs28\b\page Creating a Request Parameter List\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1 After you have connected your program to a data set, you can issue requests for\par access. A request parameter list defines a request. This list identifies the data set to\par which the request is directed by naming the ACB macro that defines the data set.\par\par Each request macro (GET, PUT, ERASE, POINT, CHECK, and ENDREQ) gives the\par address of the request parameter list that defines the request.\par\par ----creating a request parameter list----\plain\f1\fs20\cf3\par ----z390 vsam does not support CHECK or ENDREQ or ERASE----\par\plain\f1\fs20\cf1\par You can use the  macro to generate a request parameter list (RPL) when your\par program is assembled, or the GENCB macro to build a request parameter list when\par your program is run. .\par\par When you define your request, specify only the processing options appropriate for\par that particular request. Parameters not required for a request are ignored. For\par example, if you switch from direct to sequential retrieval with a request parameter\par list, you do not have to zero out the address of the field containing the search\par argument (ARG=address).\par\par The following information defines your request:\par\par v \tab Access by address (RBA), key, or relative record number. Address access can be\par\tab sequential or direct. Key or relative record number access can be sequential, skip\par\tab sequential, or direct. Access can be forward (next sequential record) or backward\par\tab (previous sequential record). Access can be for updating or not updating. A\par\tab nonupdate direct request to retrieve a record causes VSAM to position to the\par\tab following record for subsequent sequential access. \par\par ----creating a request parameter list----\plain\f1\fs20\cf3\par ----in z390 vsam, We need to test that a non-update direct request to retrieve a record causes VSAM to position to the----\par ----following record for subsequent sequential access----. \par\plain\f1\fs20\cf1\par v \tab RPLs (including RPLs defined by a chain),\par\par ----creating a request parameter list----\plain\f1\fs20\cf3\par ----z390 vsam does not support RPL chaining----\par\plain\f1\fs20\cf1\par\tab either synchronous, so that VSAM\par\tab does not give control back to your program until the request completes, or\par\tab asynchronous, so that your program can continue to process or issue other\par\tab requests while the request is active. With asynchronous requests, your program\par\tab must use the CHECK macro to suspend its processing until the request\par\tab completes. .\par\par v \tab For a keyed request, either a generic key (a leading portion of the key field), or a\par\tab full key to which the key field of the record is to be compared.\par\par v \tab For retrieval, either a data record to be placed in a work area in your program\par\tab or the address of the record within VSAM's buffer to be passed to your\par\tab program. For requests that involve updating or inserting, the work area in your\par\tab program contains the data record.\par\par v \tab For a request to directly access a control interval, specify the RBA of the control\par\tab interval. With control interval access, you are responsible for maintaining the\par\tab control information in the control interval. If VSAM's buffers are used, VSAM\par\tab permits control interval and stored record operations simultaneously. If your\par\tab program provides its own buffers, only control interval processing is permitted.\par\par You can chain request parameter lists together to define a series of actions for a\par single GET or PUT. For example, each parameter list in the chain could contain a\par unique search argument and point to a unique work area. A single GET macro\par would retrieve a record for each request parameter list in the chain. All RPLs in a\par chain must refer to the same ACB.\par\par A chain of request parameter lists is processed serially as a single request.\par (Chaining request parameter lists is not the same as processing concurrent requests\par in parallel. Processing in parallel requires that VSAM keep track of many positions\par in a data set.)\par\par Each request parameter list in a chain should have the same OPTCD\par subparameters. Having different subparameters can cause logical errors. You\par cannot chain request parameter lists for updating or deleting records\loch\f1\hich\f1\'97only for\par retrieving records or storing new records. You cannot process records in the I/O\par buffer with chained request parameter lists. (RPL OPTCD=UPD and RPL\par OPTCD=LOC are nonvalid for a chained request parameter list.)\par\par With chained request parameter lists, a POINT, a sequential or skip-sequential\par GET, or a direct GET with positioning requested (RPL OPTCD=NSP) causes VSAM\par to position itself at the record following the record identified by the last request\par parameter list in the chain.\par\par When you are using chained RPLs, if an error occurs anywhere in the chain, the\par RPLs following the one in error are made available without being processed and\par are posted complete with a feedback code of zero.\par\par\par\plain\f1\fs28\b\page Manipulating the Contents of Control Blocks\par\plain\f1\fs20\cf1 VSAM provides a set of macros, GENCB, TESTCB, MODCB, and SHOWCB, to let\par you manipulate the contents of control blocks at execution time. Use these macros\par to generate, test, modify, and display the contents of fields in the access method\par control block, the exit list, and the request parameter list. You do not have to know\par the format of the control block when you use these macros.\par\par The GENCB, MODCB, TESTCB, and SHOWCB macros build a parameter list that\par describes, in codes, the actions indicated by the parameters you specify. The\par parameter list is passed to VSAM to take the indicated actions. An error can occur\par if you specify the parameters incorrectly.\par\par If you issue a MODCB, SHOWCB, or TESTCB for a non-VSAM ACB, unpredictable\par results occur.\par\par ----manipulating the contents of control blocks----\par\plain\f1\fs20\cf3 ----in z390 vsam, manipulation of control blocks needs further investigation and testing----\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b\tab Generating a Control Block\par\plain\f1\fs20\cf1\tab The GENCB macro can be used to generate an access method control block, an exit\par\tab list, or a request parameter list when your program is run. Generating the control\par\tab block at execution time with GENCB has the advantage of requiring no reassembly\par\tab of the program when you adopt a new version of VSAM in which control block\par\tab formats might have changed. If you use the ACB, EXLST, and RPL macros to build\par\tab control blocks, and adopt a subsequent release of VSAM in which the control block\par\tab format has changed, you have to reassemble your program. GENCB also gives you\par\tab the ability to generate multiple copies of the ACB, EXLST, or RPL to be used for\par\tab concurrent requests. The disadvantage of using GENCB is that the path length is\par\tab longer. It takes more instructions to build a control block using GENCB than to\par\tab code the control block directly.\par\par\tab You can use the WAREA parameter to provide an area of storage in which to\par\tab generate the control block. This work area has a 64K (X'FFFF') size limit. If you do\par\tab not provide storage when you generate control blocks, the ACB, RPL, and EXLST\par\tab reside below 16 MB unless LOC=ANY is specified.\par\par\plain\f1\fs28\b\tab Testing the Contents of ACB, EXLST, and RPL Fields\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab With the TESTCB macro, VSAM compares the contents of a field you specify with\par\tab a value that you specify. To show the result of this comparison, VSAM sets the\par\tab condition code in the PSW (program status word). Only one keyword can be\par\tab specified each time TESTCB is issued. Use TESTCB to find out:\par\par ----manipulating the contents of control blocks----\par ----testing the contents of acb, exlst, and rpl fields----\par\plain\f1\fs20\cf3 ----in z390 vsam, with TESTCB, we need to test that only one keyword can be specified each time TESTCB is issued----. \par\par\plain\f1\fs20\cf1\tab v \tab If an action has been done by VSAM or your program (for example, opening a\par\tab\tab data set or activating an exit).\par\par\tab v \tab What kind of a data set is being processed to alter your program logic as a\par\tab\tab result of the test.\par\par\tab After issuing a TESTCB macro, examine the PSW condition code. If the TESTCB is\par\tab not successful, register 15 contains an error code and VSAM passes control to an\par\tab error routine, if one has been specified. For a keyword specified as an option or a\par\tab name, you test for an equal or unequal comparison; for a keyword specified as an\par\tab address or a number, you test for an equal, unequal, high, low, not-high, or\par\tab not-low condition.\par\par\tab VSAM compares A to B, where A is the contents of the field and B is the value to\par\tab compare. A low condition means, for example, A is lower than B \loch\f1\hich\f1\'97 that is, the\par\tab value in the control block is lower than the value you specified. If you specify a\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\tab list of option codes for a keyword (for example, MACRF=(ADR,DIR)), each of\par\tab them must equal the corresponding value in the control block for you to get an\par\tab equal condition.\par\par\tab Some of the fields can be tested at any time; others, only after a data set is opened.\par\tab The ones that can be tested only after a data set is opened can, for a key-sequenced\par\tab data set, pertain either to the data or to the index, as specified in the OBJECT\par\tab parameter.\par\par\tab You can display fields using the SHOWCB macro at the same time you test the\par\tab fields.\par\par ----manipulating the contents of control blocks----\par ----testing the contents of acb, exlst, and rpl fields----\par\plain\f1\fs20\cf3 ----in z390 vsam, we need to test that you can display fields using the SHOWCB macro at the same time----\par ----as you test the fields. I don't think you can do this under z390 .----\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b\tab Modifying the Contents of an ACB, EXLST, or RPL\par\plain\f1\fs20\cf1\tab The MODCB macro lets you customize the control blocks generated with the\par\tab GENCB macro. The MODCB macro can be used to modify the contents of an\par\tab access method control block, an exit list, or a request parameter list. Typical\par\tab reasons to modify a request parameter list are to change the length of a record\par\tab (RECLEN) \par\par\tab when you are processing a data set whose records are not all the same\par\tab length, and to change the type of request (OPTCD), such as from direct to\par\tab sequential access or from full-key search argument to generic key search argument.\par\par\tab When modifying any field in a RPL, you must first make sure there is no active or\par\tab inactive process that is still connected to the RPL. Inactive processes that are still\par\tab connected to their RPLs include sequential, skip-sequential and POINT processes.\par\par\tab You can disconnect the RPL from any process using the ENDREQ macro.\par\par\plain\f1\fs28\b\tab Displaying the Contents of ACB, EXLST, and RPL Fields\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab The SHOWCB macro causes VSAM to move the contents of various fields in an\par\tab access method control block, an exit list, or a request parameter list into your work\par\tab area. You might want to learn the reason for an error or to collect statistics about a\par\tab data set to permit your program to print a message or keep records of transactions.\par\plain\f1\fs20\cf3\par\plain\f1\fs20\cf1 ----manipulating the contents of control blocks----\par ----displaying the contents of acb, exlst, and rpl fields----\par\plain\f1\fs20\cf3 ----in z390 vsam, The SHOWCB macro causes VSAM to move the contents of various fields in an----\par ----access method control block, an exit list, or a request parameter list into your work----\par ----area----.\par ----in z390 vsam, we don't support the use of a "work area", so we need to investigate this----\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b\page Requesting Access to a Data Set\plain\f1\fs20\b\ul\cf1\par\plain\f1\fs20\cf1 After your program is opened and a request parameter list is built, use the action\par request macros GET, PUT, ERASE, POINT, CHECK, and ENDREQ. Each request\par macro uses a request parameter list that defines the action to be taken. For\par example, when a GET macro points to a request parameter list that specifies\par synchronous, sequential retrieval, the next record in sequence is retrieved. When an\par ENDREQ macro points to a request parameter list, any current request (for\par example, a PUT) for that request parameter list finishes, and the resources held by\par the request parameter list are released.\par\par The action request macros lets you do the following tasks:\par\par v \tab Insert new records\par\par v \tab Retrieve existing records\par\par v \tab Point to existing records\par\par v \tab Update existing records\par\par v \tab Delete existing records\par\par ----requesting access to a data set----\par\plain\f1\fs20\cf3 ----z390 vsam won't erase/delete existing records----\par\plain\f1\fs20\cf1\par v \tab Write buffers \par\par ----requesting access to a data set----\par\plain\f1\fs20\cf3 ----z390 vsam writes records immediately----\plain\f1\fs20\cf1\par\par v \tab Retain buffers\par\par ----requesting access to a data set----\par\plain\f1\fs20\cf3 ----z390 vsam does not maintain buffers----\par\plain\f1\fs20\cf1\par v \tab Perform multistring processing\par\par ----requesting access to a data set----\par\plain\f1\fs20\cf3 ----z390 does not support multistring processing----\plain\f1\fs20\cf1\par\par v \tab Perform concurrent requests\par\par ----requesting access to a data set----\par\plain\f1\fs20\cf3 ----z390 vsam does not support concurrent requests----\plain\f1\fs20\cf1\par\par v \tab Access records using a path \par\par ----requesting access to a data set----\par\plain\f1\fs20\cf3 ----z390 vsam may not allow the access of data using a path----\par\plain\f1\fs20\cf1\par v \tab Check for completion of asynchronous requests\par\par ----requesting access to a data set----\par\plain\f1\fs20\cf3 ----z390 does not support asynchronous requests----\plain\f1\fs20\cf1\par\par v \tab End request processing\par\par ----requesting access to a data set----\par\plain\f1\fs20\cf3 ----z390 vsam does not currently support End request processing----\plain\f1\fs20\cf1\par\par\plain\f1\fs28\b\tab Inserting and Adding Records\plain\f1\fs20\b\ul\cf1\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----inserting and adding records----\par\plain\f1\fs20\cf3 ----in z390 vsam, further investigation is needed as to what happens at the beginning and at the end of a dataset when an insertion is made----\par\plain\f1\fs20\cf1\par\tab Record insertions in VSAM data sets occur in several ways:\par\par\tab v \tab PUT RPL OPTCD=DIR,NSP\loch\f1\hich\f1\'97Inserting records directly. VSAM remembers its\par\tab\tab position for subsequent sequential access.\par\par ----requesting access to a data set----\par ----inserting and adding records----\par\plain\f1\fs20\cf3 ----z390 vsam does not support NSP or NUP----\par ----VSAM remembers its position for subsequent sequential access.----\par ----test whether position is remembered----\par\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----inserting and adding records----\par\plain\f1\fs20\cf3 ----z390 vsam does not support DIR----\plain\f1\fs20\cf1\par\par\tab v \tab PUT RPL OPTCD=DIR,NUP\loch\f1\hich\f1\'97Inserting a record directly. VSAM does not\par\tab\tab remember its position.\par\par ----requesting access to a data set----\par ----inserting and adding records----\par\plain\f1\fs20\cf3 ----z390 vsam does not support NUP----\par ----VSAM does not remember its position.----\par ----test whether position is forgotten----\par\plain\f1\fs20\cf1\par\tab v \tab PUT RPL OPTCD=SEQ,NUP or NSP\loch\f1\hich\f1\'97Inserting records sequentially. VSAM\par\tab\tab remembers its position for subsequent sequential access.\par\par ----requesting access to a data set----\par ----inserting and adding records----\par\plain\f1\fs20\cf3 ----in z390 vsam, we need to check that VSAM remembers its position for subsequent sequential access.----\par ----test whether position is remembered----\par\plain\f1\fs20\cf1\par\tab v \tab PUT RPL OPTCD=SKP,NUP or NSP\loch\f1\hich\f1\'97Inserting records in skip sequential order.\par\tab\tab VSAM remembers its position for subsequent sequential access.\par\par ----requesting access to a data set----\par ----inserting and adding records----\par\plain\f1\fs20\cf3 ----z390 vsam does not support SKP----\plain\f1\fs20\cf1\par\par\plain\f1\fs24\b\tab\tab Insertions into an Entry-Sequenced Data Set\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab VSAM does not insert new records into an entry-sequenced data set. All records\par\tab\tab are added at the end of the data set.\par\par\plain\f1\fs24\b\tab\tab Insertions into a Key-Sequenced Data Set\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a key-sequenced data set----\par\plain\f1\fs20\cf3 ----z390 vsam uses KSIT/KSIRr for insertions----\par\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab Insertions into a key-sequenced data set use the free space provided during the\par\tab\tab definition of the data set or the free space that develops because of control interval\par\tab\tab and control area splits. To create a data set or make mass insertions, use RPL\par\tab\tab OPTCD=SEQ,NUP or NSP. RPL OPTCD=SEQ,NUP or NSP inserts the records\par\tab\tab sequentially and maintains free space during load mode and during mass\par\tab\tab insertions. All the other types use the direct insert strategy. If MACRF=SIS is\par\tab\tab specified in the ACB, all inserts use sequential insert strategy.\par\par\tab\tab With addressed access of a key-sequenced data set,\par\par ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a key-sequenced data set----\par\plain\f1\fs20\cf3 ----z390 vsam doesn't support mass insertions----\par ----z390 vsam does not support ADR access of a KSDS----\par\plain\f1\fs20\cf1\par\tab\tab VSAM does not insert or add\par\tab\tab new records.\par\par\plain\f2\fs20\b\tab\tab\tab Sequential Insertion\plain\f1\fs20\cf1 . If the new record belongs after the last record of the control\par\tab\tab\tab interval and the record contains free space, the new record is inserted into the\par\tab\tab\tab existing control interval. If the control interval does not contain sufficient free\par\tab\tab\tab space, the new record is inserted into a new control interval without a true split.\par\par\tab\tab\tab If the new record does not belong at the end of the control interval and there is\par\tab\tab\tab free space in the control interval, it is placed in sequence into the existing\par  \tab\tab\tab control \tab interval. If adequate free space does not exist in the control interval\par\tab\tab\tab a control interval split occurs at the point of insertion. The new record is inserted\par\tab\tab\tab into the \tab original control interval and the following records are inserted to\par  \tab\tab\tab a new control interval.\par\par ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a key-sequenced data set----\par ----sequential insertion----\par\plain\f1\fs20\cf3 ----just how z390 vsam handles insertions, via KSIT/KSIR, to a KSDS will have to be investigated further and tested----\par ----z390 vsam does not support Mass Sequential Insertion----\par\plain\f1\fs20\cf1\par\plain\f2\fs20\b\tab\tab\tab Mass Sequential Insertion\plain\f1\fs20\cf1 . When VSAM detects two or more records to be\par\tab\tab\tab inserted in sequence into a collating position (between two records) in a data\par  \tab\tab\tab set,\par\tab\tab\tab VSAM uses a technique called mass sequential insertion to buffer the records\par\tab\tab\tab being inserted, and to reduce I/O operations. Using sequential instead of direct\par  \tab\tab\tab access \tab takes advantage of this technique. Also extend your data set (resume\par\tab\tab\tab loading) by using sequential insertion to add records beyond the highest key or\par\tab\tab\tab relative record number.\par\tab\tab\tab There are possible restrictions to extending a data set into a new \tab control\par\tab\tab\tab area depending on the specified share options. \par\par\tab\tab\tab Mass sequential insertion observes control interval and control area free space\par\tab\tab\tab specifications when the new records are a logical extension of the control\par\tab\tab\tab interval or control area (that is, when the new records are added beyond the\par  \tab\tab\tab highest key or relative record number used in the control interval or control\par  \tab\tab\tab area).\par\par\tab\tab\tab When several groups of records in sequence are to be mass inserted, each\par  \tab\tab\tab group can be preceded by a POINT with RPL OPTCD=KGE to establish\par  \tab\tab\tab positioning.KGE specifies that the key you provide for a search argument must\par  \tab\tab\tab be equal to the key or relative record number of a record.\par\par\plain\f2\fs20\b\tab\tab\tab Direct Insertion\loch\f2\hich\f2\'97CI Split\plain\f1\fs20\cf1 . If the control interval has enough available space, the\par\tab\tab\tab record is inserted. If the control interval does not have enough space to hold the\par\tab\tab\tab record, the entire CI is split, unless the record is the last key in the file. The last\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\tab\tab\tab record is always placed in a new, empty CI and does not show up as a CI split.\par\par\plain\f2\fs20\b\tab\tab\tab Direct Insertion\loch\f2\hich\f2\'97CA Split\plain\f1\fs20\cf1 . If no additional CI is available to allow a CI split, the\par\tab\tab\tab CA is split. For the last record in the file, however, the new record is inserted as\par\tab\tab\tab the first record in a new, empty CA. This does not show up as a CA split. If the\par\tab\tab\tab new record belongs after the last record of the control interval and there is still\par\tab\tab\tab space, the new record is added to the end of the existing control interval. If the\par\tab\tab\tab control interval does not contain sufficient free space, the new record is inserted\par\tab\tab\tab into an unused control interval.\par\par\plain\f1\fs24\b\tab\tab Insertions into a Fixed-Length Relative-Record Data Set\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab You can insert records into a fixed-length RRDS either sequentially or directly.\par\par\plain\f2\fs20\b\tab\tab\tab Sequential Insertion\plain\f1\fs20\cf1 . Insertions into a fixed-length RRDS go into empty slots.\par\par ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a fixed-length relative record data set----\par ----sequential insertion----\par\plain\f1\fs20\cf3 ----in z390 vsam, RRDS doesn't have "empty slots", all slots are occupied, therefore "sequential insertion" is not possible----\par ----adds are allowed at EOF----\par\plain\f1\fs20\cf1\par\tab\tab\tab When a record is inserted sequentially into a fixed-length RRDS it is assigned\par  \tab\tab\tab the next relative record number in sequence. If the slot is not empty, VSAM sets\par  \tab\tab\tab an error return code, indicating a duplicate record.\par\par ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a fixed-length relative record data set----\par ----sequential insertion----\par\plain\f1\fs20\cf3 ----in z390 vsam, When a record is inserted sequentially into a fixed-length RRDS, it is assigned----\par ----the next relative record number in sequence. If the slot is not empty, VSAM sets----\par ----an error return code, indicating a duplicate record.----\par\par\plain\f1\fs20\cf1\tab\tab\tab The assigned number is\par  \tab\tab\tab returned in the argument field of the RPL.\par\par ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a fixed-length relative record data set----\par ----sequential insertion----\par\plain\f1\fs20\cf3 ----in z390 vsam, we'll have to test that the assigned number is returned in the argument field of the RPL----.\par\par\plain\f1\fs20\cf1\par\plain\f2\fs20\b\tab\tab\tab Direct Insertion\plain\f1\fs20\cf1 . Direct or skip-sequential insertion of a record into a fixed-length\par\tab\tab\tab RRDS places the record as specified by the relative record number in the\par  \tab\tab\tab argument field of the RPL. You must insert the record into a slot that does not\par  \tab\tab\tab contain a record. \par\par ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a fixed-length relative record data set----\par ----direct insertion----\par\plain\f1\fs20\cf3 ----z390 vsam "knows" if the "slot" is occupied, since an "occupied slot" has a non-zero VX0 index----\par ----all slots are occupied and a "direct insertion is not possible----\par\plain\f1\fs20\cf1\par\tab\tab\tab If the slot specified does contain a record, VSAM sets an error return code\par\tab\tab\tab in the RPL and rejects the request.\par\par ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a fixed-length relative record data set----\par ----direct insertion----\par\plain\f1\fs20\cf3 ----in z390 vsam, we need to test that if the slot specified does contain a record,----\par ----VSAM sets an error return code in the RPL and rejects the request.----\par\plain\f1\fs20\cf1\par\tab\tab\tab If the insertion is to the end of the control interval, the record is placed in a new\par\tab\tab\tab control interval.\par\par\plain\f1\fs24\b\tab\tab Insertions into a Variable-Length Relative-Record Data Set\par\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a variable-length relative record data set----\par\plain\f1\fs20\cf3 ----in z390 vsam, vRRDS is treated in the same way as an RRDS----\par\plain\f1\fs24\b\par\plain\f1\fs20\cf1\tab\tab A variable-length RRDS is processed in the same way as a fixed-length RRDS, with\par\tab\tab the following exceptions:\par\par\tab\tab v \tab You must specify the record length in the RECLEN field of the RPL macro.\par\par ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a variable-length relative record data set----\par\plain\f1\fs20\cf3 ----in z390 vsam, Insertion into a vRRDS is not possible, since all slots are occupied----\par ----adds are allowed at EOF----\par ----where you must specify the record length in the RECLEN field of the RPL macro----\plain\f1\fs20\cf1 .\par\par\tab\tab v \tab Insertions into a variable-length RRDS use the free space provided during the\par\tab\tab\tab definition of the data set or the free space that develops because of control\par\tab\tab\tab interval and control area splits.\par\par ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a variable-length relative record data set----\par\plain\f1\fs20\cf3 ----z390 vsam does not support "free space"----\par\plain\f1\fs20\cf1\par\tab\tab As for a fixed-length RRDS, you can insert records into a variable-length RRDS\par\tab\tab either sequentially or directly.\par\par\plain\f2\fs20\b\tab\tab Sequential Insertion\plain\f1\fs20\cf1 . When a record is inserted sequentially into a variable-length\par\tab\tab RRDS, it is assigned the next available relative record number in sequence.\par\par\tab\tab The\par\tab\tab assigned number is returned in the argument field of the RPL.\par\par\par\tab\tab Use mass sequential\par\tab\tab insertion with a variable-length RRDS.\par\par ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a variable-length relative record data set----\par\plain\f1\fs20\cf3 ----z390 vsam does not support mass insertion----\par\plain\f1\fs20\cf1\par\plain\f2\fs20\b\tab\tab Direct Insertion\plain\f1\fs20\cf1 . Direct or skip-sequential insertion of a record into a\par\tab\tab variable-length RRDS places the record as specified by the relative record number\par\tab\tab in the argument field of the RPL. If you specify a duplicate relative record number,\par\tab\tab VSAM sets an error return code in the RPL and rejects the request.\par\par\plain\f1\fs24\b\tab\tab Insertions into a Linear Data Set\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----inserting and adding records----\par ----insertions into a linear data set----\par\plain\f1\fs20\cf3 ----z390 vsam does not support LDS----\par\plain\f1\fs20\cf1\par\tab\tab Linear data sets cannot be processed at the record level. Use of the GET, PUT and\par\tab\tab POINT macros is not permitted at the record level. You must use the DIV macro to\par\tab\tab process a linear data set..\par\par\plain\f1\fs28\b\tab Retrieving Records\plain\f1\fs20\b\ul\cf1\par\plain\f1\fs20\cf1\tab The GET macro is used to retrieve records. To retrieve records for update, use the\par\tab GET macro with the PUT macro. When you retrieve records either sequentially or\par\tab directly, VSAM returns the length of the retrieved record to the RECLEN field of\par\tab the RPL.\par\par ----requesting access to a data set----\par ----retrieving records----\par\plain\f1\fs20\cf3 ----z390 vsam should return the length of the retrieved record in the RPL RECLEN field for a GET----\par\plain\f1\fs20\cf1\par\plain\f1\fs24\b\tab\tab Sequential Retrieval\par\plain\f1\fs20\cf1\tab\tab Records can be retrieved sequentially using keyed access or addressed access.\par\par\plain\f2\fs20\b\tab\tab\tab Keyed Sequential Retrieval.\plain\f1\fs20\b\cf1 .\plain\f1\fs20\cf1  The first time your program accesses a data set for\par\tab\tab\tab keyed sequential access (RPL OPTCD=(KEY,SEQ)), VSAM is positioned at the\par  \tab\tab\tab first record in the data set in key sequence if and only if the following is true:\par\par ----requesting access to a data set----\par ----retrieving records----\par ----sequential retrieval----\par ----keyed sequential retrieval----\par\plain\f1\fs20\cf3 ----z390 vsam, VSAM should be positioned at the first record in the data set in key sequence----\par\par\plain\f1\fs20\cf1\tab\tab\tab 1. \tab Nonshared resources are being used.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----sequential retrieval----\par ----keyed sequential retrieval----\par\plain\f1\fs20\cf3 ----z390 vsam does not support shared resources----\par\plain\f1\fs20\cf1\par\tab\tab\tab 2. \tab There have not been any previous requests against the file.\par\par\tab\tab\tab If VSAM picks a string that has been used previously this implicit positioning\par  \tab\tab\tab does not occur. \par\tab\tab\tab Therefore, with concurrent or multiple RPL's, it is best to initiate your\par\tab\tab\tab own POINTs and positioning to prevent logic errors.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----sequential retrieval----\par ----keyed sequential retrieval----\par\plain\f1\fs20\cf3 ----z390 vsam does not support concurrent or multiple RPL's----\par\plain\f1\fs20\cf1\par\tab\tab\tab With shared resources, you must always use a POINT macro to establish\par  \tab\tab\tab position.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----sequential retrieval----\par ----keyed sequential retrieval----\par\plain\f1\fs20\cf3 ----z390 vsam does not support shared resources----\par\plain\f1\fs20\cf1\par\tab\tab\tab A GET macro can then retrieve the record. Certain direct requests can also hold\par\tab\tab\tab position. \par\par ----requesting access to a data set----\par ----retrieving records----\par ----sequential retrieval----\par ----keyed sequential retrieval----\par\plain\f1\fs20\cf3 ----in z390 vsam, all direct requests should hold position----\par\plain\f1\fs20\cf1\par\tab\tab\tab For keyed sequential retrieval of a fixed-length or variable-length RRDS, the\par\tab\tab\tab relative record number is treated as a full key. If a deleted record is found during\par\tab\tab\tab sequential retrieval, it is skipped and the next record is retrieved.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----sequential retrieval----\par ----keyed sequential retrieval----\par\plain\f1\fs20\cf3 ----z390 vsam doesn't support the ERASE macro, so there won't be any "deleted records" found----\par\plain\f1\fs20\cf1\par\tab\tab\tab The relative\par\tab\tab\tab record number of the retrieved record is returned in the argument field of the\par  \tab\tab\tab RPL.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----sequential retrieval----\par ----keyed sequential retrieval----\par\plain\f1\fs20\cf3 ----in z390 vsam, we need to test that the relative record number of the retrieved record is returned in the argument field of the RPL----.\par\plain\f1\fs20\cf1\par\plain\f2\fs20\b\tab\tab\tab Addressed Sequential Retrieval.\plain\f1\fs20\cf1 . Retrieval by address is identical to retrieval by\par\tab\tab\tab key, except the search argument is a RBA, which must be matched to the RBA\par  \tab\tab\tab of a record in the data set. \par\par ----requesting access to a data set----\par ----retrieving records----\par ----sequential retrieval----\par ----addressed sequential retrieval----\par\plain\f1\fs20\cf3 ----in z390 vsam, Addressed Sequential Retrieval only applies to an ESDS----\par ----and the search argument can also be an XRBA----\par\plain\f1\fs20\cf1\par\tab\tab\tab When a processing program opens a data set with nonshared resources for\par\tab\tab\tab addressed access, VSAM is positioned at the record with RBA of zero to begin\par  \tab\tab\tab addressed sequential processing. A sequential GET request causes VSAM to\par  \tab\tab\tab retrieve the data record at which it is positioned, and positions\par\tab\tab\tab VSAM at the next record.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----sequential retrieval----\par ----addressed sequential retrieval----\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf3 ----in z390 vsam, we need to test that a sequential GET request causes VSAM to retrieve the data record at which it is positioned,----\par ----and positions VSAM at the next record----.\par\plain\f1\fs20\cf1\par\tab\tab\tab The address specified for a GET or a POINT must\par\tab\tab\tab correspond to the beginning of a data record; otherwise the request is not valid.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----sequential retrieval----\par ----addressed sequential retrieval----\par\plain\f1\fs20\cf3 ----in z390 vsam, we need to test that the address specified for a GET or a POINT must correspond to the beginning of a data record;----\par ----otherwise the request is not valid.----\par ----how is this validated in z390 vsam?----\par\plain\f1\fs20\cf1\par\tab\tab\tab Spanned records stored in a key-sequenced data set cannot be retrieved using\par\tab\tab\tab addressed retrieval.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----sequential retrieval----\par ----addressed sequential retrieval----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Spanned records----\par\plain\f1\fs20\cf1\par\tab\tab\tab You cannot predict the RBAs of compressed records.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----sequential retrieval----\par ----addressed sequential retrieval----\par\plain\f1\fs20\cf3 ----z390 vsam does not support compressed records----\par\plain\f1\fs20\cf1\par\tab\tab\tab GET-previous (backward-sequential) processing is a variation of normal keyed\par  \tab\tab\tab or addressed-sequential processing. Instead of retrieving the next record in\par  \tab\tab\tab ascending sequence (relative to current positioning in the data set), GET-\par\tab\tab\tab previous processing retrieves the next record in descending sequence. \par\par\tab\tab\tab To process records in descending sequence, specify BWD in the RPL OPTCD\par  \tab\tab\tab parameter. \par\par ----requesting access to a data set----\par ----retrieving records----\par ----keyed sequential retrieval----\par\plain\f1\fs20\cf3 ----in z390 vsam, we need to test that GET-previous does indeed retrieve the next record in descending sequence----\par\plain\f1\fs20\cf1\par\tab\tab\tab Select GET-previous processing for POINT, GET, PUT (update only), and\par  \tab\tab\tab ERASE operations. \par\par ----requesting access to a data set----\par ----retrieving records----\par ----keyed sequential retrieval----\par\plain\f1\fs20\cf3 ----in z390 vsam, we need to test that GET-previous processing is possible for POINT, GET, PUT(update only)----\par\plain\f1\fs20\cf1\par\tab\tab\tab The initial positioning by POINT, other than POINT LRD, requires that you\par  \tab\tab\tab specify a key.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----keyed sequential retrieval----\par\plain\f1\fs20\cf3 ----in z390 vsam, we need to test that our initial positioning by POINT, other than POINT LRD,----\par ----required a key specified----\par\plain\f1\fs20\cf1\par\tab\tab\tab The following GET-previous processing does not need any specified key to\par\tab\tab\tab retrieve \tab the next record in descending sequence.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----keyed sequential retrieval----\par\plain\f1\fs20\cf3 ----in z390 vsam, we need to test that the following GET-previous does not need any specified key----\par ----to retrieve the next record in descending sequence----\par\plain\f1\fs20\cf1\par\tab\tab\tab GET-previous processing is not permitted with control interval or skip-sequential\par\tab\tab\tab processing.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----keyed sequential retrieval----\par\plain\f1\fs20\cf3 ----z390 vsam supports neither control interval nor skip-sequential processing----\par\plain\f1\fs20\cf1\par\plain\f1\fs24\b\tab\tab POINT Macro for Positioning\par\plain\f1\fs20\cf1\tab\tab You can use the POINT macro to begin retrieving records sequentially at a place\par\tab\tab other than the beginning of the data set. The POINT macro places VSAM at the\par\tab\tab record with the specified key or relative byte address. However, it does not\par\tab\tab provide data access to the record. If you specify a generic key (a leading portion of\par\tab\tab the key field), the record pointed to is the first of the records having the same\par\tab\tab generic key. The POINT macro can position VSAM for either forward or backward\par\tab\tab processing, if FWD or BWD was specified in the RPL OPTCD parameter.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----point macro for positioning----\par\plain\f1\fs20\cf3 ----z390 vsam, we need to test the point macro with BWD and a generic key----\par\plain\f1\fs20\cf1\par\tab\tab If, after positioning, you issue a direct request through the same request parameter\par\tab\tab list, VSAM drops positioning unless NSP or UPD was specified in the RPL OPTCD\par\tab\tab parameter.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----point macro for positioning----\par\plain\f1\fs20\cf3 ----z390 vsam does not support NSP----\par ----positioning is always maintained----\par\plain\f1\fs20\cf1\par\tab\tab When a POINT is followed by a VSAM GET/PUT request, both the POINT and\par\tab\tab the subsequent request must be in the same processing mode. For example, a\par\tab\tab POINT with RPL OPTCD=(KEY,SEQ,FWD) must be followed by GET/PUT with\par\tab\tab RPL OPTCD=(KEY,SEQ,FWD); otherwise, the GET/PUT request is rejected.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----point macro for positioning----\par\plain\f1\fs20\cf3 ----z390 vsam does not validate that the RPL OPTCD's match----\par\plain\f1\fs20\cf1\par\tab\tab For skip-sequential retrieval, you must indicate the key of the next record to be\par\tab\tab retrieved. \par\par ----requesting access to a data set----\par ----retrieving records----\par ----point macro for positioning----\par\plain\f1\fs20\cf3 ----z390 vsam does not support skip-sequential----\par\plain\f1\fs20\cf1\par\tab\tab VSAM skips to the next record's index entry by using horizontal pointers\par\tab\tab in the sequence set\par\par\tab\tab to find the appropriate sequence-set index record and scan its\par\tab\tab entries. The key of the next record to be retrieved must always be higher in\par\tab\tab sequence than the key of the preceding record retrieved.\par\par\tab\tab If your request fails, with an error code, positioning cannot be maintained. To\par\tab\tab determine if positioning is maintained when a logical error occurs, \par\par\plain\f1\fs24\b\tab Direct Retrieval\par\plain\f1\fs20\cf1\tab Records can also be retrieved directly using keyed access or addressed access.\par\par\plain\f2\fs20\b\tab\tab Keyed Direct Retrieval\plain\f1\fs20\cf1 . For a key-sequenced data set does not depend on prior\par\tab\tab positioning. VSAM searches the index from the highest level down to the sequence\par\tab\tab set to retrieve a record.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----direct retrieval----\par\plain\f1\fs20\cf3 ----z390 vsam seeks the key using a binary search----\par\plain\f1\fs20\cf1\par\tab\tab Specify the record to be retrieved by supplying one of the\par\tab\tab following:\par\par\tab\tab v \tab The exact key of the record\par\par\tab\tab v \tab An approximate key, less than or equal to the key field of the record\par\par\tab\tab v \tab A generic key\par\par\tab\tab You can use an approximate specification when you do not know the exact key. If\par\tab\tab a record actually has the key specified, VSAM retrieves it. Otherwise, it retrieves\par\tab\tab the record with the next higher key. Generic key specification for direct processing\par\tab\tab causes VSAM to retrieve the first record having that generic key. If you want to\par\tab\tab retrieve all the records with the generic key, specify RPL OPTCD=NSP in your\par\tab\tab direct request. That causes VSAM to position itself at the next record in key\par\tab\tab sequence. Then retrieve the remaining records sequentially.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----direct retrieval----\par\plain\f1\fs20\cf3 ----z390 vsam does not support NSP----\par ----so positioning should occur automatically----\par\plain\f1\fs20\cf1\par\tab\tab To use direct or skip-sequential access to process a fixed-length or variable-length\par\tab\tab RRDS, you must supply the relative record number of the record you want in the\par\tab\tab argument field of the RPL macro. For a variable-length RRDS, you also must\par\tab\tab supply the record length in the RECLEN field of the RPL macro.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----direct retrieval----\par\plain\f1\fs20\cf3 ----z390 vsam, we need to test that we can access directly an RRDS/vRRDS, via an rrn in the RPL argument----\par ----and that for vRRDS, you must also supply the record length in the RPL RECLEN----\par\plain\f1\fs20\cf1\par\tab\tab  If you request a\par\tab\tab deleted record, the request causes a no-record-found logical error.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----direct retrieval----\par\plain\f1\fs20\cf3 ----in z390 vsam, the ERASE macro hasn't been implemented, so there won't be any "deleted records"----\par\par\plain\f1\fs20\cf1\tab\tab A fixed-length RRDS has no index. \par\par ----requesting access to a data set----\par ----retrieving records----\par ----direct retrieval----\par\plain\f1\fs20\cf3 ----in z390 vsam, both RRDS and variable-length RRDS represent "slots" via an index in VX0----\par\plain\f1\fs20\cf1\par\tab\tab VSAM takes the number of the record to be\par\tab\tab retrieved and calculates the control interval that contains it and its position within\par\tab\tab the control interval.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----direct retrieval----\par\plain\f1\fs20\cf3 ----z390 vsam converts the rrn for RRDS/vRRDS into the VX0 xrba and thru this accesses the VES xrba----\par\plain\f1\fs20\cf1\par\plain\f2\fs20\b\tab\tab Addressed Direct Retrieval\plain\f1\fs20\cf1 . Requires the RBA of each individual record is\par\tab\tab specified; previous positioning is not applicable.\par\par\tab\tab With direct processing, optionally specify RPL OPTCD=NSP to indicate the\par\tab\tab position is maintained following the GET. Your program can then process the\par\tab\tab following records sequentially in either a forward or backward direction.\par\par ----requesting access to a data set----\par ----retrieving records----\par ----direct retrieval----\par\plain\f1\fs20\cf3 ----in z390 vsam, Addressed Direct Retrieval only applies to ESDS----\par ----NSP is not supported, so positioning should always be maintained----\par\plain\f1\fs20\cf1\par\plain\f1\fs28\b\page\tab Updating Records\plain\f1\fs20\b\ul\cf1\par\plain\f1\fs20\cf1\tab The GET and PUT macros are used to update records. A GET for update retrieves\par\tab the record and the following PUT for update stores the record the GET retrieved.\par\tab When you update a record in a key-sequenced data set, you cannot alter the\par\tab primary-key field.\par\par\plain\f1\fs24\b\tab\tab Changing Record Length\plain\f1\fs20\b\cf1\par\plain\f1\fs20\cf1\tab\tab You can update the contents of a record with addressed access, but you cannot\par\tab\tab alter the record's length.\par\par ----requesting access to a data set----\par ----updating records----\par ----changing record length----\par\plain\f1\fs20\cf3 ----z390 vsam, the statement "You can update the contents of a record with addressed access,----\par ----but you cannot alter the record's length." is strange and quite unexpected. This implies that you can alter the----\par ----record's length if update is done by sequential access, but not by addressed access----\par ----Surely, in ibm vsam, one could shorten an ESDS VES record without damaging subsequent XRBA's----\par ----This must certainly be tested for----\par\plain\f1\fs20\cf1\par\tab\tab To change the length of a record in an entry-sequenced\par\tab\tab data set, you must store it either at the end of the data set (as a new record) or in\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1\tab\tab the place of an inactive record of the same length. You are responsible for marking\par\tab\tab the old version of the record as inactive.\par\par ----requesting access to a data set----\par ----updating records----\par ----changing record length----\par\plain\f1\fs20\cf3 ----z390 vsam has no mechanism for flagging an ESDS record as being inactive----\par ----so there is no way to change the size of an ESDS record currently----\par\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----updating records----\par ----changing record length----\par\plain\f1\fs20\cf3 ----z390 vsam, doesn't delete the "old" RRDS/vRRDS/KSDS record for a change in VES record size----<<<<>>>>\par\plain\f1\fs20\cf1\par\plain\f1\fs24\b\tab\tab Processing the Data Component of a Key-Sequenced Data Set\par\plain\f1\fs20\cf1\tab\tab You can process the data component separately from the index component.\par\tab\tab Processing the data component separately lets you print or dump the data\par\tab\tab component and the index component of a key-sequenced data set individually\par\par ----requesting access to a data set----\par ----updating records----\par ----processing the data component of a KSDS----\par\plain\f1\fs20\cf3 ----in z390 vsam, the VES records are kept in logical collating sequence in the KSDS----\par ----but not in physical collating sequence. So processing the data component alone----\par ----might not find the data in the sequence required----\par\plain\f1\fs20\cf1\par\plain\f1\fs20\i\tab\tab However, do not process only the data component if you plan to update the data set.\par\plain\f1\fs20\tab\tab Always open the cluster when updating a key-sequenced data set.\par\plain\f1\fs20\b\par\plain\f1\fs28\b\page\tab Deleting Records\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----deleting records----\par\plain\f1\fs20\cf3 ----z390 vsam does not currently support Deleting Records----\par\par\plain\f1\fs20\tab After a GET for update retrieves a record, an ERASE macro can delete the record.\par\tab The ERASE macro can be used only with a key-sequenced data set or a\par\tab fixed-length or variable-length RRDS. When you delete a record in a\par\tab key-sequenced data set or variable-length RRDS, the record is physically erased.\par\par\tab The space the record occupied is then available as free space.\par\par\tab You can erase a record from the base cluster of a path only if the base cluster is a\par\tab key-sequenced data set. If the alternate index is in the upgrade set in which\par\tab UPGRADE was specified when the alternate index was defined, it is modified\par\tab automatically when you erase a record. If the alternate key of the erased record is\par\tab unique, the alternate index data record with that alternate key is also deleted.\par\par\tab When you erase a record from a fixed-length RRDS, the record is set to binary\par\tab zeros and the control information for the record is updated to indicate an empty\par\tab slot. Reuse the slot by inserting another record of the same length into it.\par\par\tab With an entry-sequenced data set, you are responsible for marking a record you\par\tab consider to be deleted. As far as VSAM is concerned, the record is not deleted.\par\tab Reuse the space occupied by a record marked as deleted by retrieving the record\par\tab for update and storing in its place a new record of the same length.\par\plain\f1\fs20\b\par\plain\f1\fs28\b\page\tab Deferring and Forcing Buffer Writing\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----deferring abd forcing buffer writing----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Deferring and Forcing Buffer Writing----\par\par\plain\f1\fs20\tab For integrity reasons, it is sometimes desirable to force the data buffer to be\par\tab written after a PUT operation. At other times, it is desirable to defer the writing of\par\tab a buffer when possible to improve performance. At the time the PUT is issued, if\par\tab the RPL OPTCD specifies direct processing (DIR), and NSP is not specified, forced\par\tab writing of the buffer occurs. Otherwise, writing is deferred. An ERASE request\par\tab follows the same buffer writing rules as the PUT request. If LSR and GSR deferred\par\tab writes are not specified, an ENDREQ macro always forces the current modified\par\tab data buffer to be written.\par\plain\f1\fs20\b\par\plain\f1\fs28\b\page\tab Retaining and Positioning Data Buffers\plain\f1\fs20\b\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----retaining and positioning data buffers----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Retaining and Positioning Data Buffers----\par\plain\f1\fs20\par\tab Some operations retain positioning while others release it. In a similar way, some\par\tab operations hold onto a buffer and others release it with its contents. Table 11 shows\par\tab which RPL options result in the retention of data buffers and positioning, and\par\tab which options result in the release of data buffers and positioning.\par\par\plain\f1\fs20\i\tab Table 11. Effect of RPL Options on Data Buffers and Positioning\par\plain\f1\fs20\b\tab RPL Options Retained Released\par\plain\f1\fs20\tab SEQ *\par\tab SKP *\par\tab DIR NSP *\par\tab DIR (no NSP) *\par\tab DIR LOC *\par\tab UPD (with Get) *\par\plain\f1\fs20\b\tab Notes:\par\plain\f1\fs20\tab 1. \tab A sequential GET request for new control intervals releases the previous buffer.\par\tab 2. \tab The ENDREQ macro and the ERASE macro with RPL OPTCD=DIR release data\par\tab\tab buffers and positioning.\par\tab 3. \tab Certain options that retain positioning and buffers on normal completion\par\tab\tab cannot do so if the request fails with an error code.\par\tab 4. \tab Use the ENDREQ macro to end requests that hold position before reusing the\par\tab\tab RPL, to avoid unpredictable results. The RPL that you ENDREQ must be the\par\tab\tab same RPL that was used to issue the initial request.\par\tab\tab The following operation uses but immediately releases a buffer and does not retain\par\tab\tab positioning:\par\tab\par\tab GET RPL OPTCD=(DIR,NUP,MVE)\par\par\plain\f1\fs28\b\page\tab Processing Multiple Strings\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----processing multiple strings----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Processing Multiple Strings----\par\plain\f1\fs20\b\par\plain\f1\fs20\tab In multiple string processing, there can be multiple independent RPLs within an\par\tab address space for the same data set. The data set can have multiple tasks that\par\tab share a common control block structure. There are several ACB and RPL\par\tab arrangements to indicate that multiple string processing occurs:\par\par\tab v \tab In the first ACB opened, STRNO or BSTRNO is greater than 1.\par\par\tab v \tab Multiple ACBs are opened for the same data set within the same address space\par\tab\tab and are connected to the same control block structure.\par\par\tab v \tab Multiple concurrent RPLs are active against the same ACB using asynchronous\par\tab\tab requests.\par\par\tab v \tab Multiple RPLs are active against the same ACB using synchronous processing\par\tab\tab with each requiring positioning to be held.\par\par\tab If you are doing multiple string update processing, you must consider VSAM\par\tab lookaside processing and the rules surrounding exclusive use. Lookaside means\par\tab VSAM checks its buffers to see if the control interval is already present when\par\tab requesting an index or data control interval.\par\par\tab For GET nonupdate requests, an attempt is made to locate a buffer already in\par\tab storage. As a result, a down-level copy of the data can be obtained either from\par\tab buffers attached to this string or from secondary storage.\par\par\tab For GET to update requests, the buffer is obtained in exclusive control, and read\par\tab from the device for the latest copy of the data. If the buffer is already in exclusive\par\tab control of another string, the request fails with an exclusive control feedback code.\par\par\tab If you are using shared resources, the request can be queued, or can return an\par\tab exclusive control error.\par\par\tab The exclusive use rules follow:\par\par\tab 1. \tab If a given string obtains a record with a GET for update request, the control\par\tab\tab interval is not available for update or insert processing by another string.\par\par\tab 2. \tab If a given string is in the process of a control area split caused by an update\par\tab\tab with length change or an insert, that string obtains exclusive control of the\par\tab\tab entire control area being split. Other strings cannot process insert or update\par\tab\tab requests against this control area until the split is complete.\par\par\tab If you are using nonshared resources, VSAM does not queue requests that have\par\tab exclusive control conflicts, and you are required to clear the conflict. If a conflict is\par\tab found, VSAM returns a logical error return code, and you must stop activity and\par\tab clear the conflict. If the RPL that caused the conflict had exclusive control of a\par\tab control interval from a previous request, you issue an ENDREQ before you attempt\par\tab to clear the problem. Clear the conflict in one of three ways:\par\par\tab v \tab Queue until the RPL holding exclusive control of the control interval releases\par\tab\tab that control, then reissue the request.\par\par\tab v \tab Issue an ENDREQ against the RPL holding exclusive control to force it to release\par\tab\tab control immediately.\par\par\tab v \tab Use shared resources and issue MRKBFR MARK=RLS.\par\plain\f1\fs20\b\tab Note: \plain\f1\fs20 If the RPL includes a correctly specified MSGAREA and MSGLEN, the\par\tab address of the RPL holding exclusive control is provided in the first word of the\par\tab MSGAREA. The RPL field, RPLDDDD, contains the RBA of the requested control\par\tab interval.\par\plain\f1\fs20\b\par\plain\f1\fs28\b\page\tab Making Concurrent Requests\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----making concurrent requests----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Concurrent Requests----\par\plain\f1\fs28\b\par\plain\f1\fs20\tab With VSAM, you can maintain concurrent positioning for many requests to a data\par\tab set.\par\par\tab Strings (sometimes called \plain\f1\fs20\i place holders\plain\f1\fs20 ) are like cursors, each represents a position\par\tab in the data set and are like holding your finger in a book to keep the place. The\par\tab same ACB is used for all requests, and the data set needs to be opened only once.\par\par\tab This means, for example, you could be processing a data set sequentially using one\par\tab RPL, and at the same time, using another RPL, directly access selected records\par\tab from the same data set.\par\par\tab Keep in mind, though, that strings are not \loch\f1\hich\f1\'93owned\'94 by the RPL any longer than\par\tab the request holds its position. Once a request gives up its position (for example,\par\tab with an ENDREQ), that string is free to be used by another request and must be\par\tab repositioned in the data set by the user.\par\par\tab For each request, a string defines the set of control blocks for the exclusive use of\par\tab one request. For example, if you use three RPLs, you should specify three strings.\par\par\tab If the number of strings you specify is not sufficient, and you are using NSR, the\par\tab operating system dynamically extends the number of strings as needed by the\par\tab concurrent requests for the ACB. Strings allocated by dynamic string addition are\par\tab not necessarily in contiguous storage.\par\par\tab Dynamic string addition does not occur with LSR and GSR. Instead, you get a\par\tab logic error if you have more requests than available strings.\par\par\tab The maximum number of strings that can be defined or added by the system is\par\tab 255. Therefore, the maximum number of concurrent requests holding position in\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\tab one data set at any one time is 255.\par\plain\f1\fs20\b\par\plain\f1\fs28\b\tab Using a Path to Access Records\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----using a path to access records----\par\plain\f1\fs20\cf3 ----z390 vsam may not support accessing records via a path----\par ----although it does something in regard of AIX and Path on OPEN----\par\par ----That which follows hasn't been examined----\par\par\plain\f1\fs20\tab When you are processing records sequentially using a path, records from the base\par\tab cluster are returned according to ascending or, if you are retrieving the previous\par\tab record, descending alternate key values. If there are several records with a\par\tab nonunique alternate key, those records are returned in the order they were entered\par\tab into the alternate index. READNEXT and READPREV returns these nonunique\par\tab alternate index records in the same sequence. VSAM sets a return code in the RPL\par\tab when there is at least one more record with the same alternate key to be processed\par\par\tab For example, if there are three data records with the alternate key 1234, the return\par\tab code would be set during the retrieval of records one and two and would be reset\par\tab during retrieval of the third record.\par\par\tab When you use direct or skip-sequential access to process a path, a record from the\par\tab base data set is returned according to the alternate key you specified in the\par\tab argument field of the RPL macro. If the alternate key is not unique, the record first\par\tab entered with that alternate key is returned and a feedback code (duplicate key) is\par\tab set in the RPL. To retrieve the remaining records with the same alternate key,\par\tab specify RPL OPTCD=NSP when retrieving the first record with a direct request,\par\tab and switch to sequential processing.\par\par\tab You can insert and update data records in the base cluster using a path if:\par\par\tab v \tab The PUT request does not result in nonunique alternate keys in an alternate\par\tab\tab index (defined with the UNIQUEKEY attribute). However, if a nonunique\par\tab\tab alternate key is generated and the NONUNIQUEKEY attribute is specified,\par\tab\tab updating can occur.\par\par\tab v \tab You do not change the key of reference between the time the record was\par\tab\tab retrieved for update and the PUT is issued.\par\par\tab v \tab You do not change the primary key.\par\par\tab When the alternate index is in the upgrade set, the alternate index is modified\par\tab automatically by inserting or updating a data record in the base cluster. If the\par\tab updating of the alternate index results in an alternate index record with no\par\tab pointers to the base cluster, the alternate-index record is erased.\par\plain\f1\fs20\b\par\tab Rule: \plain\f1\fs20 When you use SHAREOPTIONS 2, 3, and 4, you must continue to ensure\par\tab read/write integrity when issuing concurrent requests (such as GETs and PUTs) on\par\tab the base cluster and its associated alternate indexes. Failure to ensure read/write\par\tab integrity might temporarily cause \loch\f1\hich\f1\'93No Record Found\'94 or \'93No Associated Base\par\tab Record\'94 errors for a GET request. Bypass such errors by reissuing the GET request,\par\tab but it is best to prevent the errors by ensuring read/write integrity.\par\plain\f1\fs20\b\par\plain\f1\fs28\b\page\tab Making Asynchronous Requests\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----making asynchronous requests----\par\plain\f1\fs20\cf3 ----z390 vsam does not support Asynchronous Requests----\par\plain\f1\fs20\b\par\plain\f1\fs20\tab In synchronous mode, VSAM does not return to your program from a PUT or GET\par\tab operation until it has completed the operation. In asynchronous mode, VSAM\par\tab returns control to your program before completing a PUT or a GET. A program in\par\tab asynchronous mode can perform other useful work while a VSAM PUT or GET is\par\tab completed.\par\par\tab Asynchronous mode can improve throughput with direct processing because it\par\tab permits processing to overlap with accesses from and to the direct access device.\par\par\tab When reading records directly, each read often involves a seek on the direct access\par\tab device, a slow operation. In synchronous mode, this seek time does not overlap\par\tab with other processing.\par\plain\f1\fs20\b\par\plain\f1\fs24\b\tab\tab Specifying Asynchronous Mode\plain\f1\fs20\b\par\plain\f1\fs20\tab\tab To specify asynchronous mode, you must specify OPTCD=ASY rather than\par\tab\tab OPTCD=SYN in the RPL.\par\plain\f1\fs20\b\par\plain\f1\fs24\b\tab\tab Checking for Completion of Asynchronous Requests\par\plain\f1\fs20\tab\tab Suppose your program is ready to process the next record, but VSAM is still trying\par\tab\tab to obtain that record. (The next record is not yet read in from the direct access\par\tab\tab device.) You might need to stop execution of the program and wait for VSAM to\par\tab\tab complete reading in the record. The CHECK macro stops executing the program\par\tab\tab until the operation in progress is complete. You must issue a CHECK macro after\par\tab\tab each request for an RPL. If you attempt another request without an intervening\par\tab\tab CHECK, that request is rejected.\par\par\tab\tab Once the request is completed, CHECK releases control to the next instruction in\par\tab\tab your program, and frees up the RPL for use by another request.\par\plain\f1\fs20\b\par\plain\f1\fs28\b\page\tab Ending a Request\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----ending a request----\par\plain\f1\fs20\cf3 ----z390 vsam does not support ENDREQ----\par\plain\f1\fs28\b\par\plain\f1\fs20\tab Suppose you determine that you do not want to complete a request that you\par\tab initiated. For example, suppose you determine during the processing immediately\par\tab following a GET that you do not want the record you just requested. You can use\par\tab the ENDREQ macro to cancel the request. Using the ENDREQ macro has the\par\tab following advantages:\par\par\tab v \tab Avoids checking an unwanted asynchronous request.\par\par\tab v \tab Writes any unwritten data or index buffers in use by the string.\par\par\tab v \tab Cancels the VSAM positioning on the data set for the RPL.\par\plain\f1\fs20\b\par\tab\tab Recommendation: \plain\f1\fs20 If you issue the ENDREQ macro, it is important that you check\par\tab\tab the ENDREQ return code to make sure it completes successfully. If an\par\tab\tab asynchronous request does not complete ENDREQ successfully, you must issue the\par\tab\tab CHECK macro. The data set cannot be closed until all asynchronous requests\par\tab\tab successfully complete either ENDREQ or CHECK. ENDREQ waits for the target\par\tab\tab RPL to post, so it should not be issued in an attempt to end a hung request.\par\plain\f1\fs20\b\par\plain\f1\fs28\b\page Closing Data Sets\plain\f1\fs20\b\par\plain\f1\fs20 The CLOSE macro disconnects your program from a data set. It causes VSAM to\par take the following actions:\par\par v \tab Write any unwritten data or index records whose contents have changed.\par\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----closing data sets----\par\plain\f1\fs20\cf3 ----in z390 vsam, there shouldn't be any unwritten data upon CLOSurE----\plain\f1\fs20\par\par v \tab Update the catalog entry for the data set if necessary (if the location of the\par\tab end-of-file indicator has changed, for example).\par\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----closing data sets----\par\plain\f1\fs20\cf3 ----z390 vsam detects end-of-file in java via a "length of file" method----\plain\f1\fs20\par\par v \tab Write SMF records if SMF is being used.\par\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----closing data sets----\par\plain\f1\fs20\cf3 ----z390 does not support SMF----\plain\f1\fs20\par\par v \tab Restore control blocks to the status they had before the data set was opened.\par\plain\f1\fs20\cf1\par ----requesting access to a data set----\par ----closing data sets----\par\plain\f1\fs20\cf3 ---- ???? "Restore control blocks to the status they had before the data set was opened"----\par\plain\f1\fs20\par v \tab Release virtual storage obtained during OPEN processing for additional VSAM\par\tab control blocks and VSAM routines.\par\par v \tab If partial release was specified at open time, release all space after the high-used\par\tab RBA (on a CA boundary of non-EAV data sets, or on an MCU boundary for EAV\par\tab data sets) up to the high-allocated RBA .\par\plain\f1\fs20\cf1\par\plain\f1\fs20\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----closing data sets----\par\plain\f1\fs20\cf3 ----like the OPEN macro, I don't understand the CLOSE macro, either----\par\plain\f1\fs20\par If a record management error occurs while CLOSE is flushing buffers, the data set's\par catalog information is not updated. The catalog cannot properly reflect the data\par set's status and the index cannot accurately reflect some of the data records. If the\par program enters an abnormal termination routine (ABEND), all open data sets are\par closed. The VSAM CLOSE invoked by ABEND does not update the data set's\par catalog information, it does not complete outstanding I/O requests, and buffers are\par not flushed. The catalog cannot properly reflect the cluster's status, and the index\par cannot accurately reference some of the data records. Use the access method\par services VERIFY command to correct catalog information. The use of VERIFY is\par described in \loch\f1\hich\f1\'93Using VERIFY to Process Improperly Closed Data Sets\'94 on page 56.\par\par When processing asynchronous VSAM requests, all strings must be quiesced by\par issuing the CHECK macro or the ENDREQ macro before issuing CLOSE or CLOSE\par TYPE=T (temporary CLOSE).\par\par CLOSE TYPE=T causes VSAM to complete any outstanding I/O operations,\par update the catalog if necessary, and write any required SMF records. Processing\par can continue after a temporary CLOSE without issuing an OPEN macro.\par\par If a VSAM data set is closed and CLOSE TYPE=T is not specified, you must\par reopen the data set before performing any additional processing on it.\par\par When you issue a temporary or a permanent CLOSE macro, VSAM updates the\par data set's catalog records. If your program ends with an abnormal end (ABEND)\par without closing a VSAM data set the data set's catalog records are not updated,\par and contain inaccurate statistics.\par\par It is the user's responsibility to ensure that shared DD statements are not\par dynamically deallocated until all ACBs that share these DD statements are closed.\par\plain\f1\fs20\b Restriction: \plain\f1\fs20 The following close options are ignored for VSAM data sets:\par\par v \tab FREE=CLOSE JCL parameter\par\par v \tab FREE=CLOSE requested through dynamic allocation, DALCLOSE\par\plain\f1\fs20\b\par\plain\f1\fs28\b\page Operating in SRB or Cross-Memory Mode\par\plain\f1\fs20\cf1 ----requesting access to a data set----\par ----operating in srb pr cross-memory mode----\par\plain\f1\fs20\cf3 ----z390 vsam does not support SRB or Cross-Memory Mode----\par\plain\f1\fs20\b\par\plain\f1\fs20 VSAM is the only access method that operates in service request block (SRB) or\par cross-memory mode. The SRB or cross-memory mode enables you to use structures\par in other address spaces to increase the amount of space available. SRB and\par cross-memory modes are supervisor modes of operation reserved for authorized\par users. Cross-memory is a complex concept, and there are several warnings and\par restrictions associated with it. \par\par VSAM operates only in cross-memory or SRB mode for synchronous, supervisor\par state requests with shared resources or improved control interval (ICI) access. For\par data sets not processed with ICI, an attempt to invoke VSAM asynchronously, in\par problem state, or with nonshared resources in either cross-memory or SRB mode\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20 results in a logical error. This error is not generated for ICI.\par\par VSAM does not synchronize cross-memory mode requests. For non-ICI processing,\par the RPL must specify WAITX, and a UPAD exit (user processing exit routine) must\par be provided in an exit list to handle the wait and post processing for cross-memory\par requests; otherwise a VSAM error code is returned.\par\par For cross-memory mode requests, VSAM does not do wait processing when a\par UPAD for wait returns to VSAM. For non-cross-memory task mode, however, if\par the UPAD taken for wait returns with ECB not posted, VSAM issues a WAIT\par supervisor call instruction (SVC). For either mode, when a UPAD is taken for post\par processing returns, VSAM assumes the ECB has been marked complete and does\par not do post processing.\par\par ICI in cross-memory mode assumes (without checking) the request is synchronous.\par UPAD is not required. If UPAD routine is not provided, I/O wait and post\par processing is done by suspend and resume. There is no resource wait/post\par processing for ICI. .\par\par SRB mode does not require UPAD. If a UPAD is provided for an SRB mode\par request, it is taken only for I/O wait and resource wait processing.\par In cross-memory or SRB mode, record management cannot issue any supervisor\par call instructions (SVCs). Whenever VSAM cannot avoid issuing an SVC, it sets an\par RPL return code to indicate that you must change processing mode so that you are\par running under a task control block (TCB) in the address space in which the data\par set was opened. You cannot be in cross-memory mode. Then reissue the request to\par permit the SVC to be issued by VSAM. The requirement for VSAM to issue an\par SVC is kept to a minimum. Areas identified as requiring a TCB not in\par cross-memory mode are EXCEPTIONEXIT, loaded exits, EOV (end-of-volume),\par dynamic string addition, and alternate index processing.\par\par If a logical error or an end-of-data condition occurs during cross-memory or SRB\par processing, VSAM attempts to enter the LERAD (logical error) or EODAD\par (end-of-data-set) exit routine. If the routine must be loaded, it cannot be taken\par because loading involves an SVC; VSAM sets the RPL feedback to indicate \loch\f1\hich\f1\'93invalid\par TCB\'94. If an I/O error occurs during cross-memory or SRB processing and an\par EXCEPTIONEXIT or loaded SYNAD (physical error exit) routine is specified, these\par routines cannot be taken; the RPL feedback indicates an I/O error condition.\par\plain\f1\fs20\cf1\par\plain\f1\fs20\b\ul\cf1\page An extract from the second of the IBM VSAM manuals \plain\f1\fs28\ul SC26-7408-10\par\plain\f1\fs20\cf1\par I have marked differences with z390 vsam in red ink\par\plain\f1\fs28\b\ul\par\plain\f1\fs28\page DFSMS Macro Instructions for Data Sets\plain\f1\fs28\cf1\par\par\plain\f1\fs32\b Part 1. VSAM Macro Instructions\par\par Chapter 1. Introduction to VSAM programming\par\plain\f2\fs20\par You use the virtual storage access method (VSAM) to organize data and maintain\par information about that data in a catalog. Perform VSAM programming using\par access method services commands and VSAM macros.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20\b Access method services\plain\f2\fs20 . You define VSAM data sets and establish catalogs\par\tab\tab using a multi-function services program called access method services.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20\b Job control language\plain\f2\fs20 . You can define VSAM data sets using JCL.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20\b Dynamic Allocation\plain\f2\fs20 . You can define or allocate to data sets using dynamic\par\tab\tab allocation, which is SVC 99. Dynamic allocation is described in \plain\f2\fs20\i z/OS MVS\par\tab\tab Programming: Authorized Assembler Services Guide\plain\f2\fs20 . VSAM supports the nocapture\par\tab\tab option of dynamic allocation. It reduces overhead of dynamic allocation and\par\tab\tab reduces virtual storage usage below the 16 MB line.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20\b VSAM macro instructions\plain\f2\fs20 . Two types of VSAM macros are used to process\par\tab\tab VSAM data sets:\par\par\tab\tab\loch\f2\hich\f2\'96 \tab\plain\f2\fs20\b\i Control block macros \plain\f2\fs20 generate control blocks of information needed by\par\tab\tab\tab VSAM to process the data set.\par\par\tab\tab - \tab\plain\f2\fs20\b\i Request macros \plain\f2\fs20 are used to retrieve, update, delete, or insert logical records.\par\tab\par\tab\tab\tab All macros described in this book are in the main system macro library,\par\tab\tab\tab SYS1.MACLIB.\par\par\tab You can use 24-bit or 31-bit addressing mode for VSAM programs. If you use\par\tab 31-bit support, see \plain\f2\fs20\i z/OS DFSMS Using Data Sets \plain\f2\fs20 for procedures and restrictions.\par\plain\f2\fs16\par\plain\f1\fs32\b\page Chapter 2. VSAM macro descriptions and examples\par\plain\f2\fs20\par\tab This chapter contains VSAM macro formats and examples.\par\par\tab The macros that work at assembly time allow you to specify subparameter values\par\tab as absolute numeric expressions, character strings, codes, and expressions that\par\tab generate valid relocatable A-type address constants.\par\par\tab The macros that work at execution allow you also to specify these values as:\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 Register notation, where the expression designating a register from 2 through 12\par\tab\tab is enclosed in parentheses. For example, (2) and (REG), where REG is a label\par\tab\tab equated to a number from 2 through 12.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 An expression of the form (S,scon), where scon is an expression valid for an\par\tab\tab S-type address constant, including the base-displacement form.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 An expression of the form (*,scon), where scon is an expression valid for an\par\tab\tab S-type address constant, including the base-displacement form, and the address\par\tab\tab specified by scon is indirect\loch\f2\hich\f2\'97that is, it gives the location of the area that\par\tab\tab contains the value for the subparameter.\par\tab\par\tab For most programming applications, you can use register notation or absolute\par\tab numeric expressions for numbers, character strings for names, and register notation\par\tab or expressions that generate valid A-type address constants for addresses.\par\tab\'93Subparameters with GENCB, MODCB, SHOWCB, and TESTCB,\'94 gives all the\par\tab ways of coding each parameter for the macros that work at execution time.\par\par\tab You can write a reentrant program \plain\f2\fs20\b only \plain\f2\fs20 with execution-time macros. \loch\f2\hich\f2\'93Use of list,\par\tab execute, and generate forms of VSAM macros\'94 on page 6, describes alternative\par\tab ways of coding these macros for reentrant programs. This chapter describes the\par\tab standard form of these macros.\par\plain\f1\fs28\b\par\page Subparameters with GENCB, MODCB, SHOWCB, and TESTCB\par\plain\f2\fs20\par\tab The addresses, names, numbers, and options required with subparameters in\par\tab GENCB, MODCB, SHOWCB, and TESTCB can be expressed in a variety of ways:\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 An \plain\f2\fs20\b absolute numeric expression\plain\f2\fs20 , for example, STRNO=3 and COPIES=10.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 A \plain\f2\fs20\b code or a list of codes separated by commas and enclosed in parentheses\plain\f2\fs20 ,\par\tab\tab for example, OPTCD=KEY or OPTCD=(KEY,DIR,IN).\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 A \plain\f2\fs20\b character string\plain\f2\fs20 , for example, DDNAME=DATASET.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 A \plain\f2\fs20\b register from 2 through 12 that contains an address or numeric value\plain\f2\fs20 , for\par\tab\tab example, SYNAD=(3); equated labels can be used to designate a register, for\par\tab\tab example, SYNAD=(ERR), where the following equate statement has been\par\tab\tab ncluded in the program: ERR EQU 3.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 An \plain\f2\fs20\b expression of the form (S,scon)\plain\f2\fs20 , where scon is an expression valid for an\par\tab\tab S-type address constant, including the base-displacement form. The contents of\par\tab\tab the base register are added to the displacement to obtain the value of the\par\tab\tab keyword. For example, if the value of the keyword being represented is a\par\tab\tab numeric value (that is, COPIES, LENGTH, RECLEN), the contents of the base\par\tab\tab register are added to the displacement to determine the numeric value. If the\par\tab\tab value of the keyword being represented is an address constant (that is, WAREA,\par\tab\tab EXLST, EODAD, ACB), the contents of the base register are added to the\par\tab\tab displacement to determine the value of the address constant.\par\plain\f2\fs16\par\plain\f1\fs20\tab v \tab\plain\f2\fs20 An \plain\f2\fs20\b expression of the form (*,scon)\plain\f2\fs20 , where scon is an expression valid for an\par\tab\tab S-type address constant, including the base-displacement form. The address\par\tab\tab specified by scon is \plain\f2\fs20\b indirect\plain\f2\fs20 , that is, it is the address of an area that contains the\par\tab\tab value of the keyword. The contents of the base register are added to the\par\tab\tab displacement to determine the address of the fullword of storage that contains\par\tab\tab the value of the keyword.\par\par\tab\tab If an indirect S-type address constant is used, the value it points to must meet\par\tab\tab the following criteria:\par\par\tab\tab\loch\f2\hich\f2\'96 \tab If it is a numeric quantity or an address, it must occupy a fullword of storage.\par\par\tab\tab\'96 \tab If it is an alphanumeric character string, it must occupy two words of storage,\par\tab\tab\tab be left aligned, and be filled on the right with blanks.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 An \plain\f2\fs20\b expression valid for a relocatable A-type address constant\plain\f2\fs20 , for example,\par\tab\tab AREA=MYAREA+4.\par\par\tab The specified keyword determines the type of expressions that can be used. Also,\par\tab register and S-type address constants cannot be used when MF=L is specified.\par\plain\f1\fs28\b\par\page Use of list, execute, and generate forms of VSAM macros\par  \par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----Use of list, execute, and generate forms of VSAM macros----\par\plain\f1\fs20\cf3 ----z390 vsam, it appears that the MF keyword is used with the assembler instruction WTO----\par ----to generate and execute, behind the scenes, the RDW (Record Descriptor Word)----\par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----Use of list, execute, and generate forms of VSAM macros----\par\plain\f1\fs20\cf3 ----z390 vsam does not support the MF keyword with GENCB, MODCB, SHOWCB, TESTCB----\par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----Use of list, execute, and generate forms of VSAM macros----\par\plain\f1\fs20\cf3 ----z390 vsam does not support BLDVRP, DLVRP----\par\plain\f2\fs20\par\tab The BLDVRP, DLVRP, GENCB, MODCB, SHOWCB, and TESTCB macros build a\par\tab parameter list describing in codes the actions shown by the subparameters you\par\tab specify and pass the list to VSAM to take the suggested action.\par\par\tab The list, execute, and generate forms of BLDVRP, DLVRP, GENCB, MODCB,\par\tab SHOWCB, and TESTCB allow you to write reentrant programs, to share parameter\par\tab lists, and to modify a parameter list before using it.\par\par\tab Following is a brief description of the list, execute, and generate forms:\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 The list form is used to build the parameter list either in line (called a \plain\f2\fs20\b\i simple\par\tab\tab list\plain\f2\fs20 ) or in an area remote from the macro expansion (called a \plain\f2\fs20\b\i remote list\plain\f2\fs20 ). Both\par\tab\tab the simple- and the remote-list forms allow you to build a single parameter list\par\tab\tab that can be shared.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 The execute form is used to modify a parameter list and to pass it to VSAM for\par\tab\tab action.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 The generate form is used to build the parameter list in a remote area and to\par\tab\tab pass it to VSAM for action.\par\par\tab The list, execute, and generate forms of the BLDVRP, DLVRP, GENCB, MODCB,\par\tab SHOWCB, and TESTCB macros have the same format as the standard forms,\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs20\tab except for:\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 An additional keyword, \plain\f2\fs20\b MF\plain\f2\fs20 .\par\plain\f1\fs20\tab\par\tab v \tab\plain\f2\fs20 Keywords that are required in the standard form may be optional in the list,\par\tab\tab execute, and generate forms or may not be allowed in the execute form. The\par\tab\tab meaning of the keywords, however, and the notation that may be used to\par\tab\tab express addresses, names, numbers, and option codes are the same.\par\par\tab The following sections describe the format of the MF keyword and the use of list,\par\tab execute, and generate forms. They also show the optional and invalid\par\tab subparameters.\par\plain\f1\fs28\b\par\tab List-form keyword\par\plain\f2\fs20\par\tab\tab The format of the MF keyword for the list form is:\par\plain\f2\fs20\b\par\tab\tab MF=\{L|(L,\plain\f2\fs20\i address\plain\f2\fs20\b [,\plain\f2\fs20\i label\plain\f2\fs20\b ])\}\par\plain\f2\fs20\par\tab\tab where:\par\plain\f1\fs20\b\par\tab\tab L \tab\plain\f2\fs20 specifies that this is the list form of the macro.\par\par\tab\tab\tab If you code MF=L, without the \plain\f2\fs20\i address \plain\f2\fs20 parameter, then,\par\plain\f1\fs20\par\tab\tab\tab v \tab\plain\f2\fs20 Register notation and expressions that generate S-type address constants\par\tab\tab\tab\tab cannot be used\par\plain\f1\fs20\par\tab\tab\tab v \tab\plain\f2\fs20 The parameter list is built in line, which means that the program is not\par\tab\tab\tab\tab reentrant if the parameter list is modified at execution.\par\plain\f1\fs20\i\tab\tab\par\tab\tab address\par\plain\f2\fs20\tab\tab\tab specifies the address of a remote area in which the macro expansion builds a\par\tab\tab\tab parameter list. Coding the \plain\f2\fs20\i address \plain\f2\fs20 parameter will result in generating\par\tab\tab\tab executable code to initialize the remote parameter list. You can modify this\par\tab\tab\tab parameter list with later calls to the execute form or update it with later\par\tab\tab\tab invocations of the list form using the same \plain\f2\fs20\i address \plain\f2\fs20 parameter. The area must\par\tab\tab\tab begin on a fullword boundary and be large enough for the parameter list. You\par\tab\tab\tab can specify the address in register notation or as an expression valid for a\par\tab\tab\tab relocatable A-type address constant or a direct or indirect S-type address\par\tab\tab\tab constant.\par\plain\f1\fs20\i\par\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies a unique name used in an EQU instruction in the expansion of the\par\tab\tab\tab macro. \plain\f2\fs20\i Label \plain\f2\fs20 is equated to the length of the parameter list. You do not have to\par\tab\tab\tab know the length of the parameter list if you code \plain\f2\fs20\i label\plain\f2\fs20 ; the expansion of the\par\tab\tab\tab macro determines the amount of storage required.\par\par\tab\tab The size, in fullwords, of a parameter list is:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 For GENCB, 4, plus 3 times the number of ACB, EXLST, or RPL keywords\par\tab\tab\tab specified (plus 1 for DDNAME, EODAD, JRNAD, LERAD, or SYNAD)\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 For MODCB, 3, plus 3 times the number of ACB, EXLST, or RPL keywords\par\tab\tab\tab specified (plus 1 for DDNAME, EODAD, JRNAD, LERAD, or SYNAD)\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 For SHOWCB, 5, plus 2 times the number of fields specified in the FIELDS\par\tab\tab\tab keyword\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 For TESTCB, 8 (plus 1 for either DDNAME, STMST, EODAD, JRNAD, LERAD,\par\tab\tab\tab or SYNAD).\par\par\tab\tab If you code MF=(L,address,label), the parameter list is built in the remote area\par\tab\tab specified. The expansion of the macro equates \plain\f2\fs20\i label \plain\f2\fs20 with the length of the\par\tab\tab parameter list.\par\plain\f1\fs28\b\par\tab Execute-form keyword\par\plain\f2\fs20\par\tab The format of the MF keyword for the execute form is:\par\plain\f2\fs20\b\par\tab MF=(E,\plain\f2\fs20\i address\plain\f2\fs20\b )\par\plain\f2\fs20\par\tab where:\par\plain\f1\fs20\b\par\tab E \plain\f2\fs20 specifies that this is the execute form of the macro.\par\plain\f2\fs16\par\tab\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab specifies the address of the parameter list.\par\par\tab Expansion of the execute form of the macro results in executable code that causes:\par\plain\f4\fs20\par\tab 1. \plain\f2\fs20 A parameter list to be modified, if requested\par\plain\f4\fs20\tab 2. \plain\f2\fs20 Control to be passed to a routine that satisfies the request.\par\par\tab You may not use the execute form to add an entry to a parameter list. If you try to\par\tab add an entry, you receive a return code of 8 in register 15.\par\plain\f1\fs28\b\par\tab Generate-form keyword\par\plain\f2\fs20\par\tab The format of the MF keyword for the generate form is:\par\plain\f2\fs20\b\par\tab MF=(G,\plain\f2\fs20\i address\plain\f2\fs20\b [,\plain\f2\fs20\i label\plain\f2\fs20\b ])\par\plain\f2\fs20\par\tab where:\par\plain\f1\fs20\b\par\tab G \plain\f2\fs20 specifies that this is the generate form of the macro.\par\plain\f1\fs20\i\par\tab address\par\plain\f2\fs20\tab\tab specifies the address of a remote area in which the parameter list is to be built.\par\tab\tab The area must begin on a fullword boundary.\par\plain\f1\fs20\i\tab label\par\plain\f2\fs20\tab\tab specifies a unique name that is used in an EQU instruction in the expansion of\par\tab\tab the macro. \plain\f2\fs20\i Label \plain\f2\fs20 is equated to the length of the parameter list. You do not have\par\tab\tab to know the length of the parameter list if you code \plain\f2\fs20\i label\plain\f2\fs20 ; the expansion of the\par\tab macro determines the amount of storage required.\par\par\tab If you code MF=(G,address), the parameter list is built in the remote area specified.\par\par\tab If you code MF=(G,address,label), the parameter list is built in the remote area\par\tab specified. The expansion of the macro equates the length of the parameter list to\par\plain\f2\fs20\i\tab label\plain\f2\fs20 .\par\plain\f1\fs28\b\par\page Examples of generate, list, and execute forms\par\plain\f2\fs20\par\tab Table 1 shows which forms of GENCB, MODCB, SHOWCB, and TESTCB should be\par\tab used in reentrant/nonreentrant and shared/nonshared environments.\par\plain\f1\fs18\i\par\tab Table 1. Reentrant Programming\plain\f4\fs18 .\par\tab ----------------------------------------------------------------------------------\par\plain\f2\fs18\b\tab\tab\tab Reentrant \tab\tab Nonreentrant\par\plain\f4\fs18\tab ----------------------------------------------------------------------------------\par\plain\f2\fs18\b\tab Shared \tab\tab\plain\f2\fs18 MF=(L,\plain\f2\fs18\i address\plain\f2\fs18 [,\plain\f2\fs18\i label\plain\f2\fs18 ]) \tab MF=L\par\tab\tab\tab MF=(E,\plain\f2\fs18\i address\plain\f2\fs18 ) \tab\tab MF=(E,\plain\f2\fs18\i address\plain\f2\fs18 )\par\plain\f4\fs18\tab ----------------------------------------------------------------------------------\par\plain\f2\fs18\b\tab Nonshared \tab\plain\f2\fs18 MF=(G,\plain\f2\fs18\i address\plain\f2\fs18 [,\plain\f2\fs18\i label\plain\f2\fs18 ]) \tab Standard Form\par\plain\f4\fs18\tab ----------------------------------------------------------------------------------\par\plain\f2\fs20\par\tab The figure shows that:\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 To share parameter lists in a reentrant program, the remote-list form should be\par\tab\tab used with the execute form.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 To share parameter lists in a nonreentrant program, the simple-list form should\par\tab\tab be used with the execute form.\par\plain\f1\fs20\par\tab v \tab\plain\f2\fs20 If you do not intend to share parameter lists, the generate form should be used\par\tab\tab in reentrant programs and the standard form should be used for nonreentrant\par\tab\tab programs.\par\plain\f2\fs22\b\par\tab\plain\f2\fs20 The following examples show how the generate, list, and execute forms work.\par\plain\f1\fs28\b\par\tab Example: generate form (reentrant)\par\plain\f2\fs20\par\tab In this example, the generate form of GENCB is used to create a default request\par\tab parameter list (RPL) in a reentrant environment.\par\plain\f1\fs18\par\tab LA 10,LEN1 \tab\tab Get length of the parameter list.\par\par\tab GETMAIN R,LV=(10) \tab Get storage for the area in which \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab the parameter list is to be built. \tab\tab\tab\tab\tab x\par\par\tab LR 2,1 \tab\tab\tab Save address of parameter-list area.\par\par\tab GENCB BLK=RPL, x\par\tab MF=(G,(2),LEN1)\par\plain\f2\fs20\par\tab The macro expansion equates LEN1 to the length of the parameter list, as follows:\par\plain\f1\fs18\tab +LEN1 EQU 16\par\plain\f2\fs20\par\tab The parameter list is built in the area acquired by the GETMAIN macro and\par\tab pointed to by register 2. This list is used by VSAM to build the RPL. VSAM\par\tab returns the RPL address in register 1 and the RPL length in register 0. If the\par\tab WAREA and LENGTH parameters are used, the RPL is built at the WAREA\par\tab address.\par\plain\f1\fs28\b\par\tab Example: remote-list form (reentrant)\par\plain\f2\fs20\par\tab In this example, the remote-list form of MODCB is used to build a parameter list\par\tab that will later be used to modify the MACRF bits in the access method control\par\tab block ANYACB.\par\plain\f1\fs18\par\tab LA 8,LEN2 \tab\tab Get length of the parameter list.\par\par\tab GETMAIN R,LV=(8) \tab Get storage for the area in which the\tab\tab\tab\tab x\par\tab\tab\tab\tab parameter list is to be built.\par\par\tab LR 3,1 \tab\tab\tab Save address of the parameter-list area.\par\par\tab MODCB ACB=ANYACB, x\par\tab MACRMF=SEQ,MF=(L,(3),LEN2)\par\plain\f2\fs20\par\tab The macro expansion equates the length of the parameter list to LEN2, as follows:\par\plain\f1\fs18\tab +LEN2 EQU 24\par\plain\f2\fs20\par\tab This parameter list is built in the remote area pointed to by register 3. The list is\par\tab used by VSAM to modify the ACB when an execute form of MODCB is issued (see\par\tab next example). The list form only creates a parameter list; it does not modify the\par\tab ACB.\par\plain\f1\fs28\b\par\tab Example: execute form (reentrant)\par\plain\f2\fs20\par\tab In this example, the execute form of MODCB is used to modify the address of the\par\tab access method control block and MACRF codes in the parameter list created by the\par\tab remote-list form of MODCB in the previous example.\par\plain\f1\fs18\par\tab MODCB ACB=MYACB,MACRF=(ADR,SEQ,OUT),MF=(E,(3))\par\plain\f2\fs20\par\tab The parameter list pointed to by register 3 is changed so that the ACB and MACRF\par\tab parameter values in the execute form override those in the list form. The access\par\tab method control block, MYACB, is then modified to MACRF=(ADR,SEQ,OUT).\par\par\tab The access method control block at ANYACB is not changed by either of these\par\tab examples.\par\plain\f1\fs28\b\par\page ACB\loch\f1\hich\f1\'97Generate an access method control block at assembly time\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 ACB\loch\f1\hich\f1\'97Generate an access method control block at assembly time\plain\f1\fs20\cf1 ----\par\plain\f1\fs20\cf3 ----z390 vsam supports AM, DDNAME, MACRF with sub-parameters KEY, ADR, SEQ, OUT----\par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 ACB\loch\f1\hich\f1\'97Generate an access method control block at assembly time\plain\f1\fs20\cf1 ----\par\plain\f1\fs20\cf3 ----IBM vsam, there are 2 examples----\par\plain\f1\fs20\b\cf3 ----IBM Example 1: ACB macro----\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f1\fs18 ----\tab\tab BLOCK ACB \tab AM=VSAM,BUFND=4, \tab BLOCK gives symbolic \tab\tab\tab x\par ----\tab\tab\tab\tab BUFNI=3, \tab\tab address of the access \tab\tab\tab x\par ----\tab\tab\tab\tab BUFSP=19456, \tab\tab method control block. \tab\tab\tab x\par ----\tab\tab\tab\tab DDNAME=DATASETS, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab EXLST=EXITS, \tab\tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab MACRF=(KEY,DIR,SEQ,OUT), \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab STRNO=2\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f1\fs20\b\cf3 ----Z390 equivalent for IBM Example 1: ACB macro----\plain\f1\fs20\cf3\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f1\fs18 ----\tab\tab BLOCK ACB \tab AM=VSAM,\tab  \tab BLOCK gives symbolic \tab\tab\tab x\par ----\tab\tab\tab\tab\tab  \tab\tab address of the access \tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab method control block. \tab\tab\tab x\par ----\tab\tab\tab\tab DDNAME=DATASETS, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab MACRF=(KEY,DIR,SEQ,OUT)\tab\tab\tab\tab\tab x\par\plain\f1\fs20\b\cf1 ----\par ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f1\fs20\b\cf3 ----IBM Example 2: ACB macro----\plain\f1\fs20\cf3\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f2\fs20 ----\plain\f1\fs18\tab\tab BLOCK2 ACB \tab AM=VSAM, \tab\tab BLOCK2 gives symbolic \tab\tab\tab x\par ----\tab\tab\tab\tab DDNAME=DATASETS, \tab address of the access \tab\tab\tab x\par ----\tab\tab\tab\tab EXLST=EXITS, \tab\tab method control block. \tab\tab\tab x\par ----\tab\tab\tab\tab MACRF=(KEY,DIR,SEQ,OUT), \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab RMODE31=ALL\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f1\fs20\b\cf3 ----Z390 equivalent for IBM Example 2: ACB macro----\plain\f1\fs20\cf3\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f2\fs20 ----\plain\f1\fs18\tab\tab BLOCK2 ACB \tab AM=VSAM, \tab\tab BLOCK2 gives symbolic \tab\tab\tab x\par ----\tab\tab\tab\tab DDNAME=DATASETS, \tab address of the access \tab\tab\tab x\par ----\tab\tab\tab\tab\tab  \tab\tab method control block. \tab\tab\tab x\par ----\tab\tab\tab\tab MACRF=(KEY,DIR,SEQ,OUT)\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----\par\plain\f2\fs20\par\tab Use the ACB macro to generate an access method control block at assembly time.\par\par\tab The format of the ACB macro is:\par\plain\f2\fs18\b\tab\par\tab [\plain\f2\fs18\i label\plain\f2\fs18 ] \tab\plain\f2\fs18\b ACB \tab [AM=\plain\f2\fs18\b\ul VSAM\plain\f2\fs18\b ]\par\tab\tab\tab [,BSTRNO=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,BUFND=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,BUFNI=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,BUFSP=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,DDNAME=\plain\f2\fs18\i character string\plain\f2\fs18\b ]\par\tab\tab\tab [,EXLST=\plain\f2\fs18\i address\plain\f2\fs18\b ]\tab\par\tab\tab\tab [,MACRF=([ADR][,CNV][,\plain\f2\fs18\b\ul KEY\plain\f2\fs18\b ]\par\tab\tab\tab [,CFX|\plain\f2\fs18\b\ul NFX\plain\f2\fs18\b ]\par\tab\tab\tab [,\plain\f2\fs18\b\ul DDN\plain\f2\fs18\b |DSN]\par\tab\tab\tab [,DFR|\plain\f2\fs18\b\ul NDF\plain\f2\fs18\b ]\par\tab\tab\tab [,DIR][,\plain\f2\fs18\b\ul SEQ\plain\f2\fs18\b ][,SKP]\par\tab\tab\tab [,ICI|\plain\f2\fs18\b\ul NCI\plain\f2\fs18\b ]\par\tab\tab\tab [,\plain\f2\fs18\b\ul IN\plain\f2\fs18\b ][,OUT]\par\tab\tab\tab [,\plain\f2\fs18\b\ul LEW\plain\f2\fs18\b |NLW]\par\tab\tab\tab [,\plain\f2\fs18\b\ul NIS\plain\f2\fs18\b |SIS]\par\tab\tab\tab [,\plain\f2\fs18\b\ul NRM\plain\f2\fs18\b |AIX]\par\tab\tab\tab [,\plain\f2\fs18\b\ul NRS\plain\f2\fs18\b |RST]\par\tab\tab\tab [,\plain\f2\fs18\b\ul NSR\plain\f2\fs18\b |LSR|GSR|RLS]\par\tab\tab\tab [,\plain\f2\fs18\b\ul NUB\plain\f2\fs18\b |UBF])]\par\tab\tab\tab [,MAREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab [,MLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,PASSWD=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab [,RLSREAD=\{NRI|CR|\plain\f2\fs18\b\ul NORD\plain\f2\fs18\b\}]\par\tab\tab\tab [,RMODE31=\{ALL|BUFF|CB|\plain\f2\fs18\b\ul NONE\plain\f2\fs18\b\}]\par\tab\tab\tab [,SHRPOOL=\{0\plain\f2\fs18 |\plain\f2\fs18\i abs expression\plain\f2\fs18\b\}]\par\tab\tab\tab [,STRNO=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\plain\f2\fs20\tab\par\tab Values for ACB macro subparameters can be specified as absolute numeric\par\tab expressions, character strings, codes, and expressions that generate valid\par\tab relocatable A-type address constants.\par\plain\f1\fs20\i\par\tab label\par\plain\f2\fs20\tab\tab specifies 1 to 8 characters that provide a symbolic address for the access\par\tab\tab method control block that is assembled. If you omit the DDNAME parameter,\par\plain\f2\fs20\i\tab\tab label \plain\f2\fs20 serves as the ddname.\par\plain\f1\fs20\b\par\tab AM=\plain\f1\fs20\b\ul VSAM\plain\f1\fs20\b\par\plain\f2\fs20\tab\tab specifies that the access method using this control block is VSAM.\par\plain\f1\fs20\b\par\tab BSTRNO=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab specifies the number of strings that are initially allocated for access to the base\par\tab\tab cluster of a path. BSTRNO must be a number between 0 and 255. The default\par\tab\tab is STRNO. BSTRNO is ignored if the object being opened is not a path. If the\par\tab\tab number that is specified for BSTRNO is insufficient, VSAM dynamically\par\tab\tab extends the number of strings as needed for access to the base cluster.\par\par\tab\tab BSTRNO can influence performance. The VSAM control blocks for the set of\par\tab\tab strings that is specified by BSTRNO are allocated in contiguous virtual storage.\par\tab\tab This is not guaranteed for the strings allocated by dynamic extension.\par\par\tab\tab This parameter is only applicable to MACRF=NSR.\par\par\tab\tab This parameter has no effect for z/OS UNIX files. This is the case when an\par\tab\tab application program uses the VSAM interface to access an z/OS UNIX file.\par\plain\f1\fs20\b\par\tab BUFND=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab specifies the number of I/O buffers that VSAM is to use for transmitting data\par\tab\tab between virtual and auxiliary storage. A buffer is the size of a control interval\par\tab\tab in the data component. BUFND must be a number between 0 and 32767. The\par\tab\tab minimum number that you can specify is 1 plus the number that is specified\par\tab\tab for STRNO. (If you omit STRNO, BUFND must be at least 2, because the\par\tab\tab default for STRNO is 1.) The number can be supplied through the JCL DD\par\tab\tab AMP parameter and through the macro. The default is the minimum number\par\tab\tab that is required. The minimum buffer specification does not provide optimum\par\tab\tab sequential processing performance. Generally, the more data buffers that are\par\tab\tab specified, the better the performance.\par\tab\tab\par\tab\tab Additional data buffers benefit direct inserts or updates during control area\par\tab\tab splits and benefit spanned record accessing. The maximum number of buffers\par\tab\tab that is allowed is currently 255 (254 data buffers and 1 insert buffer). See \plain\f2\fs20\i z/OS\par\tab\tab DFSMS Using Data Sets \plain\f2\fs20 for more information on optimizing performance and\par\tab\tab system-managed buffering.\par\par\tab\tab This parameter is applicable only to MACRF=NSR; it is ignored when\par\tab\tab MACRF=RLS is specified.\par\par\tab\tab This parameter has no effect for z/OS UNIX files.\par\plain\f1\fs20\b\par\tab BUFNI=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab specifies the number of I/O buffers that VSAM is to use for transmitting the\par\tab\tab contents of index entries between virtual and auxiliary storage for keyed\par\tab\tab access. A buffer is the size of a control interval in the index. BUFNI must be a\par\tab\tab number between 0 and 32767. The minimum number is the number that is\par\tab\tab specified for STRNO (if you omit STRNO, BUFNI must be at least 1, because\par\tab\tab the default for STRNO is 1). You can supply the number through the JCL DD\par\tab\tab AMP parameter and through the macro. The default is the minimum number\par\tab\tab that is required.\par\par\tab\tab Additional index buffers improve performance by providing for the residency\par\tab\tab of some or all of the high-level index, thereby minimizing the number of\par\tab\tab high-level index records retrieved from DASD for key-direct processing. For\par\tab\tab more information on optimizing performance, see \plain\f2\fs20\i z/OS DFSMS Using Data\par\tab\tab Sets\plain\f2\fs20 .\par\par\tab\tab The default is the minimum number that is required. The maximum number of\par\tab\tab buffers that is allowed is currently 255 (254 data buffers and 1 insert buffer).\par\par\tab\tab This parameter is only applicable to MACRF=NSR.\par\par\tab\tab This parameter has no effect for z/OS UNIX files.\par\plain\f1\fs20\b\par\tab BUFSP=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab specifies the maximum number of bytes of virtual storage to be used for the\par\tab\tab data and index I/O buffers. VSAM gets the storage in your program's address\par\tab\tab space. If you specify less than the amount of space that was specified in the\par\tab\tab BUFFERSPACE parameter of the DEFINE command when the data set was\par\tab\tab defined, VSAM overrides your BUFSP specification upward to the value that is\par\tab\tab specified in BUFFERSPACE. (BUFFERSPACE, by definition, is the least amount\par\tab\tab of virtual storage that is ever provided for I/O buffers.) However, if BUFSP is\par\tab\tab specified and the amount specified is much too small \loch\f2\hich\f2\'97 smaller than the\par\tab\tab minimum amount of buffer storage required to process the data set \'97 VSAM\par\tab\tab cannot open the data set. The minimum amount is described under BUFND\par\tab\tab and BUFNI, above.\par\par\tab\tab You can supply BUFSP through the JCL DD AMP parameter and through the\par\tab\tab macro. If you do not specify BUFSP in either place, the amount of storage that\par\tab\tab is used for buffer allocation is the \plain\f2\fs20\i largest \plain\f2\fs20 of the following amounts:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 Amount that is specified in the catalog (BUFFERSPACE)\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 Amount that is determined from BUFND and BUFNI or\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 Minimum storage that is required to process the data set with its specified\par\tab\tab\tab processing options\par\par\tab\tab A valid BUFSP amount takes precedence over the amount that is called for by\par\tab\tab BUFND and BUFNI. If the BUFSP amount is greater than the amount that is\par\tab\tab called for by BUFND and BUFNI, the extra space is allocated under the\par\tab\tab following conditions:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 When MACRF indicates direct access only, additional index buffers are\par\tab\tab\tab allocated.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 When MACRF indicates sequential access, one additional index buffer and\par\tab\tab\tab as many data buffers as possible are allocated.\par\par\tab\tab If the BUFSP amount is less than the amount that is called for by BUFND and\par\tab\tab BUFNI, the number of data and index buffers is decreased under the following\par\tab\tab conditions:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 When MACRF indicates direct access only, the number of data buffers is\par\tab\tab\tab decreased to not fewer than the minimum number. Then, if required, the\par\tab\tab\tab number of index buffers is decreased until the amount that is called for by\par\tab\tab\tab BUFND and BUFNI complies with the BUFSP amount.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 When MACRF indicates sequential access, the number of index buffers is\par\tab\tab\tab decreased to not fewer than 1 more than the minimum number. Then, if\par\tab\tab\tab required, the number of data buffers is decreased to not fewer than the\par\tab\tab\tab minimum number. If still required, 1 more is subtracted from the number of\par\tab\tab\tab index buffers. \par\par\tab\tab\plain\f1\fs20 v \tab\plain\f2\fs20 Neither the number of data buffers nor the number of index buffers is\par\tab\tab\tab decreased to fewer than the minimum number.\par\par\tab\tab If the index does not exist or is not being opened, only BUFND, and not\par\tab\tab BUFNI, enters these calculations.\par\par\tab\tab The BUFFERSPACE must not exceed 16776704.\par\par\tab\tab This parameter is only applicable to MACRF=NSR.\par\par\tab\tab This parameter has no effect for z/OS UNIX files.\par\plain\f1\fs20\b\par\tab DDNAME=\plain\f1\fs20\i character string\par\plain\f2\fs20\tab\tab specifies 1 to 8 characters that identify the data set you want to process by\par\tab\tab specifying the JCL DD statement for the data set. You may omit DDNAME and\par\tab\tab provide it through the label or through the MODCB macro before opening the\par\tab\tab data set. MODCB is described in \loch\f2\hich\f2\'93MODCB\'97Modify an access method control\par\tab\tab block\'94 on page 61.\par\plain\f1\fs20\b\par\tab EXLST=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab specifies the address of a list of addresses of exit routines that you are\par\tab\tab providing. The list must be established by the EXLST or GENCB macro. If you\par\tab\tab use the EXLST macro, you can specify its label here as the address of the exit\par\tab\tab list. If you use GENCB, you can specify the address returned by GENCB in\par\tab\tab register 1 or the label of an area you supplied to GENCB for the exit list.\par\par\tab\tab To use the exit list, you must code this EXLST parameter. Omitting this\par\tab\tab parameter means that you have no exit routines. Exit routines are described in\par\plain\f2\fs20\i\tab\tab z/OS DFSMS Using Data Sets\plain\f2\fs20 .\par\plain\f1\fs20\b\par\tab MACRF=([ADR][,CNV][,\plain\f1\fs20\b\ul KEY\plain\f1\fs20\b ]\par\tab\tab [,CFX|\plain\f1\fs20\b\ul NFX\plain\f1\fs20\b ]\par\tab\tab [,\plain\f1\fs20\b\ul DDN\plain\f1\fs20\b |DSN]\par\tab\tab [,DFR|\plain\f1\fs20\b\ul NDF\plain\f1\fs20\b ]\par\tab\tab [,DIR][,\plain\f1\fs20\b\ul SEQ\plain\f1\fs20\b ][,SKP]\par\tab\tab [,ICI|\plain\f1\fs20\b\ul NCI\plain\f1\fs20\b ]\par\tab\tab [,\plain\f1\fs20\b\ul IN\plain\f1\fs20\b ][,OUT]\par\tab\tab [,\plain\f1\fs20\b\ul LEW\plain\f1\fs20\b |NLW]\par\tab\tab [,\plain\f1\fs20\b\ul NIS\plain\f1\fs20\b |SIS]\par\tab\tab [,\plain\f1\fs20\b\ul NRM\plain\f1\fs20\b |AIX]\par\tab\tab [,\plain\f1\fs20\b\ul NRS\plain\f1\fs20\b |RST]\par\tab\tab [,\plain\f1\fs20\b\ul NSR\plain\f1\fs20\b |LSR|GSR|RLS]\par\tab\tab [,\plain\f1\fs20\b\ul NUB\plain\f1\fs20\b |UBF])\par\plain\f2\fs20\tab\tab specifies the kinds of processing you will do with the data set. The\par\tab\tab subparameters must be significant for the data set. For example, if you specify\par\tab\tab keyed access for an entry-sequenced data set (ESDS), you cannot open the data\par\tab\tab set. You must specify all the types of access you are going to use, whether you\par\tab\tab use them concurrently or by switching from one to the other. Table 2 gives the\par\tab\tab subparameters. Each group of subparameters has a default value (shown by\par\tab\tab underlining). You may specify subparameters in any order. You may specify\par\tab\tab both ADR and KEY to process a key-sequenced data set (KSDS). You may\par\tab\tab specify both DIR and SEQ; with keyed access, you may specify SKP as well. If\par\tab\tab you specify OUT and want merely to retrieve some records and also update,\par\tab\tab delete, or insert others, you need not also specify IN.\par\plain\f1\fs18\i\par\tab\tab Table 2. MACRF Options\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab Option \tab\tab Meaning\par\tab\tab --------------------------------------------------------------------------------------------------------------------\par\par\tab\tab ADR \tab\tab\plain\f2\fs18 Addressed access to a key-sequenced or entry-sequenced data set; RBAs are\par\tab\tab\tab\tab used as search arguments and sequential access is by entry sequence.\par\tab\tab\tab\tab VSAM RLS does not support ADR access to a KSDS.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs18\b\tab\tab CNV \tab\tab\plain\f2\fs18 Access is to the entire contents of a control interval rather than to an\par\tab\tab\tab\tab individual data record. If the data set is password protected, you must\par\tab\tab\tab\tab supply the address of the control or higher-level password in the ACB\par\tab\tab\tab\tab PASSWD parameter.\par\plain\f2\fs18\b\par\tab\tab\tab\tab Recommendation: \plain\f2\fs18 Use RACF\plain\f2\fs11\loch\f2\hich\f2\'ae \plain\f2\fs18 or a functionally equivalent program instead\par\tab\tab\tab\tab of VSAM passwords.\par\par\tab\tab\tab\tab For VSAM RLS and z/OS UNIX files, CNV is invalid. If it is specified for a\par\tab\tab\tab\tab z/OS UNIX file, it results in an OPEN failure.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\plain\f2\fs18\b\ul KEY\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Keyed access to a relative record data set (RRDS) or key-sequenced data\par\tab\tab\tab\tab set. Keys or relative record numbers are used as search arguments and\par\tab\tab\tab\tab sequential access is by key or relative record number. KEY processing is not\par\tab\tab\tab\tab affected by RLS.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab CFX \tab\tab\plain\f2\fs18 If you use ICI, OPEN fixes control blocks and I/O buffers and they remain\par\tab\tab\tab\tab fixed until the ACB is closed. For RLS and z/OS UNIX files, this\par\tab\tab\tab\tab subparameter has no effect.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\plain\f2\fs18\b\ul NFX\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 OPEN does not fix control blocks or I/O buffers. VSAM fixes and unfixes\par\tab\tab\tab\tab pages dynamically as needed. For RLS and z/OS UNIX files, NFX is\par\tab\tab\tab\tab assumed.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\plain\f2\fs18\b\ul DDN\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Subtask shared control block connection is based on common ddnames. For\par\tab\tab\tab\tab RLS and z/OS UNIX files, this subparameter has no effect.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab DSN \tab\tab\plain\f2\fs18 Subtask shared control block connection is based on common data set\par\tab\tab\tab\tab names. For RLS and z/OS UNIX files, this subparameter has no effect.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab DFR \tab\tab\plain\f2\fs18 With shared resources, writes for direct PUT requests are deferred until the\par\tab\tab\tab\tab WRTBFR macro is issued or until VSAM needs a buffer to satisfy a GET\par\tab\tab\tab\tab request. Deferring writes saves I/O requests in cases where subsequent\par\tab\tab\tab\tab requests can be satisfied by the data already in the buffer pool. For RLS,\par\tab\tab\tab\tab DFR is ignored and direct request modified buffers are immediately written\par\tab\tab\tab\tab to disk and the CF (coupling facility). This subparameter has no effect for\par\tab\tab\tab\tab z/OS UNIX files.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\plain\f2\fs18\b\ul NDF\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Writes are not deferred for direct PUTs. For RLS, NDF is ignored and direct\par\tab\tab\tab\tab request modified buffers are immediately written to disk and the CF\par\tab\tab\tab\tab (coupling facility).\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab DIR \tab\tab\plain\f2\fs18 Direct access to an RRDS, KSDS, or ESDS.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\plain\f2\fs18\b\ul SEQ\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Sequential access to an RRDS, KSDS, or ESDS.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab SKP \tab\tab\plain\f2\fs18 Skip-sequential access to an RRDS or KSDS. Used only with keyed access in\par\tab\tab\tab\tab a forward direction.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab ICI \tab\tab\plain\f2\fs18 Processing is limited to improved control interval processing; access is\par\tab\tab\tab\tab faster because fewer processor instructions are executed. ICI processing is\par\tab\tab\tab\tab not allowed for extended format data sets.\par\tab\tab\tab\tab\par\tab\tab\tab\tab For RLS and z/OS UNIX files, this subparameter has no effect.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\plain\f2\fs18\b\ul NCI\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Processing other than improved control interval processing.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\plain\f2\fs18\b\ul IN\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Retrieval of records of a RRDS, KSDS, or ESDS; (not allowed for an empty\par\tab\tab\tab\tab data set). If the data set is password protected, you must supply the\par\tab\tab\tab\tab address of the read or higher-level password in the ACB PASSWD\par\tab\tab\tab\tab parameter.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab OUT \tab\tab\plain\f2\fs18 Storage of new records in a RRDS, KSDS, or ESDS (not allowed with\par\tab\tab\tab\tab addressed access to a KSDS). Update of records in a RRDS, KSDS, or ESDS.\par\tab\tab\tab\tab Deletion of records from a RRDS or KSDS.\par\par\tab\tab\tab\tab If the data set is password protected, you must supply the address of the\par\tab\tab\tab\tab update or higher-level password in the ACB PASSWD parameter.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\plain\f2\fs18\b\ul LEW\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Using LSR, if an exclusive control conflict is encountered, VSAM defers the\par\tab\tab\tab\tab request until the resource becomes available.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NLW \tab\tab\plain\f2\fs18 With this value specified, instead of deferring the request, VSAM returns\par\tab\tab\tab\tab the exclusive control return code 20 (X'14') to the application program. The\par\tab\tab\tab\tab application program is then able to determine the next action.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\plain\f2\fs18\b\ul NIS\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Normal insert strategy. This subparameter has no effect for z/OS UNIX \par\tab\tab\tab\tab files.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab SIS \tab\tab\plain\f2\fs18 Sequential insert strategy (split control intervals and control areas at the\par\tab\tab\tab\tab insert point rather than at the midpoint when doing direct PUTs); although\par\tab\tab\tab\tab positioning is lost and writes are done after each direct PUT request, SIS\par\tab\tab\tab\tab allows more efficient space usage when direct inserts are clustered around\par\tab\tab\tab\tab certain keys. This subparameter has no effect for z/OS UNIX files.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\plain\f2\fs18\b\ul NRM\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 The object to be processed is the one named in the specified ddname.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab AIX \tab\tab\plain\f2\fs18 The object to be processed is the alternate index of the path specified by\par\tab\tab\tab\tab ddname, rather than the base cluster though the alternate index. For RLS,\par\tab\tab\tab\tab the AIX subparameter is invalid. This subparameter has no effect for z/OS\par\tab\tab\tab\tab UNIX files.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\plain\f2\fs18\b\ul NRS\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Data set is not reusable.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab RST \tab\tab\plain\f2\fs18 Data set is reusable (high-used RBA is reset to 0 during OPEN). If the data\par\tab\tab\tab\tab set is password protected, you must supply the address of the update or\par\tab\tab\tab\tab higher-level password in the ACB PASSWD parameter.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\i\tab\tab\plain\f2\fs18\b\ul NSR\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Nonshared resources.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab LSR \tab\tab\plain\f2\fs18 Local shared resources. Each address space may have up to 256 index\par\tab\tab\tab\tab resource pools and 256 data resource pools independent of other address\par\tab\tab\tab\tab spaces. Unless you are using the default, SHRPOOL=0, you must specify\par\tab\tab\tab\tab the SHRPOOL parameter to indicate which resource pool you are using.\par\tab\tab\tab\tab Specifying LSR causes a data set to use the local resource pool built by the\par\tab\tab\tab\tab BLDVRP macro. If an index resource pool exists at the time an OPEN\par\tab\tab\tab\tab macro is issued, the index for a KSDS is connected to the index resource\par\tab\tab\tab\tab pool. This parameter is invalid for z/OS UNIX files and if specified results\par\tab\tab\tab\tab in an open failure.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab GSR \tab\tab\plain\f2\fs18 Global shared resources; all address spaces may have local and global\par\tab\tab\tab\tab resources pools, where tasks in an address space with a local resource pool\par\tab\tab\tab\tab may use either the local resource pool or the global resource pool. This\par\tab\tab\tab\tab parameter is invalid for compressed format data sets. If specified for a\par\tab\tab\tab\tab z/OS UNIX file, it results in an open failure.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab RLS \tab\tab\plain\f2\fs18 RLS specifies that VSAM record level sharing protocols are used. RLS and\par\tab\tab\tab\tab NSR/LSR/GSR are mutually exclusive. RLS implies that VSAM uses cross\par\tab\tab\tab\tab system record level locking as opposed to CI locking, uses CF for buffer\par\tab\tab\tab\tab consistency, and manages a system wide local cache. When you specify this\par\tab\tab\tab\tab parameter, OPEN will fail for:\par\plain\f1\fs18\tab\tab\tab\tab v \tab\plain\f2\fs18 Linear data sets\par\plain\f1\fs18\tab\tab\tab\tab v \tab\plain\f2\fs18 ADR access to a KSDS\par\plain\f1\fs18\tab\tab\tab\tab v\tab\plain\f2\fs18 CNV access to any data set organization\par\plain\f1\fs18\tab\tab\tab\tab v \tab\plain\f2\fs18 Data sets defined with imbedded indexes\par\plain\f1\fs18\tab\tab\tab\tab v \tab\plain\f2\fs18 z/OS UNIX files.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\plain\f2\fs18\b\ul NUB\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Management of I/O buffers is left up to VSAM. For RLS, you must specify\par\tab\tab\tab\tab NUB.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab UBF \tab\tab\plain\f2\fs18 Management of I/O buffers is left up to the user. The work area specified\par\tab\tab\tab\tab by the RPL (or GENCB) AREA parameter is the I/O buffer. VSAM\par\tab\tab\tab\tab transmits the contents of a control interval directly between the work area\par\tab\tab\tab\tab and direct access storage. \plain\f2\fs18\b UBF \plain\f2\fs18 is valid when OPTCD=MVE and\par\tab\tab\tab\tab MACRF=CNV are specified. When ICI is specified, UBF is assumed. For\par\tab\tab\tab\tab RLS, UBF is invalid.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\b\tab\tab MAREA=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of an optional OPEN/CLOSE or TYPE=T option (CLOSE\par\tab\tab\tab macro) message area. See \loch\f2\hich\f2\'93OPEN/CLOSE message area for multiple reason or\par\tab\tab\tab attention messages\'94 on page 126 for more information. MAREA is ignored for\par\tab\tab\tab RLS.\par\plain\f1\fs20\b\par\tab\tab MLEN=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the length of an optional OPEN/CLOSE or TYPE=T option (CLOSE\par\tab\tab\tab macro) message area. The default is 0. The maximum length is 32KB. See\par\tab\tab\tab\loch\f2\hich\f2\'93OPEN/CLOSE message area for multiple reason or attention messages\'94 on\par\tab\tab\tab page 126 for more information. MLEN is ignored for RLS.\par\plain\f1\fs20\b\par\tab\tab PASSWD=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of a field containing the highest-level password required\par\tab\tab\tab for the types of access indicated by the MACRF parameter. The first byte of the\par\tab\tab\tab field pointed to contains the length (in binary) of the password (maximum of 8\par\tab\tab\tab bytes). Zero indicates that no password is supplied. If the data set is password\par\tab\tab\tab protected and you do not supply a required password in the access method\par\tab\tab\tab control block, VSAM gives the console operator the opportunity to supply it\par\tab\tab\tab when you open the data set.\par\par\tab\tab\tab Data sets which are opened for RLS processing must be SMS-managed data\par\tab\tab\tab sets which have had password processing ignored.\par\tab\par\tab\tab\tab This parameter has no effect for z/OS UNIX files.\par\plain\f1\fs20\b\par\tab\tab RLSREAD=\{NRI|CR|NORD\}\par\plain\f2\fs20\tab\tab\tab RLSREAD (for RLS) specifies the read integrity options that apply to GET\par\tab\tab\tab requests that are issued against this ACB. This parameter overrides the read\par\tab\tab\tab integrity options that are specified in the RLS JCL parameter. You can override\par\tab\tab\tab the RLSREAD parameters for a specific GET request by specifying the read\par\tab\tab\tab integrity options in the RPL OPTCD parameter.\par\plain\f1\fs20\b\tab\tab\tab\par\tab\tab\tab NRI \tab\plain\f2\fs20 specifies no read integrity. NRI is a performance option. When you\par\tab\tab\tab\tab specify NRI, VSAM does not obtain a lock on the record.\par\plain\f1\fs20\b\par\tab\tab\tab CR \tab\plain\f2\fs20 specifies consistent read integrity. CR ensures that only records that\par\tab\tab\tab\tab have been committed are read.\par\plain\f1\fs20\b\par\tab\tab\tab NORD \tab\plain\f2\fs20 specifies that the read integrity option that is used is determined either\par\tab\tab\tab\tab by the RLS JCL specification or by options that are specified on the\par\tab\tab\tab\tab GET request.\par\par\tab\tab\tab For access modes other than RLS, RLSREAD is ignored.\par\plain\f1\fs20\b\par\tab\tab RMODE31=[ALL|BUFF|CB|NONE]\par\plain\f2\fs20\tab\tab\tab specifies where VSAM OPEN obtains virtual storage (above or below 16\par\tab\tab\tab megabytes) for control blocks and I/O buffers.\par\par\tab\tab\tab The rev="r105dq01">The values specified by the RMDE31 parameter have an\par\tab\tab\tab effect only before issuing an OPEN. At all other times, changing these values\par\tab\tab\tab has no effect on the residency of the control blocks and I/O buffers.\par\par\tab\tab\tab If MACRF=RLS is specified, RMODE31=ALL is assumed. For RLS and\par\tab\tab\tab DFSMStvs, VSAM control blocks and buffers are located in a data space owned\par\tab\tab\tab by the SMSVSAM server address space and are not directly addressable.\par\par\tab\tab\tab RMODE31= can also be specified on the JCL AMP parameter.\par\plain\f1\fs20\b\par\tab\tab\tab ALL \tab\plain\f2\fs20 specifies that both VSAM control blocks and I/O buffers are obtained\par\tab\tab\tab\tab above 16 megabytes.\par\plain\f1\fs20\b\par\tab\tab\tab BUFF \tab\plain\f2\fs20 specifies that only VSAM I/O buffers are obtained above 16\par\tab\tab\tab\tab megabytes.\par\plain\f1\fs20\b\tab\tab\tab\par\tab\tab\tab CB \tab\plain\f2\fs20 specifies that only VSAM control blocks are obtained above 16\par\tab\tab\tab\tab megabytes.\par\plain\f1\fs20\b\par\tab\tab\tab\plain\f1\fs20\b\ul NONE\plain\f1\fs20\b  \tab\plain\f2\fs20 specifies that both I/O buffers and VSAM control blocks are built\par\tab\tab\tab\tab below 16 megabytes. This is the default.\par\plain\f1\fs20\b\par\tab\tab SHRPOOL=\{\plain\f1\fs20\i abs expression\plain\f1\fs20\b |\plain\f1\fs20\b\ul 0\plain\f1\fs20\b\}\par\plain\f2\fs20\tab\tab\tab specifies which LSR pool is connected to the ACB. This parameter is valid only\par\tab\tab\tab when MACRF=LSR is also specified. SHRPOOL must be a number between 0\par\tab\tab\tab and 255. The default is 0.\par\plain\f1\fs20\b\tab\tab\par\tab\tab STRNO=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the number of requests requiring concurrent data set positioning\par\tab\tab\tab VSAM is prepared to handle. STRNO must be a number between 1 and 255.\par\tab\tab\tab The default is 1. A request is defined by a given request parameter list or chain\par\tab\tab\tab of request parameter lists. The string number is equal to the number of\par\tab\tab\tab requests issued concurrently for all the data sets sharing the resource pool. See\par\tab\tab\tab\loch\f2\hich\f2\'93RPL\'97Generate a request parameter list at assembly time\'94 on page 79 and\par\tab\tab\tab\'93GENCB\'97Generate a request parameter list at execution time\'94 on page 45 for\par\tab\tab\tab information on request parameter lists. When records are loaded into an empty\par\tab\tab\tab data set, the STRNO value in the access method control block must be 1.\par\par\tab\tab\tab VSAM dynamically extends the number of strings as they are needed by\par\tab\tab\tab concurrent requests for this ACB. This automatic extension can influence\par\tab\tab\tab performance. The VSAM control blocks for the set of strings specified by\par\tab\tab\tab STRNO are allocated on contiguous virtual storage, but this is not guaranteed\par\tab\tab\tab for the strings allocated by dynamic extension. Dynamic string addition cannot\par\tab\tab\tab be done when using the following options:\par\plain\f1\fs20\par\tab\tab\tab v \tab\plain\f2\fs20 Load mode\par\plain\f1\fs20\tab\tab\tab v \tab\plain\f2\fs20 ICI\par\plain\f1\fs20\tab\tab\tab v \tab\plain\f2\fs20 LSR or GSR\par\par\tab\tab\tab For STRNO, you should specify the total number of request parameter lists or\par\tab\tab\tab chains of request parameter lists that you are using to define requests. (VSAM\par\tab\tab\tab needs to remember only one position for a chain of request parameter lists.)\par\tab\tab\tab However, each position beyond the minimum number that VSAM needs to be\par\tab\tab\tab able to remember requires additional virtual storage space for these\par\tab\tab\tab parameters:\par\par\plain\f1\fs20\tab\tab\tab v \tab\plain\f2\fs20 A minimum of one data I/O buffer and, for keyed access, one index I/O\par\tab\tab\tab\tab buffer (the size of an I/O buffer is the control interval size of a data set)\par\plain\f1\fs20\par\tab\tab\tab v \tab\plain\f2\fs20 Internal control blocks and other areas\par\tab\tab\tab\par\tab\tab\tab For RLS, STRNO is ignored. Strings are dynamically acquired up to a limit of\par\tab\tab\tab 1024.\par\par\tab\tab\tab STRNO >1 is not supported for z/OS UNIX files. If you specify a value greater\par\tab\tab\tab than 1, OPEN fails.\par\plain\f1\fs28\b\par\tab Example 1: ACB macro\par\plain\f2\fs20\par\tab\tab In this example, the ACB macro is used to identify a data set to be opened and to\par\tab\tab specify the types of processing to be performed. The access method control block\par\tab\tab generated by this example is built when the program is assembled.\par\plain\f1\fs18\par\tab\tab BLOCK ACB \tab AM=VSAM,BUFND=4, \tab BLOCK gives symbolic \tab\tab\tab x\par\tab\tab\tab\tab BUFNI=3, \tab\tab address of the access \tab\tab\tab x\par\tab\tab\tab\tab BUFSP=19456, \tab\tab method control block. \tab\tab\tab x\par\tab\tab\tab\tab DDNAME=DATASETS, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab EXLST=EXITS, \tab\tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab MACRF=(KEY,DIR,SEQ,OUT), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab STRNO=2\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 ACB\loch\f1\hich\f1\'97Generate an access method control block at assembly time\plain\f1\fs20\cf1 ----\par\plain\f1\fs20 ----Example 1: ACB macro----\par\plain\f1\fs20\cf3 ----z390 vsam doesn't support BUFND, BUFNI, BUFSP, EXLST, STRNO----\par ----or MACRF sub-parameter DIR----\par\plain\f2\fs20\par\tab\tab The ACB macro's parameters are:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 BUFND specifies four I/O buffers for data. BUFNI specifies three I/O buffers for\par\tab\tab\tab index entries. BUFSP specifies 19456 bytes of buffer space, enough space to\par\tab\tab\tab accommodate control intervals of data that are 4096 bytes and control intervals\par\tab\tab\tab of index entries that are 1024 bytes.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 DDNAME specifies this access method control block is associated with a DD\par\tab\tab\tab statement named DATASETS.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 EXLST specifies the exit list associated with this access method control block is\par\tab\tab\tab named EXITS.\par\plain\f1\fs20\tab\tab\par\tab\tab v \tab\plain\f2\fs20 MACRF specifies keyed-direct and keyed-sequential processing for both\par\tab\tab\tab insertion and update.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 STRNO specifies two requests will require concurrent positioning.\par\plain\f1\fs20\tab\tab\par\tab\tab v \tab\plain\f2\fs20 Since the type of resources are not specified, NSR is assumed.\par\plain\f1\fs22\b\par\plain\f1\fs28\b\page\tab Example 2: ACB macro\par\plain\f2\fs20\par\tab\tab In this example, the ACB macro is used to identify a data set to be opened and to\par\tab\tab specify the types of processing to be performed. The access method control block\par\tab\tab generated by this example is built when the program is assembled. The caller\par\tab\tab requests that the VSAM control blocks and I/O buffers be obtained above 16\par\tab\tab megabytes, if possible.\par\plain\f1\fs18\par\tab\tab BLOCK2 ACB \tab AM=VSAM, \tab\tab BLOCK2 gives symbolic \tab\tab\tab x\par\tab\tab\tab\tab DDNAME=DATASETS, \tab address of the access \tab\tab\tab x\par\tab\tab\tab\tab EXLST=EXITS, \tab\tab method control block. \tab\tab\tab x\par\tab\tab\tab\tab MACRF=(KEY,DIR,SEQ,OUT), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab RMODE31=ALL\par\plain\f2\fs20\par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 ACB\loch\f1\hich\f1\'97Generate an access method control block at assembly time\plain\f1\fs20\cf1 ----\par\plain\f1\fs20 ----Example 1: ACB macro----\par\plain\f1\fs20\cf3 ----z390 vsam doesn't support EXLST, RMODE31----\par ----or MACRF sub-parameter DIR----\plain\f2\fs20\tab\tab\par\par The ACB macro's parameters are:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 DDNAME specifies this access method control block is associated with a DD\par\tab\tab\tab statement named DATASETS.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 EXLST specifies the exit list associated with this access method control block is\par\tab\tab\tab named EXITS.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 MACRF specifies keyed-direct and keyed-sequential processing for both\par\tab\tab\tab insertion and update.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 RMODE31=ALL specifies both VSAM control blocks and buffers may reside\par\tab\tab\tab above 16 megabytes.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 Since the type of resources are not specified, NSR is assumed.\par\plain\f1\fs22\b\par\plain\f1\fs28\b\page BLDVRP\loch\f1\hich\f1\'97Build VSAM resource pool\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----BLDVRP-Buikd VSAM resource pool----\par\plain\f1\fs20\cf3 ----z390 vsam, does not support BLDVRP----\par\plain\f2\fs20\par\plain\f1\fs28\b CHECK\loch\f1\hich\f1\'97Wait for completion of a request\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf3 ----CHECK\loch\f1\hich\f1\'97Wait for completion of a request----\par ----z390 vsam, does not support CHECK----\par\plain\f1\fs28\b\par\page CLOSE\loch\f1\hich\f1\'97Disconnect program and data\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 CLOSE\loch\f1\hich\f1\'97Disconnect program and data----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam does not support MODE (as it works in either mode). or TYPE----\par\plain\f2\fs20\par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 CLOSE\loch\f1\hich\f1\'97Disconnect program and data----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----IBM vsam, therie one example----\par\plain\f1\fs20\b\cf3 ----IBM Example: CLOSE macro----\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f2\fs20 ----\plain\f1\fs18\par ----\tab\tab BLOCK1 ACB \par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab RMODE31=ALL \tab\tab VSAM control blocks and I/O buffers\tab x\par ----\tab\tab\tab\tab ,\tab\tab\tab may be above 16 megabytes.\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab OPEN \tab BLOCK1, \tab\tab OPEN/CLOSE parameter list may reside\tab x\par ----\tab\tab\tab\tab MODE=31 \tab\tab above 16 megabytes.\par ----\tab\tab\tab CLOSE \tab BLOCK1, \tab\tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab MODE=31, \tab\tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab TYPE=T\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f1\fs20\b\cf3 ----Z390 equivalent of IBM Example: CLOSE macro----\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs20 ----\plain\f1\fs18\par ----\tab\tab BLOCK1 ACB \par ----\tab\tab\tab ...\par ----\tab\tab\tab OPEN \tab BLOCK1.\par ----\tab\tab\tab CLOSE \tab BLOCK1\par ----\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f2\fs20\par\par\tab\tab Use the CLOSE macro to disconnect the program and data.\par\par\tab\tab If you use a "reserved" relative generation number character as the first character\par\tab\tab of a member name, the stow will not occur, you must issue your own stow.\par\par\tab\tab The format of the CLOSE macro is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab CLOSE \tab\tab (\plain\f2\fs18\i address\plain\f2\fs18\b [,[(\plain\f2\fs18\i options\plain\f2\fs18\b )][,...]])\par\tab\tab\tab\tab\tab [,MODE=\{\plain\f2\fs18\b\ul 24\plain\f2\fs18\b |31\}]\par\tab\tab\tab\tab\tab [,TYPE=T]\par\plain\f1\fs20\i\par\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies 1 to 8 characters that provide a symbolic address for the CLOSE\par\tab\tab\tab macro.\par\plain\f1\fs20\i\par\tab\tab address\par\plain\f2\fs20\tab\tab\tab specifies the address of the access method control block or DCB for each data\par\tab\tab\tab set to be closed. You may specify the address in register notation (using a\par\tab\tab\tab register from 2 through 12\loch\f2\hich\f2\'97in parentheses) or specify it with an expression\par\tab\tab\tab that generates a valid relocatable A-type address constant. If you specify only\par\tab\tab\tab one address with a register, you must enclose the expression identifying the\par\tab\tab\tab register in two sets of parentheses: for example, CLOSE ((2)).\par\plain\f1\fs20\i\par\tab\tab options\par\plain\f2\fs20\tab\tab\tab specifies options parameters for use only in closing non-VSAM data sets. If any\par\tab\tab\tab options are specified with the address of an access method control block,\par\tab\tab\tab VSAM ignores them.\par\plain\f2\fs20\b\par\tab\tab\tab Requirement: \plain\f2\fs20 Because the CLOSE parameters are positional, include a comma\par\tab\tab\tab for options (even if you do not specify options) before a subsequent parameter.\par\plain\f1\fs20\b\par\tab\tab MODE=\{\plain\f1\fs20\b\ul 24\plain\f1\fs20\b |31\}\par\plain\f2\fs20\tab\tab\tab specifies the format of the CLOSE parameter list to be built.\par\plain\f1\fs20\b\par\tab\tab\tab\plain\f1\fs20\b\ul 24\plain\f1\fs20\b  \tab\plain\f2\fs20 specifies a standard form (24-bit) parameter list address be built. This\par\tab\tab\tab\tab parameter list must reside below 16 megabytes and contain the address of\par\tab\tab\tab\tab ACBs residing below 16 megabytes. The caller, however, may be above 16\par\tab\tab\tab\tab megabytes. This is the default parameter list format.\par\plain\f1\fs20\b\par\tab\tab\tab 31 \tab\plain\f2\fs20 specifies a long form (31-bit) parameter list address be built. This list can\par\tab\tab\tab\tab reside above or below 16 megabytes. This value \plain\f2\fs20\b must \plain\f2\fs20 be coded if the\par\tab\tab\tab\tab parameter list resides above 16 megabytes or contains the address of an\par\tab\tab\tab\tab VSAM/VTAM ACB residing above 16 megabytes.\par\plain\f1\fs20\b\par\tab\tab TYPE=T\par\plain\f2\fs20\tab\tab\tab specifies VSAM is to complete outstanding I/O operations and update the\par\tab\tab\tab catalog, but not disconnect the program from the data.\par\par\tab\tab\tab You can issue a temporary CLOSE macro to cause VSAM to complete\par\tab\tab\tab outstanding I/O operations, put back into the catalog the updated information\par\tab\tab\tab brought into virtual storage when the data set was opened, and write records\par\tab\tab\tab in the SMF data set if you are using SMF. A temporary CLOSE does not\par\tab\tab\tab disconnect the program from the data set, so your program can continue to\par\tab\tab\tab process the data set without issuing an OPEN macro again.\par\par\tab\tab\tab You must close and reopen a newly allocated VSAM data set before you can\par\tab\tab\tab issue noncreate requests. A temporary close is not adequate for this purpose.\par\par\tab\tab\tab The TYPE=T option does not release DASD space.\par\plain\f2\fs20\b\par\tab\tab\tab Requirement: \plain\f2\fs20 If you are sharing subtasks or if you have issued an asynchronous\par\tab\tab\tab request for access to a data set, you must issue a CHECK or an ENDREQ on all\par\tab\tab\tab RPLs before you issue a CLOSE or CLOSE TYPE=T. Otherwise, concurrent data set\par\tab\tab\tab I/O activity will cause unpredictable results during a close.\par\plain\f1\fs28\b\par\page\tab Example: CLOSE macro\par\plain\f2\fs20\par\tab\tab This example shows how to close an ACB with a parameter list that may reside\par\tab\tab above 16 megabytes.\par\plain\f1\fs18\par\tab\tab BLOCK1 ACB \par\tab\tab\tab\tab .\par\tab\tab\tab\tab .\par\tab\tab\tab\tab RMODE31=ALL \tab\tab VSAM control blocks and I/O buffers\tab x\par\tab\tab\tab\tab ,\tab\tab\tab may be above 16 megabytes.\par\tab\tab\tab\tab .\par\tab\tab\tab OPEN \tab BLOCK1, \tab\tab OPEN/CLOSE parameter list may reside\tab x\par\tab\tab\tab\tab MODE=31 \tab\tab above 16 megabytes.\par\tab\tab\tab CLOSE \tab BLOCK1, \tab\tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab MODE=31, \tab\tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab TYPE=T\par\plain\f2\fs20\par\tab\tab The CLOSE parameters are:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 MODE=31 is required if the OPEN/CLOSE parameter list resides above 16\par\tab\tab\tab megabytes or if the ACB resides above 16 megabytes.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 TYPE indicates a temporary CLOSE. This causes VSAM to complete outstanding\par\tab\tab\tab I/O operations, put back into the catalog the updated information that was\par\tab\tab\tab brought into virtual storage when the data set was opened, and write records in\par\tab\tab\tab the SMF data set if you are using SMF.\par\plain\f1\fs28\b\par\page DLVRP\loch\f1\hich\f1\'97Delete VSAM resource pool\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf3 ----DLVRP\loch\f1\hich\f1\'97Delete VSAM resource pool----\par ----z390 vsam, does not support DLVRP----\par\plain\f1\fs28\b\par ENDREQ\loch\f1\hich\f1\'97Terminate a request\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf3 ----ENDREQ\loch\f1\hich\f1\'97Terminate a request----\par ----z390 vsam, does not support ENDREQ----\par\plain\f1\fs28\b\par ERASE\loch\f1\hich\f1\'97Delete a record\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf3 ----ERASE\loch\f1\hich\f1\'97Delete a record----\par ----z390 vsam, does not support ERASE----\par\plain\f1\fs28\b\par EXLST\loch\f1\hich\f1\'97Generate an exit list at assembly time\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf3 ----EXLST\loch\f1\hich\f1\'97Generate an exit list at assembly time----\par ----z390 vsam, does not support EXLST----\par\plain\f1\fs22\b\par\plain\f1\fs28\b\page GENCB\loch\f1\hich\f1\'97Generate an access method control block at execution time\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate an access method control block at execution time\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam supports BLK, AM, DDNAME, LOC, MACRF, WAREA, LENGTH---- \par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate an access method control block at execution time\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam, GENCB as the name implies is used to GENerate the Control Block----\par ----for either the ACB or the RPL (but not both) at execution time----\par ----The CB can be stored in a named variable with a specified length via WAREA and LENGTH----\par ----or it can be left to GENCB to calculate the length and assign the area needed via GETMAIN----\par ----In either case, on completion, the address of that CB will be in Register 1----\par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate an access method control block at execution time\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam,  GENCB is used to set up the parameters and sub-parameters----\par ----in the same manner as the macros ACB and RPL---- \par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate an access method control block at execution time\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam,  GENCB does not support BSTRNO, BUFND, BUFNI, BUFSP----\par ----EXLST, \plain\f2\fs18\cf3 MAREA, MLEN, PASSWD, RMODE31, SHRPOOL, STRNO, RLSREAD\plain\f2\fs18\b\cf3 -----\tab\plain\f1\fs20\cf3  \par ----COPIES is used, but has no reason for existing in z390 vsam----\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate an access method control block at execution time\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam,  GENCB supports the MACRF sub-parameters for the ACB as in MODCB----\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate an access method control block at execution time\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----IBM vsam, there is one example----\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f1\fs20\b\cf3 ----IBM Example: GENCB macro (generate an access method control block)----\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f2\fs20 ----\plain\f1\fs18\par ----\tab\tab GENCB \tab\tab GENCB \tab BLK=ACB,AM=VSAM, \tab One copy generated; VSAM gets thex\par ----\tab\tab\tab\tab\tab BUFND=4,BUFNI=3, \tab storage for it, because the               x\par ----\tab\tab\tab\tab\tab BUFSP=19456, \tab\tab WAREA LENGTH parameters have x\par ----\tab\tab\tab\tab\tab DDNAME=DATASETS, \tab been omitted. \tab\tab\tab x\par ----\tab\tab\tab\tab\tab EXLST=EXITS, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab LOC=ANY, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab MACRF=(KEY,DIR, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab SEQ,OUT), \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab RMODE31=ALL, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab STRNO=2\par ----\par ----\tab\tab\tab\tab ST \tab 1,ACBADDR \tab\tab Save the address of the access \tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab method control block.\par ----\tab\tab ACBADDR \tab DS \tab A \tab\tab\tab The address of the access method\tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab control block is saved in ACBADDR\par --------------------------------------------------------------------------------------------------------------------------------------------------\par ---- a separate sub-example\par ----\par ----\tab\tab\tab\tab LA\tab 10,LEN1\tab\tab Get length of the GENCB parameterx\par ----\tab\tab\tab\tab\tab\tab\tab\tab list returned by the GENCB macro.\par\plain\f1\fs18\cf3 ---- I don't understand where LEN1 comes from\plain\f1\fs18\par ----\tab\tab\tab\tab GETMAIN\tab\tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab  \tab R,LV=(10) \tab\tab Get storage for the area in which\tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab the GENCB parameter list is to\tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab be built.\tab\par ----\tab\tab\tab\tab LR \tab 2,1 \tab\tab\tab Save addr of GENCB parameter-listx\par ----\tab\tab\tab\tab\tab\tab\tab\tab area.\par ----\tab\tab\tab\tab LA \tab 10,ACBLNGTH \tab\tab Get length of the ACB.\par ----\par ----\tab\tab\tab\tab GETMAIN\tab\tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab  \tab R,LV=(10)\tab  \tab Get storage for the area in which\tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab the ACB is to be built.\tab\tab\par ----\tab\tab\tab\tab LR \tab 3,1 \tab\tab\tab Save address of ACB area.\par ----\par ----\par ----\tab\tab GENCB1 \tab GENCB\tab\tab\tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab  \tab\tab BLK=ACB,AM=VSAM, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab One copy generated; VSAM builds \tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab BUFND=4,BUFNI=3, \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab the ACB in the storage provided \tab x\par ----\tab\tab\tab\tab\tab BUFSP=19456, \tab\tab at the location pointed to by \tab x\par ----\tab\tab\tab\tab\tab DDNAME=DATASETS, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab WAREA. \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab LENGTH=ACBLNGTH, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab MACRF=(KEY,DIR, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab SEQ,OUT), \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab RMODE31=ALL, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab WAREA=(3), \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab MF=(G,(2),LEN1)\par\plain\f1\fs18\cf3 ---- since z390 vsam doesn't implement MF then this sub-example isn't relevant\par\plain\f1\fs18 ----\tab\tab\tab\tab\tab .\par ----\tab\tab\tab\tab\tab .\par ----\tab\tab\tab\tab\tab .\par ----\tab\tab ANYNAME \tab DSECT \tab KEEP ACB model out of CSECT\par ----\tab\tab ACBSTART \tab ACB \tab AM=VSAM\par ----\tab\tab ACBEND \tab DS \tab 0F\par ----\tab\tab ACBLNGTH \tab EQU \tab ACBEND-ACBSTART\par\plain\f2\fs20 ----\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f1\fs20\b\cf3 ----Z390 equivalent of IBM Example: GENCB macro (generate an access method control block)----\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f2\fs20 ----\plain\f1\fs18\par ----\tab\tab GENCB \tab\tab GENCB \tab BLK=ACB,AM=VSAM, \tab One copy generated; VSAM gets thex\par ----\tab\tab\tab\tab\tab\tab\tab  \tab storage for it, because the                x\par ----\tab\tab\tab\tab\tab\tab  \tab\tab WAREA LENGTH parameters have x\par ----\tab\tab\tab\tab\tab DDNAME=DATASETS, \tab been omitted. \tab\tab\tab  x\par ----\tab\tab\tab\tab\tab MACRF=(KEY,DIR, \tab\tab\tab\tab\tab  x\par ----\tab\tab\tab\tab\tab SEQ,OUT)\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs18 ----\par ----\tab\tab\tab\tab ST \tab 1,ACBADDR \tab\tab Save the address of the access  \tab  x\par ----\tab\tab\tab\tab\tab\tab\tab\tab method control block.\par ----\tab\tab ACBADDR \tab DS \tab A \tab\tab\tab The address of the access method\tab  x\par ----\tab\tab\tab\tab\tab\tab\tab\tab control block is saved in ACBADDR\par\plain\f2\fs20\cf3 ---- the second sub_example has been omitted, as it uses \plain\f1\fs18\cf3 MF=(G,(2),LEN1)\plain\f2\fs20\cf3\par\plain\f1\fs20\b\cf1 ---------------------------------------------------------------------------------------------------------------------------\plain\f1\fs20\cf1\par\plain\f2\fs20\par\par\tab The format of the GENCB macro used to generate an access method control block\par\tab is:\par\plain\f2\fs18\b\par\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab GENCB \tab BLK=ACB\par\tab\tab\tab [,AM=\plain\f2\fs18\b\ul VSAM\plain\f2\fs18\b ]\par\tab\tab\tab [,BSTRNO=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,BUFND=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,BUFNI=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,BUFSP=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,COPIES=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,DDNAME=\plain\f2\fs18\i character string\plain\f2\fs18\b ]\par\tab\tab\tab [,EXLST= \plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab [,LENGTH=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,LOC=\plain\f2\fs18\b\ul BELOW\plain\f2\fs18\b |ANY]\par\tab\tab\tab [,MACRF=([ADR][,CNV] [,\plain\f2\fs18\b\ul KEY\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,CFX|\plain\f2\fs18\b\ul NFX\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,\plain\f2\fs18\b\ul DDN\plain\f2\fs18\b |DSN]\par\tab\tab\tab\tab [,DFR|\plain\f2\fs18\b\ul NDF\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,DIR][,\plain\f2\fs18\b\ul SEQ\plain\f2\fs18\b ][,SKP]\par\tab\tab\tab\tab [,ICI|\plain\f2\fs18\b\ul NCI\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,\plain\f2\fs18\b\ul IN\plain\f2\fs18\b ][,OUT]\par\tab\tab\tab\tab [,\plain\f2\fs18\b\ul LEW\plain\f2\fs18\b |NLW]\par\tab\tab\tab\tab [,\plain\f2\fs18\b\ul NIS\plain\f2\fs18\b |SIS]\par\tab\tab\tab\tab [,\plain\f2\fs18\b\ul NRM\plain\f2\fs18\b |AIX]\par\tab\tab\tab\tab [,\plain\f2\fs18\b\ul NRS\plain\f2\fs18\b |RST]\par\tab\tab\tab\tab [,\plain\f2\fs18\b\ul NSR\plain\f2\fs18\b |LSR|GSR|RLS]\par\tab\tab\tab\tab [,\plain\f2\fs18\b\ul NUB\plain\f2\fs18\b |UBF])]\par\tab\tab\tab [,MAREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab [,MLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,PASSWD=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab [,RMODE31=\{ALL|BUFF|CB|\plain\f2\fs18\b\ul NONE\plain\f2\fs18\b\}]\par\tab\tab\tab [,SHRPOOL=\{\plain\f2\fs18\b\ul 0\plain\f2\fs18 |\plain\f2\fs18\i abs expression\plain\f2\fs18\b\}]\par\tab\tab\tab [,STRNO=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab [,RLSREAD=\{NRI|CR|\plain\f2\fs18\b\ul NORD\plain\f2\fs18\b\}]\par\tab\tab\tab [,WAREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\plain\f2\fs20\par\tab The subparameters of the GENCB macro can be expressed as absolute numeric\par\tab expressions, as character strings, as codes, as expressions that generate valid\par\tab relocatable A-type address constants, in register notation, as S-type address\par\tab constants, and as indirect S-type address constants. \loch\f2\hich\f2\'93Subparameters with GENCB,\par\tab MODCB, SHOWCB, and TESTCB\'94 on page 5, further defines these operand\par\tab expressions.\par\plain\f1\fs20\i\par\tab label\par\plain\f2\fs20\tab\tab specifies 1 to 8 characters that provide a symbolic address for the GENCB\par\tab\tab macro.\par\plain\f1\fs20\b\par\tab BLK=ACB\par\plain\f2\fs20\tab\tab specifies that you are generating an access method control block.\par\plain\f1\fs20\b\par\tab AM=\plain\f1\fs20\b\ul VSAM\plain\f1\fs20\b\par\plain\f2\fs20\tab\tab specifies that the access method using this control block is VSAM.\par\plain\f1\fs20\b\par\tab BSTRNO=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab specifies the number of strings initially allocated for access to the base cluster\par\tab\tab of a path. BSTRNO must be a number between 0 and 255. The default is\par\tab\tab STRNO. BSTRNO is ignored if the object being opened is not a path. If the\par\tab\tab number specified for BSTRNO is insufficient, VSAM dynamically extends the\par\tab\tab number of strings as needed for the access to the base cluster. BSTRNO can\par\tab\tab also influence performance. The VSAM control blocks for the set of strings\par\tab\tab specified by BSTRNO are allocated on contiguous virtual storage, whereas this\par\tab\tab is not guaranteed for the strings allocated by dynamic extension.\par\par\tab\tab For RLS, BSTRNO is ignored. This parameter has no effect for z/OS UNIX\par\tab\tab files.\par\plain\f1\fs20\b\par\tab BUFND=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab specifies the number of I/O buffers VSAM uses for transmitting data between\par\tab\tab virtual and auxiliary storage. A buffer is the size of a control interval in the\par\tab\tab data component. BUFND must be a number between 0 and 32767. The\par\tab\tab minimum number you may specify is 1 plus the number specified for STRNO\par\tab\tab (if you omit STRNO, BUFND must be at least 2, because the default for\par\tab\tab STRNO is 1). The number can be supplied through the JCL DD AMP\par\tab\tab parameter and through the macro. The default is the minimum number\par\tab\tab required. A larger number for BUFND can improve the performance of\par\tab\tab sequential access.\par\par\tab\tab For RLS, BUFND is ignored. This parameter has no effect for z/OS UNIX files.\par\plain\f1\fs20\b\par\tab BUFNI=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab specifies the number of I/O buffers VSAM uses for transmitting index entries\par\tab\tab between virtual and auxiliary storage for keyed access. A buffer is the size of a\par\tab\tab control interval in the index. BUFNI must be a number between 0 and 32767.\par\tab\tab The minimum number is the number specified for STRNO (if you omit\par\tab\tab STRNO, BUFNI must be at least 1, because the default for STRNO is 1). You\par\tab\tab can supply the number through the JCL DD AMP parameter and through the\par\tab\tab macro. The default is the minimum number required. A larger number for\par\tab\tab BUFNI can improve the performance of keyed-direct retrieval.\par\par\tab\tab For RLS, BUFNI is ignored. This parameter has no effect for z/OS UNIX files.\par\plain\f1\fs20\b\par\tab BUFSP=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab specifies the maximum number of bytes of virtual storage used for the data\par\tab\tab and index I/O buffers. VSAM gets the storage in your program's address\par\tab\tab space. If you specify less than the amount of space specified in the\par\tab\tab BUFFERSPACE parameter of the DEFINE command when the data set was\par\tab\tab defined, VSAM overrides your BUFSP specification upward to the value\par\tab\tab specified in BUFFERSPACE. (BUFFERSPACE, by definition, is the least amount\par\tab\tab of virtual storage that is ever provided for I/O buffers.) You can supply BUFSP\par\tab\tab through the JCL DD AMP parameter and through the macro. If you do not\par\tab\tab specify BUFSP in either place, the amount of storage used for buffer allocation\par\tab\tab is the \plain\f2\fs20\i largest \plain\f2\fs20 of:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 The amount specified in the catalog (BUFFERSPACE),\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 The amount determined from BUFND and BUFNI, or\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 The minimum storage required to process the data set with its specified\par\tab\tab\tab processing options.\par\par\tab\tab If BUFSP is specified and the amount is smaller than the minimum amount of\par\tab\tab storage required to process the data set, VSAM cannot open the data set.\par\par\tab\tab A valid BUFSP amount takes precedence over the amount called for by\par\tab\tab BUFND and BUFNI. If the BUFSP amount is greater than the amount called\par\tab\tab for by BUFND and BUFNI, the extra space is allocated as follows:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 When MACRF indicates direct access only, additional index buffers are\par\tab\tab\tab allocated.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 When MACRF indicates sequential access, one additional index buffer and\par\tab\tab\tab as many data buffers as possible are allocated.\par\par\tab\tab If the BUFSP amount is less than the amount called for by BUFND and BUFNI,\par\tab\tab the number of data and index buffers is decreased as follows:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 When MACRF indicates direct access only, the number of data buffers is\par\tab\tab\tab decreased to not less than the minimum number. Then, if required, the\par\tab\tab\tab number of index buffers is decreased until the amount called for by BUFND\par\tab\tab\tab and BUFNI complies with the BUFSP amount.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 When MACRF indicates sequential access, the number of index buffers is\par\tab\tab\tab decreased to not less than 1 more than the minimum number. Then, if\par\tab\tab\tab required, the number of data buffers is decreased to not less than the\par\tab\tab\tab minimum number. If still required, 1 more is subtracted from the number of\par\tab\tab\tab index buffers.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 Neither the number of data buffers nor the number of index buffers is\par\tab\tab\tab decreased to less than the minimum number.\par\par\tab\tab If the index does not exist or is not being opened, only BUFND, and not\par\tab\tab BUFNI, enters into these calculations.\par\par\tab\tab For RLS, BUFSP is ignored. This parameter has no effect for z/OS UNIX files.\par\plain\f1\fs20\b\par\tab COPIES=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab specifies the number of copies of the access method control block VSAM\par\tab\tab generates. All the copies are identical. Use MODCB to tailor the individual\par\tab\tab copies for particular data sets and processing. MODCB is described in\par\tab\tab\loch\f2\hich\f2\'93MODCB\'97Modify an access method control block\'94 on page 61.\par\plain\f1\fs20\b\par\tab DDNAME=\plain\f1\fs20\i character string\par\plain\f2\fs20\tab\tab specifies 1 to 8 characters that identify the data set you want to process by\par\tab\tab specifying the JCL DD statement for the data set. You may omit DDNAME and\par\tab\tab provide it through the MODCB macro before opening the data set. MODCB is\par\tab\tab described in \loch\f2\hich\f2\'93MODCB\'97Modify an access method control block\'94 on page 61.\par\plain\f1\fs20\b\par\tab EXLST=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab specifies the address of a list of addresses of exit routines you are providing.\par\tab\tab The list is established by the EXLST or GENCB macro. If you use the EXLST\par\tab\tab macro, you can specify its label here as the address of the exit list. If you use\par\tab\tab GENCB, you can specify the address returned by GENCB in register 1.\par\tab\tab Omitting this parameter indicates that you have no exit routines. VSAM user\par\tab\tab exit routines are described in \plain\f2\fs20\i z/OS DFSMS Using Data Sets\plain\f2\fs20 .\par\plain\f1\fs20\b\par\tab LENGTH=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab specifies the length, in bytes, of the area, if any, you are supplying for VSAM\par\tab\tab to generate the access method control blocks. (See the WAREA parameter.) The\par\tab\tab LENGTH value cannot exceed 65535 (X'FFFF').\par\plain\f1\fs20\b\par\tab LOC=\{\plain\f1\fs20\b\ul BELOW\plain\f1\fs20\b |ANY\}\par\par\tab\tab\plain\f1\fs20\b\ul BELOW\plain\f1\fs20\b\par\plain\f2\fs20\tab\tab\tab specifies that VSAM is to construct an ACB in an area of virtual storage\par\tab\tab\tab below 16 megabytes at execution time. This is the default.\par\plain\f1\fs20\b\par\tab\tab ANY\par\plain\f2\fs20\tab\tab\tab specifies that VSAM is to construct an ACB in an area of virtual storage\par\tab\tab\tab above 16 megabytes, if possible, at execution time.\par\plain\f1\fs20\b\par\tab MACRF=([ADR][,CNV][,\plain\f1\fs20\b\ul KEY\plain\f1\fs20\b ]\par\tab\tab [,CFX|\plain\f1\fs20\b\ul NFX\plain\f1\fs20\b ]\par\tab\tab [,\plain\f1\fs20\b\ul DDN\plain\f1\fs20\b |DSN]\par\tab\tab [,DFR|\plain\f1\fs20\b\ul NDF\plain\f1\fs20\b ]\par\tab\tab [,DIR][,\plain\f1\fs20\b\ul SEQ\plain\f1\fs20\b ][,SKP]\par\tab\tab [,ICI|\plain\f1\fs20\b\ul NCI\plain\f1\fs20\b ]\par\tab\tab [,\plain\f1\fs20\b\ul IN\plain\f1\fs20\b ][,OUT]\par\tab\tab [,\plain\f1\fs20\b\ul LEW\plain\f1\fs20\b |NLW]\par\tab\tab [,\plain\f1\fs20\b\ul NIS\plain\f1\fs20\b |SIS]\par\tab\tab [,\plain\f1\fs20\b\ul NRM\plain\f1\fs20\b |AIX]\par\tab\tab [,\plain\f1\fs20\b\ul NRS\plain\f1\fs20\b |RST]\par\tab\tab [,\plain\f1\fs20\b\ul NSR\plain\f1\fs20\b |LSR|GSR|RLS]\par\tab\tab [,\plain\f1\fs20\b\ul NUB\plain\f1\fs20\b |UBF])\par\plain\f2\fs20\tab\tab specifies the kinds of processing you will do with the data set. The\par\tab\tab subparameters must be significant for the data set. For example, if you specify\par\tab\tab keyed access for an entry-sequenced data set, you cannot open the data set.\par\tab\tab You must specify all the types of access you are going to use, whether you use\par\tab\tab them concurrently or by switching from one to the other. The subparameters\par\tab\tab are shown in Table 2 on page 13. They are arranged in groups, and each group\par\tab\tab has a default value (shown by underlining). You may specify subparameters in\par\tab\tab any order. You may specify both ADR and KEY to process a key-sequenced\par\tab\tab data set. You may specify both DIR and SEQ; with keyed access, you may\par\tab\tab specify SKP as well. If you specify OUT and want merely to retrieve some\par\tab\tab records and also update, delete, or insert others, you need not also specify IN.\par\plain\f1\fs20\b\par\tab MAREA=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab specifies the address of an optional OPEN/CLOSE or TYPE=T option (CLOSE\par\tab\tab macro) message area. See \loch\f2\hich\f2\'93OPEN/CLOSE message area for multiple reason or\par\tab\tab attention messages\'94 on page 126.\par\par\tab\tab MAREA is ignored for RLS processing.\par\plain\f1\fs20\b\par\tab MLEN=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab specifies the length of an optional OPEN/CLOSE or TYPE=T option (CLOSE\par\tab\tab macro) message area.\par\par\tab\tab MLEN is ignored for RLS processing.\par\plain\f1\fs20\b\par\tab PASSWD=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab specifies the address of a field that contains the highest-level password\par\tab\tab required for the types of access indicated by the MACRF parameter. The first\par\tab\tab byte of the field contains the length (in binary) of the password (maximum of\par\tab\tab 8 bytes). Zero indicates that no password is supplied. If the data set is\par\tab\tab password protected and you do not supply a required password in the access\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs20\tab\tab method control block, VSAM may give the console operator the opportunity to\par\tab\tab supply it when you open the data set. This parameter has no effect for z/OS\par\tab\tab UNIX files.\par\plain\f1\fs20\b\par\tab RLSREAD=\{NRI|CR|\plain\f1\fs20\b\ul NORD\plain\f1\fs20\b\}\par\plain\f2\fs20\tab\tab RLSREAD (for RLS), specifies the read integrity options that apply to GET\par\tab\tab requests issued against this ACB. This parameter overrides the read integrity\par\tab\tab options specified in the RLS JCL parameter. Read integrity options can also be\par\tab\tab specified on the GET request, when they override the RLSREAD specification.\par\plain\f1\fs20\b\par\tab NRI\par\plain\f2\fs20\tab\tab specifies no read integrity.\par\plain\f1\fs20\b\par\tab CR \tab\plain\f2\fs20 specifies consistent read integrity.\par\plain\f1\fs20\b\tab\par\tab\plain\f1\fs20\b\ul NORD\plain\f1\fs20\b\par\plain\f2\fs20\tab\tab specifies the read integrity option used is determined either by the RLS JCL\par\tab\tab specification or by options specified on the GET request.\par\par\tab For non-RLS, this parameter is ignored.\par\plain\f1\fs20\b\par\tab RMODE31=\{ALL|BUFF|CB|\plain\f1\fs20\b\ul NONE\plain\f1\fs20\b\}\par\plain\f2\fs20\tab\tab specifies where VSAM OPEN is to obtain virtual storage (above or below 16\par\tab\tab megabytes) for control blocks and I/O buffers.\par\par\tab\tab The values specified by the RMODE31 parameter only have an effect on VSAM\par\tab\tab at the setting just before an OPEN is issued. At all other times, changing these\par\tab\tab values has no effect on the residency of the control blocks and I/O buffers.\par\par\tab\tab The virtual storage location of the ACB is independent of the RMODE31\par\tab\tab parameter. An ACB may reside either above or below 16 megabytes.\par\par\tab\tab RMODE31 is ignored for RLS processing.\par\plain\f1\fs20\b\par\tab\tab ALL\par\plain\f2\fs20\tab\tab\tab specifies both VSAM control blocks and I/O buffers are obtained above 16\par\tab\tab\tab megabytes.\par\plain\f1\fs20\b\par\tab\tab BUFF\par\plain\f2\fs20\tab\tab\tab specifies only VSAM I/O buffers are obtained above 16 megabytes.\par\plain\f1\fs20\b\par\tab\tab CB \tab\plain\f2\fs20 specifies only VSAM control blocks are obtained above 16 megabytes.\par\plain\f1\fs20\b\par\tab\tab\plain\f1\fs20\b\ul NONE\plain\f1\fs20\b\par\plain\f2\fs20\tab\tab\tab specifies both VSAM control blocks and I/O buffers are obtained below 16\par\tab\tab\tab megabytes. This is the default.\par\plain\f1\fs20\b\par\tab SHRPOOL=\{\plain\f1\fs20\i abs expression\plain\f1\fs20\b |0\}\par\plain\f2\fs20\tab\tab specifies the identification number of the resource pool used for LSR\par\tab\tab processing. SHRPOOL must be a number between 0 and 255. The default is\par\tab\tab SHRPOOL=0. For RLS, SHRPOOL is ignored. This parameter has no effect for\par\tab\tab z/OS UNIX files.\par\plain\f1\fs20\b\par\tab STRNO=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab specifies the number of requests requiring concurrent data set positioning\par\tab\tab VSAM is prepared to handle. A request is defined by a given request\par\tab\tab parameter list or chain of request parameter lists. STRNO must be a number\par\tab\tab between 1 and 255. See \loch\f2\hich\f2\'93RPL\'97Generate a request parameter list at assembly\par\tab\tab time\'94 on page 79 and \'93GENCB\'97Generate a request parameter list at execution\par\tab\tab time\'94 on page 45 for information on request parameter lists. For RLS, STRNO\par\tab\tab is ignored and strings are dynamically acquired up to a limit of 1024. STRNO\par\tab\tab > 1 is not supported for z/OS UNIX files and, if specified with a value greater\par\tab\tab than 1, results in an open failure.\par\plain\f1\fs20\b\par\tab WAREA=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab specifies the address of an area in which to generate the access method control\par\tab\tab blocks.\par\par\tab\tab The area must begin on a fullword boundary.\par\par\tab\tab This parameter is paired with the LENGTH parameter. You must supply the\par\tab\tab LENGTH parameter if you specify an area address.\par\par\tab\tab If you do not specify an area in which the access method control block is to be\par\tab\tab generated, VSAM obtains virtual storage space for the area (as specified by the\par\tab\tab LOC=keyword). Subpool 0 will be requested under the user's key and state.\par\tab\tab Users executing in key 0 and supervisor state will actually be assigned subpool\par\tab\tab 252. VSAM returns the address of the area containing the control blocks in\par\tab\tab register 1 and the length of the area in register 0. You can determine the length\par\tab\tab of each control block by dividing the length of the area by the number of\par\tab\tab copies. The address of each control block can then be calculated by this offset\par\tab\tab from the address in register 1. You can find the length of an access method\par\tab\tab control block with the SHOWCB macro.\par\par\tab\tab If you are generating control blocks by issuing several GENCBs, specifying an\par\tab\tab area (WAREA and LENGTH parameters) for them allows you to address all of\par\tab\tab them with one base register and to avoid repetitive requests for virtual storage.\par\plain\f1\fs28\b\par\page\tab Example: GENCB macro (generate an access method control block)\par\plain\f2\fs20\par\tab\tab In this example, a GENCB macro is used to identify a data set to open and to\par\tab\tab specify the types of processing to perform. This example specifies that the space\par\tab\tab for the control block be obtained above 16 megabytes. The access method control\par\tab\tab block generated by this example is built when the program is executed.\par\plain\f1\fs18\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate an access method control block at execution time----\par ----IBM vsam, there is one example----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----Example: GENCB macro (generate an access method control block)----\par\par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate an access method control block at execution time----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam supports BLK, AM, DDNAME, LOC, MACRF(doesn't support DIR)---- \par\plain\f1\fs18\par\tab\tab GENCB \tab\tab GENCB \tab BLK=ACB,AM=VSAM, \tab One copy generated; VSAM gets thex\par\tab\tab\tab\tab\tab BUFND=4,BUFNI=3, \tab storage for it, because the              x\par\tab\tab\tab\tab\tab BUFSP=19456, \tab\tab WAREA LENGTH parameters havex\par\tab\tab\tab\tab\tab DDNAME=DATASETS, \tab been omitted. \tab\tab\tab x\par\tab\tab\tab\tab\tab EXLST=EXITS, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab LOC=ANY, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab MACRF=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab SEQ,OUT), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab RMODE31=ALL, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab STRNO=2\par\par\tab\tab\tab\tab ST \tab 1,ACBADDR \tab\tab Save the address of the access \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab method control block.\par\tab\tab ACBADDR \tab DS \tab A \tab\tab\tab The address of the access method\tab x\par\tab\tab\tab\tab\tab\tab\tab\tab control block is saved in ACBADDR\par .\page\par --------------------------------------------------------------------------------------------------------------------------------------------------\par ----z390 equivalent of IBM example----\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\tab\tab GENCB \tab\tab GENCB \tab BLK=ACB,AM=VSAM, \tab One copy generated; VSAM gets thex\par\tab\tab\tab\tab\tab\tab\tab  \tab storage for it, because the              x\par\tab\tab\tab\tab\tab\tab  \tab\tab WAREA LENGTH parameters havex\par\tab\tab\tab\tab\tab DDNAME=DATASETS, \tab been omitted. \tab\tab\tab x\par\tab\tab\tab\tab\tab LOC=ANY, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab MACRF=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab SEQ,OUT), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\par\tab\tab\tab\tab ST \tab 1,ACBADDR \tab\tab Save the address of the access \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab method control block.\par\tab\tab ACBADDR \tab DS \tab A \tab\tab\tab The address of the access method\tab x\par\tab\tab\tab\tab\tab\tab\tab\tab control block is saved in ACBADDR\par --------------------------------------------------------------------------------------------------------------------------------------------------\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f2\fs20\par\tab\tab The GENCB macro\loch\f2\hich\f2\'92s parameters are\par :\par\plain\f1\fs20\tab\tab v \tab\plain\f2\fs20 BUFND specifies four I/O buffers for data. BUFNI specifies three I/O buffers for\par\tab\tab\tab index entries. BUFSP specifies 19456 bytes of buffer space, enough space to\par\tab\tab\tab accommodate control intervals of data that are 4096 bytes and of index entries\par\tab\tab\tab that are 1024 bytes.\par\par\plain\f1\fs20\tab\tab v \tab\plain\f2\fs20 DDNAME specifies that this access method control block is associated with a\par\tab\tab\tab DD statement named DATASETS.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 EXLST specifies that the exit list associated with this access method control block\par\tab\tab\tab is named EXITS.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 LOC specifies that VSAM obtain virtual storage for the ACB from an area that\par\tab\tab\tab may be above 16 megabytes.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 MACRF specifies keyed direct and keyed sequential processing for both\par\tab\tab\tab insertion and update.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 RMODE31 specifies that VSAM obtain storage for the VSAM control blocks and\par\tab\tab\tab I/O buffers in an area above 16 megabytes when the ACB is opened.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 STRNO specifies that two requests will require concurrent positioning.\par\par\tab\tab The access method control block (ACB) generated by this example is built when\par\tab\tab the program is executed. In this example, the user provides the storage to contain\par\tab\tab the ACB. Because the generate form of the macro is used, the GENCB parameter\par\tab\tab list is built in a remote area and passed to VSAM for action.\par\plain\f1\fs18\par\tab\tab\tab LA \tab\tab 10,LEN1\tab\tab Get length of the GENCB parameter\par\tab\tab\tab\tab\tab\tab\tab list returned by the GENCB macro.\par\tab\tab\tab GETMAIN \tab R,LV=(10) \tab Get storage for the area in which\par\tab\tab\tab\tab\tab\tab\tab the GENCB parameter list is to\par\tab\tab\tab\tab\tab\tab\tab be built.\tab\par\tab\tab\tab LR \tab\tab 2,1 \tab\tab Save addr of GENCB parameter-list\par\tab\tab\tab\tab\tab\tab\tab area.\par\tab\tab\tab LA \tab\tab 10,ACBLNGTH \tab Get length of the ACB.\par\par\tab\tab\tab GETMAIN \tab R,LV=(10) \tab Get storage for the area in which\par\tab\tab\tab\tab\tab\tab\tab the ACB is to be built.\par\tab\tab\tab LR \tab\tab 3,1 \tab\tab Save address of ACB area.\par\par\par\tab\tab GENCB1 \par\tab\tab\tab GENCB \tab\tab BLK=ACB,AM=VSAM, \par\tab\tab\tab\tab\tab\tab\tab One copy generated; VSAM builds\tab  \tab x\par\tab\tab\tab\tab\tab BUFND=4,BUFNI=3, \par\tab\tab\tab\tab\tab\tab\tab the ACB in the storage provided \tab\tab x\par\tab\tab\tab\tab\tab BUFSP=19456, \tab at the location pointed to by \tab\tab x\par\tab\tab\tab\tab\tab DDNAME=DATASETS, \par\tab\tab\tab\tab\tab\tab\tab WAREA. \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab LENGTH=ACBLNGTH, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab MACRF=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab SEQ,OUT), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab RMODE31=ALL, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab WAREA=(3), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab MF=(G,(2),LEN1)\par\tab\tab\tab\tab\tab .\par\tab\tab\tab\tab\tab .\par\tab\tab\tab\tab\tab .\par\tab\tab ANYNAME \tab DSECT \tab KEEP ACB model out of CSECT\par\tab\tab ACBSTART \tab ACB \tab AM=VSAM\par\tab\tab ACBEND \tab DS \tab 0F\par\tab\tab ACBLNGTH \tab EQU \tab ACBEND-ACBSTART\par\plain\f2\fs20\par\plain\f1\fs18 --------------------------------------------------------------------------------------------------------------------------------------------------\par ----z390 equivalent of IBM example----\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\tab\tab\tab LA \tab\tab 10,LEN1\tab\tab Get length of the GENCB parameter\par\tab\tab\tab\tab\tab\tab\tab list returned by the GENCB macro.\par\tab\tab\tab GETMAIN \tab R,LV=(10) \tab Get storage for the area in which\par\tab\tab\tab\tab\tab\tab\tab the GENCB parameter list is to\par\tab\tab\tab\tab\tab\tab\tab be built.\tab\par\tab\tab\tab LR \tab\tab 2,1 \tab\tab Save addr of GENCB parameter-list\par\tab\tab\tab\tab\tab\tab\tab area.\par\tab\tab\tab LA \tab\tab 10,ACBLNGTH \tab Get length of the ACB.\par\par\tab\tab\tab GETMAIN \tab R,LV=(10) \tab Get storage for the area in which\par\tab\tab\tab\tab\tab\tab\tab the ACB is to be built.\par\tab\tab\tab LR \tab\tab 3,1 \tab\tab Save address of ACB area.\par\par\par\tab\tab GENCB1 \par\tab\tab\tab GENCB \tab\tab BLK=ACB,AM=VSAM, \par\tab\tab\tab\tab\tab\tab\tab One copy generated; VSAM builds\tab  \tab x\par\tab\tab\tab\tab\tab\tab\tab the ACB in the storage provided \tab\tab x\par\tab\tab\tab\tab\tab\tab  \tab at the location pointed to by \tab\tab x\par\tab\tab\tab\tab\tab DDNAME=DATASETS, \par\tab\tab\tab\tab\tab WAREA. \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab LENGTH=ACBLNGTH, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab MACRF=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab SEQ,OUT), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab WAREA=(3), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab .\par\tab\tab ANYNAME \tab DSECT \tab KEEP ACB model out of CSECT\par\tab\tab ACBSTART \tab ACB \tab AM=VSAM\par\tab\tab ACBEND \tab DS \tab 0F\par\tab\tab ACBLNGTH \tab EQU \tab ACBEND-ACBSTART\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs18 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f2\fs20\par\tab\tab The GENCB macro's parameters are\par :\par\plain\f1\fs20\tab\tab v \tab\plain\f2\fs20 BUFND specifies four I/O buffers for data. BUFNI specifies three I/O buffers for\par\tab\tab\tab index entries. BUFSP specifies 19456 bytes of buffer space, enough space to\par\tab\tab\tab accommodate control intervals of data that are 4096 bytes and of index entries\par\tab\tab\tab that are 1024 bytes.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 DDNAME specifies that this access method control block is associated with a\par\tab\tab\tab DD statement named DATASETS.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 LENGTH specifies that the length of the storage you provide for the ACB is the\par\tab\tab\tab value of ACBLNGTH.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 MACRF specifies keyed direct and keyed sequential processing for both\par\tab\tab\tab insertion and update.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 RMODE31 specifies that VSAM obtain storage for the VSAM control blocks and\par\tab\tab\tab I/O buffers in an area above 16 megabytes when the ACB is opened.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 WAREA specifies that the address of the storage you provide for the ACB is\par\tab\tab\tab held in register 3.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 MF specifies that the GENCB parameter list is to be built in the location\par\tab\tab\tab specified by register 2. Also, the expansion of the GENCB macro will equate\par\tab\tab\tab LEN1 to the length of the GENCB parameter list.\par\plain\f1\fs28\b\par\page GENCB\loch\f1\hich\f1\'97Generate an exit list at execution time\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate an exit list at execution time----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam, does not support exit lists----\plain\f2\fs20\cf3\par\plain\f1\fs28\b\par\page GENCB\loch\f1\hich\f1\'97Generate a request parameter list at execution time\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate a request parameter list at execution time----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam supports BLK, ACB, AREA, AREALEN, ARG, DDNAME, KEYLEN, OPTCD, RECLEN---- \par\plain\f2\fs20\cf3 ----ECB????----\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate a request parameter list at execution time----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam GENCB sets flags for all the OPTCD sub-parameters----\par ----even though vz390 doesn't implement all of them---- \par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate a request parameter list at execution time----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----IBM vsam, there is one example----\par\plain\f1\fs18 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----IBM Example: GENCB macro (generate a request parameter list)----\par\plain\f1\fs18 --------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab ACCESS \tab GENCB \tab\tab BLK=RPL, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab ACB=ACCESS, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab AM=VSAM, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab AREALEN=125, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab ARG=SEARCH, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab LOC=ANY, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab MSGAREA=MESSAGE, \tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab MSGLEN=128, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab OPTCD=(SKP,UPD)\par ----\par ----\tab\tab ACCESS \tab ACB \tab\tab MACRF=(SKP,OUT)\par ----\tab\tab WORK \tab\tab DS \tab\tab CL125\par ----\tab\tab SEARCH \tab DS \tab\tab CL8\par ----\tab\tab MESSAGE \tab DS \tab\tab CL128\par\plain\f2\fs20 ----\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 ----\par ----\tab\tab\tab\tab LA \tab\tab 10,LEN2 \tab Get length of the GENCB parameter\par ----\tab\tab\tab\tab\tab\tab\tab\tab list returned by the GENCB macro.\par ----\tab\tab\tab\tab GETMAIN \tab R,LV=(10) \tab Get storage for the area in which\par ----\tab\tab\tab\tab\tab\tab\tab\tab the GENCB parameter list is to\par ----\tab\tab\tab\tab\tab\tab\tab\tab be built.\par ----\tab\tab\tab\tab LR \tab\tab 2,1 \tab\tab Save addr of GENCB parameter-list\par ----\tab\tab\tab\tab\tab\tab\tab\tab area.\par ----\tab\tab GENCB1 \tab GENCB \tab\tab BLK=RPL, \par ----\tab\tab\tab\tab\tab\tab\tab\tab One copy generated; VSAM builds \tab x\par ----\tab\tab\tab\tab\tab\tab ACB=ACCESS, \tab the RPL in the storage provided \tab x\par ----\tab\tab\tab\tab\tab\tab AM=VSAM, \tab at the location pointed to by \tab x\par ----\tab\tab\tab\tab\tab\tab AREA=WORK, \tab WAREA. \tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab AREALEN=125, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab ARG=SEARCH, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab LENGTH=RPLLNGTH, \tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab MSGAREA=MESSAGE, \tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab MSGLEN=128, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab OPTCD=(SKP,UPD), \tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab WAREA=MYRPL, \tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab MF=(G,(2),LEN2)\tab\par ----\tab\tab\tab\tab\tab\tab .\par ----\tab\tab\tab\tab\tab\tab .\par ----\tab\tab\tab\tab\tab\tab .\par ----\tab\tab ACCESS \tab ACB \tab\tab MACRF=(SKP,OUT)\par ----\tab\tab WORK \tab\tab DS \tab\tab CL125\par ----\tab\tab SEARCH \tab DS \tab\tab CL8\par ----\tab\tab MESSAGE \tab DS \tab\tab CL128\par ----\tab\tab\tab\tab DS \tab\tab 0F\par ----\tab\tab MYRPL \tab\tab DS \tab\tab CL(RPLLNGTH) \tab Storage in which the RPL is to be\par ----\tab\tab\tab\tab\tab\tab\tab\tab built.\par ----\tab\tab ANYNAME \tab DSECT \tab\tab\tab\tab Avoid generation in CSECT\par ----\tab\tab RPLSTART \tab RPL \tab\tab AM=VSAM\par ----\tab\tab RPLEND \tab DS \tab\tab 0F\par ----\tab\tab RPLLNGTH \tab EQU \tab\tab RPLEND-RPLSTART\par\plain\f2\fs20 ----\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----z390 equivalent of IBM Example: GENCB macro (generate a request parameter list)------------------\par\plain\f1\fs18 --------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab ACCESS \tab GENCB \tab\tab BLK=RPL, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab ACB=ACCESS, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab AM=VSAM, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab AREALEN=125, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab ARG=SEARCH, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab OPTCD=(SKP,UPD)\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab WAREA=MYRPL\par ----\par ----\tab\tab ACCESS \tab ACB \tab\tab MACRF=(SKP,OUT)\par ----\tab\tab WORK \tab\tab DS \tab\tab CL125\par ----\tab\tab SEARCH \tab DS \tab\tab CL8\par ----\tab\tab MESSAGE \tab DS \tab\tab CL128\par ----\tab\tab\tab\tab DS \tab\tab 0F\par ----\tab\tab MYRPL \tab\tab DS \tab\tab CL(RPLLNGTH) \tab Storage in which the RPL is to be\par ----\tab\tab\tab\tab\tab\tab\tab\tab built.\par ----\tab\tab ANYNAME \tab DSECT \tab\tab\tab\tab Avoid generation in CSECT\par ----\tab\tab RPLSTART \tab RPL \tab\tab AM=VSAM\par ----\tab\tab RPLEND \tab DS \tab\tab 0F\par ----\tab\tab RPLLNGTH \tab EQU \tab\tab RPLEND-RPLSTART\par\plain\f2\fs20 ----\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 There is no equivalent of the second sub-example because z390 vsam doesn't support GENCB MF \par\plain\f2\fs20 --------------------------------------------------------------------------------------------------------------------------------------------------\par\par\tab\tab The format of the GENCB macro used to generate a request parameter list is:\par\plain\f2\fs18\b\tab\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab GENCB \tab BLK=RPL\par\tab\tab\tab\tab [,ACB=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,AM=\plain\f2\fs18\b\ul VSAM\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,AREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,AREALEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,ARG=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,COPIES=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,TIMEOUT=\plain\f2\fs18\i number\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,ECB=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,KEYLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,LENGTH=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,LOC=\plain\f2\fs18\b\ul BELOW\plain\f2\fs18\b |ANY]\par\tab\tab\tab\tab [,MSGAREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,MSGLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,NXTRPL=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,OPTCD=([ADR|CNV\plain\f2\fs18 |\plain\f2\fs18\b\ul KEY\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,DIR|\plain\f2\fs18\b\ul SEQ\plain\f2\fs18\b |SKP]\par\tab\tab\tab\tab\tab [,\plain\f2\fs18\b\ul ARD\plain\f2\fs18\b |LRD]\par\tab\tab\tab\tab\tab [,\plain\f2\fs18\b\ul FWD\plain\f2\fs18\b |BWD]\par\tab\tab\tab\tab\tab [,ASY|\plain\f2\fs18\b\ul SYN\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,NSP|\plain\f2\fs18\b\ul NUP\plain\f2\fs18\b |UPD]\par\tab\tab\tab\tab\tab [,\plain\f2\fs18\b\ul KEQ\plain\f2\fs18\b |KGE]\par\tab\tab\tab\tab\tab [,\plain\f2\fs18\b\ul FKS\plain\f2\fs18\b |GEN]\par\tab\tab\tab\tab\tab [,LOC|\plain\f2\fs18\b\ul MVE\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,NRI|CR]\par\tab\tab\tab\tab\tab [,\plain\f2\fs18\b\ul RBA\plain\f2\fs18\b |XRBA])]\par\tab\tab\tab\tab [,RECLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,TRANSID=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab [,WAREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\plain\f2\fs20\par\tab\tab The subparameters of the GENCB macro can be expressed as absolute numeric\par\tab\tab expressions, as character strings, as codes, as expressions that generate valid\par\tab\tab relocatable A-type address constants, in register notation, as S-type address\par\tab\tab constants, and as indirect S-type address constants. \loch\f2\hich\f2\'93Subparameters with GENCB,\par\tab\tab MODCB, SHOWCB, and TESTCB\'94 on page 5, further defines these operand\par\tab\tab expressions.\par\par\tab\tab The parameters of the GENCB macro to generate a request parameter list are\par\tab\tab optional sometimes, but required in others. It is not necessary to omit parameters\par\tab\tab that are not required for a request; they are ignored. Thus, if you switch from\par\tab\tab direct to sequential retrieval with a request parameter list, you do not have to zero\par\tab\tab out the address of the field containing the search argument (ARG=address).\par\plain\f1\fs20\i\par\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies 1 to 8 characters that provide a symbolic address for the GENCB\par\tab\tab\tab macro. For addressing lists generated by GENCB, see the COPIES parameter.\par\plain\f1\fs20\b\par\tab\tab BLK=RPL\par\plain\f2\fs20\tab\tab\tab specifies you are generating a request parameter list.\par\plain\f1\fs20\b\par\tab\tab ACB=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the access method control block that identifies the data\par\tab\tab\tab set to which access will be requested. If you omit this parameter, you must\par\tab\tab\tab issue MODCB to specify the address of the access method control block before\par\tab\tab\tab you issue a request. MODCB is described in \loch\f2\hich\f2\'93MODCB\'97Modify an access\par\tab\tab\tab method control block\'94 on page 61.\par\plain\f1\fs20\b\par\tab\tab AM=\plain\f1\fs20\b\ul VSAM\plain\f1\fs20\b\par\plain\f2\fs20\tab\tab\tab specifies that the access method using this control block is VSAM.\par\plain\f1\fs20\b\par\tab\tab AREA=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of a work area to and from which VSAM moves a data\par\tab\tab\tab record if you request it to do so (with the RPL parameter OPTCD=MVE). If\par\tab\tab\tab you request that records be processed in the I/O buffer (OPTCD=LOC), VSAM\par\tab\tab\tab puts into this work area the address of a data record within the I/O buffer.\par\plain\f1\fs20\b\par\tab\tab AREALEN=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the length, in bytes, of the work area whose address is specified by\par\tab\tab\tab the AREA parameter. Its minimum for OPTCD=MVE is the size of a data\par\tab\tab\tab record (or the largest data record, for a data set with records of variable\par\tab\tab\tab length). For OPTCD=LOC, the area should be 4 bytes to contain the address of\par\tab\tab\tab a data record within the I/O buffer.\par\plain\f1\fs20\b\par\tab\tab ARG=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of a field containing the search argument for direct\par\tab\tab\tab retrieval, skip-sequential retrieval, and positioning. For a fixed-length or\par\tab\tab\tab variable-length RRDS, the ARG field must be 4 bytes long. For direct or\par\tab\tab\tab skip-sequential processing, this field contains your search argument, a relative\par\tab\tab\tab record number. For sequential processing (OPTCD=(KEY,SEQ)), the 4 bytes are\par\tab\tab\tab required for VSAM to return the feedback RRN. For keyed access\par\tab\tab\tab (OPTCD=KEY), the search argument is a full or generic key. For addressed\par\tab\tab\tab access (OPTCD=ADR), the search argument is an RBA. If you specify a generic\par\tab\tab\tab key (OPTCD=GEN), you must also specify in the KEYLEN parameter how\par\tab\tab\tab many of the bytes of the full key you are using for the generic key.\par\plain\f1\fs20\b\par\tab\tab COPIES=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the number of copies of the request parameter list to generate.\par\tab\tab\tab GENCB generates as many copies as you specify (default is 1) when your\par\tab\tab\tab program is executed.\par\par\tab\tab\tab The copies of a request parameter list can be used to:\par\plain\f1\fs20\tab\tab\par\tab\tab\tab v \tab\plain\f2\fs20 Chain lists together to gain access to many records with one request\par\plain\f1\fs20\par\tab\tab\tab v \tab\plain\f2\fs20 Define many requests to gain access to many parts of a data set concurrently.\par\tab\tab\tab\tab All copies generated are identical; you must use MODCB to tailor them to\par\tab\tab\tab\tab specific requests. MODCB is described in \loch\f2\hich\f2\'93MODCB\'97Modify an access method\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs20\tab\tab\tab\tab control block\loch\f2\hich\f2\'94 on page 61.\par\plain\f1\fs20\b\par\tab\tab ECB=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of an event control block (ECB) that you may supply.\par\tab\tab\tab VSAM indicates in the ECB whether a request is complete or not (using\par\tab\tab\tab standard completion codes, which are described in \plain\f2\fs20\i z/OS MVS System Codes\plain\f2\fs20 ).\par\tab\tab\tab You can use the ECB to determine that an asynchronous request is complete\par\tab\tab\tab before issuing a CHECK macro. This parameter is always optional.\par\plain\f1\fs20\b\par\tab\tab KEYLEN=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the length, in bytes, of the generic key (OPTCD=GEN) you are using\par\tab\tab\tab for a search argument (given in the field addressed by the ARG parameter).\par\tab\tab\tab This parameter is required with a search argument that is a generic key. The\par\tab\tab\tab number can be 1 through 255. For full-key searches, VSAM knows the key\par\tab\tab\tab length, which is taken from the catalog definition of the data set when you\par\tab\tab\tab open the data set. This parameter has no effect for z/OS UNIX files.\par\plain\f1\fs20\b\par\tab\tab LENGTH=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the length, in bytes, of the area, if any, that you are supplying for\par\tab\tab\tab VSAM to generate the request parameter lists. (See the WAREA parameter.)\par\tab\tab\tab The LENGTH value cannot exceed 65535 (X'FFFF').\par\par\tab\tab\tab You can find out how long a request parameter list is with the SHOWCB\par\tab\tab\tab macro, described in \loch\f2\hich\f2\'93SHOWCB\'97Display fields of a request parameter list\'94 on\par\tab\tab\tab page 103.\par\plain\f1\fs20\b\par\tab\tab LOC=\plain\f1\fs20\b\ul BELOW\plain\f1\fs20\b |ANY\par\par\tab\tab\tab\plain\f1\fs20\b\ul BELOW\plain\f1\fs20\b\par\plain\f2\fs20\par\tab\tab\tab\tab specifies that storage for the RPL be obtained from virtual storage below 16\par\tab\tab\tab\tab megabytes.\par\plain\f1\fs20\b\par\tab\tab\tab ANY\par\plain\f2\fs20\tab\tab\tab\tab specifies that storage be obtained from virtual storage above 16 megabytes\par\tab\tab\tab\tab if possible.\par\plain\f1\fs20\b\par\tab\tab MSGAREA=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of an area you are supplying for VSAM to send you a\par\tab\tab\tab message if a physical error occurs. The format of a physical error message is\par\tab\tab\tab given under \loch\f2\hich\f2\'93Reason code (physical errors)\'94 on page 145 in the chapter\par\tab\tab\tab Chapter 3, \'93VSAM macro return and reason codes.\'94\par\plain\f1\fs20\b\par\tab\tab MSGLEN=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the size, in bytes, of the message area indicated in the MSGAREA\par\tab\tab\tab parameter. The size of a message is 128 bytes. If you provide less than 128\par\tab\tab\tab bytes, no message is returned to your program. This parameter is required\par\tab\tab\tab when MSGAREA is coded.\par\plain\f1\fs20\b\par\tab\tab NXTRPL=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the next request parameter list in a chain. Omit this\par\tab\tab\tab parameter from the macro that generates the only or last list in the chain.\par\tab\tab\tab When you issue a request defined by a chain of request parameter lists,\par\tab\tab\tab indicate in the request macro the address of the first parameter list in the\par\tab\tab\tab chain. A single request macro can be defined by multiple request parameter\par\tab\tab\tab lists. For example, a GET can cause VSAM to retrieve two or more records.\par\tab\tab\tab This parameter has no effect for z/OS UNIX files, and if it is specified with a\par\tab\tab\tab non-zero value, results in an error on a subsequent GET, PUT, or POINT.\par\plain\f1\fs20\b\par\tab\tab OPTCD=([ADR|CNV|\plain\f1\fs20\b\ul KEY\plain\f1\fs20\b ]\par\tab\tab\tab [,DIR|\plain\f1\fs20\b\ul SEQ\plain\f1\fs20\b |SKP]\par\tab\tab\tab [,\plain\f1\fs20\b\ul ARD\plain\f1\fs20\b |LRD]\par\tab\tab\tab [,\plain\f1\fs20\b\ul FWD\plain\f1\fs20\b |BWD]\par\tab\tab\tab [,ASY|\plain\f1\fs20\b\ul SYN\plain\f1\fs20\b ]\par\tab\tab\tab [,NSP|\plain\f1\fs20\b\ul NUP\plain\f1\fs20\b |UPD]\par\tab\tab\tab [,\plain\f1\fs20\b\ul KEQ\plain\f1\fs20\b |KGE]\par\tab\tab\tab [,\plain\f1\fs20\b\ul FKS\plain\f1\fs20\b |GEN]\par\tab\tab\tab [,LOC|\plain\f1\fs20\b\ul MVE\plain\f1\fs20\b ])\par\tab\tab\tab [,CR|NRI]\par\tab\tab\tab [,\plain\f1\fs20\b\ul RBA\plain\f1\fs20\b |XRBA])\par\plain\f2\fs20\tab\tab\tab specifies the subparameters that govern the request defined by the request\par\tab\tab\tab parameter list. Each group of subparameters has a default; subparameters are\par\tab\tab\tab shown in Table 3 on page 81 with defaults underlined. Only one subparameter\par\tab\tab\tab from each group is effective for a request. Some requests do not require an\par\tab\tab\tab subparameter from all of the groups to be specified. The groups that are not\par\tab\tab\tab required are ignored. Thus, you can use the same request parameter list for a\par\tab\tab\tab combination of requests (GET, PUT, POINT, for example) without zeroing out\par\tab\tab\tab the inapplicable subparameters each time you go from one request to another.\par\plain\f1\fs20\b\par\tab\tab RECLEN=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the length, in bytes, of a data record being stored. If the records you\par\tab\tab\tab are storing are all the same length, you do not need to change RECLEN after\par\tab\tab\tab you set it. This parameter is required for PUT requests. For GET requests,\par\tab\tab\tab VSAM puts the length of the record retrieved in this field in the request\par\tab\tab\tab parameter list. It will be there if you update and store the record.\par\plain\f1\fs20\b\par\tab\tab TIMEOUT=\plain\f1\fs20\i number\par\plain\f2\fs20\tab\tab\tab For RLS only, specifies the time in seconds that your program is willing to wait\par\tab\tab\tab to obtain a lock on a VSAM record when a lock on the record is already held\par\tab\tab\tab by another program.\par\par\tab\tab\tab A non-zero value for TIMEOUT (or if TIMEOUT is not specified) specifies the\par\tab\tab\tab time (in seconds) this program waits for the other program(s) to release the\par\tab\tab\tab lock.\par\par\tab\tab\tab A value of zero specifies TIMEOUT processing is \plain\f2\fs20\i NOT \plain\f2\fs20 to be performed by\par\tab\tab\tab VSAM for this request. That is, if the record lock required by the request is\par\tab\tab\tab held by another program, the program waits until the other program releases\par\tab\tab\tab the lock regardless of how long that might be.\par\plain\f1\fs20\b\par\tab\tab TRANSID=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies a number that relates modified buffers in a buffer pool. Use in shared\par\tab\tab\tab resource applications and a description are in \plain\f2\fs20\i z/OS DFSMS Using Data Sets\plain\f2\fs20 .\par\tab\tab\tab This parameter has no effect for z/OS UNIX files.\par\plain\f1\fs20\b\par\tab\tab WAREA=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of an area in which the request parameter lists are\par\tab\tab\tab generated.\par\par\tab\tab\tab If you did not specify an area in which the request parameter list is to be\par\tab\tab\tab generated, VSAM obtains virtual storage space for the area (as specified by the\par\tab\tab\tab LOC=keyword). Subpool 0 will be requested under the user's key and state.\par\tab\tab\tab Users executing in key 0 and supervisor state will actually be assigned subpool\par\tab\tab\tab 252. VSAM returns the address of the area in which the request parameter lists\par\tab\tab\tab are generated in register 1, and the length of the area in register 0. You can\par\tab\tab\tab find the length of each list by dividing the length of the area by the number of\par\tab\tab\tab copies. You can then calculate the address of each list by using the length of\par\tab\tab\tab each list as an offset.\par\par\tab\tab\tab If you are generating control blocks by issuing several GENCBs, specifying an\par\tab\tab\tab area (WAREA and LENGTH parameters) for them allows you to address all of\par\tab\tab\tab them with one base register and to avoid repetitive requests for virtual storage.\par\plain\f1\fs28\b\par\page\tab Building a chain of request parameter lists\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate a request parameter list at execution time----\par ----Building a chain of request parameter lists----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam does not support Building a chain of RPLs----\par\plain\f1\fs28\b\par\page\tab Example: GENCB macro (generate a request parameter list)\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GENCB\loch\f1\hich\f1\'97Generate a request parameter list at execution time----\plain\f1\fs20\cf1\par ----Example: GENCB macro (generate a request parameter list)----\par\plain\f1\fs20\cf3 ----z390 vsam supports BLK, ACB, AM, AREA, AREALEN, ARG, DDNAME, KEYLEN, OPTCD(not SKP)---- \par\plain\f2\fs20\cf3\par\plain\f2\fs20\tab\tab In this example, a GENCB macro is used to generate a request parameter list.\par\plain\f1\fs18\par\tab\tab ACCESS \tab GENCB \tab\tab BLK=RPL, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab ACB=ACCESS, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab AM=VSAM, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab AREALEN=125, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab ARG=SEARCH, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab LOC=ANY, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab MSGAREA=MESSAGE, \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab MSGLEN=128, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab OPTCD=(SKP,UPD)\par\par\tab\tab ACCESS \tab ACB \tab\tab MACRF=(SKP,OUT)\par\tab\tab WORK \tab\tab DS \tab\tab CL125\par\tab\tab SEARCH \tab DS \tab\tab CL8\par\tab\tab MESSAGE \tab DS \tab\tab CL128\par\plain\f2\fs20\par\tab\tab The GENCB macro\loch\f2\hich\f2\'92s parameters are:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 BLK specifies a request parameter list is generated.\par\plain\f1\fs20\tab\par\tab\tab v \tab\plain\f2\fs20 ACB specifies that the request parameter list is associated with a data set and\par\tab\tab\tab processing options identified by ACCESS.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 AREA and AREALEN specify a 125-byte work area used for processing records.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 ARG specifies the address of the search argument.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 LOC specifies that VSAM obtain storage for the request parameter list in an area\par\tab\tab\tab above 16 megabytes.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 MSGAREA and MSGLEN specify a 128-byte area used for physical-error\par\tab\tab\tab messages.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 OPTCD specifies the subparameters that govern the request defined by the\par\tab\tab\tab request parameter list identified by SKP and UPD.\par\tab\par\tab\tab In this example, a GENCB macro is used to generate a request parameter list\par\tab\tab (RPL). In this example the user provides the storage to contain the RPL. Because\par\tab\tab the generate form of the macro is used, the GENCB parameter list is built in a\par\tab\tab remote area and passed to VSAM for action.\par\plain\f1\fs18\par\tab\tab\tab\tab LA \tab\tab 10,LEN2 \tab Get length of the GENCB parameter\par\tab\tab\tab\tab\tab\tab\tab\tab list returned by the GENCB macro.\par\tab\tab\tab\tab GETMAIN \tab R,LV=(10) \tab Get storage for the area in which\par\tab\tab\tab\tab\tab\tab\tab\tab the GENCB parameter list is to\par\tab\tab\tab\tab\tab\tab\tab\tab be built.\par\tab\tab\tab\tab LR \tab\tab 2,1 \tab\tab Save addr of GENCB parameter-list\par\tab\tab\tab\tab\tab\tab\tab\tab area.\par\tab\tab GENCB1 \tab GENCB \tab\tab BLK=RPL, \par\tab\tab\tab\tab\tab\tab\tab\tab One copy generated; VSAM builds \tab x\par\tab\tab\tab\tab\tab\tab ACB=ACCESS, \tab the RPL in the storage provided \tab x\par\tab\tab\tab\tab\tab\tab AM=VSAM, \tab at the location pointed to by \tab x\par\tab\tab\tab\tab\tab\tab AREA=WORK, \tab WAREA. \tab\tab\tab x\par\tab\tab\tab\tab\tab\tab AREALEN=125, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab ARG=SEARCH, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab LENGTH=RPLLNGTH, \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab MSGAREA=MESSAGE, \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab MSGLEN=128, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab OPTCD=(SKP,UPD), \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab WAREA=MYRPL, \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab MF=(G,(2),LEN2)\tab\par\tab\tab\tab\tab\tab\tab .\par\tab\tab\tab\tab\tab\tab .\par\tab\tab\tab\tab\tab\tab .\par\tab\tab ACCESS \tab ACB \tab\tab MACRF=(SKP,OUT)\par\tab\tab WORK \tab\tab DS \tab\tab CL125\par\tab\tab SEARCH \tab DS \tab\tab CL8\par\tab\tab MESSAGE \tab DS \tab\tab CL128\par\tab\tab\tab\tab DS \tab\tab 0F\par\tab\tab MYRPL \tab\tab DS \tab\tab CL(RPLLNGTH) \tab Storage in which the RPL is to be\par\tab\tab\tab\tab\tab\tab\tab\tab built.\par\tab\tab ANYNAME \tab DSECT \tab\tab\tab\tab Avoid generation in CSECT\par\tab\tab RPLSTART \tab RPL \tab\tab AM=VSAM\par\tab\tab RPLEND \tab DS \tab\tab 0F\par\tab\tab RPLLNGTH \tab EQU \tab\tab RPLEND-RPLSTART\par\plain\f2\fs20\par\tab\tab The GENCB macro's parameters are:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 BLK specifies a request parameter list is generated.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 ACB specifies that the request parameter list is associated with a data set and\par\tab\tab\tab processing options identified by ACCESS.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 AREA and AREALEN specify a 125-byte work area used for processing records.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 ARG specifies the address of the search argument.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 LENGTH specifies that the length of the storage you provide for the RPL is the\par\tab\tab\tab value of RPLLNGTH.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 MSGAREA and MSGLEN specify a 128-byte area used for physical-error\par\tab\tab\tab messages.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 OPTCD specifies the subparameters that govern the request defined by the\par\tab\tab\tab request parameter list identified by SKP and UPD.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 WAREA specifies that the storage you provide for the RPL begins at label\par\tab\tab\tab MYRPL.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 MF specifies that the GENCB parameter list is to be built in the location\par\tab\tab\tab specified by register 2. Also, the expansion of the GENCB macro will equate\par\tab\tab\tab LEN2 to the length of the GENCB parameter list.\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs28\b\par\page\tab GENCB\loch\f1\hich\f1\'97List form\par\plain\f2\fs20\par\tab\tab The format of the list form of GENCB is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab GENCB \tab\tab BLK=\{ACB|EXLST|RPL\}\par\tab\tab\tab\tab\tab [,AM=\plain\f2\fs18\b\ul VSAM\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,COPIES=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,\plain\f2\fs18\i keyword\plain\f2\fs18\b =\{\plain\f2\fs18\i address\plain\f2\fs18 |\plain\f2\fs18\i name\plain\f2\fs18 |\plain\f2\fs18\i abs expression\plain\f2\fs18 |\plain\f2\fs18\i option\plain\f2\fs18\b\},...]\par\tab\tab\tab\tab\tab [,LENGTH=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,LOC=\{\plain\f2\fs18\b\ul BELOW\plain\f2\fs18\b |ANY\}]\par\tab\tab\tab\tab\tab [,RMODE31=\{ALL|BUFF|CB|\plain\f2\fs18\b\ul NONE\plain\f2\fs18\b\}]\par\tab\tab\tab\tab\tab ,MF=\{L|(L,\plain\f2\fs18\i address\plain\f2\fs18\b [,\plain\f2\fs18\i label\plain\f2\fs18\b ])\}\par\tab\tab\tab\tab\tab [,WAREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\plain\f1\fs28\b\par\tab GENCB\loch\f1\hich\f1\'97Execute form\par\plain\f2\fs20\par\tab\tab The format of the execute form of GENCB is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab GENCB \tab\tab BLK=\{ACB|EXLST|RPL\}\par\tab\tab\tab\tab\tab [,AM=\plain\f2\fs18\b\ul VSAM\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,COPIES=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,\plain\f2\fs18\i keyword\plain\f2\fs18\b =\{\plain\f2\fs18\i address\plain\f2\fs18 |\plain\f2\fs18\i name\plain\f2\fs18 |\plain\f2\fs18\i abs expression\plain\f2\fs18 |\plain\f2\fs18\i option\plain\f2\fs18\b\},...]\par\tab\tab\tab\tab\tab [,LENGTH=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,LOC=\{\plain\f2\fs18\b\ul BELOW\plain\f2\fs18\b |ANY\}]\par\tab\tab\tab\tab\tab [,RMODE31=\{ALL|BUFF|CB|\plain\f2\fs18\b\ul NONE\plain\f2\fs18\b\}]\par\tab\tab\tab\tab\tab ,MF=(E,\plain\f2\fs18\i address\plain\f2\fs18\b )\par\tab\tab\tab\tab\tab [,WAREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\plain\f1\fs22\b\par\plain\f1\fs28\b\tab GENCB\loch\f1\hich\f1\'97Generate form\par\plain\f2\fs20\par\tab\tab The format of the generate form of GENCB is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab GENCB \tab\tab BLK=\{ACB|EXLST|RPL\}\par\tab\tab\tab\tab\tab [,AM=\plain\f2\fs18\b\ul VSAM\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,COPIES=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,\plain\f2\fs18\i keyword\plain\f2\fs18 =\plain\f2\fs18\i address\plain\f2\fs18 |\plain\f2\fs18\i name\plain\f2\fs18 |\plain\f2\fs18\i abs expression\plain\f2\fs18 |\plain\f2\fs18\i option\plain\f2\fs18\b\},...]\par\tab\tab\tab\tab\tab [,LENGTH=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,LOC=\{\plain\f2\fs18\b\ul BELOW\plain\f2\fs18\b |ANY\}]\par\tab\tab\tab\tab\tab [,RMODE31=\{ALL|BUFF|CB|\plain\f2\fs18\b\ul NONE\plain\f2\fs18\b\}]\par\tab\tab\tab\tab\tab ,MF=(G,\plain\f2\fs18\i address\plain\f2\fs18 [,\plain\f2\fs18\i label\plain\f2\fs18\b ])\par\tab\tab\tab\tab\tab [,WAREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\plain\f1\fs28\b\par\page\tab GET\loch\f1\hich\f1\'97Retrieve a record\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GET\loch\f1\hich\f1\'97Retrieve a record----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----IBM vsam, there are 8 examples ----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example 1: keyed-sequential retrieval\loch\f1\hich\f1\'97forward (KSDS, RRDS)------------------------------------------\plain\f1\fs20\cf3\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY, \tab All MACRF and OPTCD subparameters \tab x\par ----\tab\tab\tab\tab\tab SEQ.IN) \tab specified are defaults and could have \tab x\par ----\tab\tab\tab\tab\tab\tab\tab been omitted.\par ----\par ----\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREA=IN, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab SYN,NUP,MVE)\par ----\par ----\tab\tab LOOP \tab\tab GET \tab RPL=RETRVE \tab This GET or identical GETs can be issued, \tab x\par ----\tab\tab\tab\tab\tab\tab\tab with no change in the RPL, to retrieve \tab x\par ----\tab\tab\tab\tab\tab\tab\tab subsequent records in key sequence.\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab B\tab LOOP\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted, or failed.\tab\par ----\tab\tab\tab\tab .\par ----\tab\tab IN \tab\tab DS \tab CL100 \tab\tab IN contains a data record after GET is \tab x\par ----\tab\tab\tab\tab\tab\tab\tab completed.\par -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----z390 equivalent of IBM \plain\f1\fs20\b\cf3 Example 1: keyed-sequential retrieval\loch\f1\hich\f1\'97forward (KSDS, RRDS)------------------------------------------\plain\f1\fs20\cf3\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY, \tab\par ----\tab\tab\tab\tab\tab SEQ,IN) \tab\tab\par ----\par ----\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREA=IN, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ,SYN,NUP,MVE)\par ----\par ----\tab\tab LOOP \tab\tab GET \tab RPL=RETRVE \tab This GET or identical GETs can be issued, \tab x\par ----\tab\tab\tab\tab\tab\tab\tab with no change in the RPL, to retrieve \tab x\par ----\tab\tab\tab\tab\tab\tab\tab subsequent records in key sequence.\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab B\tab LOOP\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted, or failed.\tab\par ----\tab\tab\tab\tab .\par ----\tab\tab IN \tab\tab DS \tab CL100 \tab\tab IN contains a data record after GET is \tab x\par ----\tab\tab\tab\tab\tab\tab\tab completed.\par -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example 2: keyed-sequential retrieval\loch\f1\hich\f1\'97backward (KSDS,RRDS)----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab INPUT \tab\tab ACB \tab DDNAME=INPUT, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab EXLST=EXLST1\par ----\par ----\par ----\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab Define RPL for last record positioning \tab x\par ----\tab\tab\tab\tab\tab AREA=IN, \tab and backward processing. \tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab LRD,BWD)\par ----\par ----\tab\tab EXLST1 \tab\tab EXLST \tab EODAD=EOD \tab Define end of data.\par ----\par ----\tab\tab\tab\tab POINT \tab RPL=RETRVE \tab Position to last record (no argument\par ----\tab\tab\tab\tab\tab\tab\tab is required).\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab LOOP \tab\tab GET \tab RPL=RETRVE \tab Get previous record.\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab .\tab\par ----\tab\tab\tab\tab B\tab LOOP\par ----\tab\tab EOD \tab\tab EQU \tab * \tab\tab Come here for end of data.\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab Request failed.\par ----\tab\tab\tab\tab .\par ----\tab\tab IN \tab\tab DS \tab CL100 \tab\tab Area for retrieved record.\par -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----z390 equivalent of IBM \plain\f1\fs20\b\cf3 Example 2: keyed-sequential retrieval\loch\f1\hich\f1\'97backward (KSDS,RRDS)----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab INPUT \tab\tab ACB \tab DDNAME=INPUT\par ----\par ----\par ----\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab Define RPL for last record positioning \tab x\par ----\tab\tab\tab\tab\tab AREA=IN, \tab and backward processing. \tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab LRD,BWD)\par ----\par ----\tab\tab\tab\tab POINT \tab RPL=RETRVE \tab Position to last record (no argument\par ----\tab\tab\tab\tab\tab\tab\tab is required).\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab LOOP \tab\tab GET \tab RPL=RETRVE \tab Get previous record.\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab .\tab\par ----\tab\tab\tab\tab B\tab LOOP\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab Request failed.\par ----\tab\tab\tab\tab .\par ----\tab\tab IN \tab\tab DS \tab CL100 \tab\tab Area for retrieved record.\par -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----IBM Example 3: skip-sequential retrieval (KSDS, variable-length RRDS)----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----z390 vsam, skip sequential not supported----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example 4: addressed-sequential retrieval (ESDS)----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab BLOCK \tab\tab ACB \tab DDNAME=INPUT, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab MACRF=(ADR,SEQ, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab IN)\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab GENCB \tab BLK=RPL, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab COPIES=10, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab ACB=BLOCK, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(ADR,SEQ, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab SYN,NUP,MVE)\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab CHECK0\par ----\tab\tab\tab\tab LA \tab 3,10 \tab\tab Number of lists(10).\par ----\tab\tab\tab\tab LR \tab 2,1 \tab\tab Address of the first list.\par ----\tab\tab\tab\tab LR \tab 1,0 \tab\tab Length of all of the lists. Registers 0 \tab x\par ----\tab\tab\tab\tab\tab\tab\tab and 1 contain length and address of the \tab x\par ----\tab\tab\tab\tab\tab\tab\tab generated control blocks when VSAM \tab x\par ----\tab\tab\tab\tab\tab\tab\tab returns control after GENCB.\par ----\tab\tab\tab\tab SR \tab 0,0 \tab\tab Prepare for following division.\par ----\tab\tab\tab\tab DR \tab 0,3 \tab\tab Divide number of lists into length of \tab x\par ----\tab\tab\tab\tab\tab\tab\tab all the lists.\par ----\tab\tab\tab\tab LR \tab 3,1 \tab\tab Save the resulting length of a single \tab x\par ----\tab\tab\tab\tab\tab\tab\tab list for an offset.\par ----\tab\tab\tab\tab LR \tab 4,2 \tab\tab Save address of the first list.\par ----\tab\tab\tab\tab LA \tab 5,RECAREA \tab Address of the first work area. Do the \tab x\par ----\tab\tab\tab\tab\tab\tab\tab following 6 instructions 10 times to set \tab x\par ----\tab\tab\tab\tab\tab\tab\tab up all the request parameters lists. The \tab x\par ----\tab\tab\tab\tab\tab\tab\tab 10th time, register 4 must be set to 0 \tab x\par ----\tab\tab\tab\tab\tab\tab\tab to indicate the last request parameter \tab x\par ----\tab\tab\tab\tab\tab\tab\tab list in the chain.\par ----\tab\tab\tab\tab AR \tab 4,3 \tab\tab Address the next list.\par ----\tab\tab\tab\tab MODCB RPL=(2), \tab In each request parameter list, indicate \tab x\par ----\tab\tab\tab\tab\tab NXTRPL=(4),\tab the address of the next list and the \tab\tab x\par ----\tab\tab\tab\tab\tab AREA=(5), \tab address and length of the work area. \tab x\par ----\tab\tab\tab\tab\tab AREALEN=20\par ----\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab CHECK0\par ----\tab\tab\tab\tab AR \tab 2,3 \tab\tab Address the next list.\par ----\tab\tab\tab\tab LA \tab 5,20(5) \tab\tab Address the next work area. Restore \tab x\par ----\tab\tab\tab\tab\tab\tab\tab register 2 to address the first list \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab before continuing to process.\par ----\tab\tab\tab\tab .\par ----\tab\tab LOOP \tab\tab GET \tab RPL=(2)\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR \tab\tab Process the 10 records that have been \tab x\par ----\tab\tab\tab\tab\tab\tab\tab retrieved by the GET.\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab B\tab LOOP\par ----\tab\tab CHECK0\tab  ...\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab Display the feedback field (FIELDS=FDBK) \tab x\par ----\tab\tab\tab\tab\tab\tab\tab of each request parameter list to find \tab x\par ----\tab\tab\tab\tab\tab\tab\tab out which one had an error.\par ----\tab\tab RECAREA \tab DS \tab CL200 \tab\tab Space for a work area for each of the\tab  x\par ----\tab\tab\tab\tab\tab\tab\tab 10 request parameter lists.\par -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----z390 equivalent of IBM \plain\f1\fs20\b\cf3 Example 4: addressed-sequential retrieval (ESDS)----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----z390 vsam does not support NXTRPL or COPIES\tab\par ----\par ----\tab\tab BLOCK \tab\tab ACB \tab DDNAME=INPUT, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab MACRF=(ADR,SEQ,IN)\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab GENCB \tab BLK=RPL, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab ACB=BLOCK, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(ADR,SEQ,SYN,NUP,MVE)\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab CHECK0\par ----\par ----\tab\tab\tab\tab LR \tab 2,1 \tab\tab .\par ----\par ----\tab\tab LOOP \tab\tab GET \tab RPL=(2)\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR \tab\tab\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab B\tab LOOP\par ----\tab\tab CHECK0\tab  ...\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab Display the feedback field (FIELDS=FDBK) \tab\par -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example 5: sequential retrieval for a fixed-Length RRDS----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY,SEQ) All MACRF and OPTCD subparameters \tab x\par ----\tab\tab\tab\tab\tab are defaults and could be omitted.\par ----\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREA=IN, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab ARG=RCDNO, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab SYN,NUP,MVE)\par .----\par ----\tab\tab LOOP \tab\tab GET \tab RPL=RETRVE \tab This GET or identical GETs can be \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab issued, with no change in the RPL, to \tab x\par ----\tab\tab\tab\tab\tab\tab\tab retrieve subsequent records in \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab relative record number sequence.\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs18 ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab B\tab LOOP\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted or it failed.\par ----\tab\tab\tab\tab .\par ----\tab\tab IN \tab\tab DS \tab CL100 \tab\tab IN contains a data record after GET is \tab x\par ----\tab\tab\tab\tab\tab\tab\tab completed.\par ----\tab\tab RCDNO \tab\tab DS \tab CL4 \tab\tab VSAM returns relative record number of \tab x\par ----\tab\tab\tab\tab\tab\tab\tab retrieved record in this field.\par -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----z390 equivalent of IBM \plain\f1\fs20\b\cf3 Example 5: sequential retrieval for a fixed-Length RRDS----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY,SEQ) \par ----\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREA=IN, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab ARG=RCDNO, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ,SYN,NUP,MVE)\par .----\par ----\tab\tab LOOP \tab\tab GET \tab RPL=RETRVE \tab This GET or identical GETs can be \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab issued, with no change in the RPL, to \tab x\par ----\tab\tab\tab\tab\tab\tab\tab retrieve subsequent records in \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab relative record number sequence.\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab B\tab LOOP\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted or it failed.\par ----\tab\tab\tab\tab .\par ----\tab\tab IN \tab\tab DS \tab CL100 \tab\tab IN contains a data record after GET is \tab x\par ----\tab\tab\tab\tab\tab\tab\tab completed.\par ----\tab\tab RCDNO \tab\tab DS \tab CL4 \tab\tab VSAM returns relative record number of \tab x\par ----\tab\tab\tab\tab\tab\tab\tab retrieved record in this field.\par -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example 6: keyed-direct retrieval (KSDS, RRDS)----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab DIR,IN)\par ----\tab\tab\tab\tab .\par ----\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab Specify all parameters for the request \tab x\par ----\tab\tab\tab\tab\tab AREA=IN, \tab in the RPL macro. \tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREALEN=4, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(KEY, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab DIR,SYN,NUP, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab KEQ,GEN,LOC), \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab ARG=KEYAREA, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab KEYLEN=5\par ----\tab\tab\tab\tab .\par ----\tab\tab LOOP \tab\tab MVC \tab KEYAREA,SOURCE \par ----\tab\tab\tab\tab\tab\tab\tab Search argument for retrieval, moved \tab x\par ----\tab\tab\tab\tab\tab\tab\tab in from a table or a transaction \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab record.\par ----\tab\tab\tab\tab GET \tab RPL=RETRVE \tab This GET or identical GETs can be \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab issued with no change in the RPL: \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab specify each new search argument in \tab x\par ----\tab\tab\tab\tab\tab\tab\tab the field KEYAREA.\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab . \tab\tab\tab Process the record.\par ----\tab\tab\tab\tab B\tab LOOP\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted, or failed.\par ----\tab\tab\tab\tab ..\par ----\tab\tab IN \tab\tab DS \tab CL4 \tab\tab VSAM puts here the address of the \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab record within the I/O buffer.\par ----\tab\tab KEYAREA \tab DS \tab CL5 \tab\tab You specify the search argument here.\par -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----z390 equivalent of IBM \plain\f1\fs20\b\cf3 Example 6: keyed-direct retrieval (KSDS, RRDS)----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY,DIR,IN)\par ----\tab\tab\tab\tab .\par ----\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab Specify all parameters for the request \tab x\par ----\tab\tab\tab\tab\tab AREA=IN, \tab in the RPL macro. \tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREALEN=4, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(KEY,DIR,SYN,NUP,KEQ,GEN,LOC),\tab\tab x\par ----\tab\tab\tab\tab\tab ARG=KEYAREA, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab KEYLEN=5\par ----\tab\tab\tab\tab .\par ----\tab\tab LOOP \tab\tab MVC \tab KEYAREA,SOURCE \par ----\tab\tab\tab\tab\tab\tab\tab Search argument for retrieval, moved \tab x\par ----\tab\tab\tab\tab\tab\tab\tab in from a table or a transaction \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab record.\par ----\tab\tab\tab\tab GET \tab RPL=RETRVE \tab This GET or identical GETs can be \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab issued with no change in the RPL: \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab specify each new search argument in \tab x\par ----\tab\tab\tab\tab\tab\tab\tab the field KEYAREA.\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab . \tab\tab\tab Process the record.\par ----\tab\tab\tab\tab B\tab LOOP\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted, or failed.\par ----\tab\tab\tab\tab ..\par ----\tab\tab IN \tab\tab DS \tab CL4 \tab\tab VSAM puts here the address of the \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab record within the I/O buffer.\par ----\tab\tab KEYAREA \tab DS \tab CL5 \tab\tab You specify the search argument here.\par -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example 7: addressed-direct retrieval (ESDS, KSDS)----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab BLOCK \tab\tab ACB \tab DDNAME=INPUT, \tab Access method control\tab  \tab x\par ----\tab\tab\tab\tab\tab MACRF=(ADR, DIR, \tab block generated at assembly. \tab x\par ----\tab\tab\tab\tab\tab IN)\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab GENCB \tab BLK=RPL, \tab\tab Request parameter list generated \tab x\par ----\tab\tab\tab\tab\tab ARG=SRCHADR, \tab at execution. \tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREA=IN, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREALEN=20, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab COPIES=1, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab ACB=BLOCK, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(ADR, DIR, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab SYN, NUP, MVE)\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab CHECK0\par ----\tab\tab\tab\tab LR \tab 2, 1 \tab\tab\tab Address of the list.\par ----\tab\tab\tab\tab .\par ----\tab\tab LOOP \tab\tab MVC \tab SRCHADR, \tab\tab Search argument for retrieval; \tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab calculated or moved in from a tablex\par ----\tab\tab\tab\tab\tab\tab\tab\tab or a transaction record.\par ----\tab\tab\tab\tab GET \tab RPL=(2)\par ----\tab\tab\tab\tab LTR \tab 15, 15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab .\tab\tab\tab\tab Process the record.\tab\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab B \tab LOOP\par ----\tab\tab CHECK0 \tab ... \tab\tab\tab\tab Generation failed.\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab\tab Request was not accepted, or failed.\par ----\tab\tab\tab\tab .\par ----\tab\tab IN \tab\tab DS \tab CL20 \tab\tab\tab VSAM puts a record here for each \tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab GET request.\par ----\tab\tab SRCHADR \tab DS \tab CL4 \tab\tab\tab You specify the RBA search argument x\par ----\tab\tab\tab\tab\tab\tab\tab\tab here for each request.\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----z390 equivalent of  IBM \plain\f1\fs20\b\cf3 Example 7: addressed-direct retrieval (ESDS)----\par ----z390 does not support ADR retrieval for KSDS----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab BLOCK \tab\tab ACB \tab DDNAME=INPUT, \tab Access method control\tab  \tab x\par ----\tab\tab\tab\tab\tab MACRF=(ADR,DIR,IN)\tab block generated at assembly. \tab\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab GENCB \tab BLK=RPL, \tab\tab Request parameter list generated \tab x\par ----\tab\tab\tab\tab\tab ARG=SRCHADR, \tab at execution. \tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREA=IN, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab AREALEN=20, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab ACB=BLOCK, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(ADR,DIR,SYN,NUP,MVE)\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab CHECK0\par ----\tab\tab\tab\tab LR \tab 2, 1 \tab\tab\tab Address of the list.\par ----\tab\tab\tab\tab .\par ----\tab\tab LOOP \tab\tab MVC \tab SRCHADR, \tab\tab Search argument for retrieval; \tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab calculated or moved in from a tablex\par ----\tab\tab\tab\tab\tab\tab\tab\tab or a transaction record.\par ----\tab\tab\tab\tab GET \tab RPL=(2)\par ----\tab\tab\tab\tab LTR \tab 15, 15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab .\tab\tab\tab\tab Process the record.\tab\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab B \tab LOOP\par ----\tab\tab CHECK0 \tab ... \tab\tab\tab\tab Generation failed.\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab\tab Request was not accepted, or failed.\par ----\tab\tab\tab\tab .\par ----\tab\tab IN \tab\tab DS \tab CL20 \tab\tab\tab VSAM puts a record here for each \tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab GET request.\par ----\tab\tab SRCHADR \tab DS \tab CL4 \tab\tab\tab You specify the RBA search argument x\par ----\tab\tab\tab\tab\tab\tab\tab\tab here for each request.\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example 8: switch from direct to sequential retrieval\plain\f1\fs20\cf3 ----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY,DIR, \tab Both direct and sequential access \tab x\par ----\tab\tab\tab\tab\tab SEQ,IN) \tab\tab specified.\par ----\tab\tab\tab\tab .\par ----\tab\tab RETRVE \tab RPL \tab ACB=INPUT, NSP \tab specifies that VSAM is to \tab\tab x\par ----\tab\tab\tab\tab\tab AREA=IN, \tab\tab remember its position. \tab\tab x\par ----\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(KEY,DIR, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab SYN,NSP,KEQ, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab GEN,MVE), \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab ARG=KEYAREA, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab KEYLEN=8\par ----\tab\tab\tab\tab .\par ----\tab\tab LOOP \tab\tab MVC \tab KEYAREA,\tab\tab source Search argument for direct\tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab retrieval; \tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab moved in from a table or a \tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab transaction.\par ----\tab\tab LOOP1 \tab\tab GET \tab RPL=RETRVE\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab ..\par ----\tab\tab\tab\tab SHOWCB \par ----\tab\tab\tab\tab\tab RPL=RETRVE, \tab\tab Extract feedback information. \tab x\par ----\tab\tab\tab\tab\tab AREA=FDBAREA, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab FIELDS=FDBK\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab CLI \tab ERRCD,8 \tab\tab Does a duplicate key follow?\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab BE \tab SEQ \tab\tab\tab Yes; retrieve duplicates \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab sequentially.\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab B \tab LOOP \tab\tab\tab No; retrieve next record in direct \tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab mode.\par ----\tab\tab SEQ \tab\tab MODCB RPL=RETRVE, \tab\tab Alter request parameter list for \tab x\par ----\tab\tab\tab\tab\tab OPTCD=SEQ \tab\tab sequential access.\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab CHECKO\par ----\tab\tab SEQGET \tab GET \tab RPL=RETRVE \tab\tab Do sequential retrieval.\par ----\tab\tab\tab\tab LTR \tab 15,15 \tab\tab\tab Test for error.\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab ..\par ----\tab\tab\tab\tab SHOWCB RPL=RETRVE, \tab\tab Extract feedback information. \tab x\par ----\tab\tab\tab\tab\tab AREA=FDBAREA, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab FIELDS=FDBK\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab CLI \tab ERRCD,8 \tab\tab Does a duplicate key follow?\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab BE \tab SEQGET Yes; \tab\tab retrieve sequentially.\par ----\tab\tab DIR \tab\tab MODCB RPL=RETRVE, \tab\tab Alter request parameter list for \tab x\par ----\tab\tab\tab\tab\tab OPTCD=DIR \tab\tab direct access.\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab CHECKO\par ----\tab\tab\tab\tab B \tab LOOP \tab\tab\tab Prepare new search argument.\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab\tab Request was not accepted, or failed.\par ----\tab\tab CHECKO \tab ... \tab\tab\tab\tab Modification failed.\par ----\tab\tab\tab\tab ..\par ----\tab\tab IN \tab\tab DS \tab CL100 \tab\tab\tab VSAM puts retrieved records here.\par ----\tab\tab KEYAREA \tab DS \tab CL8 \tab\tab\tab Specify the generic key for a direct \tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab request here.\par ----\tab\tab FDBAREA \tab DS \tab OF \tab\tab\tab Feedback area for SHOWCB.\par ----\tab\tab\tab\tab DS \tab 1C \tab\tab\tab Reserved.\par ----\tab\tab TYPECD \tab DS \tab 1C \tab\tab\tab Error type code.\par ----\tab\tab CMPCD \tab\tab DS \tab 1C \tab\tab\tab Component code.\par ----\tab\tab ERRCD \tab\tab DS \tab 1C \tab\tab\tab Reason code.\par -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----z390 equivalent of IBM \plain\f1\fs20\b\cf3 Example 8: switch from direct to sequential retrieval\plain\f1\fs20\cf3 ----\par\plain\f1\fs18 -------------------------------------------------------------------------------------------------------------------------------------------------\par ----\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY,DIR,SEQ,IN)\tab\tab\tab\tab X\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs18 ----\tab\tab\tab\tab\tab\tab\tab\tab Both direct and sequential access \tab x\par ----\tab\tab\tab\tab\tab  \tab\tab\tab specified.\par ----\tab\tab\tab\tab .\par ----\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab\tab\tab\tab  \tab\tab x\par ----\tab\tab\tab\tab\tab AREA=IN, \tab\tab\tab\tab  \tab\tab x\par ----\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab OPTCD=(KEY,DIR,SYN,NSP,\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab KEQ,\tab  \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab GEN,MVE), \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab ARG=KEYAREA, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab KEYLEN=8\par ----\tab\tab\tab\tab .\par ----\tab\tab LOOP \tab\tab MVC \tab KEYAREA,\tab\tab source Search argument for direct\tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab retrieval; \tab\tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab moved in from a table or a \tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab transaction.\par ----\tab\tab LOOP1 \tab\tab GET \tab RPL=RETRVE\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab ..\par ----\tab\tab\tab\tab SHOWCB \par ----\tab\tab\tab\tab\tab RPL=RETRVE, \tab\tab Extract feedback information. \tab x\par ----\tab\tab\tab\tab\tab AREA=FDBAREA, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab FIELDS=FDBK\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab CLI \tab ERRCD,8 \tab\tab Does a duplicate key follow?\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab BE \tab SEQ \tab\tab\tab Yes; retrieve duplicates \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab sequentially.\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab B \tab LOOP \tab\tab\tab No; retrieve next record in direct \tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab mode.\par ----\tab\tab SEQ \tab\tab MODCB RPL=RETRVE, \tab\tab Alter request parameter list for \tab x\par ----\tab\tab\tab\tab\tab OPTCD=SEQ\tab\tab sequential access.\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab CHECKO\par ----\tab\tab SEQGET \tab GET \tab RPL=RETRVE \tab\tab Do sequential retrieval.\par ----\tab\tab\tab\tab LTR \tab 15,15 \tab\tab\tab Test for error.\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab ..\par ----\tab\tab\tab\tab SHOWCB RPL=RETRVE, \tab\tab Extract feedback information. \tab x\par ----\tab\tab\tab\tab\tab AREA=FDBAREA, \tab\tab\tab\tab\tab x\par ----\tab\tab\tab\tab\tab FIELDS=FDBK\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab CLI \tab ERRCD,8 \tab\tab Does a duplicate key follow?\par ----\tab\tab\tab\tab .\par ----\tab\tab\tab\tab BE \tab SEQGET \tab\tab Yes; retrieve sequentially.\par ----\tab\tab DIR \tab\tab MODCB RPL=RETRVE, \tab\tab Alter request parameter list for \tab x\par ----\tab\tab\tab\tab\tab OPTCD=(DIR)\tab\tab direct access.\par ----\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab BNZ \tab CHECKO\par ----\tab\tab\tab\tab B \tab LOOP \tab\tab\tab Prepare new search argument.\par ----\tab\tab ERROR \tab\tab ... \tab\tab\tab\tab Request was not accepted, or faile6d.\par ----\tab\tab CHECKO \tab ... \tab\tab\tab\tab Modification failed.\par ----\tab\tab\tab\tab ..\par ----\tab\tab IN \tab\tab DS \tab CL100 \tab\tab\tab VSAM puts retrieved records here.\par ----\tab\tab KEYAREA \tab DS \tab CL8 \tab\tab\tab Specify the generic key for a direct \tab x\par ----\tab\tab\tab\tab\tab\tab\tab\tab request here.\par ----\tab\tab FDBAREA \tab DS \tab OF \tab\tab\tab Feedback area for SHOWCB.\par ----\tab\tab\tab\tab DS \tab 1C \tab\tab\tab Reserved.\par ----\tab\tab TYPECD \tab DS \tab 1C \tab\tab\tab Error type code.\par ----\tab\tab CMPCD \tab\tab DS \tab 1C \tab\tab\tab Component code.\par ----\tab\tab ERRCD \tab\tab DS \tab 1C \tab\tab\tab Reason code.\par -------------------------------------------------------------------------------------------------------------------------------------------------\par -------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f2\fs20\par\par\tab\tab Use the GET macro to retrieve a record.\par\par\tab\tab The format of the GET macro is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab GET \tab\tab RPL=\plain\f2\fs18\i address\par\par\plain\f1\fs20\i\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies 1 to 8 characters that provide a symbolic address for the GET macro.\par\plain\f1\fs20\b\par\tab\tab RPL=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the request parameter list that defines this GET\par\tab\tab\tab request. You may specify the address in register notation (using a register from\par\tab\tab\tab 1 through 12, enclosed in parentheses) or specify it with an expression that\par\tab\tab\tab generates a valid relocatable A-type address constant.\par\plain\f1\fs28\b\par\page\tab Example 1: keyed-sequential retrieval\loch\f1\hich\f1\'97forward (KSDS, RRDS)\par\plain\f2\fs20\par\tab\tab In this example, a GET macro is used to sequentially retrieve records by key.\par\tab\tab Retrieval is in a forward direction. Fixed-length, 100-byte records are moved to a\par\tab\tab work area. Processing is synchronous.\par\plain\f1\fs18\par\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY, \tab All MACRF and OPTCD subparameters \tab x\par\tab\tab\tab\tab\tab SEQ.IN) \tab\tab specified are defaults and could have x\par\tab\tab\tab\tab\tab\tab\tab been omitted.\par\par\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=IN, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab SYN,NUP,MVE)\par\par\tab\tab LOOP \tab\tab GET \tab RPL=RETRVE \tab This GET or identical GETs can be issued, \tab x\par\tab\tab\tab\tab\tab\tab\tab with no change in the RPL, to retrieve \tab x\par\tab\tab\tab\tab\tab\tab\tab subsequent records in key sequence.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab .\par\tab\tab\tab\tab B\tab LOOP\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted, or failed.\tab\par\tab\tab\tab\tab .\par\tab\tab IN \tab\tab DS \tab CL100 \tab\tab IN contains a data record after GET is \tab x\par\tab\tab\tab\tab\tab\tab\tab completed.\par\plain\f2\fs20\par\tab\tab The records are retrieved in key sequence in a forward direction. No search\par\tab\tab argument has to be specified; VSAM is positioned at the first record in key\par\tab\tab sequence when the data set is opened, and the next record is retrieved\par\tab\tab automatically as each GET is issued. The branch to ERROR can be taken if the end\par\tab\tab of the data set is reached.\par\par\tab\tab If the data set is a variable-length RRDS, supply the record length in the RECLEN\par\tab\tab field in the RPL.\par\plain\f1\fs28\b\par\page\tab Example 2: keyed-sequential retrieval\loch\f1\hich\f1\'97backward (KSDS,RRDS)\par\plain\f2\fs20\par\tab\tab This example differs from the previous one in that a POINT macro is issued to the\par\tab\tab last record in the data set and the records are retrieved in a backward direction.\par\plain\f1\fs18\par\tab\tab INPUT \tab\tab ACB \tab DDNAME=INPUT, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab EXLST=EXLST1\par\par\par\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab Define RPL for last record positioning \tab x\par\tab\tab\tab\tab\tab AREA=IN, \tab and backward processing. \tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab LRD,BWD)\par\par\tab\tab EXLST1 \tab\tab EXLST \tab EODAD=EOD \tab Define end of data.\par\par\tab\tab\tab\tab POINT \tab RPL=RETRVE \tab Position to last record (no argument\par\tab\tab\tab\tab\tab\tab\tab is required).\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab LOOP \tab\tab GET \tab RPL=RETRVE \tab Get previous record.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab .\tab\par\tab\tab\tab\tab B\tab LOOP\par\tab\tab EOD \tab\tab EQU \tab * \tab\tab Come here for end of data.\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Request failed.\par\tab\tab\tab\tab .\par\tab\tab IN \tab\tab DS \tab CL100 \tab\tab Area for retrieved record.\par\plain\f1\fs28\b\par\page\tab Example 3: skip-sequential retrieval (KSDS, variable-length RRDS)\par\plain\f1\fs20\par ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 GET\loch\f1\hich\f1\'97Retrieve a record----\par\plain\f1\fs20\cf1 ----Example 3----\par\plain\f1\fs20\cf3 ----in z390 vsam, skip-sequential is not supported----\par\plain\f1\fs28\b\par\page\tab Example 4: addressed-sequential retrieval (ESDS)\par\plain\f2\fs20\par\tab\tab In this example, one GET macro is used to retrieve multiple fixed-length, 20-byte\par\tab\tab records. The records are moved to a work area (only option).\par\plain\f1\fs18\par\tab\tab BLOCK \tab\tab ACB \tab DDNAME=INPUT, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab MACRF=(ADR,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab IN)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab GENCB \tab BLK=RPL, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab COPIES=10, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ACB=BLOCK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(ADR,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab SYN,NUP,MVE)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECK0\par\tab\tab\tab\tab LA \tab 3,10 \tab\tab Number of lists(10).\par\tab\tab\tab\tab LR \tab 2,1 \tab\tab Address of the first list.\par\tab\tab\tab\tab LR \tab 1,0 \tab\tab Length of all of the lists. Registers 0 \tab x\par\tab\tab\tab\tab\tab\tab\tab and 1 contain length and address of the \tab x\par\tab\tab\tab\tab\tab\tab\tab generated control blocks when VSAM \tab x\par\tab\tab\tab\tab\tab\tab\tab returns control after GENCB.\par\tab\tab\tab\tab SR \tab 0,0 \tab\tab Prepare for following division.\par\tab\tab\tab\tab DR \tab 0,3 \tab\tab Divide number of lists into length of \tab x\par\tab\tab\tab\tab\tab\tab\tab all the lists.\par\tab\tab\tab\tab LR \tab 3,1 \tab\tab Save the resulting length of a single \tab x\par\tab\tab\tab\tab\tab\tab\tab list for an offset.\par\tab\tab\tab\tab LR \tab 4,2 \tab\tab Save address of the first list.\par\tab\tab\tab\tab LA \tab 5,RECAREA \tab Address of the first work area. Do the \tab x\par\tab\tab\tab\tab\tab\tab\tab following 6 instructions 10 times to set \tab x\par\tab\tab\tab\tab\tab\tab\tab up all the request parameters lists. The \tab x\par\tab\tab\tab\tab\tab\tab\tab 10th time, register 4 must be set to 0 \tab x\par\tab\tab\tab\tab\tab\tab\tab to indicate the last request parameter \tab x\par\tab\tab\tab\tab\tab\tab\tab list in the chain.\par\tab\tab\tab\tab AR \tab 4,3 \tab\tab Address the next list.\par\tab\tab\tab\tab MODCB RPL=(2), \tab In each request parameter list, indicate \tab x\par\tab\tab\tab\tab\tab NXTRPL=(4),\tab the address of the next list and the \tab\tab x\par\tab\tab\tab\tab\tab AREA=(5), \tab address and length of the work area. \tab x\par\tab\tab\tab\tab\tab AREALEN=20\par\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECK0\par\tab\tab\tab\tab AR \tab 2,3 \tab\tab Address the next list.\par\tab\tab\tab\tab LA \tab 5,20(5) \tab\tab Address the next work area. Restore \tab x\par\tab\tab\tab\tab\tab\tab\tab register 2 to address the first list \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab before continuing to process.\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab GET \tab RPL=(2)\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR \tab\tab Process the 10 records that have been \tab x\par\tab\tab\tab\tab\tab\tab\tab retrieved by the GET.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab B\tab LOOP\par\tab\tab CHECK0\tab  ...\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Display the feedback field (FIELDS=FDBK) \tab x\par\tab\tab\tab\tab\tab\tab\tab of each request parameter list to find \tab x\par\tab\tab\tab\tab\tab\tab\tab out which one had an error.\par\tab\tab RECAREA \tab DS \tab CL200 \tab\tab Space for a work area for each of the \tab x\par\tab\tab\tab\tab\tab\tab\tab 10 request parameter lists.\par\plain\f2\fs20\par\tab\tab The GENCB macro generates 10 request parameter lists; the lists are subsequently\par\tab\tab chained together by using the MODCB macro to modify the NXTRPL parameter in\par\tab\tab each copy. Because SEQ is specified in each request parameter list, and no previous\par\tab\tab request has been issued against the access method control block since it was\par\tab\tab opened, retrieval begins at the beginning of the data set. Each time the GET macro\par\tab\tab is executed, VSAM is positioned at the next record in RBA sequence. VSAM moves\par\tab\tab each record into the work area provided for the request parameter list that\par\tab\tab identifies the record.\par\par\tab\tab If an error occurs for one of the request parameter lists in the chain and you\par\tab\tab supply error-analysis routines, VSAM takes a LERAD or SYNAD exit before\par\tab\tab returning to your program. Register 15 is set to indicate the status of the request. A\par\tab\tab code of 0 indicates that no error was associated with any of the request parameter\par\tab\tab lists. Any other code indicates that an error occurred for one of the request\par\tab\tab parameter lists. You should issue a SHOWCB macro for each request parameter list\par\tab\tab in the chain to find out which had an error. VSAM does not process any of the\par\tab\tab request parameter lists except the one with an error.\par\plain\f1\fs28\b\par\tab Example 5: sequential retrieval for a fixed-Length RRDS\par\plain\f2\fs20\par\tab\tab In this example, a GET macro is used to sequentially retrieve records by relative\par\tab\tab record number. Fixed-length, 100-byte records are moved to a work area.\par\tab\tab Processing is synchronous.\par\plain\f1\fs18\par\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY,SEQ) All MACRF and OPTCD subparameters \tab x\par\tab\tab\tab\tab\tab are defaults and could be omitted.\par\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=IN, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=RCDNO, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab SYN,NUP,MVE)\par .\par\tab\tab LOOP \tab\tab GET \tab RPL=RETRVE \tab This GET or identical GETs can be \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab issued, with no change in the RPL, to \tab x\par\tab\tab\tab\tab\tab\tab\tab retrieve subsequent records in \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab relative record number sequence.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab .\par\tab\tab\tab\tab B\tab LOOP\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted or it failed.\par\tab\tab\tab\tab .\par\tab\tab IN \tab\tab DS \tab CL100 \tab\tab IN contains a data record after GET is\tab x\par\tab\tab\tab\tab\tab\tab\tab completed.\par\tab\tab RCDNO \tab\tab DS \tab CL4 \tab\tab VSAM returns relative record number of \tab x\par\tab\tab\tab\tab\tab\tab\tab retrieved record in this field.\par\plain\f2\fs20\par\tab\tab The records are retrieved in relative record number sequence. Empty records are\par\tab\tab bypassed for sequential retrieval. A 4-byte search argument must be specified. The\par\tab\tab relative record number of each record retrieved is stored in the search argument.\par\tab\tab VSAM is positioned at the first relative record when the data set is opened, and\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs20\tab\tab the next not empty record is retrieved automatically as each GET is issued. The\par\tab\tab branch to ERROR is taken when the end of the data set is reached.\par\plain\f1\fs28\b\par\tab Example 6: keyed-direct retrieval (KSDS, RRDS)\par\plain\f2\fs20\par\tab\tab In this example, a GET macro is used to retrieve fixed-length, 100-byte records\par\tab\tab directly by key. The key length is 15 bytes; the search argument is a 5-byte generic\par\tab\tab key, compared equal. The control blocks are generated at assembly.\par\plain\f1\fs18\par\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab DIR,IN)\par\tab\tab\tab\tab .\par\tab\tab RETRVE \tab RPL \tab ACB=INPUT, \tab Specify all parameters for the request \tab x\par\tab\tab\tab\tab\tab AREA=IN, \tab in the RPL macro. \tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=4, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab DIR,SYN,NUP, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab KEQ,GEN,LOC), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=KEYAREA, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab KEYLEN=5\par .\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab MVC \tab KEYAREA,SOURCE \par\tab\tab\tab\tab\tab\tab\tab Search argument for retrieval, moved \tab x\par\tab\tab\tab\tab\tab\tab\tab in from a table or a transaction \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab record.\par\tab\tab\tab\tab GET \tab RPL=RETRVE \tab This GET or identical GETs can be \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab issued with no change in the RPL: \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab specify each new search argument in \tab x\par\tab\tab\tab\tab\tab\tab\tab the field KEYAREA.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab . \tab\tab\tab Process the record.\par\tab\tab\tab\tab B\tab LOOP\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted, or failed.\par\tab\tab\tab\tab ..\par\tab\tab IN \tab\tab DS \tab CL4 \tab\tab VSAM puts here the address of the \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab record within the I/O buffer.\par\tab\tab KEYAREA \tab DS \tab CL5 \tab\tab You specify the search argument here.\par\plain\f2\fs20\par\tab\tab The generic key specifies a class of records. For example, if you search on the first\par\tab\tab third of employee number, VSAM positions at and retrieves the first of several\par\tab\tab records starting with the specified characters. To retrieve all the records in that\par\tab\tab class, either switch to sequential access or to a full-key search with a\par\tab\tab greater-than-or-equal comparison.\par\par\tab\tab The search argument can be a key or relative record number. If the data set is a\par\tab\tab variable-length RRDS, supply the record length in the RECLEN field in the RPL.\par\plain\f1\fs28\b\par\page\tab Example 7: addressed-direct retrieval (ESDS, KSDS)\par\plain\f2\fs20\par\tab\tab In this example, a GET macro is used to retrieve fixed-length 20-byte records. The\par\tab\tab records are to be moved to a work area.\par\plain\f1\fs18\par\tab\tab BLOCK \tab\tab ACB \tab DDNAME=INPUT, \tab Access method control\tab  \tab x\par\tab\tab\tab\tab MACRF=(ADR, DIR, \tab\tab block generated at assembly. \tab x\par\tab\tab\tab\tab IN)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab GENCB \tab BLK=RPL, \tab\tab Request parameter list generated \tab x\par\tab\tab\tab\tab\tab ARG=SRCHADR, \tab at execution. \tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=IN, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=20, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab COPIES=1, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ACB=BLOCK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(ADR, DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab SYN, NUP, MVE)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECK0\par\tab\tab\tab\tab LR \tab 2, 1 \tab\tab\tab Address of the list.\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab MVC \tab SRCHADR, \tab\tab Search argument for retrieval; \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab calculated or moved in from a tablex\par\tab\tab\tab\tab\tab\tab\tab\tab or a transaction record.\par\tab\tab\tab\tab GET \tab RPL=(2)\par\tab\tab\tab\tab LTR \tab 15, 15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab .\tab\tab\tab\tab Process the record.\tab\par\tab\tab\tab\tab .\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab CHECK0 \tab ... \tab\tab\tab\tab Generation failed.\par\tab\tab ERROR \tab\tab ... \tab\tab\tab\tab Request was not accepted, or failed.\par\tab\tab\tab\tab .\par\tab\tab IN \tab\tab DS \tab CL20 \tab\tab\tab VSAM puts a record here for each \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab GET request.\par\tab\tab SRCHADR \tab DS \tab CL4 \tab\tab\tab You specify the RBA search argument x\par\tab\tab\tab\tab\tab\tab\tab\tab here for each request.\par\plain\f2\fs20\tab\tab\par\tab\tab The RBA provided for a search argument must match the RBA of a record. Keyed\par\tab\tab insertion and deletion of records in a key-sequenced data set will probably cause\par\tab\tab the RBAs of some records to change. Therefore, if you process a key-sequenced\par\tab\tab data set by addressed-direct access (or by addressed-sequential access using\par\tab\tab POINT), you need to keep track of changes. You can use the JRNAD exit for this\par\tab\tab purpose. See \loch\f2\hich\f2\'93EXLST\'97Generate an exit list at assembly time\'94 on page 33.\par\plain\f1\fs28\b\par\page\tab Example 8: switch from direct to sequential retrieval\par\plain\f2\fs20\par\tab\tab In this example, GET macros are used to retrieve fixed-length, 100-byte records.\par\tab\tab The retrieval is by means of an alternate index path defined with the non-unique\par\tab\tab key option. Every time a non-unique key is retrieved, the program switches to\par\tab\tab sequential processing to retrieve the other records with the same key. The control\par\tab\tab blocks were generated at assembly, but the MODCB macro is used to modify the\par\tab\tab request parameter list to permit switching from keyed-direct to keyed-sequential\par\tab\tab retrieval. For the direct request preceding sequential requests, the search argument\par\tab\tab is an 8-byte, generic key, compared equal. Positioning is requested for direct\par\tab\tab requests.\par\plain\f1\fs18\par\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY,DIR, \tab Both direct and sequential access \tab x\par\tab\tab\tab\tab\tab SEQ,IN) \tab\tab\tab specified.\par\tab\tab\tab\tab .\par\tab\tab RETRVE \tab RPL \tab ACB=INPUT, NSP \tab specifies that VSAM is to \tab\tab x\par\tab\tab\tab\tab\tab AREA=IN, \tab\tab remember its position. \tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab SYN,NSP,KEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab GEN,MVE), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=KEYAREA, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab KEYLEN=8\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab MVC \tab KEYAREA,\tab\tab source Search argument for direct\tab x\par\tab\tab\tab\tab\tab\tab\tab\tab retrieval; \tab\tab\tab x\par\tab\tab\tab\tab\tab\tab\tab\tab moved in from a table or a \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab transaction.\par\tab\tab LOOP1 \tab\tab GET \tab RPL=RETRVE\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab ..\par\tab\tab\tab\tab SHOWCB \par\tab\tab\tab\tab\tab RPL=RETRVE, \tab\tab Extract feedback information. \tab x\par\tab\tab\tab\tab\tab AREA=FDBAREA, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab FIELDS=FDBK\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab CLI \tab ERRCD,8 \tab\tab Does a duplicate key follow?\par\tab\tab\tab\tab .\par\tab\tab\tab\tab BE \tab SEQ \tab\tab\tab Yes; retrieve duplicates \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab\tab sequentially.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab B \tab LOOP \tab\tab\tab No; retrieve next record in direct \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab mode.\par\tab\tab SEQ \tab\tab MODCB RPL=RETRVE, \tab\tab Alter request parameter list for \tab x\par\tab\tab\tab\tab OPTCD=SEQ \tab\tab\tab sequential access.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab SEQGET \tab GET \tab RPL=RETRVE \tab\tab Do sequential retrieval.\par\tab\tab\tab\tab LTR \tab 15,15 \tab\tab\tab Test for error.\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab ..\par\tab\tab\tab\tab SHOWCB RPL=RETRVE, \tab\tab Extract feedback information. \tab x\par\tab\tab\tab\tab\tab AREA=FDBAREA, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab FIELDS=FDBK\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab CLI \tab ERRCD,8 \tab\tab Does a duplicate key follow?\par\tab\tab\tab\tab .\par\tab\tab\tab\tab BE \tab SEQGET Yes; \tab\tab retrieve sequentially.\par\tab\tab DIR \tab\tab MODCB RPL=RETRVE, \tab\tab Alter request parameter list for \tab x\par\tab\tab\tab\tab\tab OPTCD=DIR \tab\tab direct access.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab\tab\tab B \tab LOOP \tab\tab\tab Prepare new search argument.\par\tab\tab ERROR \tab\tab ... \tab\tab\tab\tab Request was not accepted, or faile6d.\par\tab\tab CHECKO \tab ... \tab\tab\tab\tab Modification failed.\par\tab\tab\tab\tab ..\par\tab\tab IN \tab\tab DS \tab CL100 \tab\tab\tab VSAM puts retrieved records here.\par\tab\tab KEYAREA \tab DS \tab CL8 \tab\tab\tab Specify the generic key for a direct \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab request here.\par\tab\tab FDBAREA \tab DS \tab OF \tab\tab\tab Feedback area for SHOWCB.\par\tab\tab\tab\tab DS \tab 1C \tab\tab\tab Reserved.\par\tab\tab TYPECD \tab DS \tab 1C \tab\tab\tab Error type code.\par\tab\tab CMPCD \tab\tab DS \tab 1C \tab\tab\tab Component code.\par\tab\tab ERRCD \tab\tab DS \tab 1C \tab\tab\tab Reason code.\par\plain\f2\fs20\par\tab\tab Positioning is associated with a request parameter list; the MODCB macro modifies\par\tab\tab a single request parameter list that alternately defines requests for both types of\par\tab\tab access rather than using a different request parameter list for each type.\par\par\tab\tab With direct retrieval, VSAM does not remember its position for subsequent\par\tab\tab sequential retrieval unless you explicitly request it (OPTCD=NSP or UPD). After a\par\tab\tab direct GET for update, VSAM is positioned for a subsequent PUT, ERASE, or\par\tab\tab sequential GET. If you modify OPTCD=(DIR,NUP) to OPTCD=SEQ, you must\par\tab\tab issue POINT to get VSAM positioned for sequential retrieval, as NUP indicates\par\tab\tab that no positioning is desired with a direct GET.\par\par\tab\tab If you have chained many request parameter lists together, one position is\par\tab\tab remembered for the whole chain. For example, if you issue a GET that gives the\par\tab\tab address of the first request parameter list in the chain, the position of VSAM when\par\tab\tab the GET request is complete is at the record following the record defined by the\par\tab\tab last request parameter list in the chain. Therefore, modifying OPTCD=(DIR,NSP) in\par\tab\tab each request parameter list in a chain to OPTCD=SEQ implies continuing with\par\tab\tab sequential access relative to the last of the direct request parameter lists.\par\plain\f1\fs28\b\par\page\tab IDALKADD\loch\f1\hich\f1\'97RLS record locking\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----IDALKADD-RLS record locking\plain\f1\fs20 ----\plain\f1\fs20\cf1\par\plain\f2\fs20\cf3 ----z390 vsam, does not support IDALKADD----\par\plain\f1\fs28\b\par\page\tab MODCB\loch\f1\hich\f1\'97Modify an access method control block\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 MODCB\loch\f1\hich\f1\'97Modify an access method control block----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam, MODCB as the name implies MODifies an existing Control Block----\par ----That CB can either be a named variable or a register in parentheses, e.g. (R2)----\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 MODCB\loch\f1\hich\f1\'97Modify an access method control block----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam, MODCB supports the same parameters and sub-parameters as GENCB----\par\plain\f2\fs20\par\tab\tab The format of the MODCB macro used to modify an access method control block\par\tab\tab is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab\tab MODCB \tab ACB=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab\tab [BSTRNO=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,BUFND=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,BUFNI=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,BUFSP=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,DDNAME=\plain\f2\fs18\i character string\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,EXLST=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,MACRF=([ADR][,CNV] [,KEY]\par\tab\tab\tab\tab\tab\tab [,CFX|NFX]\par\tab\tab\tab\tab\tab\tab [,DDN|DSN]\par\tab\tab\tab\tab\tab\tab [,DFR|NDF]\par\tab\tab\tab\tab\tab\tab [,DIR][,SEQ][,SKP]\par\tab\tab\tab\tab\tab\tab [,ICI|NCI]\par\tab\tab\tab\tab\tab\tab [,IN][,OUT]\par\tab\tab\tab\tab\tab\tab [,NIS|SIS]\par\tab\tab\tab\tab\tab\tab [,NRM|AIX]\par\tab\tab\tab\tab\tab\tab [,NRS|RST]\par\tab\tab\tab\tab\tab\tab [,NSR|LSR|GSR]\par\tab\tab\tab\tab\tab\tab [,NUB|UBF])]\par\tab\tab\tab\tab\tab\tab [,MAREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,MLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,PASSWD=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,RMODE31=\{ALL|BUFF|CB|\plain\f2\fs18\b\ul NONE\plain\f2\fs18\b\}]\par\tab\tab\tab\tab\tab\tab [,SHRPOOL=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,STRNO=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\plain\f2\fs20\par\tab\tab The subparameters of the MODCB macro can be expressed as absolute numeric\par\tab\tab expressions, as character strings, as codes, as expressions that generate valid\par\tab\tab relocatable A-type address constants, in register notation, as S-type address\par\tab\tab constants, and as indirect S-type address constants. \loch\f2\hich\f2\'93Subparameters with GENCB,\par\tab\tab MODCB, SHOWCB, and TESTCB\'94 on page 5, further defines these operand\par\tab\tab expressions.\par\plain\f1\fs20\i\par\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies 1 to 8 characters that provide a symbolic address for the MODCB\par\tab\tab\tab macro.\par\plain\f1\fs20\b\par\tab\tab ACB=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the access method control block to be modified. The\par\tab\tab\tab data set identified by the access method control block must not be opened. A\par\tab\tab\tab request to modify the access method control block of an open data set will fail.\par\plain\f2\fs20\b\par\tab\tab Important: \plain\f2\fs20 The remaining parameters represent parameters of the ACB macro that\par\tab\tab can be modified. The value specified replaces the value, if any, presently in the\par\tab\tab access method control block. \plain\f2\fs20\i There are no defaults\plain\f2\fs20 . For an explanation of these\par\tab\tab parameters, see \loch\f2\hich\f2\'93ACB\'97Generate an access method control block at assembly time\'94\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs20\tab\tab on page 10.\par\par\tab\tab If MODCB is used to modify a MACRF subparameter, other subparameters are\par\tab\tab unaffected, except when they are mutually exclusive. For example, if you specify\par\tab\tab MACRF=ADR in the MODCB and MACRF=KEY is already indicated in the control\par\tab\tab block, both ADR and KEY are now indicated. But, if you specify MACRF=UBF in\par\tab\tab the MODCB and NUB is indicated, only UBF will now be indicated.\par\par\tab\tab The RMODE31 parameter tells the VSAM OPEN routines where to obtain storage\par\tab\tab for the control blocks and I/O buffers. Therefore, the only time the values specified\par\tab\tab by the RMODE31 parameter have any effect on VSAM is on the setting just before\par\tab\tab an OPEN is issued. At other times, changing these values has no effect on the\par\tab\tab residency of the control blocks and I/O buffers. RMODE31 is ignored for RLS\par\tab\tab processing.\par\par\tab\tab If MODCB RPL is used to change the address of an ACB, you must first issue an\par\tab\tab ENDREQ macro.\par\plain\f2\fs20\b\par\tab\tab Restriction: \plain\f2\fs20 If you issue a MODCB for a non-VSAM and non-VTAM ACB, the\par\tab\tab results will be unpredictable.\par\par\tab\tab In this example, a MODCB macro is used to modify the name of the exit list in an\par\tab\tab access method control block.\par\plain\f1\fs18\par\tab\tab\tab MODCB \tab\tab ACB=BLOCK, \tab BLOCK was generated at \tab\tab\tab x\par\tab\tab\tab\tab\tab EXLST=EGRESS assembly.\par\plain\f1\fs28\b\par\page\tab MODCB\loch\f1\hich\f1\'97Modify an exit list\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 MODCB\loch\f1\hich\f1\'97Modify an exit list----\plain\f1\fs20\cf1\par\plain\f2\fs20\cf3 ----z390 vsam does not support a Modify of an exit list----\par\plain\f1\fs22\b\par\plain\f1\fs28\b\page\tab MODCB\loch\f1\hich\f1\'97Modify a request parameter list\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 MODCB\loch\f1\hich\f1\'97Modify a request parameter list----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam, MODCB as the name implies MODifies an existing Control Block----\par ----That CB can either be a named variable or a register in parentheses, e.g. (R2)----\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 MODCB\loch\f1\hich\f1\'97Modify a request parameter list----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam, MODCB supports the same parameters and sub-parameters as GENCB----\par\plain\f2\fs20\par\par\tab\tab The format of a MODCB macro used to modify a request parameter list is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab\tab MODCB \tab RPL=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab\tab [,ACB=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,AREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,AREALEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,ARG=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,ECB=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,KEYLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,MSGAREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,MSGLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,NXTRPL=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,OPTCD=([ADR|CNV|KEY]\par\tab\tab\tab\tab\tab\tab\tab [,DIR|SEQ|SKP]\par\tab\tab\tab\tab\tab\tab\tab [,ARD|LRD]\par\tab\tab\tab\tab\tab\tab\tab [,FWD|BWD]\par\tab\tab\tab\tab\tab\tab\tab [,ASY|SYN]\par\tab\tab\tab\tab\tab\tab\tab [,NSP|NUP|UPD]\par\tab\tab\tab\tab\tab\tab\tab [,KEQ|KGE]\par\tab\tab\tab\tab\tab\tab\tab [,FKS|GEN]\par\tab\tab\tab\tab\tab\tab\tab [,LOC|MVE]]\par\tab\tab\tab\tab\tab\tab\tab [,RBA|XRBA])]\par\tab\tab\tab\tab\tab\tab [,RECLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,TRANSID=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\plain\f2\fs20\par\tab\tab The subparameters of the MODCB macro can be expressed as absolute numeric\par\tab\tab expressions, as character strings, as codes, as expressions that generate valid\par\tab\tab relocatable A-type address constants, in register notation, as S-type address\par\tab\tab constants, and as indirect S-type address constants. \loch\f2\hich\f2\'93Subparameters with GENCB,\par\tab\tab MODCB, SHOWCB, and TESTCB\'94 on page 5, further defines these operand\par\tab\tab expressions.\par\plain\f1\fs20\i\par\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies 1 to 8 characters that provide a symbolic address for the MODCB\par\tab\tab\tab macro.\par\plain\f1\fs20\b\par\tab\tab RPL=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the request parameter list being modified. You may not\par\tab\tab\tab modify an active request parameter list; one that defines a request that has\par\tab\tab\tab been issued but not completed. To modify such a request parameter list, you\par\tab\tab\tab must first issue a CHECK or an ENDREQ macro.\par\plain\f2\fs20\b\par\tab\tab Important: \plain\f2\fs20 If you use MODCB to modify fields in the RPL, you must first\par\tab\tab disconnect the RPL from any process by issuing an ENDREQ macro.\par\par\tab\tab The remaining parameters represent parameters of the RPL macro that can be\par\tab\tab modified. The value specified replaces the value, if any, presently in the request\par\tab\tab parameter list. \plain\f2\fs20\i There are no defaults\plain\f2\fs20 . For an explanation of these parameters, see\par\tab\tab\loch\f2\hich\f2\'93GENCB\'97Generate a request parameter list at execution time\'94 on page 45.\par\par\tab\tab If MODCB is used to modify an OPTCD subparameter within a group of\par\tab\tab subparameters, the current subparameter for that group is changed because only\par\tab\tab one subparameter in a group is effective at a time. Only the specified OPTCD\par\tab\tab subparameter is changed.\par\plain\f1\fs22\b\par\plain\f1\fs28\b\page\tab Example: MODCB macro (modify a request parameter list)\par\plain\f2\fs20\par\tab\tab In this example, a MODCB macro is used to modify the record length field in a\par\tab\tab request parameter list.\par\par\tab\tab This example shows the one exception to GENCB, MODCB, SHOWCB, and\par\tab\tab TESTCB building a parameter list and passing it to the control block manipulation\par\tab\tab module in register 1. The RPL address (in register 2) is loaded into register 1 and\par\tab\tab the RECLEN value (in register 3) is loaded into register 0. These registers are\par\tab\tab passed to the control block manipulation macro. This occurs when the LIST,\par\tab\tab EXECUTE, or GENERATE form of the MODCB macro is not used and the only\par\tab\tab parameter specified other than RPL, is RECLEN.\par\plain\f1\fs18\par\tab\tab\tab L \tab 3,length \tab\tab\tab Load the new record length.\par\tab\tab\tab MODCB RPL=(2), \tab\tab Register 2 contains the address \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab of the request parameter list. \tab\tab x\par\tab\tab\tab RECLEN=(3) \tab\tab\tab Register 3 contains the record length.\par\plain\f2\fs20\par\tab\tab The MODCB macro's parameters are:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 RPL specifies register 2 contains the address of the request parameter list being\par\tab\tab\tab modified.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 RECLEN specifies the record length field is being modified. The contents of\par\tab\tab\tab register 3 replace the current value in the RECLEN field.\par\plain\f1\fs28\b\par\page\tab MODCB\loch\f1\hich\f1\'97List form\par\plain\f2\fs20\par\tab\tab The format of the list form of MODCB is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab\tab MODCB \tab\{ACB|EXLST|RPL\}=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab\tab ,\plain\f2\fs18\i keyword\plain\f2\fs18\b =\{\plain\f2\fs18\i address\plain\f2\fs18 |\plain\f2\fs18\i name\plain\f2\fs18 |\plain\f2\fs18\i abs expression\plain\f2\fs18 |\plain\f2\fs18\i option\plain\f2\fs18\b\},...\par\tab\tab\tab\tab\tab\tab ,MF=\{L|(L,\plain\f2\fs18\i address\plain\f2\fs18 [,\plain\f2\fs18\i label\plain\f2\fs18\b ])\}\par\plain\f1\fs28\b\par\tab MODCB\loch\f1\hich\f1\'97Execute form\par\plain\f2\fs20\par\tab\tab The format of the execute form of MODCB is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab\tab MODCB \tab [\{ACB|EXLST|RPL\}=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab ,\plain\f2\fs18\i keyword\plain\f2\fs18\b =\{\plain\f2\fs18\i address\plain\f2\fs18 |\plain\f2\fs18\i name\plain\f2\fs18 |\plain\f2\fs18\i abs expression\plain\f2\fs18 |\plain\f2\fs18\i option\plain\f2\fs18\b\},...\par\tab\tab\tab\tab\tab\tab ,MF=(E,\plain\f2\fs18\i address6\plain\f2\fs18\b )\par\plain\f2\fs20\b\par\tab\tab Requirement: \plain\f2\fs20 If the execute form of MODCB is used and EXLST is used as a\par\tab\tab keyword to be processed, the block must be identified by ACB=.\par\plain\f1\fs28\b\par\tab MODCB\loch\f1\hich\f1\'97Generate form\par\plain\f2\fs20\par\tab\tab The format of the generate form of MODCB is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab\tab MODCB \tab\{ACB|EXLST|RPL\}=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab\tab ,\plain\f2\fs18\i keyword\plain\f2\fs18 =\{\plain\f2\fs18\i address\plain\f2\fs18 |\plain\f2\fs18\i name\plain\f2\fs18 |\plain\f2\fs18\i abs expression\plain\f2\fs18 |\plain\f2\fs18\i option\plain\f2\fs18\b\},...\par\tab\tab\tab\tab\tab\tab ,MF=(G,\plain\f2\fs18\i address\plain\f2\fs18 [,\plain\f2\fs18\i label\plain\f2\fs18\b ])\par\plain\f1\fs22\b\par\plain\f1\fs28\b\page\tab MRKBFR\loch\f1\hich\f1\'97Mark buffer\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----MRKBFR-Mark Buffer\plain\f1\fs20 ----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam, does not support MRKBFR----\par\plain\f1\fs28\b\par\page\tab OPEN\loch\f1\hich\f1\'97Connect program and data\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 OPEN\loch\f1\hich\f1\'97Connect program and data----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam does not support MODE (as it supports both 24 and 31), MF,TYPE----\par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 OPEN\loch\f1\hich\f1\'97Connect program and data-\par\plain\f1\fs20\cf3 ----IBM vsam, there are two examples----\par\plain\f1\fs20\cf1 ------------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example 1: OPEN macro used to open two data sets\plain\f1\fs20\cf3 ----\par ----The z390 equivalent of IBM \plain\f1\fs20\b\cf3 Example 1would be unchanged----\par\plain\f1\fs20\cf1 ------------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 ----\tab\tab\tab GENCB \tab\tab BLK=ACB, \tab An access method control block.\tab\tab  x\par ----\tab\tab\tab\tab\tab DDNAME=DATA\par ----\tab\tab\tab\tab\tab LTR \tab 15,15\par ----\tab\tab\tab\tab\tab BNZ \tab ERROR\par ----\tab\tab\tab\tab\tab .\par ----\tab\tab\tab\tab\tab LR \tab 2,1 \tab Address of the control block.\par ----\tab\tab\tab\tab\tab OPEN \tab (BLOCK,,(2)) \par ----\tab\tab\tab\tab\tab\tab\tab A label is used for the access method \tab x\par ----\tab\tab\tab\tab\tab\tab\tab control block generated by ACB; \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab register notation is used for the \tab\tab x\par ----\tab\tab\tab\tab\tab\tab\tab one generated by GENCB. The two commas x\par ----\tab\tab\tab\tab\tab\tab\tab indicate the omission of options.\par ----\tab\tab\tab BLOCK \tab\tab ACB \tab , \tab Another access method control block.\par\plain\f1\fs20\cf1 ------------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example 2: OPEN macro with a parameter list above 16 megabytes----\par\plain\f1\fs20\cf1 ------------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 ----\tab\tab OPLSTA \tab OPEN \tab MODE=31,\tab\tab\tab\tab\tab\tab  x\par ----\tab\tab\tab\tab\tab MF=(E,OPLSTB)\par ----\tab\tab\tab\tab .\par ----\tab\tab OPLSTB \tab OPEN \tab (ACB1,,ACB2),\tab\tab\tab\tab\tab\tab  x\par ----\tab\tab\tab\tab\tab MODE=31,\tab\tab\tab\tab\tab\tab  x\par ----\tab\tab\tab\tab\tab MF=L\par\plain\f2\fs20 ----\par\plain\f1\fs20\cf1 ------------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----z390 equivalent of IBM \plain\f1\fs20\b\cf3 Example 2: OPEN macro with a parameter list above 16 megabytes----\par\plain\f1\fs20\cf1 ------------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 ----z390 vsam does not support MODE or MF\plain\f2\fs20\par\plain\f1\fs20\cf1 ------------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 ----\tab\tab OPLSTB \tab OPEN \tab (ACB1,,ACB2)\par\plain\f1\fs20\cf1 ------------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3\par\plain\f2\fs20\tab\tab Use the OPEN macro to open a data set.\par\par\tab\tab The format of the OPEN macro is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab\tab OPEN \tab\tab (\plain\f2\fs18\i address\plain\f2\fs18\b [(\plain\f2\fs18\i options\plain\f2\fs18\b )][,...]])\par\tab\tab\tab\tab\tab\tab [,MODE=\{24|31\}]\par\plain\f1\fs20\i\par\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies 1 to 8 characters that provide a symbolic address for the OPEN\par\tab\tab\tab macro.\par\plain\f1\fs20\i\par\tab\tab address\par\plain\f2\fs20\tab\tab\tab specifies the address of the ACB or DCB for the data sets being opened. You\par\tab\tab\tab may specify the address either in register notation (using a register from 2\par\tab\tab\tab through 12, in parentheses) or with an expression that generates a valid\par\tab\tab\tab relocatable A-type address constant. If you use register notation to open one\par\tab\tab\tab data set, enclose the expression identifying the register within two sets of\par\tab\tab\tab parentheses: OPEN ((2)).\par\plain\f1\fs20\i\tab\par\tab\tab options\par\plain\f2\fs20\tab\tab\tab specifies options parameters used only in opening non-VSAM data sets. VSAM\par\tab\tab\tab ignores options specified with the address of an access method control block.\par\par\tab\tab\tab Because the OPEN parameters are positional, if options are not specified, you\par\tab\tab\tab must insert a comma before coding a subsequent parameter.\par\plain\f1\fs20\b\par\tab\tab MODE =\par\plain\f2\fs20\tab\tab\tab specifies the format of the OPEN parameter list being generated.\par\plain\f1\fs20\b\par\tab\tab\tab 24 \tab\plain\f2\fs20 specifies that a standard form (24-bit) parameter list address be generated.\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs20\tab\tab\tab\tab The parameter list must reside below 16 megabytes and point to an ACB\par\tab\tab\tab\tab residing below 16 megabytes.\par\plain\f1\fs20\b\par\tab\tab\tab 31 \tab\plain\f2\fs20 specifies that a long form (31-bit) parameter list address be generated. The\par\tab\tab\tab\tab parameter list can reside above 16 MB and can point to an ACB residing\par\tab\tab\tab\tab above 16 MB. This parameter value must be coded if the parameter list or\par\tab\tab\tab\tab the VSAM/VTAM ACB resides above 16 megabytes.\par\plain\f2\fs20\b\par\tab\tab Rule: \plain\f2\fs20 For non-RLS, if the VSAM control blocks and buffers are to reside above 16\par\tab\tab megabytes, the RMODE31 parameter must be specified in the ACB before the\par\tab\tab OPEN is issued.\par\plain\f2\fs20\b\par\tab\tab Note: \tab\plain\f2\fs20 You can put more than one ACB/DCB in an OPEN/CLOSE macro or you\par\tab\tab\tab can include BOTH ACBs and DCBs.\par\plain\f1\fs28\b\par\page\tab Example 1: OPEN macro used to open two data sets\par\plain\f2\fs20\par\tab\tab In this example, the access method control block for one data set is generated at\par\tab\tab execution; the other is generated at assembly.\par\plain\f1\fs18\par\tab\tab\tab GENCB \tab\tab BLK=ACB, \tab An access method control block.\tab\tab  x\par\tab\tab\tab\tab\tab DDNAME=DATA\par\tab\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab\tab .\par\tab\tab\tab\tab\tab LR \tab 2,1 \tab Address of the control block.\par\tab\tab\tab\tab\tab OPEN \tab (BLOCK,,(2)) \par\tab\tab\tab\tab\tab\tab\tab A label is used for the access method \tab x\par\tab\tab\tab\tab\tab\tab\tab control block generated by ACB; \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab register notation is used for the \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab one generated by GENCB. The two commas x\par\tab\tab\tab\tab\tab\tab\tab indicate the omission of options.\par\tab\tab\tab BLOCK \tab\tab ACB \tab , \tab Another access method control block.\par\plain\f1\fs28\b\par\page\tab Example 2: OPEN macro with a parameter list above 16 megabytes\par\plain\f2\fs20\par\tab\tab In this example, a program is opened with a parameter list that may reside above\par\tab\tab 16 megabytes.\par\plain\f1\fs18\par\tab\tab OPLSTA \tab OPEN \tab MODE=31,\tab\tab\tab\tab\tab\tab  x\par\tab\tab\tab\tab\tab MF=(E,OPLSTB)\par\tab\tab\tab\tab .\par\tab\tab OPLSTB \tab OPEN \tab (ACB1,,ACB2),\tab\tab\tab\tab\tab\tab  x\par\tab\tab\tab\tab\tab MODE=31,\tab\tab\tab\tab\tab\tab  x\par\tab\tab\tab\tab\tab MF=L\par\plain\f2\fs20\par\tab\tab Since MODE=31 is coded in the list form of the OPEN macro, VSAM ACBs and\par\tab\tab the OPEN parameter list may reside above 16 megabytes.\par\plain\f2\fs20\b\par\tab\tab Rule \plain\f2\fs20 You must maintain consistency while using the MODE operand in the MF=L\par\tab\tab and MF=E versions of the OPEN macro. If MODE=31 is specified in the MF=L\par\tab\tab version, then MODE=31 must also be coded in the corresponding MF=E version of\par\tab\tab the macro. Unpredictable results might occur if this rule is not followed.\par\par\tab\tab MF=E and MF=L are not required. OPEN (ACB1),MODE=31 is also valid.\par\plain\f1\fs28\b\par\page\tab POINT\loch\f1\hich\f1\'97Position for access\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 POINT\loch\f1\hich\f1\'97Position for access----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----IBM vsam, there is one example----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example: position with POINT\plain\f1\fs20\cf3 ----\par ----The z390 equivalent of IBM Example would be unchanged----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab BLOCK \tab\tab ACB \tab DDNAME=IO \tab Default MACRF subparameters sufficient.\par\par\tab\tab POSITION \tab RPL \tab ACB=BLOCK, \tab ARG parameter and KEQ and FKS OPTCD\tab x\par\tab\tab\tab\tab\tab AREA=WORK, \tab subparameters define the POINT \tab\tab x\par\tab\tab\tab\tab\tab AREALEN=50, \tab request. \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=SRCHKEY, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ,SYN,KEQ,FKS)\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab MVC \tab SRCHKEY,\tab source Search argument for positioning\tab x\par\tab\tab\tab\tab\tab\tab\tab moved from a table or transaction record.\par\tab\tab\tab\tab POINT \tab RPL=POSITION\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab LOOP1 \tab\tab GET \tab RPL=POSITION\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\plain\f2\fs20\par\tab\tab Process the record. Decide whether to skip to another position (forward or\par\tab\tab backward).\par\plain\f1\fs18\par\tab\tab\tab\tab BE \tab LOOP \tab\tab Yes; skip.\par\tab\tab\tab\tab B \tab LOOP1 \tab\tab No; continue in consecutive sequence.\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted, or failed.\par\tab\tab\tab\tab .\par\tab\tab SRCHKEY \tab DS \tab CL5 \tab\tab Search argument for positioning.\par\tab\tab\tab\tab .\par\tab\tab WORK \tab\tab DS \tab CL50 \tab\tab VSAM puts a record here for each GET\tab  x\par\tab\tab\tab\tab\tab\tab\tab request.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f2\fs20\par\tab\tab Use the POINT macro to position a record.\par\par\tab\tab The format of the POINT macro is:\par\plain\f2\fs18\b\tab\tab\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab POINT \tab RPL=\plain\f2\fs18\i address\par\plain\f1\fs20\i\par\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies 1 to 8 characters that provide a symbolic address for the POINT\par\tab\tab\tab macro.\par\plain\f1\fs20\b\tab\tab RPL=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the request parameter list defining the request. You\par\tab\tab\tab may specify the address in register notation (using a register from 1 through\par\tab\tab\tab 12, enclosed in parentheses) or specify it with an expression that generates a\par\tab\tab\tab valid relocatable A-type address constant.\par\plain\f1\fs28\b\par\page\tab Example: position with POINT\par\plain\f2\fs20\par\tab\tab In this example, the POINT macro is used to position at a record identified by a\par\tab\tab full key (5-byte) search argument, compared equal.\par\plain\f1\fs18\par\tab\tab BLOCK \tab\tab ACB \tab DDNAME=IO \tab Default MACRF subparameters sufficient.\par\par\tab\tab POSITION \tab RPL \tab ACB=BLOCK, \tab ARG parameter and KEQ and FKS OPTCD\tab x\par\tab\tab\tab\tab\tab AREA=WORK, \tab subparameters define the POINT \tab\tab x\par\tab\tab\tab\tab\tab AREALEN=50, \tab request. \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=SRCHKEY, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ,SYN,KEQ,FKS)\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab MVC \tab SRCHKEY,\tab source Search argument for positioning\tab x\par\tab\tab\tab\tab\tab\tab\tab moved from a table or transaction record.\par\tab\tab\tab\tab POINT \tab RPL=POSITION\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab LOOP1 \tab\tab GET \tab RPL=POSITION\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\plain\f2\fs20\par\tab\tab Process the record. Decide whether to skip to another position (forward or\par\tab\tab backward).\par\plain\f1\fs18\par\tab\tab\tab\tab BE \tab LOOP \tab\tab Yes; skip.\par\tab\tab\tab\tab B \tab LOOP1 \tab\tab No; continue in consecutive sequence.\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted, or failed.\par\tab\tab\tab\tab .\par\tab\tab SRCHKEY \tab DS \tab CL5 \tab\tab Search argument for positioning.\par\tab\tab\tab\tab .\par\tab\tab WORK \tab\tab DS \tab CL50 \tab\tab VSAM puts a record here for each GET\tab  x\par\tab\tab\tab\tab\tab\tab\tab request.\par\plain\f1\fs28\b\par\page\tab PUT\loch\f1\hich\f1\'97Write a record\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 PUT\loch\f1\hich\f1\'97Write a record----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----IBM vsam, there are eleven examples---- \par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example 1: keyed-sequential insertion (KSDS, variable-length RRDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab BLOCK \tab\tab ACB \tab DDNAME=OUTPUT, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab MACRF=(KEY,SEQ,OUT)\par\tab\tab\tab\tab .\par\tab\tab LIST \tab\tab RPL \tab ACB=BLOCK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=BUILDRCD, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=250,\tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab . SYN,NUP,MVE)\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab L \tab 2,source \tab Put length of record to be inserted \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab into register.\par\tab\tab\tab\tab MODCB \par\tab\tab\tab\tab\tab RPL=LIST, \tab Indicate record length in request \tab\tab x\par\tab\tab\tab\tab\tab RECLEN=(2) \tab parameter list.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab\tab\tab PUT \tab RPL=LIST\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\tab\par\tab\tab CHECKO \tab ... \tab\tab\tab Modification failed.\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted, or failed.\par\tab\tab BUILDRCD \tab DS \tab CL250 \tab\tab Work area for building records.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----z390 equivalent of IBM \plain\f1\fs20\b\cf3 Example 1: keyed-sequential insertion (KSDS, variable-length RRDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par unchanged\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----IBM Example 2: recording RBAs when loading a KSDS----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab\tab\tab LA \tab 3,RBATBLE \tab Address of the beginning of the table.\par\tab\tab\tab\tab ...\par\tab\tab LOOP \tab\tab L \tab 2,source \tab Put length of record to be inserted \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab into register 2.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab MODCB RPL=LIST,\tab Indicate record length in request \tab\tab x\par\tab\tab\tab\tab\tab RECLEN=(2)\tab parameter list.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab\tab\tab PUT \tab RPL=LIST\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab .\par\tab\tab\tab\tab SHOWCB \par\tab\tab\tab\tab\tab AREA=(3),\tab Each SHOWCB puts a record\loch\f1\hich\f1\'92s RBA into \tab x\par\tab\tab\tab\tab\tab FIELDS=RBA, \tab the table. \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab LENGTH=4, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab RPL=LIST\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab\tab\tab MVC \tab 4(15,3), \tab\tab Put the record\'92s key field in the \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab keyfield table.\par\tab\tab\tab\tab LA \tab 3,20(3) \tab\tab Point to the next entry.\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab ERROR \tab\tab ...\tab\tab\tab Request was not accepted, or failed.\par\tab\tab CHECKO\tab  ...\tab\tab\tab Modification or display failed.\par\tab\tab\tab\tab\tab .\par\tab\tab\tab\tab DSECT\tab\tab\tab Get enough virtual storage for as many \tab x\par\tab\tab\tab\tab\tab\tab\tab table entries as there are records in \tab x\par\tab\tab\tab\tab\tab\tab\tab the data set.\par\tab\tab RBATBLE \tab DS \tab OF\par\tab\tab RBA \tab\tab DS \tab CL4\par\tab\tab KEY \tab\tab DS \tab CL15\par\tab\tab\tab\tab DS \tab CL1 \tab\tab Padding to keep each RBA entry on a \tab x\par\tab\tab\tab\tab\tab\tab\tab fullword boundary: SHOWCB\'92s \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab display area must be on a fullword \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab boundary.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----z390 equivalent of IBM Example 2: recording RBAs when loading a KSDS----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 unchanged.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example 3: loading a fixed-length RRDS (skip-sequential and direct processing)----\plain\f1\fs20\cf3\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab OUTACB \tab ACB \tab MACRF=(SKP,OUT, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab . DIR,KEY)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab GENCB \tab BLK=RPL, \tab Generate a request parameter list \tab\tab x\par\tab\tab\tab\tab\tab ACB=OUTACB, \tab at execution time. \tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=RCDNO, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SKP)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab GENFAIL\par\tab\tab\tab\tab LR \tab 5,0 \tab\tab Save length of RPL.\tab\par\tab\tab\tab\tab LR \tab 6,1 \tab\tab Save address of RPL.\par\tab\tab\tab\tab LA \tab 7,5 \tab\tab Initialize increment value.\par\tab\tab\tab\tab ST \tab 7,RCDNO \tab Initialize argument to slot 5.\tab\par\tab\tab\tab\tab LA \tab 10,20 \tab\tab Initialize loop counter.\par\tab\tab LOOP \tab\tab ... \tab\tab\tab Move new record into work.\par\tab\tab\tab\tab PUT RPL=(6) \tab\tab Store record.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab PUTERR \tab Request was not accepted, or failed.\par\tab\tab\tab\tab L \tab 1,RCDNO\par\tab\tab\tab\tab AR \tab 1,7\par\tab\tab\tab\tab ST \tab 1,RCDNO \tab Increment argument by 5.\par\tab\tab\tab\tab BCT \tab 10,LOOP\par\tab\tab\tab\tab MODCB \tab RPL=(6), \tab Switch to direct processing to store \tab x\par\tab\tab\tab\tab\tab OPTCD=(DIR,KEY) \par\tab\tab\tab\tab\tab\tab\tab records in slots 51 and 26.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab GENFAIL\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs18\tab\tab\tab\tab LA \tab 7,51\par\tab\tab\tab\tab ST \tab 7,RCDNO \tab Initialize argument to slot 51.\par\tab\tab\tab\tab\tab\tab\tab Move new record into WORK.\par\tab\tab\tab\tab PUT \tab RPL=(6) \tab Store record in slot 51.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab PUTERR \tab Request was not accepted, or failed.\par\tab\tab\tab\tab LA \tab 7,26\par\tab\tab\tab\tab ST \tab 7,RCDNO \tab Initialize argument to slot 26.\par\tab\tab\tab\tab\tab\tab\tab Move new record into WORK.\par\tab\tab\tab\tab ...\par\tab\tab\tab\tab PUT \tab RPL=(6) \tab Store record in slot 26.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab PUTERR \tab Request was not accepted, or failed.\par\tab\tab\tab\tab B \tab RETURN\par\tab\tab GENFAIL \tab ... \tab\tab\tab Generation or modification failed.\par\tab\tab PUTERR \tab ... \tab\tab\tab PUT request was not accepted, or failed.\par\tab\tab RETURN \tab ... \tab\tab\tab Terminate program.\par\tab\tab WORK \tab\tab DS \tab CL100 \tab\tab 100-byte work area that contains \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab record to be stored by PUT macro.\par\tab\tab RCDNO \tab\tab DS \tab CL4 \tab\tab 4-byte relative record number.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----z390 equivalent of IBM \plain\f1\fs20\b\cf3 Example 3: loading a fixed-length RRDS (skip-sequential and direct processing)----\plain\f1\fs20\cf3\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 unchanged\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----IBM \plain\f1\fs20\b\cf3 Example 4: keyed-sequential insertion (fixed-length RRDS)\plain\f1\fs20\cf3 ----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab OUTACB \tab ACB \tab MACRF=(KEY,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab . OUT)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab GENCB \tab BLK=RPL, \tab Generate a request parameter list. \tab\tab x\par\tab\tab\tab\tab\tab ACB=OUTACB, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=RCDNO, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab GENERR\par\tab\tab\tab\tab LR \tab 6,1 \tab\tab Save the address of the RPL.\par\tab\tab\tab\tab LA \tab 4,RRNTBLE+80 \tab Initialize address of end of table.\par\tab\tab\tab\tab LA \tab 3,RRNTBLE \tab Initialize index to relative record \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab number table.\par\tab\tab WRITERCD \tab ... \tab\tab\tab Move record into work area.\par\tab\tab\tab\tab ..\par\tab\tab\tab\tab PUT \tab RPL=(6)\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BZ \tab STRCDNO \tab Branch, if PUT is successful.\par\tab\tab\tab\tab LA \tab 10,8\par\tab\tab\tab\tab CLR \tab 10,15 \tab\tab Test for logical error.\par\tab\tab\tab\tab BNE \tab PUTERR\par\tab\tab\tab\tab TESTCB RPL=(6),FDBK=8 \par\tab\tab\tab\tab\tab\tab\tab Test for duplicate record.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab BE \tab WRITERCD \tab Branch, if duplicate record, and try \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab to store record in next slot.\par\tab\tab\tab\tab B \tab PUTERR\par\tab\tab STRDCNO \tab ...\par\tab\tab\tab\tab MVC \tab 0(4,3)RCDNO \tab Store relative record number in \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab RRNTABLE.\par\tab\tab\tab\tab LA \tab 3,4(3) \tab\tab Increment to next table entry.\par\tab\tab\tab\tab CLR \tab 3,4\par\tab\tab\tab\tab BE \tab RETURN \tab If table full, return to caller.\par\tab\tab\tab\tab B \tab WRITERCD \tab Write next record.\par\tab\tab GENERR \tab ... \tab\tab\tab Error routine for GENCB macro.\par\tab\tab TESTERR \tab ... \tab\tab\tab Error routine for TESTCB macro.\par\tab\tab PUTERR \tab ... \tab\tab\tab Error routine for PUT macro.\par\tab\tab RETURN \tab ... \tab\tab\tab Return to caller or terminate program.\par\tab\tab RCDNO \tab\tab DS \tab CL4 \tab\tab 4-byte relative record number \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab (argument) field.\par\tab\tab RRNTBLE \tab DS \tab 20F \tab\tab Relative record number table.\par\tab\tab WORK \tab\tab DS \tab CL100 \tab\tab 100-byte work area that contains \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab record to be stored by PUT macro.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\cf3 ----z390 equivalent of IBM \plain\f1\fs20\b\cf3 Example 4: keyed-sequential insertion (fixed-length RRDS)\plain\f1\fs20\cf3 ----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 unchanged\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----IBM Example 5: skip-sequential insertion (KSDS, variable-length RRDS)----\plain\f1\fs20\cf3\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab OUTPUT \tab ACB \tab MACRF=(KEY,SKP, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab . OUT)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab GENCB \tab BLK=RPL, \tab Generate 5 request parameter lists\tab\tab x\par\tab\tab\tab\tab\tab COPIES=5, \tab at execution. \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ACB=OUTPUT, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SKP, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab ASY,NUP,MVE), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab RECLEN=100\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\plain\f2\fs20\par\tab\tab Calculate length of each list and use register notation with the MODCB macro to\par\tab\tab complete each list&colon;\par\plain\f1\fs18\par\tab\tab\tab\tab MODCB \tab RPL=(2), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=(3), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab NXTRPL=(4)\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\plain\f2\fs20\tab\tab\tab\tab .\par\tab\tab Increase the value in each register and repeat the MODCB until all 5 request\par\tab\tab parameter lists have been completed. The last time, register 4 must be set to\par\tab\tab 0&colon;\par\plain\f1\fs18\tab\tab\tab\tab .\par\tab\tab LOOP\tab\tab  ... \tab\tab\tab Restore address of first list in \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab register 2. Build 5 records in WORK.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab PUT \tab RPL=(2) \tab Register 2 points to the first RPL in \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab the chain. The 5 records in WORK \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab are stored with this one PUT request.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab NOTACCEP\par\tab\tab\tab\tab .\par\tab\tab\tab\tab CHECK \tab RPL=(2)\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERRO\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab CHECKO \tab ... \tab\tab\tab Generation or modification failed.\par\tab\tab\tab\tab .\par\tab\tab NOTACCEP \tab ...\par\tab\tab\tab\tab .\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Display the feedback field in each \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab RPL to determine which one had error.\par\tab\tab\tab\tab .\par\tab\tab WORK \tab\tab DS \tab CL500 \tab\tab Contains five 100-byte work areas.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----z390 equivalent of IBM Example 5: skip-sequential insertion (KSDS, variable-length RRDS)----\plain\f1\fs20\cf3\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par z390 doesn't support skip sequential\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----IBM Example 6: keyed-direct insertion (KSDS, RRDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab OUTPUT \tab ACB \tab MACRF=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab OUT)\par\tab\tab\tab\tab .\par\tab\tab DIRECT \tab RPL \tab ACB=OUTPUT, \tab\tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab ASY,NUP,MVE), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab RECLEN=100\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab PUT \tab RPL=DIRECT\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab NOTACCEP\par\tab\tab\tab\tab ...\par\tab\tab\tab\tab CHECK \tab RPL=DIRECT\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab NOTACCEP \tab ... \tab\tab\tab Request was not accepted.\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Request failed.\par\tab\tab\tab\tab .\par\tab\tab WORK \tab\tab DS \tab CL100 \tab\tab Work area.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----z390 equivalent of IBM Example 6: keyed-direct insertion (KSDS, RRDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 unchanged\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----IBM Example 7: addressed-sequential addition (ESDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab BLOCK \tab\tab ACB \tab MACRF=(ADR,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab OUT)\par\tab\tab\tab\tab .\par\tab\tab LIST \tab\tab RPL \tab ACB=BLOCK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=NEWRCD, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(ADR,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab  SYN,MVE)\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab ... \tab\tab\tab\tab Build the record.\par\tab\tab\tab\tab L \tab 3,source \tab\tab Put length of record into register 3.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab MODCB \tab RPL=LIST, \tab\tab Indicate length of new record. \tab x\par\tab\tab\tab\tab\tab RECLEN=(3)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab\tab\tab PUT \tab RPL=LIST\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab CHECKO \tab ... \tab\tab\tab\tab Modification failed.\par\tab\tab ERROR \tab\tab ... \tab\tab\tab\tab Request was not accepted, or failed.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----z390 equivalent of IBM Example 7: addressed-sequential addition (ESDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 unchanged\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----IBM Example 8: keyed-sequential update (KSDS, RRDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab UPDATA \tab ACB \tab MACRF=(KEY,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab OUT)\par\tab\tab\tab\tab .\par\tab\tab LIST \tab\tab RPL \tab ACB=UPDATA, \tab\tab UPD indicates the record may be    x\par\tab\tab\tab\tab\tab\tab\tab\tab stored \par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab back (or deleted). \tab\tab x\par\tab\tab\tab\tab\tab AREALEN=50, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab . SYN,UPD,MVE)\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab GET \tab RPL=LIST\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\plain\f2\fs20\par\tab\tab Decide whether to update the record.\par\plain\f1\fs18\par\tab\tab\tab\tab BE \tab LOOP \tab\tab\tab Do not update it; retrieve another.\par\plain\f2\fs20\par\tab\tab Update the record.\par\plain\f1\fs18\par\tab\tab\tab\tab PUT \tab RPL=LIST \tab\tab Store the record back.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\tab\par\tab\tab\tab\tab .\par\tab\tab ERROR \tab\tab ... \tab\tab\tab\tab Request was not accepted, or failed.\par\tab\tab\tab\tab .\par\tab\tab WORK \tab\tab DS \tab CL50 \tab\tab\tab VSAM puts the retrieved record here.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----z390 equivalent of IBM Example 8: keyed-sequential update (KSDS, RRDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 unchanged\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----IBM Example 9: keyed-direct update (KSDS, variable-length RRDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab OUT)\par\tab\tab\tab\tab .\par\tab\tab UPDTE \tab\tab RPL \tab ACB=INPUT, \tab\tab UPD indicates the record may be \tab x\par\tab\tab\tab\tab\tab AREA=IN, \tab\tab stored back (or deleted). \tab\tab x\par\tab\tab\tab\tab\tab AREALEN=120, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab SYN,UPD,KEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab FKS,MVE), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=KEYAREA, \tab\tab\tab\tab\tab x\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs18\tab\tab\tab\tab\tab KEYLEN=5\par\tab\tab\tab\tab .\par\tab\tab\tab\tab ..\par\plain\f2\fs20\tab\tab Process input and get search argument into KEYAREA; proceed to retrieve a\par\tab\tab record&colon;\par\plain\f1\fs18\par\tab\tab LOOP \tab\tab GET \tab RPL=UPDTE\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab .\par\tab\tab\tab\tab SHOWCB \par\tab\tab\tab\tab\tab RPL=UPDTE, \tab\tab Display the length of the record. \tab x\par\tab\tab\tab\tab\tab AREA=RLNGTH, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab FIELDS=RECLEN, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab LENGTH=4\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\plain\f2\fs20\par\tab\tab Update the record. Does the update change the record's length?\par\plain\f1\fs18\par\tab\tab\tab\tab BE \tab STORE \tab\tab\tab No; length not changed.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab L \tab 5,length \tab\tab\tab Yes; load new length into register 5.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab MODCB \tab RPL=UPDTE, \tab\tab Modify length indication in the request x\par\tab\tab\tab\tab\tab RECLEN=(5) \tab\tab parameter list.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab STORE \tab\tab PUT \tab RPL=UPDTE\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab ERROR\tab\tab  ... \tab\tab\tab\tab Request was not accepted, or failed.\par\tab\tab\tab\tab .\par\tab\tab CHECKO \tab ... \tab\tab\tab\tab Display or modification failed.\par\tab\tab\tab\tab .\par\tab\tab IN \tab\tab DS \tab CL120 \tab\tab\tab Work area for retrieving, updating, \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab and storing a record.\par\tab\tab KEYAREA \tab DS \tab CL5 \tab\tab\tab Search argument for retrieving a \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab record.\par\tab\tab RLNGTH \tab DS \tab F \tab\tab\tab Area for displaying the length of a \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab retrieved record.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----z390 equivalent of IBM Example 9: keyed-direct update (KSDS, variable-length RRDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 unchanged\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----IBM Example 10: addressed-sequential update (ESDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab ENTRY \tab\tab ACB \tab MACRF=(ADR,SEQ,OUT)\par\tab\tab ADRUPD \tab RPL \tab ACB=ENTRY,\tab\tab  UPD indicates update (or deletion)x\par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=200, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(ADR,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab SYN,UPD,MVE)\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab GET \tab RPL=ADRUPD\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab .\par\tab\tab\tab\tab SHOWCB \par\tab\tab\tab\tab\tab RPL=ADRUPD, \tab\tab Determine record length. \tab\tab x\par\tab\tab\tab\tab\tab AREA=RECLEN, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab FIELDS=RECLEN, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab LENGTH=4\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab\tab\tab .\par\tab\tab\tab\tab PUT \tab RPL=ADRUPD\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab\tab\tab .\par\tab\tab ERROR \tab\tab ... \tab\tab\tab\tab Request was not accepted, or failed.\par\tab\tab CHECKO \tab ... \tab\tab\tab\tab Display failed.\par\tab\tab\tab\tab .\par\tab\tab WORK \tab\tab DS \tab CL200 \tab\tab\tab Record-processing work area.\par\tab\tab RLNGTH \tab DS \tab F \tab\tab\tab Display area for length of records.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----z390 equivalent of IBM Example 10: addressed-sequential update (ESDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 unchanged\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----IBM Example 11: marking records inactive (ESDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab ENTRYSEQ \tab ACB \tab MACRF=(ADR,DIR,\tab\tab\tab\tab\tab  x\par\tab\tab\tab\tab\tab OUT)\par\tab\tab LIST \tab\tab RPL \tab ACB=ENTRYSEQ, \tab UPD indicates update; storing the \tab x\par\tab\tab\tab\tab\tab AREA=RECORD, \tab record back marked inactive.\tab x\par\tab\tab\tab\tab\tab AREALEN=100,\tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(ADR,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab SYN,UPD,MVE), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=RBAAREA\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab GET \tab RPL=LIST\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\plain\f2\fs20\tab\tab\par\tab\tab Decide whether you still want the data in the record.\par\plain\f1\fs18\par\tab\tab\tab\tab BE \tab LOOP \tab\tab\tab Yes; retrieve the next record.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab MVI \tab RECORD,X\loch\f1\hich\f1\'92FF\'92 \tab\tab No; flag the record inactive.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab PUT \tab RPL=LIST \tab\tab For an entry-sequenced data \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab set, storing the record with \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab an inactive indicator is \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab\tab equivalent to deletion.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab\tab\tab .\par\tab\tab ERROR .\tab .. \tab\tab\tab\tab Request was not accepted, or failed.\par\tab\tab RECORD \tab DS \tab CL100 \tab\tab\tab Work area for marking records.\par\tab\tab RBAAREA \tab DS \tab F \tab\tab\tab Search argument for retrieving record.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----z390 equivalent of IBM Example 11: marking records inactive (ESDS)----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18 unchanged\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f2\fs20\par\tab\tab Use the PUT macro to write (load) records to an empty data set, and insert or\par\tab\tab update records into an existing data set.\par\par\tab\tab To do a PUT UPD you must first do a GET UPD for the record.\par\par\tab\tab The format of the PUT macro is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab PUT \tab RPL=\plain\f2\fs18\i address\par\plain\f1\fs20\i\par\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies 1 to 8 characters that provide a symbolic address for the PUT macro.\par\plain\f1\fs20\b\par\tab\tab RPL=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the request parameter list defining the request. You\par\tab\tab\tab may specify the address in register notation (using a register from 1 through\par\tab\tab\tab 12, enclosed in parentheses) or specify it with an expression that generates a\par\tab\tab\tab valid relocatable A-type address constant.\par\plain\f2\fs20\b\par\tab\tab Rule: \plain\f2\fs20 If the PUT macro is used to load records into an empty data set, the STRNO\par\tab\tab value in the access method control block must be 1, and RPL OPTCD=DIR must\par\tab\tab not be specified. However, for an empty RRDS, DIR is allowed.\par\plain\f1\fs28\b\par\page\tab Example 1: keyed-sequential insertion (KSDS, variable-length RRDS)\par\plain\f2\fs20\par\tab\tab In this example, a PUT macro is used to perform keyed-sequential insertion in a\par\tab\tab key-sequenced data set or variable-length RRDS. Variable-length records with a key\par\tab\tab length of 15 bytes are moved from a work area. Some records are inserted between\par\tab\tab existing records; other records are added at the end of the data set.\par\plain\f1\fs18\par\tab\tab BLOCK \tab\tab ACB \tab DDNAME=OUTPUT, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab MACRF=(KEY,SEQ,OUT)\par\tab\tab\tab\tab .\par\tab\tab LIST \tab\tab RPL \tab ACB=BLOCK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=BUILDRCD, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=250,\tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab . SYN,NUP,MVE)\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab L \tab 2,source \tab Put length of record to be inserted \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab into register.\par\tab\tab\tab\tab MODCB \par\tab\tab\tab\tab\tab RPL=LIST, \tab Indicate record length in request \tab\tab x\par\tab\tab\tab\tab\tab RECLEN=(2) \tab parameter list.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab\tab\tab PUT \tab RPL=LIST\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\tab\par\tab\tab CHECKO \tab ... \tab\tab\tab Modification failed.\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Request was not accepted, or failed.\par\tab\tab BUILDRCD \tab DS \tab CL250 \tab\tab Work area for building records.\par\plain\f2\fs20\par\tab\tab The request parameter list, LIST, is associated with the access method control\par\tab\tab block, BLOCK. The length of each record to be inserted is put into register 2,\par\tab\tab which is subsequently used by MODCB to change the record length in the request\par\tab\tab parameter list. The record length is, therefore, correctly indicated in the request\par\tab\tab parameter list before the PUT macro is issued. The execution of the PUT macro\par\tab\tab causes VSAM to skip ahead (never back) to the next record.\par\plain\f1\fs28\b\par\tab Example 2: recording RBAs when loading a KSDS\par\plain\f2\fs20\par\tab\tab In this example, a PUT macro is used to record the RBAs of records as they are\par\tab\tab loaded into a key-sequenced data set. The RBAs are recorded in a table with\par\tab\tab 20-byte entries (4 bytes for RBA, 15 bytes for associated key, and 1 byte of padding\par\tab\tab so the next entry begins on a fullword boundary).\par\plain\f1\fs18\par\tab\tab\tab\tab LA \tab 3,RBATBLE \tab Address of the beginning of the table.\par\tab\tab\tab\tab ...\par\tab\tab LOOP \tab\tab L \tab 2,source \tab Put length of record to be inserted \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab into register 2.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab MODCB RPL=LIST,\tab Indicate record length in request \tab\tab x\par\tab\tab\tab\tab\tab RECLEN=(2)\tab parameter list.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab\tab\tab PUT \tab RPL=LIST\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab .\par\tab\tab\tab\tab SHOWCB \par\tab\tab\tab\tab\tab AREA=(3),\tab Each SHOWCB puts a record\loch\f1\hich\f1\'92s RBA into \tab x\par\tab\tab\tab\tab\tab FIELDS=RBA, \tab the table. \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab LENGTH=4, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab RPL=LIST\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab\tab\tab MVC \tab 4(15,3), \tab\tab Put the record\'92s key field in the \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab keyfield table.\par\tab\tab\tab\tab LA \tab 3,20(3) \tab\tab Point to the next entry.\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab ERROR \tab\tab ...\tab\tab\tab Request was not accepted, or failed.\par\tab\tab CHECKO\tab  ...\tab\tab\tab Modification or display failed.\par\tab\tab\tab\tab\tab .\par\tab\tab\tab\tab DSECT\tab\tab\tab Get enough virtual storage for as many \tab x\par\tab\tab\tab\tab\tab\tab\tab table entries as there are records in \tab x\par\tab\tab\tab\tab\tab\tab\tab the data set.\par\tab\tab RBATBLE \tab DS \tab OF\par\tab\tab RBA \tab\tab DS \tab CL4\par\tab\tab KEY \tab\tab DS \tab CL15\par\tab\tab\tab\tab DS \tab CL1 \tab\tab Padding to keep each RBA entry on a \tab x\par\tab\tab\tab\tab\tab\tab\tab fullword boundary: SHOWCB\'92s \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab display area must be on a fullword \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab boundary.\par\plain\f2\fs20\par\tab\tab The need to process a key-sequenced data set by address is unusual, but by\par\tab\tab recording the RBA of each record in a key-sequenced data set, you have search\par\tab\tab arguments for possible processing of the data set by addressed-direct retrieval and\par\tab\tab by addressed-sequential retrieval using the POINT macro. (You do not need to\par\tab\tab know RBAs to process a key-sequenced data set by simple addressed-sequential\par\tab\tab retrieval, since you go from the beginning without any skips.)\par\par\tab\tab You can display the RBA of a record after you issue a GET or a POINT, as well as\par\tab\tab after you issue a PUT.\par\plain\f1\fs28\b\par\page\tab Example 3: loading a fixed-length RRDS (skip-sequential and direct processing)\par\plain\f2\fs20\par\tab\tab In this example, a PUT macro is used to store twenty 100-byte records in slots 5,\par\tab\tab 10, 15,...,100 of the data set. MODCB is used to switch to direct processing, and\par\tab\tab PUT is used to store records in slots 26 and 51 of the data set.\par\plain\f1\fs18\par\tab\tab OUTACB \tab ACB \tab MACRF=(SKP,OUT, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab . DIR,KEY)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab GENCB \tab BLK=RPL, \tab Generate a request parameter list \tab\tab x\par\tab\tab\tab\tab\tab ACB=OUTACB, \tab at execution time. \tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=RCDNO, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SKP)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab GENFAIL\par\tab\tab\tab\tab LR \tab 5,0 \tab\tab Save length of RPL.\tab\par\tab\tab\tab\tab LR \tab 6,1 \tab\tab Save address of RPL.\par\tab\tab\tab\tab LA \tab 7,5 \tab\tab Initialize increment value.\par\tab\tab\tab\tab ST \tab 7,RCDNO \tab Initialize argument to slot 5.\tab\par\tab\tab\tab\tab LA \tab 10,20 \tab\tab Initialize loop counter.\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs18\tab\tab LOOP \tab\tab ... \tab\tab\tab Move new record into work.\par\tab\tab\tab\tab PUT RPL=(6) \tab\tab Store record.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab PUTERR \tab Request was not accepted, or failed.\par\tab\tab\tab\tab L \tab 1,RCDNO\par\tab\tab\tab\tab AR \tab 1,7\par\tab\tab\tab\tab ST \tab 1,RCDNO \tab Increment argument by 5.\par\tab\tab\tab\tab BCT \tab 10,LOOP\par\tab\tab\tab\tab MODCB \tab RPL=(6), \tab Switch to direct processing to store\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(DIR,KEY) \par\tab\tab\tab\tab\tab\tab\tab records in slots 51 and 26.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab GENFAIL\par\tab\tab\tab\tab LA \tab 7,51\par\tab\tab\tab\tab ST \tab 7,RCDNO \tab Initialize argument to slot 51.\par\tab\tab\tab\tab\tab\tab\tab Move new record into WORK.\par\tab\tab\tab\tab PUT \tab RPL=(6) \tab Store record in slot 51.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab PUTERR \tab Request was not accepted, or failed.\par\tab\tab\tab\tab LA \tab 7,26\par\tab\tab\tab\tab ST \tab 7,RCDNO \tab Initialize argument to slot 26.\par\tab\tab\tab\tab\tab\tab\tab Move new record into WORK.\par\tab\tab\tab\tab ...\par\tab\tab\tab\tab PUT \tab RPL=(6) \tab Store record in slot 26.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab PUTERR \tab Request was not accepted, or failed.\par\tab\tab\tab\tab B \tab RETURN\par\tab\tab GENFAIL \tab ... \tab\tab\tab Generation or modification failed.\par\tab\tab PUTERR \tab ... \tab\tab\tab PUT request was not accepted, or failed.\par\tab\tab RETURN \tab ... \tab\tab\tab Terminate program.\par\tab\tab WORK \tab\tab DS \tab CL100 \tab\tab 100-byte work area that contains \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab record to be stored by PUT macro.\par\tab\tab RCDNO \tab\tab DS \tab CL4 \tab\tab 4-byte relative record number.\par\plain\f2\fs20\par\tab\tab Both skip-sequential and direct processing can be used to allocate a fixed-length\par\tab\tab RRDS. The ACB is opened for output. The 4-byte search argument (RCDNO)\par\tab\tab indicates the slot number where the record is to be stored.\par\plain\f1\fs28\b\par\page\tab Example 4: keyed-sequential insertion (fixed-length RRDS)\par\plain\f2\fs20\par\tab\tab In this example, a PUT macro is used to insert twenty 100-byte records into empty\par\tab\tab slots of a previously loaded fixed-length RRDS. If the slot is empty when the PUT\par\tab\tab is issued, the record is stored and the slot number (returned in the argument field)\par\tab\tab is stored in a table. If the slot is not empty when the PUT is issued, a duplicate\par\tab\tab record error indication is returned. When a duplicate record is indicated, the PUT\par\tab\tab is reissued until the record is successfully stored in an empty slot in the data set.\par\plain\f1\fs18\par\tab\tab OUTACB \tab ACB \tab MACRF=(KEY,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab . OUT)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab GENCB \tab BLK=RPL, \tab Generate a request parameter list. \tab\tab x\par\tab\tab\tab\tab\tab ACB=OUTACB, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=RCDNO, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab GENERR\par\tab\tab\tab\tab LR \tab 6,1 \tab\tab Save the address of the RPL.\par\tab\tab\tab\tab LA \tab 4,RRNTBLE+80 \tab Initialize address of end of table.\par\tab\tab\tab\tab LA \tab 3,RRNTBLE \tab Initialize index to relative record \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab number table.\par\tab\tab WRITERCD \tab ... \tab\tab\tab Move record into work area.\par\tab\tab\tab\tab ..\par\tab\tab\tab\tab PUT \tab RPL=(6)\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BZ \tab STRCDNO \tab Branch, if PUT is successful.\par\tab\tab\tab\tab LA \tab 10,8\par\tab\tab\tab\tab CLR \tab 10,15 \tab\tab Test for logical error.\par\tab\tab\tab\tab BNE \tab PUTERR\par\tab\tab\tab\tab TESTCB RPL=(6),FDBK=8, \par\tab\tab\tab\tab\tab\tab\tab Test for duplicate record. \tab\tab\tab x\par\tab\tab\tab\tab\tab ERET=TESTERR\par\tab\tab\tab\tab .\par\tab\tab\tab\tab BE \tab WRITERCD \tab Branch, if duplicate record, and try \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab to store record in next slot.\par\tab\tab\tab\tab B \tab PUTERR\par\tab\tab STRDCNO \tab ...\par\tab\tab\tab\tab MVC \tab 0(4,3)RCDNO \tab Store relative record number in \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab RRNTABLE.\par\tab\tab\tab\tab LA \tab 3,4(3) \tab\tab Increment to next table entry.\par\tab\tab\tab\tab CLR \tab 3,4\par\tab\tab\tab\tab BE \tab RETURN \tab If table full, return to caller.\par\tab\tab\tab\tab B \tab WRITERCD \tab Write next record.\par\tab\tab GENERR \tab ... \tab\tab\tab Error routine for GENCB macro.\par\tab\tab TESTERR \tab ... \tab\tab\tab Error routine for TESTCB macro.\par\tab\tab PUTERR \tab ... \tab\tab\tab Error routine for PUT macro.\par\tab\tab RETURN \tab ... \tab\tab\tab Return to caller or terminate program.\par\tab\tab RCDNO \tab\tab DS \tab CL4 \tab\tab 4-byte relative record number \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab (argument) field.\par\tab\tab RRNTBLE \tab DS \tab 20F \tab\tab Relative record number table.\par\tab\tab WORK \tab\tab DS \tab CL100 \tab\tab 100-byte work area that contains \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab record to be stored by PUT macro.\par\plain\f2\fs20\par\tab\tab Each record is stored in the next available slot in the data set. When a record is\par\tab\tab successfully stored, its relative record number is recorded in a table.\par\plain\f1\fs28\b\par\page\tab Example 5: skip-sequential insertion (KSDS, variable-length RRDS)\par\plain\f2\fs20\par\tab\tab In this example, one PUT macro is used to insert multiple fixed-length, 100-byte\par\tab\tab records. Records are to be moved asynchronously from a work area.\par\plain\f1\fs18\par\tab\tab OUTPUT \tab ACB \tab MACRF=(KEY,SKP, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab . OUT)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab GENCB \tab BLK=RPL, \tab Generate 5 request parameter lists\tab\tab  x\par\tab\tab\tab\tab\tab COPIES=5, \tab at execution. \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ACB=OUTPUT, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SKP, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab ASY,NUP,MVE), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab RECLEN=100\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\plain\f2\fs20\par\tab\tab Calculate length of each list and use register notation with the MODCB macro to\par\tab\tab complete each list&colon;\par\plain\f1\fs18\par\tab\tab\tab\tab MODCB \tab RPL=(2), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=(3), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab NXTRPL=(4)\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\plain\f2\fs20\tab\tab\tab\tab .\par\tab\tab Increase the value in each register and repeat the MODCB until all 5 request\par\tab\tab parameter lists have been completed. The last time, register 4 must be set to\par\tab\tab 0&colon;\par\plain\f1\fs18\tab\tab\tab\tab .\par\tab\tab LOOP\tab\tab  ... \tab\tab\tab Restore address of first list in \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab register 2. Build 5 records in WORK.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab PUT \tab RPL=(2) \tab Register 2 points to the first RPL in \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab the chain. The 5 records in WORK \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab are stored with this one PUT request.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab NOTACCEP\par\tab\tab\tab\tab .\par\tab\tab\tab\tab CHECK \tab RPL=(2)\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERRO\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab CHECKO \tab ... \tab\tab\tab Generation or modification failed.\par\tab\tab\tab\tab .\par\tab\tab NOTACCEP \tab ...\par\tab\tab\tab\tab .\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Display the feedback field in each \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab RPL to determine which one had error.\par\tab\tab\tab\tab .\par\tab\tab WORK \tab\tab DS \tab CL500 \tab\tab Contains five 100-byte work areas.\par\plain\f2\fs20\par\tab\tab You give no search argument for storage: VSAM knows the position of the key\par\tab\tab field in each record and extracts the key from it. Skip-sequential insertion differs\par\tab\tab from keyed-direct insertion in the sequence in which records may be inserted\par\tab\tab (ascending non-consecutive sequence versus random sequence) and in\par\tab\tab performance.\par\par\tab\tab With skip-sequential insertion, if you insert two or more records into a control\par\tab\tab interval, VSAM does not write the contents of the buffer to direct-access storage\par\tab\tab until you have inserted all the records. With direct insertion, VSAM writes the\par\tab\tab contents of the buffer after you have inserted each record.\par\plain\f1\fs28\b\par\page\tab Example 6: keyed-direct insertion (KSDS, RRDS)\par\plain\f2\fs20\par\tab\tab In this example, a PUT macro is used to move fixed-length, 100-byte records from\par\tab\tab a work area.\par\plain\f1\fs18\par\tab\tab OUTPUT \tab ACB \tab MACRF=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab OUT)\par\tab\tab\tab\tab .\par\tab\tab DIRECT \tab RPL \tab ACB=OUTPUT, \tab\tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab ASY,NUP,MVE), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab RECLEN=100\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab PUT \tab RPL=DIRECT\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab NOTACCEP\par\tab\tab\tab\tab ...\par\tab\tab\tab\tab CHECK \tab RPL=DIRECT\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab NOTACCEP \tab ... \tab\tab\tab Request was not accepted.\par\tab\tab ERROR \tab\tab ... \tab\tab\tab Request failed.\par\tab\tab\tab\tab .\par\tab\tab WORK \tab\tab DS \tab CL100 \tab\tab Work area.\par\plain\f2\fs20\par\tab\tab The macros are as follows:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 ACB specifies the data set, OUTPUT, into which records are to be inserted, is\par\tab\tab\tab opened for keyed-direct, output processing.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 RPL specifies the record to be inserted into the OUTPUT data set resides in a\par\tab\tab\tab 100-byte area, WORK.\par\par\tab\tab VSAM extracts the relative record number or key from the key field of each record\par\tab\tab found at WORK. Using keyed-direct access is similar to using skip-sequential\par\tab\tab access.\par\plain\f1\fs22\b\par\plain\f1\fs28\b\tab Example 7: addressed-sequential addition (ESDS)\par\plain\f2\fs20\par\tab\tab In this example, a PUT macro is used to add variable-length records to a data set.\par\tab\tab The data set is assumed to be an entry-sequenced data set, because records cannot\par\tab\tab be inserted into or added to a KSDS with addressed access.\par\plain\f1\fs18\par\tab\tab BLOCK \tab\tab ACB \tab MACRF=(ADR,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab OUT)\par\tab\tab\tab\tab .\par\tab\tab LIST \tab\tab RPL \tab ACB=BLOCK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=NEWRCD, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=100, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(ADR,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab  SYN,MVE)\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab ... \tab\tab\tab\tab Build the record.\par\tab\tab\tab\tab L \tab 3,source \tab\tab Put length of record into register 3.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab MODCB \tab RPL=LIST, \tab\tab Indicate length of new record. \tab x\par\tab\tab\tab\tab\tab RECLEN=(3)\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab\tab\tab PUT \tab RPL=LIST\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab CHECKO \tab ... \tab\tab\tab\tab Modification failed.\par\tab\tab ERROR \tab\tab ... \tab\tab\tab\tab Request was not accepted, or failed.\par .\par\tab\tab NEWRCD DS CL100 Build record in this work area.\par\plain\f2\fs20\tab\tab Each record is stored in the next position after the last record in the data set. You\par\tab\tab do not have to specify an RBA or do any explicit positioning (with the POINT\par\tab\tab macro). Addressed addition of records is identical to loading a data set: when\par\par\tab\tab additional space is required, VSAM extends the data set.\par\tab\tab The only difference between addressed-sequential and addressed-direct addition is\par\tab\tab when the buffers are written to external storage. The buffer is written to external\par\tab\tab storage only when it is full for sequential addition; it is written after each record\par\tab\tab for direct addition. You cannot use direct storage to load records into a data set for\par\tab\tab the first time; you must use sequential storage.\par\plain\f1\fs22\b\par\plain\f1\fs28\b\page\tab Example 8: keyed-sequential update (KSDS, RRDS)\par\plain\f2\fs20\par\tab\tab In this example, GET and PUT macros are used to retrieve and update\par\tab\tab fixed-length, 50-byte records. Records are updated synchronously in a work area.\par\tab\tab This example requires the use of a work area because you cannot update a record\par\tab\tab in the I/O buffer.\par\plain\f1\fs18\par\tab\tab UPDATA \tab ACB \tab MACRF=(KEY,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab OUT)\par\tab\tab\tab\tab .\par\tab\tab LIST \tab\tab RPL \tab ACB=UPDATA, \tab\tab UPD indicates the record may be    x\par\tab\tab\tab\tab\tab\tab\tab\tab stored \par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab back (or deleted). \tab\tab x\par\tab\tab\tab\tab\tab AREALEN=50, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab . SYN,UPD,MVE)\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab GET \tab RPL=LIST\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\plain\f2\fs20\par\tab\tab Decide whether to update the record.\par\plain\f1\fs18\par\tab\tab\tab\tab BE \tab LOOP \tab\tab\tab Do not update it; retrieve another.\par\plain\f2\fs20\par\tab\tab Update the record.\par\plain\f1\fs18\par\tab\tab\tab\tab PUT \tab RPL=LIST \tab\tab Store the record back.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\tab\par\tab\tab\tab\tab .\par\tab\tab ERROR \tab\tab ... \tab\tab\tab\tab Request was not accepted, or failed.\par\tab\tab\tab\tab .\par\tab\tab WORK \tab\tab DS \tab CL50 \tab\tab\tab VSAM puts the retrieved record here.\par\plain\f2\fs20\par\tab\tab A GET for update (OPTCD=UPD) must precede a PUT for update. Besides\par\tab\tab retrieving the record to be updated, GET positions VSAM at the record retrieved,\par\tab\tab in anticipation of the succeeding update (or deletion). It is not necessary for you to\par\tab\tab store back (or delete) the record you retrieved for update. VSAM's position at the\par\tab\tab record previously retrieved allows you to issue another GET to retrieve the\par\tab\tab following record. You cannot, however, store back the previous record: the position\par\tab\tab for update has been forgotten because of the following GET.\par\plain\f1\fs28\b\par\page\tab Example 9: keyed-direct update (KSDS, variable-length RRDS)\par\plain\f2\fs20\par\tab\tab In this example, GET and PUT macros are used to retrieve and update records. The\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs20\tab\tab MODCB macro is used to modify record length (RECLEN) in the request\par\tab\tab parameter list when an update causes the record length to change. The maximum\par\tab\tab record length is 120 bytes. The search argument is a full key (5 bytes), compared\par\tab\tab equal.\par\plain\f1\fs18\par\tab\tab INPUT \tab\tab ACB \tab MACRF=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab OUT)\par\tab\tab\tab\tab .\par\tab\tab UPDTE \tab\tab RPL \tab ACB=INPUT, \tab\tab UPD indicates the record may be \tab x\par\tab\tab\tab\tab\tab AREA=IN, \tab\tab stored back (or deleted). \tab\tab x\par\tab\tab\tab\tab\tab AREALEN=120, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(KEY,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab SYN,UPD,KEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab FKS,MVE), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=KEYAREA, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab KEYLEN=5\par\tab\tab\tab\tab .\par\tab\tab\tab\tab ..\par\plain\f2\fs20\tab\tab Process input and get search argument into KEYAREA; proceed to retrieve a\par\tab\tab record&colon;\par\plain\f1\fs18\par\tab\tab LOOP \tab\tab GET \tab RPL=UPDTE\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab .\par\tab\tab\tab\tab SHOWCB \par\tab\tab\tab\tab\tab RPL=UPDTE, \tab\tab Display the length of the record. \tab x\par\tab\tab\tab\tab\tab AREA=RLNGTH, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab FIELDS=RECLEN, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab LENGTH=4\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\plain\f2\fs20\par\tab\tab Update the record. Does the update change the record's length?\par\plain\f1\fs18\par\tab\tab\tab\tab BE \tab STORE \tab\tab\tab No; length not changed.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab L \tab 5,length \tab\tab\tab Yes; load new length into register 5.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab MODCB \tab RPL=UPDTE, \tab\tab Modify length indication in the request x\par\tab\tab\tab\tab\tab RECLEN=(5) \tab\tab parameter list.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab STORE \tab\tab PUT \tab RPL=UPDTE\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab ERROR\tab\tab  ... \tab\tab\tab\tab Request was not accepted, or failed.\par\tab\tab\tab\tab .\par\tab\tab CHECKO \tab ... \tab\tab\tab\tab Display or modification failed.\par\tab\tab\tab\tab .\par\tab\tab IN \tab\tab DS \tab CL120 \tab\tab\tab Work area for retrieving, updating, \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab and storing a record.\par\tab\tab KEYAREA \tab DS \tab CL5 \tab\tab\tab Search argument for retrieving a \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab record.\par\tab\tab RLNGTH \tab DS \tab F \tab\tab\tab Area for displaying the length of a \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab retrieved record.\par\plain\f2\fs20\par\tab\tab You cannot update records in the I/O buffer. A direct GET for update positions\par\tab\tab VSAM at the record retrieved, in anticipation of storing back (or deleting) the\par\tab\tab record. This positioning also allows you to switch to sequential access to retrieve\par\tab\tab the next record. VSAM releases exclusive control of a control interval when a PUT\par\tab\tab DIR is issued following a GET UPD request.\par\par\tab\tab You do not have to store back a record that you retrieve for update, but, if you do\par\tab\tab not store it back before another retrieval, the current updates are lost.\par\plain\f1\fs28\b\par\page\tab Example 10: addressed-sequential update (ESDS)\par\plain\f2\fs20\par\tab\tab In this example, GET and PUT macros are used to retrieve and update records in\par\tab\tab an entry-sequenced data set. The records are variable in length, a maximum of 200\par\tab\tab bytes. The lengths of the records are not changed by update (the length of a record\par\tab\tab can never be changed by addressed access).\par\plain\f1\fs18\par\tab\tab ENTRY \tab\tab ACB \tab MACRF=(ADR,SEQ,OUT)\par\tab\tab ADRUPD \tab RPL \tab ACB=ENTRY,\tab\tab  UPD indicates update (or deletion)x\par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=200, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(ADR,SEQ, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab SYN,UPD,MVE)\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab GET \tab RPL=ADRUPD\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab .\par\tab\tab\tab\tab SHOWCB \par\tab\tab\tab\tab\tab RPL=ADRUPD, \tab\tab Determine record length. \tab\tab x\par\tab\tab\tab\tab\tab AREA=RECLEN, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab FIELDS=RECLEN, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab LENGTH=4\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab\tab\tab .\par\tab\tab\tab\tab PUT \tab RPL=ADRUPD\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab\tab\tab .\par\tab\tab ERROR \tab\tab ... \tab\tab\tab\tab Request was not accepted, or failed.\par\tab\tab CHECKO \tab ... \tab\tab\tab\tab Display failed.\par\tab\tab\tab\tab .\par\tab\tab WORK \tab\tab DS \tab CL200 \tab\tab\tab Record-processing work area.\par\tab\tab RLNGTH \tab DS \tab F \tab\tab\tab Display area for length of records.\par\plain\f2\fs20\par\tab\tab If you have inactive records in your entry-sequenced data set, you may reuse the\par\tab\tab space they occupy by retrieving the records for update and restoring a new record\par\tab\tab in their place.\par\par\tab\tab With a key-sequenced data set, it is not possible to change the length of records by\par\tab\tab addressed update because the index is not used and VSAM could not split a\par\tab\tab control interval if required because of changing record length.\par\par\tab\tab Addressed-direct update varies from sequential update in the specification of an\par\tab\tab RBA for a search argument.\par\plain\f1\fs28\b\par\page\tab Example 11: marking records inactive (ESDS)\par\plain\f2\fs20\par\tab\tab In this example, GET and PUT macros retrieve a record from an entry-sequenced\par\tab\tab data set and mark it as inactive by putting a hexadecimal X'FF' in the first byte of\par\tab\tab a record. The inactive record can only be sequentially retrieved for update.\par\plain\f1\fs18\par\tab\tab ENTRYSEQ \tab ACB \tab MACRF=(ADR,DIR,\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OUT)\par\tab\tab LIST \tab\tab RPL \tab ACB=ENTRYSEQ, \tab UPD indicates update; storing the \tab x\par\tab\tab\tab\tab\tab AREA=RECORD, \tab record back marked inactive.\tab x\par\tab\tab\tab\tab\tab AREALEN=100,\tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(ADR,DIR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab SYN,UPD,MVE), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=RBAAREA\par\tab\tab\tab\tab .\par\tab\tab LOOP \tab\tab GET \tab RPL=LIST\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\plain\f2\fs20\tab\tab\par\tab\tab Decide whether you still want the data in the record.\par\plain\f1\fs18\par\tab\tab\tab\tab BE \tab LOOP \tab\tab\tab Yes; retrieve the next record.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab MVI \tab RECORD,X\loch\f1\hich\f1\'92FF\'92 \tab\tab No; flag the record inactive.\par\tab\tab\tab\tab .\par\tab\tab\tab\tab PUT \tab RPL=LIST \tab\tab For an entry-sequenced data \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab set, storing the record with \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab an inactive indicator is \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab\tab equivalent to deletion.\par\tab\tab\tab\tab LTR \tab 15,15\par\tab\tab\tab\tab BNZ \tab ERROR\par\tab\tab\tab\tab B \tab LOOP\par\tab\tab\tab\tab .\par\tab\tab ERROR .\tab .. \tab\tab\tab\tab Request was not accepted, or failed.\par\tab\tab RECORD \tab DS \tab CL100 \tab\tab\tab Work area for marking records.\par\tab\tab RBAAREA \tab DS \tab F \tab\tab\tab Search argument for retrieving record.\par\plain\f2\fs20\par\tab\tab You cannot delete an entry-sequenced data set record. You can mark an ESDS\par\tab\tab record inactive by placing a unique flag in a conventional part of the record so that\par\tab\tab when the record is subsequently retrieved, the flag causes the record to be\par\tab\tab bypassed. To reuse the space occupied by an inactive ESDS record, retrieve it for\par\tab\tab update and store a new record in its place.\par\plain\f1\fs28\b\par\page\tab RPL\loch\f1\hich\f1\'97Generate a request parameter list at assembly time\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 RPL\loch\f1\hich\f1\'97Generate a request parameter list at assembly time----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam supports ACB, AM, AREA, AREALEN, ARG, ECB, KEYLEN, OPTCD, RECLEN----\par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 RPL\loch\f1\hich\f1\'97Generate a request parameter list at assembly time----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam supports OPTCD sub-parameters----\par ----SEQ, KGE, GEN, XRBA, KEY, ADR, BWD, LRD, UPD----\par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 RPL\loch\f1\hich\f1\'97Generate a request parameter list at assembly time----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----IBM vsam, there is one example----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----IBM Example: RPL macro----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab ACCESS \tab ACB \tab MACRF=(SKP,OUT),\tab\tab\tab  \tab\tab x\par\tab\tab\tab\tab\tab DDNAME=PAYROLL\par\tab\tab\tab\tab .\par\tab\tab PARMLIST \tab RPL \tab ACB=ACCESS, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AM=VSAM, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=125, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=SEARCH, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab MSGAREA=MESSAGE, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab MSGLEN=128, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(SKP,UPD) \tab Most OPTCD defaults are appropriate x\par\tab\tab\tab\tab\tab\tab\tab\tab to assumptions.\par\tab\tab WORK \tab\tab DS \tab CL125\par\tab\tab SEARCH \tab DS \tab CL8\par\tab\tab MESSAGE \tab DS \tab CL128\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----z390 equivalent of IBM Example: RPL macro----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab ACCESS \tab ACB \tab MACRF=(SKP,OUT),\tab\tab\tab  \tab\tab x\par\tab\tab\tab\tab\tab DDNAME=PAYROLL\par\tab\tab\tab\tab .\par\tab\tab PARMLIST \tab RPL \tab ACB=ACCESS, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AM=VSAM, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=SEARCH, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(SKP,UPD) \tab Most OPTCD defaults are appropriate x\par\tab\tab\tab\tab\tab\tab\tab\tab to assumptions.\par\tab\tab WORK \tab\tab DS \tab CL125\par\tab\tab SEARCH \tab DS \tab CL8\par\tab\tab MESSAGE \tab DS \tab CL128\par\plain\f1\fs20\b\cf3\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f2\fs20\par\tab\tab Use the RPL macro to generate a request parameter list. Values for RPL macro\par\tab\tab subparameters can be specified as absolute numeric expressions, character strings,\par\tab\tab codes, and expressions that generate valid relocatable A-type address constants.\par\par\tab\tab The format of the RPL macro is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab\tab RPL \tab [ACB=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,AM=\plain\f2\fs18\b\ul VSAM\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,AREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,AREALEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,ARG=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,ECB=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,KEYLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,TIMEOUT=\plain\f2\fs18\i number\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,MSGAREA=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,MSGLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,NXTRPL=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,OPTCD=([ADR|CNV \plain\f2\fs18 |\plain\f2\fs18\b\ul KEY\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,DIR|\plain\f2\fs18\b\ul SEQ\plain\f2\fs18\b |SKP]\par\tab\tab\tab\tab\tab\tab [,\plain\f2\fs18\b\ul ARD\plain\f2\fs18\b |LRD]\par\tab\tab\tab\tab\tab\tab [,\plain\f2\fs18\b\ul FWD\plain\f2\fs18\b |BWD]\par\tab\tab\tab\tab\tab\tab [,ASY|\plain\f2\fs18\b\ul SYN\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab\tab [,NSP|\plain\f2\fs18\b\ul NUP\plain\f2\fs18\b |UPD]\par\tab\tab\tab\tab\tab\tab [,\plain\f2\fs18\b\ul KEQ\plain\f2\fs18\b |KGE]\par\tab\tab\tab\tab\tab\tab [,\plain\f2\fs18\b\ul FKS\plain\f2\fs18\b |GEN]\par\tab\tab\tab\tab\tab\tab [,\plain\f2\fs18\b\ul NWAITX\plain\f2\fs18\b |WAITX]\par\tab\tab\tab\tab\tab\tab [,LOC|\plain\f2\fs18\b\ul MVE\plain\f2\fs18\b ]\par\tab\tab\tab\tab .\par\tab\tab\tab\tab\tab\tab [,NRI|CR]\par\tab\tab\tab\tab\tab\tab [,\plain\f2\fs18\b\ul RBA\plain\f2\fs18\b |XRBA])]\par\tab\tab\tab\tab\tab [,RECLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,TRANSID=\plain\f2\fs18\i abs expression\plain\f2\fs18\b ]\par\plain\f1\fs20\i\tab\tab\par\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies 1 to 8 characters that provide a symbolic address for the generated\par\tab\tab\tab request parameter list. You can use \plain\f2\fs20\i label \plain\f2\fs20 in the request macros to give the\par\tab\tab\tab address of the list. You can use \plain\f2\fs20\i label \plain\f2\fs20 in the NXTRPL parameter of the RPL\par\tab\tab\tab macro, when you are chaining request parameter lists, to indicate the next list.\par\plain\f1\fs20\b\par\tab\tab ACB=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the access method control block identifying the data set\par\tab\tab\tab to which access is requested. If you used the ACB macro to generate the\par\tab\tab\tab control block, you may specify the label of that macro for the address. If the\par\tab\tab\tab ACB parameter is not coded, you must specify the address before issuing the\par\tab\tab\tab request.\par\plain\f1\fs20\b\par\tab\tab AM=\plain\f1\fs20\b\ul VSAM\plain\f1\fs20\b\par\plain\f2\fs20\tab\tab\tab specifies the access method using the control block is VSAM.\par\plain\f1\fs20\b\par\tab\tab AREA=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of a work area to and from which VSAM moves a data\par\tab\tab\tab record if you request it to do so (with the RPL parameter OPTCD=MVE). If\par\tab\tab\tab your request is to process records in the I/O buffer (OPTCD=LOC), VSAM\par\tab\tab\tab puts into this work area the address of a data record within the I/O buffer.\par\plain\f1\fs20\b\par\tab\tab AREALEN=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the length, in bytes, of the work area whose address is specified by\par\tab\tab\tab the AREA parameter. Its minimum for OPTCD=MVE is the size of a data\par\tab\tab\tab record (of the largest data record, for a data set with records of variable\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs20\tab\tab\tab length). For OPTCD=LOC, the area should be 4 bytes to contain the address of\par\tab\tab\tab a data record within the I/O buffer.\par\plain\f1\fs20\b\par\tab\tab ARG=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of a field that contains the search argument for direct\par\tab\tab\tab retrieval, skip-sequential retrieval, and positioning. For a RRDS, the ARG field\par\tab\tab\tab must be 4 bytes long. For direct or skip-sequential processing, this field\par\tab\tab\tab contains your search argument, a relative record number. For sequential\par\tab\tab\tab processing (OPTCD=(KEY,SEQ)), the 4 bytes are required for VSAM to return\par\tab\tab\tab the feedback RRN. For keyed access (OPTCD=KEY), the search argument is a\par\tab\tab\tab full or generic key or relative record number. For addressed access\par\tab\tab\tab (OPTCD=ADR), the search argument is an RBA. If you specify a generic key\par\tab\tab\tab (OPTCD=GEN), you must also specify in the KEYLEN parameter how many of\par\tab\tab\tab the bytes of the full key you are using for the generic key. ARG is also used\par\tab\tab\tab with WRTBFR and MRKBFR. Using WRTBFR and MRKBFR to share resources\par\tab\tab\tab is described in \plain\f2\fs20\i z/OS DFSMS Using Data Sets\plain\f2\fs20 .\par\plain\f1\fs20\b\par\tab\tab ECB=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of an event control block (ECB) you may supply. VSAM\par\tab\tab\tab indicates in the ECB whether a request is complete or not. For more details see\par\tab\tab\tab the Event Control Block Fields section in \plain\f2\fs20\i z/OS DFSMSdfp Advanced Services\plain\f2\fs20 ,\par\tab\tab\tab SC26-7400. You can use the ECB to determine that an asynchronous request is\par\tab\tab\tab complete before issuing a CHECK macro. (If you issue a CHECK before a\par\tab\tab\tab request is complete, you give up control and must wait for completion.) The\par\tab\tab\tab ECB parameter is always optional.\par\plain\f1\fs20\b\par\tab\tab KEYLEN=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the length, in bytes, of the generic key (OPTCD=GEN) you are using\par\tab\tab\tab for a search argument (given in the field addressed by the ARG parameter).\par\tab\tab\tab This parameter is specified as a number from 1 through 255. It is required\par\tab\tab\tab when the search argument is a generic key. For full-key searches, VSAM knows\par\tab\tab\tab the key length, which is taken from the catalog definition of the data set when\par\tab\tab\tab you open the data set. This parameter is ignored for z/OS UNIX files.\par\plain\f1\fs20\b\par\tab\tab MSGAREA=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of an area you may, optionally, supply for VSAM to send\par\tab\tab\tab you a message in case of a physical error. The format of a physical error\par\tab\tab\tab message is given in \loch\f2\hich\f2\'93Reason code (physical errors)\'94 on page 145.\par\plain\f1\fs20\b\par\tab\tab MSGLEN=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the size, in bytes, of the message area indicated in the MSGAREA\par\tab\tab\tab parameter. If MSGAREA is specified, MSGLEN is required. The minimum size\par\tab\tab\tab of a message is 128 bytes. If you provide less than 128 bytes, no message is\par\tab\tab\tab returned to your program.\par\plain\f1\fs20\b\par\tab\tab NXTRPL=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the next request parameter list in a chain. Omit this\par\tab\tab\tab parameter from the macro that generates the last list in the chain. When you\par\tab\tab\tab issue a request defined by a chain of request parameter lists, indicate in the\par\tab\tab\tab request macro the address of the first parameter list in the chain. This\par\tab\tab\tab parameter is not supported for z/OS UNIX files and, if it is specified with a\par\tab\tab\tab non-zero value results in an error on a subsequent GET, PUT, or POINT.\par\plain\f1\fs20\b\par\tab\tab OPTCD=([ADR|CNV|\plain\f1\fs20\b\ul KEY\plain\f1\fs20\b ]\par\tab\tab\tab [,DIR|\plain\f1\fs20\b\ul SEQ\plain\f1\fs20\b |SKP]\par\tab\tab\tab [,\plain\f1\fs20\b\ul ARD\plain\f1\fs20\b |LRD]\par\tab\tab\tab [,\plain\f1\fs20\b\ul FWD\plain\f1\fs20\b |BWD]\par\tab\tab\tab [,ASY|\plain\f1\fs20\b\ul SYN\plain\f1\fs20\b ]\par\tab\tab\tab [,NSP|\plain\f1\fs20\b\ul NUP\plain\f1\fs20\b |UPD]\par\tab\tab\tab [,\plain\f1\fs20\b\ul KEQ\plain\f1\fs20\b |KGE]\par\tab\tab\tab [,\plain\f1\fs20\b\ul FKS\plain\f1\fs20\b |GEN]\par\tab\tab\tab [,\plain\f1\fs20\b\ul NWAITX\plain\f1\fs20\b |WAITX]\par\tab\tab\tab [,LOC|\plain\f1\fs20\b\ul MVE\plain\f1\fs20\b ]\par\tab\tab\tab [,CR|NRI]\par\tab\tab\tab [,\plain\f1\fs20\b\ul RBA\plain\f1\fs20\b |XRBA])\par\plain\f2\fs20\tab\tab\tab specifies the subparameters governing the request defined by the request\par\tab\tab\tab parameter list. Each group of subparameters has a default; subparameters are\par\tab\tab\tab shown in Table 3 with defaults underlined. Only one subparameter from each\par\tab\tab\tab group can be specified. Some requests do not require a subparameter from all\par\tab\tab\tab of the groups to be specified. The groups that are not required are ignored.\par\tab\tab\tab Thus, you can use the same request parameter list for a combination of\par\tab\tab\tab requests (GET, PUT, POINT, for example) without zeroing out the inapplicable\par\tab\tab\tab subparameters each time you go from one request to another.\par\plain\f1\fs20\b\par\tab\tab TIMEOUT=\plain\f1\fs20\i number\par\plain\f2\fs20\tab\tab\tab for RLS only, specifies the time in seconds that your program is willing to wait\par\tab\tab\tab to obtain a lock on a VSAM record when a lock on the record is already held\par\tab\tab\tab by another program. A non-zero value for TIMEOUT (or if TIMEOUT is not\par\tab\tab\tab specified) specifies the time (in seconds) this program will wait for the other\par\tab\tab\tab program(s) to release the lock. A value of zero specifies TIMEOUT processing\par\tab\tab\tab is \plain\f2\fs20\i NOT \plain\f2\fs20 to be performed by VSAM for this request. That is, if the record lock\par\tab\tab\tab required by the request is held by another program, the program waits until\par\tab\tab\tab the other program releases the lock regardless of how long that might be. This\par\tab\tab\tab parameter is ignored for z/OS UNIX files.\par\plain\f1\fs18\i\par\tab\tab Table 3. OPTCD Options\par\plain\f2\fs18\b\par\tab\tab Option \tab\tab Meaning\par\par\tab\tab ADR \tab\tab\plain\f2\fs18 Addressed access to a key-sequenced or an entry-sequenced data set:\par\tab\tab\tab\tab RBAs are used as search arguments and sequential access is done by\par\tab\tab\tab\tab entry sequence.\par\par\tab\tab\tab\tab RLS does not support access to a KSDS.\par\par\plain\f2\fs18\b\tab\tab CNV \tab\tab\plain\f2\fs18 Control interval access. Control interval access is not allowed for\par\tab\tab\tab\tab compressed data sets.\par\par\tab\tab\tab\tab RLS does not support CNV access. This parameter is ignored for\par\tab\tab\tab\tab z/OS UNIX files and if it is specified results in an error on a\par\tab\tab\tab\tab subsequent GET, PUT, or POINT.\par\plain\f2\fs18\b\par\tab\tab\plain\f2\fs18\b\ul KEY\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Keyed access to a RRDS or KSDS. Keys or relative record numbers\par\tab\tab\tab\tab are used as search arguments and sequential access is done by key or\par\tab\tab\tab\tab relative record number sequence.\par\plain\f2\fs18\b\par\tab\tab DIR \tab\tab\plain\f2\fs18 Direct access to a RRDS, KSDS, or ESDS.\par\plain\f2\fs18\b\par\tab\tab\plain\f2\fs18\b\ul SEQ\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Sequential access to a RRDS, KSDS, or ESDS.\par\plain\f1\fs18\i\par\tab\tab\plain\f2\fs18\b SKP \tab\tab\plain\f2\fs18 Skip sequential access.\par\plain\f2\fs18\b\par\tab\tab\plain\f2\fs18\b\ul ARD\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 User's argument determines the record to be located, retrieved, or\par\tab\tab\tab\tab stored.\par\plain\f2\fs18\b\par\tab\tab LRD \tab\tab\plain\f2\fs18 Last record in the data set is to be located (POINT) or retrieved (GET\par\tab\tab\tab\tab direct); requires OPTCD=BWD.\par\plain\f2\fs18\b\par\tab\tab\plain\f2\fs18\b\ul FWD\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Processing to proceed in a forward direction.\par\plain\f2\fs18\b\par\tab\tab BWD \tab\tab\plain\f2\fs18 Processing to proceed in a backward direction; for keyed (KEY) or\par\tab\tab\tab\tab addressed (ADR) sequential (SEQ) or direct (DIR) requests; valid for\par\tab\tab\tab\tab POINT, GET, PUT, and ERASE operations; establish positioning by a\par\tab\tab\tab\tab POINT with OPTCD=BWD or by a GET direct with\par\tab\tab\tab\tab OPTCD=(NSP,BWD). When OPTCD=BWD is specified,\par\tab\tab\tab\tab subparameters KGE and GEN are ignored; subparameters KEQ and\par\tab\tab\tab\tab FKS are assumed. This parameter is ignored for z/OS UNIX files and\par\tab\tab\tab\tab if it is specified results in an error on a subsequent GET, PUT, or\par\tab\tab\tab\tab POINT.\par\plain\f2\fs18\b\par\tab\tab ASY \tab\tab\plain\f2\fs18 Asynchronous access; VSAM returns to the processing program after\par\tab\tab\tab\tab scheduling a request so the program can do other processing while\par\tab\tab\tab\tab the request is being carried out.\par\plain\f2\fs18\b\par\tab\tab\plain\f2\fs18\b\ul SYN\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 Synchronous access; VSAM returns to the processing program after\par\tab\tab\tab\tab completing a request.\par\plain\f2\fs18\b\par\tab\tab NSP \tab\tab\plain\f2\fs18 With OPTCD=DIR only, VSAM is to remember its position (for\par\tab\tab\tab\tab subsequent sequential access); that is, the position is not to be\par\tab\tab\tab\tab forgotten unless an ENDREQ macro is issued.\par\plain\f2\fs18\b\par\tab\tab\plain\f2\fs18\b\ul NUP\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 A data record being retrieved will not be updated or deleted; a record\par\tab\tab\tab\tab being stored is a new record; VSAM does not remember its position\par\tab\tab\tab\tab for direct requests into a work area.\par\plain\f2\fs18\b\par\tab\tab UPD \tab\tab\plain\f2\fs18 A data record being retrieved may be updated or deleted; a record\par\tab\tab\tab\tab being udpated or deleted was previously retrieved with\par\tab\tab\tab\tab OPTCD=UPD; VSAM remembers its position for sequential and\par\tab\tab\tab\tab direct GET requests. A GET with update (UPD) must use the same\par\tab\tab\tab\tab RPL on the following PUT, ERASE or ENDREQ. When PUT, ERASE\par\tab\tab\tab\tab or ENDREQ is issued after a DIRUPD GET request, VSAM releases\par\tab\tab\tab\tab exclusive control. This parameter is not supported for z/OS UNIX\par\tab\tab\tab\tab files, and if it is specified, results in an error on a subsequent GET,\par\tab\tab\tab\tab PUT, or POINT.\par\plain\f2\fs18\b\par\tab\tab\plain\f2\fs18\b\ul KEQ\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 For GET with OPTCD=(KEY,DIR) or (KEY,SKP) and for POINT with\par\tab\tab\tab\tab OPTCD=KEY, the key (full or generic) that you provide for a search\par\tab\tab\tab\tab argument must equal the key or relative record number of a record.\par\tab\tab\tab\tab For a RRDS, KEQ is assumed except for POINT.\par\plain\f2\fs18\b\par\tab\tab KGE \tab\tab\plain\f2\fs18 For the same cases as KEQ, if the key (full or generic) that you\par\tab\tab\tab\tab provide for a search argument does not equal that of a record, the\par\tab\tab\tab\tab request applies to the record that has the next higher key. If using\par\tab\tab\tab\tab POINT with a RRDS, KGE positions to the specified relative record\par\tab\tab\tab\tab number whether the slot is empty or not. If the relative record\par\tab\tab\tab\tab number is greater than the highest existing record, EOD is returned.\par\tab\tab\tab\tab A subsequent PUT will insert the record at this position.\par\plain\f2\fs18\b\par\tab\tab FKS \tab\tab\plain\f2\fs18 A full key is provided as a search argument.\par\plain\f2\fs18\b\par\tab\tab GEN \tab\tab\plain\f2\fs18 A generic key is provided as a search argument; give the length in\par\tab\tab\tab\tab the KEYLEN parameter. Generic keys are not supported for a\par\tab\tab\tab\tab variable-length RRDS.\par\plain\f2\fs18\b\par\tab\tab\plain\f2\fs18\b\ul NWAITX\plain\f2\fs18\b  \tab\plain\f2\fs18 Never take the UPAD or RLSWAIT exit.\par\plain\f1\fs18\i\par\tab\tab\plain\f2\fs18\b WAITX \tab\tab\plain\f2\fs18 If OPTCD=SYN and the ACB's MACRF=LSR GSR and UPAD exit\par\tab\tab\tab\tab routing is specified, VSAM takes the UPAD exit at points when\par\tab\tab\tab\tab VSAM would normally issue a WAIT.\par\tab\tab\tab\tab For RLS, take the RLSWAIT exit which is active for this request.\par\plain\f2\fs18\b\par\tab\tab LOC \tab\tab\plain\f2\fs18 For retrieval, VSAM leaves the data record in the I/O buffer for\par\tab\tab\tab\tab processing, unless the data set is compressed, in which case VSAM\par\tab\tab\tab\tab moves the record to a work area; not valid for PUT or ERASE; valid\par\tab\tab\tab\tab for GET with OPTCD=UPD. However, to update the record, you\par\tab\tab\tab\tab must build a new version of the record in a work area and modify\par\tab\tab\tab\tab the request parameter list OPTCD from LOC to MVE before issuing a\par\tab\tab\tab\tab PUT. For keyed-sequential retrieval, modifying key fields in the I/O\par\tab\tab\tab\tab buffer may cause incorrect results for subsequent GET requests until\par\tab\tab\tab\tab the I/O record is reread. Not valid for requests with spanned records.\par\tab\tab\tab\tab For z/OS UNIX files, LOC mode is supported but requires extra\par\tab\tab\tab\tab overhead to get storage in the user space and move the record.\par\plain\f2\fs18\b\par\tab\tab\plain\f2\fs18\b\ul MVE\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 For retrieval, VSAM moves the data record to a work area for\par\tab\tab\tab\tab processing, and for storage, VSAM moves it from the work area to\par\tab\tab\tab\tab the I/O buffer.\par\plain\f2\fs18\b\par\tab\tab CR \tab\tab\plain\f2\fs18 For RLS GET and POINT only, CR (consistent read integrity) specifies\par\tab\tab\tab\tab that a shared lock is to be obtained and released as part of GET\par\tab\tab\tab\tab processing. CR specifies the application wants this request to be\par\tab\tab\tab\tab serialized with update/erase of this record by other applications or\par\tab\tab\tab\tab transactions. RLS obtains a share lock on the record.\par\par\tab\tab\tab\tab For RLS POINT, the shared lock remains held on successful\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs18\tab\tab\tab\tab completion of the POINT CR request.\par\par\tab\tab\tab\tab For RLS GET, after moving a copy of the record to the area pointed\par\tab\tab\tab\tab to by the RPL AREA parameter, the shared lock is released.\par\par\tab\tab\tab\tab If neither NRI, or CR is specified, the NRI/CR option is determined\par\tab\tab\tab\tab in the following order:\par\plain\f1\fs18\tab\tab\tab\tab v \tab\plain\f2\fs18 RLSREAD specification on the ACB, if any,\par\plain\f1\fs18\tab\tab\tab\tab v \tab\plain\f2\fs18 RLS JCL specification, if any,\par\plain\f1\fs18\tab\tab\tab\tab v \tab\plain\f2\fs18 NRI is assumed.\par\par\tab\tab\tab\tab If there are multiple specifications in the RPL, CR takes precedence\par\tab\tab\tab\tab over NRI.\par\plain\f1\fs18\i\par\tab\tab\plain\f2\fs18\b NRI \tab\tab\plain\f2\fs18 For RLS GET NUP and POINT only, NRI (no read integrity) specifies\par\tab\tab\tab\tab no locking on a GET(non-update). Since a lock is not obtained on the\par\tab\tab\tab\tab record, another application or transaction may currently hold an\par\tab\tab\tab\tab exclusive lock on the record. For a recoverable sphere, the returned\par\tab\tab\tab\tab record may be an uncommitted change which may be later backed\par\tab\tab\tab\tab out (this form of processing is sometimes referred to as \loch\f2\hich\f2\'93dirty read\'94).\par\tab\tab\tab\tab The opposite form of read processing is provided by the CR option\par\tab\tab\tab\tab where if another application/transaction holds an exclusive lock on\par\tab\tab\tab\tab the record, the reader waits for release of the exclusive lock and thus\par\tab\tab\tab\tab does NOT read an uncommitted change.\par\par\tab\tab\tab\tab If neither NRI or CR is specified, the NRI/CR option is determined in\par\tab\tab\tab\tab the following order:\par\plain\f1\fs18\tab\tab\tab\tab v \tab\plain\f2\fs18 RLSREAD specification on the ACB, if any,\par\plain\f1\fs18\tab\tab\tab\tab v \tab\plain\f2\fs18 RLS JCL specification, if any,\par\plain\f1\fs18\tab\tab\tab\tab v \tab\plain\f2\fs18 NRI is assumed.\par\par\tab\tab\tab\tab If there are multiple specifications in the RPL, CR takes precedence\par\tab\tab\tab\tab over NRI.\par\par\tab\tab\tab\tab Inserting or updating a base cluster record can result in a concurrent\par\tab\tab\tab\tab NRI read to the record by an alternate index path, causing you to\par\tab\tab\tab\tab receive a false error (return code 8, reason code 144 in Table 17 on\par\tab\tab\tab\tab page 134). RLS obtains a record lock and retries the request to be sure\par\tab\tab\tab\tab this is not a false condition.\par\plain\f2\fs18\b\par\tab\tab\plain\f2\fs18\b\ul RBA\plain\f2\fs18\b  \tab\tab\plain\f2\fs18 For addressed accessing (OPTCD=ADR), the ARG field contains the\par\tab\tab\tab\tab address of a 4-byte RBA. RBA is the default. Extended addressing is\par\tab\tab\tab\tab not to be used for this request.\par\plain\f1\fs18\i\par\tab\tab\plain\f2\fs18\b XRBA \tab\tab\plain\f2\fs18 For addressed accessing (OPTCD=ADR), the ARG field contains the\par\tab\tab\tab\tab address of an 8-byte RBA search argument.\par\tab\tab\tab\tab\par\tab\tab\tab\tab While you can specify RBA while using XRBA, the following\par\tab\tab\tab\tab considerations apply to accessing by RBA values:\par\plain\f1\fs18\par\tab\tab\tab\tab v \tab\plain\f2\fs18 For a GET extended addressing request, you must specify an\par\tab\tab\tab\tab\tab OPTCD which includes DIR, ADR, and XRBA.\par\plain\f1\fs18\par\tab\tab\tab\tab v \tab\plain\f2\fs18 For a POINT extended addressingrequest, you must specify an\par\tab\tab\tab\tab\tab OPTCD which includes ADR and XRBA.\par\plain\f1\fs18\par\tab\tab\tab\tab v \tab\plain\f2\fs18 For a MRKBFR extended addressingrequest, you must specify an\par\tab\tab\tab\tab\tab OPTCD which includes XRBA. The ARG field has the address of a\par\tab\tab\tab\tab\tab 16 byte field containing the beginning and ending 8 byte RBAs of\par\tab\tab\tab\tab\tab the range.\par\plain\f1\fs18\par\tab\tab\tab\tab v \tab\plain\f2\fs18 For a SCHBFR extended addressingrequest, you must specify an\par\tab\tab\tab\tab\tab OPTCD which includes XRBA. The ARG field has the address of a\par\tab\tab\tab\tab\tab 16 byte field containing the beginning and ending 8 byte RBAs of\par\tab\tab\tab\tab\tab the range.\par\plain\f1\fs18\par\tab\tab\tab\tab v \tab\plain\f2\fs18 For a WRTBFR TYPE=DRBA extended addressingrequest, you\par\tab\tab\tab\tab\tab must specify an OPTCD which includes XRBA. The ARG field has\par\tab\tab\tab\tab\tab the address of an 8 byte field containing the 8 byte RBA to be\par\tab\tab\tab\tab\tab located and written.\par\par\tab\tab\tab\tab If the data being referenced by RBA for an extended addressing KSDS\par\tab\tab\tab\tab is less than 4GB, you do not have to code this parameter. For data\par\tab\tab\tab\tab with RBA greater than 4GB the RPL must specify extended\par\tab\tab\tab\tab addressing (XRBA) and an 8-byte RBA is required. Also, to retrieve\par\tab\tab\tab\tab an 8-byte RBA using SHOWCB for the RPL, XRBA must be used\par\tab\tab\tab\tab instead.\par\par\tab\tab\tab\tab XRBA specification can be used for any data set (whether or not it is\par\tab\tab\tab\tab extended addressable).\par\plain\f1\fs20\b\par\tab\tab RECLEN=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the length, in bytes, of a data record being stored. This parameter is\par\tab\tab\tab required for a PUT request.\par\par\tab\tab\tab For GET requests, VSAM puts the length of the record retrieved in this field in\par\tab\tab\tab the request parameter list. It will be there if you update and store the record.\par\plain\f1\fs20\b\par\tab\tab TRANSID=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies a number that relates modified buffers in a buffer pool. Used in\par\tab\tab\tab shared resource applications and described in \plain\f2\fs20\i z/OS DFSMS Using Data Sets\plain\f2\fs20 .\par\tab\tab\tab This parameter is ignored for z/OS UNIX files.\par\plain\f1\fs28\b\par\page\tab Example: RPL macro \par\plain\f2\fs20\par\tab\tab In this example, an RPL macro is used to generate a request parameter list named\par\tab\tab PARMLIST.\par\plain\f1\fs18\par\tab\tab ACCESS \tab ACB \tab MACRF=(SKP,OUT),\tab\tab\tab  \tab\tab x\par\tab\tab\tab\tab\tab DDNAME=PAYROLL\par\tab\tab\tab\tab .\par\tab\tab PARMLIST \tab RPL \tab ACB=ACCESS, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AM=VSAM, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREA=WORK, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab AREALEN=125, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab ARG=SEARCH, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab MSGAREA=MESSAGE, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab MSGLEN=128, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab OPTCD=(SKP,UPD) \tab Most OPTCD defaults are appropriate x\par\tab\tab\tab\tab\tab\tab\tab\tab to assumptions.\par\tab\tab WORK \tab\tab DS \tab CL125\par\tab\tab SEARCH \tab DS \tab CL8\par\tab\tab MESSAGE \tab DS \tab CL128\par\plain\f2\fs20\par\tab\tab The ACB macro named ACCESS, specifies skip-sequential retrieval for update.\par\tab\tab Further details may be provided on a DD statement named PAYROLL.\par\par\tab\tab The RPL macro's parameters are:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 ACB associates the request parameter list with the access method control block\par\tab\tab\tab generated by ACCESS.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 AREA and AREALEN specify a work area, WORK, that is 125 bytes long.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 ARG specifies the search argument is defined at SEARCH. The search argument\par\tab\tab\tab is 8 bytes long.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 MSGAREA and MSGLEN specify a message area, MESSAGE, that is 128 bytes\par\tab\tab\tab long. The message area is provided for physical error messages.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 OPTCD specifies skip-sequential processing and specifies a retrieved record may\par\tab\tab\tab be updated or deleted.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 NSR is assumed.\par\par\tab\tab Because KEYLEN is not coded, a full-key search is assumed.\par\plain\f1\fs28\b\par\page\tab SCHBFR\loch\f1\hich\f1\'97Search buffer\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 SCHBFR\loch\f1\hich\f1\'97Search buffer----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam, SCHBFR is\plain\f1\fs20  \plain\f1\fs20\cf3 not supported----\par\plain\f1\fs28\b\par\tab SHOWCAT\loch\f1\hich\f1\'97Display the catalog\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 SHOWCAT\loch\f1\hich\f1\'97Display the catalog----\plain\f1\fs28\b\par\plain\f2\fs20\cf3 ----z390 vsam, \plain\f1\fs20\cf3 SHOWCAT is\plain\f1\fs20  \plain\f2\fs20\cf3 not supported----\par\plain\f1\fs22\b\par\plain\f1\fs28\b\page\tab SHOWCB\loch\f1\hich\f1\'97Display fields of an access method control block\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 SHOWCB\loch\f1\hich\f1\'97Display fields of an access method control block----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam, SHOWCB doesn't actually display fields. It moves them----\par ----to a nominated variable----\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 SHOWCB\loch\f1\hich\f1\'97Display fields of an access method control block----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam, SHOWCB doesn't support ACB "displays" ----\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 SHOWCB\loch\f1\hich\f1\'97Display fields of an RPL----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----IBM vsam, there are no examples----\par\plain\f1\fs20\cf1 ------------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f2\fs20\par\tab\tab The format of the SHOWCB macro used to display fields in an access method\par\tab\tab control block is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab\tab SHOWCB \tab ACB=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab\tab ,AREA=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab\tab ,LENGTH=\plain\f2\fs18\i abs expression\par\plain\f2\fs18\b\tab\tab\tab\tab\tab\tab [,OBJECT=\plain\f2\fs18\b\ul DATA\plain\f2\fs18\b |INDEX]\par\tab\tab\tab\tab\tab\tab ,FIELDS=([ACBLEN] [,AVSPAC]\par\tab\tab\tab\tab\tab\tab [,BFRFND] [,BSTRNO]\par\tab\tab\tab\tab\tab\tab [,BUFND] [,BUFNI]\par\tab\tab\tab\tab\tab\tab [,BUFNO] [,BUFRDS]\par\tab\tab\tab\tab\tab\tab [,BUFSP] [,CINV]\par\tab\tab\tab\tab\tab\tab [,CDTASIZE]\par\tab\tab\tab\tab\tab\tab [,DDNAME] [,ENDRBA]\par\tab\tab\tab\tab\tab\tab [,ERROR] [,EXLST] [,FS]\par\tab\tab\tab\tab\tab\tab [,HALCRBA] [,KEYLEN]\par\tab\tab\tab\tab\tab\tab [,LEVEL] [,LOKEY] [,LRECL]\par\tab\tab\tab\tab\tab\tab [,MAREA] [,MLEN] [,NCIS]\par\tab\tab\tab\tab\tab\tab [,NDELR] [,NEXCP]\par\tab\tab\tab\tab\tab\tab [,NEXT] [,NINSR]\par\tab\tab\tab\tab\tab\tab [,NIXL] [,NLOGR]\par\tab\tab\tab\tab\tab\tab [,NRETR] [,NSSS]\par\tab\tab\tab\tab\tab\tab [,NUIW] [,NUPDR]\par\tab\tab\tab\tab\tab\tab [,PASSWD] [,RELEASE] [,RKP]\par\tab\tab\tab\tab\tab\tab [,SDTASIZE]\par\tab\tab\tab\tab\tab\tab [,SHRPOOL] [,STMST] [,STRMAX]\par\tab\tab\tab\tab\tab\tab [,STRNO] [,UIW]\par\tab\tab\tab\tab\tab\tab [,XAVSPAC] [,XENDRBA]\par\tab\tab\tab\tab\tab\tab [,XHALCRBA])\par\plain\f2\fs20\par\tab\tab The subparameters of the SHOWCB macro can be expressed as absolute numeric\par\tab\tab expressions, as character strings, as codes, as expressions that generate valid\par\tab\tab relocatable A-type address constants, in register notation, as S-type address\par\tab\tab constants, and as indirect S-type address constants. \loch\f2\hich\f2\'93Subparameters with GENCB,\par\tab\tab MODCB, SHOWCB, and TESTCB\'94 on page 5, further defines these operand\par\tab\tab expressions.\par\plain\f1\fs20\i\par\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies 1 to 8 characters that provide a symbolic address for the SHOWCB\par\tab\tab\tab macro.\tab\par\plain\f1\fs20\b\par\tab\tab ACB=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the access method control block whose fields are\par\tab\tab\tab displayed. If you used the ACB macro with a label, you can specify the label\par\tab\tab\tab here. The ACB parameter is optional when you wish to display the length of\par\tab\tab\tab an access method control block (FIELDS=ACBLEN). (All access method control\par\tab\tab\tab blocks have the same length, so you need not specify the address of a\par\tab\tab\tab particular one.)\par\plain\f1\fs20\b\par\tab\tab AREA=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of a return area you are supplying for VSAM to display\par\tab\tab\tab the contents of the fields specified in the FIELDS parameter. The contents of\par\tab\tab\tab the fields are displayed in the order in which you specify them. The area must\par\tab\tab\tab begin on a fullword boundary.\par\plain\f1\fs20\b\par\tab\tab LENGTH=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the length, in bytes, of the return area you are providing for VSAM to\par\tab\tab\tab display the indicated fields in. (See the FIELDS parameter for the fields that\par\tab\tab\tab can be displayed and for the length of each field.) If the area is not large\par\tab\tab\tab enough for all the fields, VSAM does not display any of their contents and\par\tab\tab\tab returns a reason code (see \loch\f2\hich\f2\'93Control block manipulation macro return and\par\tab\tab\tab reason codes\'94 on page 129).\par\plain\f1\fs20\b\par\tab\tab OBJECT=\plain\f1\fs20\b\ul DATA\plain\f1\fs20\b |INDEX\par\plain\f2\fs20\tab\tab\tab specifies whether fields are displayed for the data or for the index.\par\plain\f1\fs20\b\par\tab\tab FIELDS=[ACBLEN][,AVSPAC]\par\tab\tab\tab [,BFRFND][,BSTRNO]\par\tab\tab\tab [,BUFND][,BUFNI]\par\tab\tab\tab [,BUFNO][,BUFRDS]\par\tab\tab\tab [,BUFSP][,CINV]\par\tab\tab\tab [,CDTASIZE][,CINV]\par\tab\tab\tab [,DDNAME][,ENDRBA]\par\tab\tab\tab [,ERROR][,EXLST]\par\tab\tab\tab [,FS][,HALCRBA]\par\tab\tab\tab [,KEYLEN][,LEVEL]\par\tab\tab\tab [,LOKEY][,LRECL]\par\tab\tab\tab [,MAREA][,MLEN]\par\tab\tab\tab [,NCIS][,NDELR]\par\tab\tab\tab [,NEXCP][,NEXT]\par\tab\tab\tab [,NINSR][,NIXL]\par\tab\tab\tab [,NLOGR][,NRETR]\par\tab\tab\tab [,NSSS][,NUIW]\par\tab\tab\tab [,NUPDR][,PASSWD]\par\tab\tab\tab [,RELEASE][,RKP][,SHRPOOL]\par\tab\tab\tab [,STMST][,STRMAX]\par\tab\tab\tab [,SDTASIZE]\par\tab\tab\tab [,STRNO][,UIW]\par\tab\tab\tab [,XAVSPAC][,XENDRBA]\par\tab\tab\tab [,XHALCRBA])\par\plain\f2\fs20\tab\tab\tab specifies the fields whose contents are to be displayed. Some of the fields can\par\tab\tab\tab be displayed at any time; others only after a data set is opened. The ones that\par\tab\tab\tab can be displayed only after a data set is opened can, for a KSDS that has been\par\tab\tab\tab opened for keyed access, pertain either to the data or to the index. See the\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs20\tab\tab\tab OBJECT parameter.\par\par\tab\tab Table 5 explains the subparameters you can code in the FIELDS parameter for\par\tab\tab an access method control block.\par\plain\f1\fs18\i\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\i\tab\tab Table 5. FIELDS Keyword Subparameters for an Access Method Control Block\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab Subparameter \tab Fullwords \tab Description of the Field\par\tab\tab\tab\tab\tab\tab Note: The following fields can be displayed at any time\plain\f2\fs18 .\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\par\tab\tab ACBLEN \tab\plain\f2\fs18 1 \tab\tab Length of an access method control block (displaying the length of an\par\tab\tab\tab\tab\tab\tab access method control block gives your program independence from\par\tab\tab\tab\tab\tab\tab changes in the length that may occur from release to release of VSAM).\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab BSTRNO \tab\plain\f2\fs18 1 \tab\tab Number of strings initially allocated for access to the base cluster by a\par\tab\tab\tab\tab\tab\tab path. For RLS BSTRNO is ignored and the value specified in the ACB is\par\tab\tab\tab\tab\tab\tab returned.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab BUFND \tab\tab\plain\f2\fs18 1 \tab\tab Number of I/O buffers used for data, as specified in the ACB (or\par\tab\tab\tab\tab\tab\tab GENCB). For RLS BUFND is ignored and the value specified in the\par\tab\tab\tab\tab\tab\tab ACB is returned. This parameter has no effect for z/OS UNIX files.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\i\tab\tab\plain\f2\fs18\b BUFNI \tab\tab\plain\f2\fs18 1 \tab\tab Number of I/O buffers used for index entries, as specified in the ACB\par\tab\tab\tab\tab\tab\tab (or GENCB). For RLS BUFNI is ignored and the value specified in the\par\tab\tab\tab\tab\tab\tab ACB is returned. This parameter has no effect for z/OS UNIX files.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab BUFSP \tab\tab\plain\f2\fs18 1 \tab\tab Amount of space specified in the ACB (or GENCB) for I/O buffers. For\par\tab\tab\tab\tab\tab\tab RLS BUFSP is ignored and the value specified in the ACB is returned.\par\tab\tab\tab\tab\tab\tab This parameter has no effect for z/OS UNIX files.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab DDNAME \tab\plain\f2\fs18 2 \tab\tab Name of the DD statement that identifies the data set.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab ERROR \tab\tab\plain\f2\fs18 1 \tab\tab The code returned by VSAM after the opening or closing of the data set\par\tab\tab\tab\tab\tab\tab (see \loch\f2\hich\f2\'93OPEN\'97Connect program and data\'94 on page 67 and\par\tab\tab\tab\tab\tab\tab\'93CLOSE\'97Disconnect program and data\'94 on page 27).\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab EXLST \tab\tab\plain\f2\fs18 1 \tab\tab Address of the exit list, if any; 0 if none.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab LEVEL \tab\tab\plain\f2\fs18 2 \tab\tab Address (in first fullword) and length (in second fullword) of the field\par\tab\tab\tab\tab\tab\tab containing the DFP level information.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab MAREA \tab\tab\plain\f2\fs18 1 \tab\tab Address of the message area, if any; 0 if none.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab MLEN \tab\tab\plain\f2\fs18 1 \tab\tab Length of the message area, if any; 0 if none.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab PASSWD \tab\plain\f2\fs18 1 \tab\tab Address of the field containing the password; the first byte of the field\par\tab\tab\tab\tab\tab\tab contains the length of the password (in binary). This parameter has no\par\tab\tab\tab\tab\tab\tab effect for z/OS UNIX files.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab RELEASE \tab\plain\f2\fs18 2 \tab\tab Address (in first fullword) and length (in second fullword) of the field\par\tab\tab\tab\tab\tab\tab containing the DFP release information. \plain\f2\fs18\i z/OS DFSMSdfp Advanced\par\tab\tab\tab\tab\tab\tab Services \plain\f2\fs18 discusses how to use the IHADFA mapping macro or the\par\tab\tab\tab\tab\tab\tab IGWASYS callable service for release determination.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab SHRPOOL \tab\plain\f2\fs18 1 \tab\tab Identification number of resource pool to be used for LSR processing.\par\tab\tab\tab\tab\tab\tab SHRPOOL specification is ignored by RLS processing. This parameter\par\tab\tab\tab\tab\tab\tab has no effect for z/OS UNIX files.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab STRMAX \tab\plain\f2\fs18 1 \tab\tab Maximum number of strings concurrently active. For RLS this field is\par\tab\tab\tab\tab\tab\tab the number of active strings associated with this ACB at the time the\par\tab\tab\tab\tab\tab\tab request is issued.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab STRNO \tab\tab\plain\f2\fs18 1 \tab\tab Number of requests for which VSAM is prepared to remember its\par\tab\tab\tab\tab\tab\tab position in the data set.\par\par\tab\tab\tab\tab\tab\tab For RLS the value specified in the ACB macro is ignored. After OPEN a\par\tab\tab\tab\tab\tab\tab value of 1024 is returned, indicating the maximum number of strings\par\tab\tab\tab\tab\tab\tab allowed.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab\tab\tab\tab\tab\plain\f2\fs18\b\ul Rule: The following fields can be displayed only after the data set is\plain\f2\fs18\b\par\tab\tab\tab\tab\tab\tab\plain\f2\fs18\b\ul opened. It is your responsibility to be sure that the ACB remains\par\plain\f2\fs18\b\tab\tab\tab\tab\tab\tab\plain\f2\fs18\b\ul open until the SHOWCB for these fields has completed. If the ACB is\par\plain\f2\fs18\b\tab\tab\tab\tab\tab\tab\plain\f2\fs18\b\ul closed while a SHOWCB is active for these fields, unpredictable\plain\f2\fs18\b\par\tab\tab\tab\tab\tab\tab\plain\f2\fs18\b\ul results can occur including abends.\plain\f2\fs18\b\par\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab AVSPAC \tab\plain\f2\fs18 1 \tab\tab Amount of available space in the data component or index component,\par\tab\tab\tab\tab\tab\tab in bytes. If the extended format data set might contain more than 4GB,\par\tab\tab\tab\tab\tab\tab use XAVSPAC instead of AVSPAC.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab BFRFND \tab\plain\f2\fs18 1 \tab\tab Number of successful look-asides. For RLS this field is the number of\par\tab\tab\tab\tab\tab\tab requests satisfied from the local cache or the CF cache.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab BUFNO \tab\tab\plain\f2\fs18 1 \tab\tab Number of I/O buffers allocated for the data component or index\par\tab\tab\tab\tab\tab\tab component. The value of zero will be returned for GSR, LSR, RLS and\par\tab\tab\tab\tab\tab\tab UNIX System services.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab BUFRDS \tab\plain\f2\fs18 1 \tab\tab Number of buffer reads. For RLS this field is the number of times I/O is\par\tab\tab\tab\tab\tab\tab done for a READ.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\i\tab\tab\plain\f2\fs18\b CDTASIZE \tab\plain\f2\fs18 2 \tab\tab Value for the size of extended format data sets using compression.\par\par\tab\tab\tab\tab\tab\tab For RLS, this number is maintained on an ACB basis rather than a\par\tab\tab\tab\tab\tab\tab component basis. That is, it is a count only for the current open of the\par\tab\tab\tab\tab\tab\tab data set with this ACB. It is zero if no record has been processed since\par\tab\tab\tab\tab\tab\tab the current open.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab CINV \tab\tab\plain\f2\fs18 1 \tab\tab Control interval size for the data component or index component.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab ENDRBA \tab\plain\f2\fs18 1 \tab\tab Ending RBA of the space used by the data component or index\par\tab\tab\tab\tab\tab\tab component; not the RBA of any record in the data set, but of the last\par\tab\tab\tab\tab\tab\tab used byte in the data set (high-used RBA). If the extended format data\par\tab\tab\tab\tab\tab\tab set might contain more than 4GB, use XENDRBA instead of ENDRBA.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab FS \tab\tab\plain\f2\fs18 1 \tab\tab Number of free control intervals per control area in the data component\par\tab\tab\tab\tab\tab\tab (0 for OBJECT=INDEX). For z/OS UNIX files this field is set to zero.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab HALCRBA \tab\plain\f2\fs18 1 \tab\tab High-allocated RBA; the relative byte address of the end of the data\par\tab\tab\tab\tab\tab\tab component (OBJECT=DATA) or the index component\par\tab\tab\tab\tab\tab\tab (OBJECT=INDEX). If the extended format data set might contain more\par\tab\tab\tab\tab\tab\tab than 4GB, use XHALCRBA instead of HALCRBA.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab KEYLEN \tab\plain\f2\fs18 1 \tab\tab Length of the key of reference of the key field of data records in the\par\tab\tab\tab\tab\tab\tab data component (whether OBJECT=DATA or INDEX).\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab LOKEY \tab\tab\plain\f2\fs18 2 \tab\tab Address of the field containing the low key (in first fullword) and the\par\tab\tab\tab\tab\tab\tab length (in second fullword) of the low key of a KSDS data component.\par\tab\tab\tab\tab\tab\tab For RLS LOKEY is not supported. A reason code is given if it is\par\tab\tab\tab\tab\tab\tab specified.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab LRECL \tab\tab\plain\f2\fs18 1 \tab\tab Length of data records in the data component (maximum length for\par\tab\tab\tab\tab\tab\tab variable-length data records) or of index records in the index\par\tab\tab\tab\tab\tab\tab component (control interval length minus 7).\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NCIS \tab\tab\plain\f2\fs18 1 \tab\tab Number of control intervals split in the data component (0 for\par\tab\tab\tab\tab\tab\tab OBJECT=INDEX). For z/OS UNIX files this field is set to zero.\par\par\tab\tab\tab\tab\tab\tab For RLS, this number is maintained on an ACB basis rather than a\par\tab\tab\tab\tab\tab\tab component basis. That is, it is a count only for the current open of the\par\tab\tab\tab\tab\tab\tab data set with this ACB. It is zero if no record has been processed since\par\tab\tab\tab\tab\tab\tab the current open.\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NDELR \tab\tab\plain\f2\fs18 1 \tab\tab Number of records deleted from the data component (0 for\par\tab\tab\tab\tab\tab\tab OBJECT=INDEX).\par\par\tab\tab\tab\tab\tab\tab For RLS, this number is maintained on an ACB basis rather than a\par\tab\tab\tab\tab\tab\tab component basis. That is, it is a count only for the current open of the\par\tab\tab\tab\tab\tab\tab data set with this ACB. It is zero if no record has been processed since\par\tab\tab\tab\tab\tab\tab the current open.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NEXCP \tab\tab\plain\f2\fs18 1 \tab\tab Number of I/O requests VSAM has issued for access to the data\par\tab\tab\tab\tab\tab\tab component or index component. For RLS NEXCP is a count of the\par\tab\tab\tab\tab\tab\tab number of calls to the system buffer manager (includes calls that result\par\tab\tab\tab\tab\tab\tab in either a CF cache access or an I/O).\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NEXT \tab\tab\plain\f2\fs18 1 \tab\tab Number of extents now allocated to the data component or index\par\tab\tab\tab\tab\tab\tab component (the maximum that can be allocated is 123 per VSAM\par\tab\tab\tab\tab\tab\tab component. For z/OS UNIX files this field is set to one.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NINSR \tab\tab\plain\f2\fs18 1 \tab\tab Number of records inserted into (or added to) the data component (0\par\tab\tab\tab\tab\tab\tab for OBJECT=INDEX).\par\par\tab\tab\tab\tab\tab\tab For RLS, this number is maintained on an ACB basis rather than a\par\tab\tab\tab\tab\tab\tab component basis. That is, it is a count only for the current open of the\par\tab\tab\tab\tab\tab\tab data set with this ACB. It is zero if no record has been processed since\par\tab\tab\tab\tab\tab\tab the current open.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NIXL \tab\tab\plain\f2\fs18 1 \tab\tab Number of levels in the index component (0 for OBJECT=DATA).\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NLOGR \tab\tab\plain\f2\fs18 1 \tab\tab Number of records in the data component or index component.For\par\tab\tab\tab\tab\tab\tab z/OS UNIX files this field is set to zero.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NRETR \tab\tab\plain\f2\fs18 1 \tab\tab Number of records that have ever been retrieved from the data\par\tab\tab\tab\tab\tab\tab component (0 for OBJECT=INDEX).\par\par\tab\tab\tab\tab\tab\tab For RLS, this number is maintained on an ACB basis rather than a\par\tab\tab\tab\tab\tab\tab component basis. That is, it is a count only for the current open of the\par\tab\tab\tab\tab\tab\tab data set with this ACB. It is zero if no record has been processed since\par\tab\tab\tab\tab\tab\tab the current open.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NSSS \tab\tab\plain\f2\fs18 1 \tab\tab Number of control areas split in the data component (0 for\par\tab\tab\tab\tab\tab\tab OBJECT=INDEX). For z/OS UNIX files this field is set to zero.\par\par\tab\tab\tab\tab\tab\tab For RLS, this number is maintained on an ACB basis rather than a\par\tab\tab\tab\tab\tab\tab component basis. That is, it is a count only for the current open of the\par\tab\tab\tab\tab\tab\tab data set with this ACB. It is zero if no record has been processed since\par\tab\tab\tab\tab\tab\tab the current open.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NUIW \tab\tab\plain\f2\fs18 1 \tab\tab Number of writes not initiated by the user. For RLS NUIW does not\par\tab\tab\tab\tab\tab\tab apply, and is set to zero.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NUPDR \tab\tab\plain\f2\fs18 1 \tab\tab Number of updated records in the data component or index component.\par\par\tab\tab\tab\tab\tab\tab For RLS, this number is maintained on an ACB basis rather than a\par\tab\tab\tab\tab\tab\tab component basis. That is, it is a count only for the current open of the\par\tab\tab\tab\tab\tab\tab data set with this ACB. It is zero if no record has been processed since\par\tab\tab\tab\tab\tab\tab the current open.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab RKP \tab\tab\plain\f2\fs18 1 \tab\tab Displacement of the key of reference of the key field from the beginning\par\tab\tab\tab\tab\tab\tab of a data record (whether OBJECT=DATA or INDEX).\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab SDTASIZE \tab\plain\f2\fs18 2 \tab\tab Value for the amount of source data for extended format data sets using\par\tab\tab\tab\tab\tab\tab compression.\par\par\tab\tab\tab\tab\tab\tab For RLS, this number is maintained on an ACB basis rather than a\par\tab\tab\tab\tab\tab\tab component basis. That is, it is a count only for the current open of the\par\tab\tab\tab\tab\tab\tab data set with this ACB. It is zero if no record has been processed since\par\tab\tab\tab\tab\tab\tab the current open.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab STMST \tab\tab\plain\f2\fs18 2 \tab\tab System time stamp, which gives the time and day of the last time the\par\tab\tab\tab\tab\tab\tab data component or index component was closed, with bit 51 (counting\par\tab\tab\tab\tab\tab\tab from 0 at the left) equivalent to one microsecond and bits 52 through 63\par\tab\tab\tab\tab\tab\tab unused. For z/OS UNIX files this field is set to the time of day of the\par\tab\tab\tab\tab\tab\tab current open.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab UIW \tab\tab\plain\f2\fs18 1 \tab\tab Number of user-initiated writes. For RLS UIW does not apply, and is set\par\tab\tab\tab\tab\tab\tab to zero.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab XAVSPAC \tab\plain\f2\fs18 2 \tab\tab Amount of available space in the data component or index component,\par\tab\tab\tab\tab\tab\tab in bytes.\par\par\tab\tab\tab\tab\tab\tab XAVSPAC (instead of AVSPAC) specifies the return area (you are\par\tab\tab\tab\tab\tab\tab providing for VSAM for display) is two full words long to contain\par\tab\tab\tab\tab\tab\tab values possibly greater than 4GB.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab XENDRBA \tab\plain\f2\fs18 2 \tab\tab Ending RBA of the space used by the data component or index\par\tab\tab\tab\tab\tab\tab component; not the RBA of any record in the data set, but of the last\par\tab\tab\tab\tab\tab\tab used byte in the data set (high-used RBA).\par\par\tab\tab\tab\tab\tab\tab XENDRBA (instead of ENDRBA) specifies the return area (you are\par\tab\tab\tab\tab\tab\tab providing for VSAM for display) is two full words long to contain\par\tab\tab\tab\tab\tab\tab values possibly greater than 4GB.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab XHALCRBA \tab\plain\f2\fs18 2 \tab\tab High-allocated RBA; the relative byte address of the end of the data\par\tab\tab\tab\tab\tab\tab component (OBJECT=DATA) or the index component\par\tab\tab\tab\tab\tab\tab (OBJECT=INDEX).\par\par\tab\tab\tab\tab\tab\tab XHALCRBA (instead of HALCRBA) specifies the return area (you are\par\tab\tab\tab\tab\tab\tab providing for VSAM for display) is two full words long to contain\par\tab\tab\tab\tab\tab\tab values possibly greater than 4GB.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs28\b\par\page\tab Example 1: SHOWCB macro (display an access method control block)\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 SHOWCB\loch\f1\hich\f1\'97Display fields of an access method control block----\plain\f1\fs28\b\par\plain\f1\fs20 ----Example 1: SHOWCB macro (display an access method control block)\par\plain\f1\fs20\cf3 ----z390 vsam, SHOWCB doesn't support ACB "displays" ----\par\plain\f2\fs20\par\tab\tab In this example, a SHOWCB macro is used to display fields in an access method\par\tab\tab control block. The fields displayed (KEYLEN, LRECL, and RKP) permit the\par\tab\tab program to modify variables to process any one of many data sets that have\par\tab\tab different sized key fields and records and different placements of key field in a\par\tab\tab record.\par\plain\f1\fs18\par\tab\tab\tab\tab SHOWCB \tab ACB=CONTROL, \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab AREA=DISPLAY, \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab FIELDS=(KEYLEN, \tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab LRECL,RKP), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab LENGTH=12\par\tab\tab\tab\tab ,\par\tab\tab DISPLAY \tab DS \tab 0F \tab Align on fullword boundary.\par\tab\tab KEYLEN \tab DS \tab F\par\tab\tab LRECL \tab\tab DS \tab F\par\tab\tab RKP \tab\tab DS \tab F\par\plain\f2\fs20\par\tab\tab The SHOWCB macro's parameters are:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 ACB specifies the address of the access method control block to be displayed.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 AREA specifies the area used to display access method control block fields\par\tab\tab\tab begins on a fullword boundary.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 FIELDS specifies the KEYLEN, LRECL, and RKP fields are displayed.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 LENGTH specifies the length of the area used for the display is 12 bytes, enough\par\tab\tab\tab to accommodate the specified fields.\par\par\tab\tab This display allows the program to set up its variables for the particular data set it\par\tab\tab has opened.\par\plain\f1\fs28\b\par\page\tab SHOWCB\loch\f1\hich\f1\'97Display fields of an exit list\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 SHOWCB\loch\f1\hich\f1\'97Display fields of an exit list----\plain\f1\fs20\cf1\par\plain\f1\fs20\cf3 ----z390 vsam, does not support exit lists----\par\plain\f1\fs28\b\par\page\tab SHOWCB\loch\f1\hich\f1\'97Display fields of a request parameter list\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 SHOWCB\loch\f1\hich\f1\'97Display fields of an access method control block----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam, SHOWCB doesn't actually display fields. It moves them----\par ----to a nominated variable----\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 SHOWCB\loch\f1\hich\f1\'97Display fields of a request parameter list----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam, SHOWCB  for RPL supports RPL, AREA, FIELDS, LENGTH----\par ----and sub-parameters of FIELDS, AREA, FDBK, RBA, RECLEN, XRBA----\par  \plain\f2\fs20\par\tab\tab The format of the SHOWCB macro used to display fields in a request parameter\par\tab\tab list is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab\tab SHOWCB \tab RPL=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab\tab ,AREA=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab\tab ,LENGTH=\plain\f2\fs18\i abs expression\par\plain\f2\fs18\b\tab\tab\tab\tab\tab\tab ,FIELDS=([ACB][,AIXPC][,AREA][,AREALEN]\par\tab\tab\tab\tab\tab\tab [,ARG][,ECB][,FDBK][,FTNCD]\par\tab\tab\tab\tab\tab\tab [,KEYLEN][,MSGAREA]\par\tab\tab\tab\tab\tab\tab [,MSGLEN]\par\tab\tab\tab\tab\tab\tab [,NXTRPL][,RBA]\par\tab\tab\tab\tab\tab\tab [,RECLEN]\par\tab\tab\tab\tab\tab\tab [,RPLLEN]\par\tab\tab\tab\tab\tab\tab [,TRANSID]\par\tab\tab\tab\tab\tab\tab [,XRBA])\par\plain\f2\fs20\par\tab\tab The subparameters of the SHOWCB macro can be expressed as absolute numeric\par\tab\tab expressions, as character strings, as codes, as expressions that generate valid\par\tab\tab relocatable A-type address constants, in register notation, as S-type address\par\tab\tab constants, and as indirect S-type address constants. \loch\f2\hich\f2\'93Subparameters with GENCB,\par\tab\tab MODCB, SHOWCB, and TESTCB\'94 on page 5, further defines these operand\par\tab\tab expressions.\par\plain\f1\fs20\i\par\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies 1 to 8 characters that provide a symbolic address for the SHOWCB\par\tab\tab\tab macro.\par\plain\f1\fs20\b\par\tab\tab RPL=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the request parameter list whose fields are displayed. If\par\tab\tab\tab you used the RPL macro with a label, you can specify the label here. The RPL\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs20\tab\tab\tab parameter is optional when you want to display the length of a request\par\tab\tab\tab parameter list (FIELDS=RPLLEN). (All VSAM request parameter lists have the\par\tab\tab\tab same length, so you need not specify the address of a particular one.)\par\plain\f1\fs20\b\par\tab\tab AREA=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of a return area you supply for VSAM to display the\par\tab\tab\tab contents of the fields specified in the FIELDS parameter. The contents of the\par\tab\tab\tab fields are displayed in the order specified. The area must begin on a fullword\par\tab\tab\tab boundary.\par\plain\f1\fs20\b\par\tab\tab LENGTH=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the length, in bytes, of the return area you provide for VSAM to\par\tab\tab\tab display the indicated fields in. Each request parameter list field requires a\par\tab\tab\tab fullword. If the area is not large enough for all the fields, VSAM does not\par\tab\tab\tab display any of their contents and returns an error code (see \loch\f2\hich\f2\'93Control block\par\tab\tab\tab manipulation macro return and reason codes\'94 on page 129).\par\plain\f1\fs20\b\par\tab\tab FIELDS=([ACB][,AIXPC][,AREA][,AREALEN][,ARG]\par\tab\tab [,ECB][,FDBK][,FTNCD][,KEYLEN]\par\tab\tab [,MSGAREA][,MSGLEN]\par\tab\tab [,NXTRPL][,RBA][,RECLEN]\par\tab\tab [,RPLLEN][,TRANSID]\par\tab\tab [,XRBA][,TRANSID])\par\plain\f2\fs20\tab\tab\tab specifies the fields whose contents are displayed. Table 6 explains the\par\tab\tab\tab subparameters you can code in the FIELDS parameter for a request parameter\par\tab\tab\tab list.\par\plain\f2\fs18\b\par\tab\tab --------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\i\tab\tab Table 6. FIELDS Keyword Subparameters for a Display Request Parameter List\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab Subparameter \tab Fullwords \tab Description of the Field\par\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab ACB \tab\tab\plain\f2\fs18 1 \tab\tab Address of the access method control block that relates the request\par\plain\f2\fs18\b\tab\plain\f2\fs18\tab\tab\tab\tab\tab parameter list to the data.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab AIXPC \plain\f2\fs11 1 \tab\tab\plain\f2\fs18 1 \tab\tab Number of alternate index pointers.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab AREA \tab\tab\plain\f2\fs18 1 \tab\tab Address of the return area the program uses to process a data record for\par\tab\tab\tab\tab\tab\tab the access as defined by the request parameter list.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab AREALEN \tab\plain\f2\fs18 1 \tab\tab Length of the return area whose address is given in AREA.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab ARG \tab\tab\plain\f2\fs18 1 \tab\tab Address of the field containing a search argument, if search arguments\par\tab\tab\tab\tab\tab\tab are being used.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab ECB \plain\f2\fs11 1 \tab\tab\plain\f2\fs18 1 \tab\tab Address of an event control block, if any, in which VSAM indicates the\par\tab\tab\tab\tab\tab\tab completion of requests defined by the request parameter list.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab FDBK \plain\f2\fs11 1 \tab\tab\plain\f2\fs18 1 \tab\tab Reason code that VSAM puts into the feedback field to describe the error\par\tab\tab\tab\tab\tab\tab detected for the preceding request. (The meaning of this code depends\par\tab\tab\tab\tab\tab\tab on the contents of register 15, which indicates whether the request was\par\tab\tab\tab\tab\tab\tab successful or failed because of a logical or physical error. See \loch\f2\hich\f2\'93Record\par\tab\tab\tab\tab\tab\tab management return and reason codes\'94 on page 130.)\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab FTNCD \plain\f2\fs11 1 \tab\plain\f2\fs18 1 \tab\tab Code that describes the function in which a logical or physical error\par\tab\tab\tab\tab\tab\tab occurred; indicates whether the upgrade set may have been modified\par\tab\tab\tab\tab\tab\tab incorrectly by the preceding request. (The meaning of this code depends\par\tab\tab\tab\tab\tab\tab on the contents of register 15, which indicates whether the request was\par\tab\tab\tab\tab\tab\tab successful or failed because of a logical or physical error. See \loch\f2\hich\f2\'93Record\par\tab\tab\tab\tab\tab\tab management return and reason codes\'94 on page 130.)\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab KEYLEN \tab\plain\f2\fs18 1 \tab\tab Length of the search argument, if a generic key is used for a search\par\tab\tab\tab\tab\tab\tab argument.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab MSGAREA \plain\f2\fs11 1 \tab\plain\f2\fs18 1 \tab\tab Address of the area, if any, into which VSAM puts physical error\par\tab\tab\tab\tab\tab\tab messages.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab MSGLEN \tab\plain\f2\fs18 1\tab  \tab Length of the message area, if any.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab NXTRPL \tab\plain\f2\fs18 1 \tab\tab Address of the next request parameter list, if another one is chained to\par\tab\tab\tab\tab\tab\tab this one.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab RBA \plain\f2\fs11 1 \tab\tab\plain\f2\fs18 1 \tab\tab Relative byte address of the most recently processed record; you could\par\tab\tab\tab\tab\tab\tab use it to record the RBAs of records that you are retrieving or storing\par\tab\tab\tab\tab\tab\tab sequentially or by key.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab RECLEN \plain\f2\fs11 1 \tab\plain\f2\fs18 1 \tab\tab Length of the data record, access to which is defined by the request\par\tab\tab\tab\tab\tab\tab parameter list.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab RPLLEN \tab\plain\f2\fs18 1 \tab\tab Length of a request parameter list.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab TRANSID \tab\plain\f2\fs18 1 \tab\tab Number that relates modified buffers in a buffer pool; described in \plain\f2\fs18\i z/OS\par\tab\tab\tab\tab\tab\tab DFSMS Using Data Sets\plain\f2\fs18 .\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab XRBA \plain\f2\fs11 1 \tab\tab\plain\f2\fs18 2 \tab\tab The return area (you are providing for VSAM for display) is two full\par\tab\tab\tab\tab\tab\tab words long to contain values possibly greater than 4GB.\par\plain\f2\fs18\b\tab\tab --------------------------------------------------------------------------------------------------------------------\par\tab\tab Note:\par\plain\f4\fs18\tab\tab 1. \tab\plain\f2\fs18 These fields are significant only if the requests are completed. Therefore, you must wait until the request\par\tab\tab\tab completes (for example, by issuing a CHECK if the request is asynchronous) before issuing SHOWCB.\par\plain\f1\fs28\b\par\page\tab Example: SHOWCB macro (display a physical error message)\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 SHOWCB\loch\f1\hich\f1\'97Display a physical error message----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam, SHOWCB  doesn't support the display of physical error messages ----\par\plain\f2\fs20\par\tab\tab In this example, a SHOWCB macro is used to display a physical error message.\par\tab\tab This example assumes that there is no SYNAD routine (or the SYNAD exit is\par\tab\tab inactive). In this case, VSAM returns control to your program following the last\par\tab\tab executable instruction if a physical error occurs. Register 15 indicates a physical\par\tab\tab error (12), and the feedback field in the request parameter list contains a code\par\tab\tab identifying the error. The message area contains more details about the error.\par\tab\tab Register 1 points to the request parameter list.\par\plain\f1\fs18\par\tab\tab REQUEST \tab RPL \tab MSGAREA=MESSGES, MSGLEN=128 \tab\tab\tab x\par\tab\tab\tab\tab ..\par\tab\tab\tab\tab SHOWCB \par\tab\tab\tab\tab\tab AREA=MSGADDR, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab FIELDS=MSGAREA, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab LENGTH=4, \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab RPL=REQUEST\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR 15,15\par\tab\tab\tab\tab BNZ \tab CHECKO\par\tab\tab\tab\tab .\par\tab\tab CHECKO \tab ... \tab\tab\tab Display failed.\par\tab\tab\tab\tab .\par\tab\tab MESSGES \tab DS \tab CL128 \tab\tab For VSAM to give you a detailed \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab message about a physical error.\par\tab\tab\tab\tab .\par\tab\tab MSGADDR \tab DS \tab F \tab\tab For displaying the address of the \tab\tab x\par\tab\tab\tab\tab\tab\tab\tab message area with SHOWCB.\par\plain\f2\fs20\par\tab\tab The RPL macro in this example provides for a message area, MESSGES, of 128\par\tab\tab bytes to be used for any physical error message.\par\par\tab\tab The SHOWCB macro's parameters are:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 AREA and LENGTH specify a 4-byte area, MSGADDR, used for displaying the\par\tab\tab\tab address of the message area for the associated request parameter list.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 FIELDS specifies the address of the message area is displayed.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 RPL specifies the name, REQUEST, of the request parameter list for which the\par\tab\tab\tab message area address is displayed.\par\plain\f1\fs28\b\par\page\tab SHOWCB\loch\f1\hich\f1\'97List form\par\plain\f2\fs20\par\tab\tab The format of the list form of SHOWCB is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab SHOWCB \tab [\{ACB|EXLST|RPL\}=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab ,AREA=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab ,FIELDS=(\plain\f2\fs18\i keyword\plain\f2\fs18 [,\plain\f2\fs18\i keyword\plain\f2\fs18\b ,...])\par\tab\tab\tab\tab\tab ,LENGTH=\plain\f2\fs18\i abs expression\par\plain\f2\fs18\b\tab\tab\tab\tab\tab ,MF=\{L|(L,\plain\f2\fs18\i address\plain\f2\fs18\b [,\plain\f2\fs18\i label\plain\f2\fs18\b ])\}\par\tab\tab\tab\tab\tab ,[OBJECT=\{DATA|INDEX\}]\par\plain\f1\fs22\b\par\plain\f1\fs28\b\tab SHOWCB\loch\f1\hich\f1\'97Execute form\par\plain\f2\fs20\par\tab\tab The format of the execute form of SHOWCB is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab SHOWCB \tab [\{ACB|EXLST|RPL\}=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab ,AREA=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab ,MF=(E,\plain\f2\fs18\i address\plain\f2\fs18\b )\par\tab\tab\tab\tab\tab [,OBJECT=\{DATA|INDEX\}]\par\plain\f1\fs28\b\tab\par\tab SHOWCB\loch\f1\hich\f1\'97Generate form\par\plain\f2\fs20\par\tab\tab The format of the generate form of SHOWCB is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab SHOWCB \tab [\{ACB|EXLST|RPL\}=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab ,AREA=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab ,FIELDS=(\plain\f2\fs18\i keyword\plain\f2\fs18\b [,\plain\f2\fs18\i keyword\plain\f2\fs18\b ,...])\par\tab\tab\tab\tab\tab ,LENGTH=\plain\f2\fs18\i number\par\plain\f2\fs18\b\tab\tab\tab\tab\tab ,MF=(G,\plain\f2\fs18\i address\plain\f2\fs18\b [,\plain\f2\fs18\i label\plain\f2\fs18\b ])\par\tab\tab\tab\tab\tab [,OBJECT=\{DATA|INDEX\}]\par\plain\f1\fs22\b\par\plain\f1\fs28\b\page\tab TESTCB\loch\f1\hich\f1\'97Test a field of an access method control block\par\plain\f1\fs20\par ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 TESTCB\loch\f1\hich\f1\'97Test a field of an access method control block----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam, TESTCB, as the name implies, TESTs a field in the Control Block----\par ----It'll only support fields in the RPL and then it only supports RPL, FDBK, RECLEN----\par\plain\f2\fs20\par\tab\tab Only one keyword can be specified each time you issue TESTCB.\par\par\tab\tab The format of the TESTCB macro used to test a field in an access method control\par\tab\tab block is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab TESTCB \tab ACB=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab [,ERET=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,OBJECT=\plain\f2\fs18\b\ul DATA\plain\f2\fs18\b |INDEX]\par\tab\tab\tab\tab\tab ,\{ATRB=([ESDS][,KSDS][,LDS][,REPL]\par\tab\tab\tab\tab\tab [,RRDS][,SPAN][,SSWD][,VRRDS][,WCK])|\par\tab\tab\tab\tab\tab ATRB=COMPRESS|\par\tab\tab\tab\tab\tab ATRB=UNQ|\par\tab\tab\tab\tab\tab ATRB=XADDR|\par\tab\tab\tab\tab\tab MACRF=([ADR][,AIX][,CFX][,CNV][,DDN]\par\tab\tab\tab\tab\tab\tab [,DFR][,DIR][,DSN][,GSR][,ICI][,IN]\par\tab\tab\tab\tab\tab\tab [,KEY][,LEW][,LSR][,NCI][,NDF][,NFX][,NIS]\par\tab\tab\tab\tab\tab\tab [,NLW][,NRM][NRS][,NSR][,NUB][,OUT][,RLS][,RST]\par\tab\tab\tab\tab\tab\tab [,SEQ][,SIS][,SKP][,UBF])|\par\tab\tab\tab\tab\tab OFLAGS=OPEN|\par\tab\tab\tab\tab\tab OPENOBJ=\{PATH|BASE|AIX\}|\par\tab\tab\tab\tab\tab ACBLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab AVSPAC=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab BSTRNO=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab BUFND=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f2\fs18\b\tab\tab\tab\tab\tab BUFNI=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab BUFNO=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab BUFSP=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab CINV=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab DDNAME=\plain\f2\fs18\i character string\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab ENDRBA=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab ERROR=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab EXLST=\plain\f2\fs18\i address\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab FS=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab KEYLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab LRECL=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab MAREA=\plain\f2\fs18\i address\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab MLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab NCIS=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab NDELR=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab NEXCP=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab NEXT=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab NINSR=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab NIXL=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab NLOGR=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab NRETR=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab NSSS=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab NUPDR=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab PASSWD=\plain\f2\fs18\i address\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab RKP=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab SHRPOOL=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab STMST=\plain\f2\fs18\i address\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab STRNO=\plain\f2\fs18\i abs expression\plain\f2\fs18\b\}\par\plain\f2\fs20\tab\tab The subparameters of the TESTCB macro can be expressed as absolute numeric\par\tab\tab expressions, as character strings, as codes, as expressions that generate valid\par\tab\tab relocatable A-type address constants, in register notation, as S-type address\par\tab\tab constants, and as indirect S-type address constants. \loch\f2\hich\f2\'93Subparameters with GENCB,\par\tab\tab MODCB, SHOWCB, and TESTCB\'94 on page 5, further defines these operand\par\tab\tab expressions.\par\plain\f1\fs20\b\par\tab\tab ACB=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the access method control block whose information you\par\tab\tab\tab want to test. Omit it only if you are testing the length of an access method\par\tab\tab\tab control block (ACBLEN=number). (All VSAM access method control blocks\par\tab\tab\tab have the same length.)\par\plain\f1\fs20\b\par\tab\tab ERET=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of a routine to which VSAM gives control if an error\par\tab\tab\tab occurs and VSAM is unable to test for the specified condition. For example,\par\tab\tab\tab testing AVSPAC in an access method control block for an unopened data set\par\tab\tab\tab would fail. VSAM indicates in register 15 whether it could do the test and, if\par\tab\tab\tab not, indicates in register 0 the reason it could not. (The reasons are discussed\par\tab\tab\tab under \loch\f2\hich\f2\'93Control block manipulation macro return and reason codes\'94 on page\par\tab\tab\tab 129.) A failure trying to execute TESTCB indicates a basic logical problem in\par\tab\tab\tab the processing program, so the error routine would probably issue an ABEND.\par\tab\tab\tab If it lets the program continue, it must branch to the continuation point itself,\par\tab\tab\tab and not return to VSAM.\par\plain\f1\fs20\b\par\tab\tab OBJECT=\{\plain\f1\fs20\b\ul DATA\plain\f1\fs20\b |INDEX\}\par\plain\f2\fs20\tab\tab\tab specifies whether to test a field for data or for index.\par\plain\f1\fs20\b\par\tab\tab ATRB=([ESDS][,KSDS][,LDS]\par\tab\tab\tab [,REPL]\par\tab\tab\tab [,RRDS]\par\tab\tab\tab [,SPAN]\par\tab\tab\tab [,SSWD]\par\tab\tab\tab [,VRRDS]\par\tab\tab\tab [,WCK])\par\plain\f2\fs20\tab\tab\tab specifies, for an open data set, the attribute to be tested for, as follows:\par\plain\f1\fs20\b\par\tab\tab\tab ESDS\par\plain\f2\fs20\tab\tab\tab\tab specifies entry-sequenced data set.\par\plain\f1\fs20\b\tab\tab\tab KSDS\par\plain\f2\fs20\tab\tab\tab\tab specifies key-sequenced data set.\par\plain\f1\fs20\b\tab\tab\tab LDS\par\plain\f2\fs20\tab\tab\tab\tab specifies linear data set.\par\tab\tab\tab\tab\par\tab\tab\tab\tab When specified, LDS must be the only parameter indicated by ATRB. All\par\tab\tab\tab\tab other parameters are ignored and a binary test performed indicating\par\tab\tab\tab\tab whether the data set is a linear data set (return code 0) or not (return code\par\tab\tab\tab\tab 1).\par\plain\f1\fs20\b\tab\tab\tab REPL\par\plain\f2\fs20\tab\tab\tab\tab specifies that some portion of the index is replicated.\par\plain\f1\fs20\b\tab\tab\tab RRDS\par\plain\f2\fs20\tab\tab\tab\tab specifies relative record data set.\par\plain\f1\fs20\b\tab\tab\tab SPAN\par\plain\f2\fs20\tab\tab\tab\tab specifies that the data set contains spanned records.\par\plain\f1\fs20\b\tab\tab\tab SSWD\par\plain\f2\fs20\tab\tab\tab\tab specifies that the sequence set is adjacent to the data.\par\plain\f1\fs20\b\tab\tab\tab VRRDS\par\plain\f2\fs20\tab\tab\tab\tab specifies variable-length relative record data set.\par\plain\f1\fs20\b\tab\tab\tab WCK\par\plain\f2\fs20\tab\tab\tab\tab specifies that the write operations for the data set are being verified.\par\plain\f1\fs20\b\par\tab\tab ATRB=COMPRESS\par\plain\f2\fs20\tab\tab\tab specifies if the data set is in compressed format.\par\plain\f1\fs20\b\par\tab\tab ATRB=UNQ\par\plain\f2\fs20\tab\tab\tab specifies, for an open alternate index or path, that the alternate index requires\par\tab\tab\tab unique keys. The test for ATRB=UNQ must be made with a separate TESTCB\par\tab\tab\tab macro. VSAM examines the path control blocks for the UNQ attribute. VSAM\par\tab\tab\tab also examines the base cluster's control blocks for the other attributes. If other\par\tab\tab\tab attributes are tested for, VSAM examines the base cluster's control blocks for\par\tab\tab\tab all attributes. The test for ATRB=UNQ would give inaccurate results when\par\tab\tab\tab applied to the base cluster's control blocks.\par\plain\f1\fs20\b\par\tab\tab ATRB=XADDR\par\plain\f2\fs20\tab\tab\tab specifies if the data set is in extended addressability format.\par\plain\f1\fs20\b\par\tab\tab MACRF=([ADR][,AIX][,CFX]\par\tab\tab\tab [,CNV] [,DDN]\par\tab\tab\tab [,DFR] [,DIR]\par\tab\tab\tab [,DSN] [,GSR]\par\tab\tab\tab [,ICI][,IN]\par\tab\tab\tab [,KEY][,LEW]\par\tab\tab\tab [,LSR][,NCI]\par\tab\tab\tab [,NDF][,NFX]\par\tab\tab\tab [,NIS][,NLW]\par\tab\tab\tab [,NRM][,NRS]\par\tab\tab\tab [,NSR][,NUB]\par\tab\tab\tab [,OUT][,RLS][,RST]\par\tab\tab\tab [,SEQ][,SIS]\par\tab\tab\tab [,SKP][,UBF]\par\plain\f2\fs20\tab\tab\tab specifies that a test is made to determine, at any time, what subparameter or\par\tab\tab\tab combination of subparameters is being used for processing.\par\plain\f1\fs20\b\par\tab\tab OFLAGS=OPEN\par\plain\f2\fs20\tab\tab\tab specifies that a test is made to determine, after open, whether the data set\par\tab\tab\tab identified by the control block was opened.\par\plain\f1\fs20\b\par\tab\tab OPENOBJ=PATH|BASE|AIX\par\plain\f2\fs20\tab\tab\tab specifies that a test is made to determine, after open, whether an opened object\par\tab\tab\tab is a path, a base cluster, or an alternate index.\par\plain\f2\fs20\b\par\tab\tab\tab Note: \tab\plain\f2\fs20 When OPENOBJ is used with an ACB opened for an alternate index,\par\tab\tab\tab\tab both OPENOBJ=AIX and OPENOBJ=BASE return TRUE (PSW condition\par\tab\tab\tab\tab code = 0). When OPENOBJ is used with an ACB opened for a path, only\par\tab\tab\tab\tab OPENOBJ=PATH returns TRUE.\par\par\tab\tab The remaining parameters represent fields in an access method control block that\par\tab\tab can be compared with the value specified. These fields are the same as those that\par\tab\tab can be displayed by using the SHOWCB macro and are described in Table 5 on\par\tab\tab page 96.\par\par\tab\tab If you omit a routine to handle error conditions, you can examine register 15\par\tab\tab following TESTCB by using a branch table, for example, but do not alter the PSW\par\tab\tab condition code that VSAM set to indicate the result of a test until you have tested\par\tab\tab it.\par\plain\f2\fs20\b\par\tab\tab Important: \plain\f2\fs20 If you issue a TESTCB for a non-VSAM and non-VTAM ACB, the\par\tab\tab results will be unpredictable.\par\plain\f1\fs28\b\par\page\tab Example: TESTCB macro (test for data set attributes)\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 TESTCB\loch\f1\hich\f1\'97Test a field of an access method control block----\plain\f1\fs28\b\par\plain\f1\fs20 ----Example: TESTCB macro (test for data set attributes)----\par\plain\f1\fs20\cf3 ----z390 vsam, TESTCB, as the name implies, TESTs a field in the Control Block----\par ----It'll only support fields in the RPL and then it only supports RPL, FDBK, RECLEN----\par\plain\f2\fs20\par\tab\tab In this example, a TESTCB macro is used to determine whether a data set is a key\par\tab\tab sequenced or an ESDS.\par\plain\f1\fs18\par\tab\tab LIST \tab\tab RPL\par\tab\tab\tab\tab .\par\tab\tab\tab\tab SHOWCB \tab AREA=DATAFCT,\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab FIELDS=ACB, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab LENGTH=4, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab RPL=LIST\par\tab\tab\tab\tab .\par\tab\tab\tab\tab LTR \tab\tab 15,15\tab\par\tab\tab\tab\tab BNZ \tab\tab CHECKO\par\tab\tab\tab .\par\tab\tab\tab\tab TESTCB \tab ACB=(*, \tab\tab Is the data set key sequenced? \tab x\par\tab\tab\tab\tab\tab\tab DATAFCT), \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab ATRB=KSDS, \tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab\tab ERET=CHECKO\par\tab\tab\tab\tab .\par\tab\tab\tab\tab BE \tab\tab KEYSEQ \tab Yes.\par\tab\tab\tab\tab .\par\tab\tab KEYSEQ\tab  ...\tab\tab\tab\tab Data set is key sequenced.\par\tab\tab CHECKO\tab  ... \tab\tab\tab\tab Display or test failed.\par\tab\tab\tab .\par\tab\tab DATAFCT \tab DS \tab\tab F \tab\tab For displaying address of access \tab x\par\tab\tab\tab\tab\tab\tab\tab\tab method control block.\par\plain\f2\fs20\par\tab\tab The SHOWCB macro's parameters are:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 AREA and LENGTH specify a 4-byte area, DATAFCT, aligned on a fullword\par\tab\tab\tab boundary, used for the display.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 FIELDS and RPL specify the address of the access method control block in the\par\tab\tab\tab LIST request parameter list to be displayed.\par\par\tab\tab The TESTCB macro's parameters are:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 ACB specifies that a field in the access method control block, the address of\par\tab\tab\tab which is located at DATAFCT, is to be tested. The SHOWCB macro put the\par\tab\tab\tab address of the access method control block at DATAFCT.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 ATRB specifies that the access method control block is to be tested to determine\par\tab\tab\tab whether it is a KSDS.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 ERET specifies that a routine named CHECK0 is to be given control if an error\par\tab\tab\tab occurs that makes it impossible to make the test.\par\par\tab\tab There is no need to examine the feedback field in an EODAD routine. It can be\par\tab\tab assumed to contain the end-of-data-set indication.\par\plain\f1\fs22\b\par\plain\f1\fs28\b\page\tab TESTCB\loch\f1\hich\f1\'97Test a field of an exit list\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 TESTCB\loch\f1\hich\f1\'97Test a field of an exit list----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam, TESTCB doesn't support exit lists----\par\plain\f1\fs28\b\par\page\tab Example: TESTCB macro (use a branch table)\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 TESTCB\loch\f1\hich\f1\'97Test a field of an exit list----\plain\f1\fs28\b\par\plain\f1\fs20 ----Example: TESTCB macro (use a branch table)----\par\plain\f1\fs20\cf3 ----z390 vsam, doesn't support TESTCB macro (use a branch table)----\par\plain\f2\fs20\par\tab\tab In this example, a TESTCB macro is used to test whether ENDPROC is the routine\par\tab\tab supplied for the EODAD exit in the exit list EXITS, and whether the EODAD exit\par\tab\tab is active. A branch table is used to determine whether the test is successful.\par\plain\f1\fs18\par\tab\tab\tab TESTCB \tab EODAD=(ENDPROC,A), \tab Is ENDPROC supplied and is the exit x\par\tab\tab\tab\tab\tab EXLST=EXITS \tab\tab active?\par\tab\tab\tab B \tab\tab *+4(15)\par\plain\f2\fs20\tab\tab\tab .\par\tab\tab If the test was made successfully, register 15 contains 0 and the next instruction is\par\tab\tab executed.\par\plain\f1\fs18\par\tab\tab\tab B \tab\tab TEST1\par\plain\f2\fs20\par\tab\tab If it was unsuccessful, register 15 contains 4 and the next instruction is executed.\par\plain\f1\fs18\par\tab\tab\tab ABEND 2,DUMP\par\tab\tab\tab .\par\tab\tab TEST1 \tab BNE \tab NO\par\tab\tab\tab .\par\tab\tab YES \tab ... \tab\tab\tab\tab\tab Yes; ENDPROC is supplied and active.\par\tab\tab\tab .\par\tab\tab NO \tab ... \tab\tab\tab\tab\tab ENDPROC is not supplied, or the exit\par\tab\tab\tab\tab\tab\tab\tab\tab is not active.\par\plain\f1\fs22\b\par\plain\f1\fs28\b\page\tab TESTCB\loch\f1\hich\f1\'97Test a field of a request parameter list\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 TESTCB\loch\f1\hich\f1\'97Test a field of a request parameter list----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam, TESTCB, as the name implies, TESTs a field in the Control Block----\par ----It'll only support fields in the RPL and then it only supports RPL, FDBK, RECLEN----\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 TESTCB\loch\f1\hich\f1\'97Test a field of a request parameter list----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----IBM vsam, there is one example----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs20\b\cf3 ----IBM Example: RPL macro----\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f1\fs18\tab\tab\tab TESTCB \tab RPL=(3), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab RECLEN=80\par\tab\tab\tab .\par\tab\tab\tab BE \tab\tab NOCHNGE\par\tab\tab\tab .\par\tab\tab CHANGE... \tab\tab\tab\tab Because record length in the RPL not 80, \tab x\par\tab\tab\tab\tab\tab\tab\tab modify length indicator so it is 80.\par\tab\tab\tab .\par\tab\tab NOCHNGE... \tab\tab\tab\tab Because record length in the RPL is 80, \tab x\par\tab\tab\tab\tab\tab\tab\tab no change required.\par\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par unchanged\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f1\fs20\cf1 --------------------------------------------------------------------------------------------------------------------------------------------------\par --------------------------------------------------------------------------------------------------------------------------------------------------\par\plain\f2\fs20\par\tab\tab The format of the TESTCB macro to test fields in a request parameter list is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab TESTCB \tab RPL=\plain\f2\fs18\i address\par\plain\f2\fs18\b\tab\tab\tab\tab\tab [,ERET=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab ,\{AIXFLAG=AIXPKP|\par\tab\tab\tab\tab\tab AIXPC=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab FTNCD=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab IO=COMPLETE|\par\tab\tab\tab\tab\tab OPTCD=([ADR][,ARD][,ASY][,BWD]\par\tab\tab\tab\tab\tab\tab [,CNV] [,DIR][,FKS][,FWD]\par\tab\tab\tab\tab\tab\tab [,GEN][,KEQ][,KEY][,KGE][,LOC]\par\tab\tab\tab\tab\tab\tab [,LRD][,MVE][,NSP][,NUP][,SEQ]\par\tab\tab\tab\tab\tab\tab [,SKP][,SYN][,UPD])|\par\tab\tab\tab\tab\tab ACB=\plain\f2\fs18\i address\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab AREA=\plain\f2\fs18\i address\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab AREALEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab ARG=\plain\f2\fs18\i address\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab ECB=\plain\f2\fs18\i address\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab FDBK=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab KEYLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab MSGAREA=\plain\f2\fs18\i address\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab MSGLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab NXTRPL=\plain\f2\fs18\i address\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab RBA=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab RECLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab RPLLEN=\plain\f2\fs18\i abs expression\plain\f2\fs18\b |\par\tab\tab\tab\tab\tab TRANSID=\plain\f2\fs18\i abs expression\plain\f2\fs18\b\}\par\plain\f2\fs20\par\tab\tab The subparameters of the TESTCB macro can be expressed as absolute numeric\par\tab\tab expressions, as character strings, as codes, as expressions that generate valid\par\tab\tab relocatable A-type address constants, in register notation, as S-type address\par\tab\tab constants, and as indirect S-type address constants. \loch\f2\hich\f2\'93Subparameters with GENCB,\par\tab\tab MODCB, SHOWCB, and TESTCB\'94 on page 5, further defines these operand\par\tab\tab expressions.\par\plain\f1\fs20\i\par\tab\tab label\par\plain\f2\fs20\tab\tab\tab specifies 1 to 8 characters that provide a symbolic address for the TESTCB\par\tab\tab\tab macro.\par\plain\f1\fs20\b\par\tab\tab RPL=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of the request parameter list whose information you want\par\tab\tab\tab to test. You may omit it only if you are testing the length of a request\par\tab\tab\tab parameter list (RPLLEN=\plain\f2\fs20\i number\plain\f2\fs20 ). (All request parameter lists have the same\par\tab\tab\tab length.)\par\plain\f1\fs20\b\par\tab\tab ERET=\plain\f1\fs20\i address\par\plain\f2\fs20\tab\tab\tab specifies the address of a routine to which VSAM gives control if an error\par\tab\tab\tab occurs and VSAM is unable to test for the specified condition. For example,\par\tab\tab\tab testing AVSPAC in an access method control block for an unopened data set\par\tab\tab\tab would fail. VSAM indicates in register 15 whether it could do the test and, if\par\tab\tab\tab not, indicates in register 0 the reason it could not. (The reasons are discussed\par\tab\tab\tab under \loch\f2\hich\f2\'93Control block manipulation macro return and reason codes\'94 on page\par\tab\tab\tab 129.) A failure trying to execute TESTCB indicates a basic logical problem in\par\tab\tab\tab the processing program, so the error routine would probably issue an abend. If\par\tab\tab\tab it lets the program continue, it must branch to the continuation point itself,\par\tab\tab\tab and not return to VSAM.\par\plain\f1\fs20\b\par\tab\tab AIXFLAG=AIXPKP\par\plain\f2\fs20\tab\tab\tab specifies that prime-key pointers are used rather than RBAs.\par\plain\f1\fs20\b\par\tab\tab AIXPC=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies the pointer count.\par\plain\f1\fs20\b\par\tab\tab FTNCD=\plain\f1\fs20\i abs expression\par\plain\f2\fs20\tab\tab\tab specifies whether the upgrade set is correct or may have been modified by a\par\tab\tab\tab request. These codes are described under \loch\f2\hich\f2\'93Component codes (RPLCMPON)\'94\par\tab\tab\tab on page 132.\par\plain\f1\fs20\b\par\tab\tab IO=COMPLETE\par\plain\f2\fs20\tab\tab\tab specifies that a test is made to determine whether an asynchronous request has\par\tab\tab\tab been completed. (When you issue a CHECK macro, you suspend processing\par\tab\tab\tab until a request has been completed.)\par\plain\f1\fs20\b\par\tab\tab OPTCD=([,ADR][,ARD][,ASY][,BWD] [,CNV]\par\tab\tab\tab [,DIR][,FKS][,FWD][,GEN][,KEQ]\par\tab\tab\tab [,KEY][,KGE][,LOC][,LRD][,MVE]\par\tab\tab\tab [,NSP][,NUP][,SEQ]\par\tab\tab\tab [,SKP][,SYN][,UPD]\par\plain\f2\fs20\tab\tab\tab specifies that a test is to be made to determine what subparameter or\par\tab\tab\tab combination of subparameters is being used for the request. See Table 3 on\par\tab\tab\tab page 81 for a description of these subparameters.\par\plain\f1\fs28\b\par\page\tab Example: TESTCB macro (test a request parameter list)\par\plain\f1\fs18\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----\plain\f1\fs20 TESTCB\loch\f1\hich\f1\'97Test a field of a request parameter list----\plain\f1\fs28\b\par\plain\f1\fs20 ----Example: TESTCB macro (test a request parameter list)----\par\plain\f1\fs20\cf3 ----z390 vsam, TESTCB, as the name implies, TESTs a field in the Control Block----\par ----It'll only support fields in the RPL and then it only supports RPL, FDBK, RECLEN----\par\plain\f2\fs20\par\plain\f1\fs18\tab\tab\tab TESTCB \tab RPL=(3), \tab\tab\tab\tab\tab\tab x\par\tab\tab\tab\tab\tab RECLEN=80\par\tab\tab\tab .\par\tab\tab\tab BE \tab\tab NOCHNGE\par\tab\tab\tab .\par\tab\tab CHANGE... \tab\tab\tab\tab Because record length in the RPL not 80, \tab x\par\tab\tab\tab\tab\tab\tab\tab modify length indicator so it is 80.\par\tab\tab\tab .\par\tab\tab NOCHNGE... \tab\tab\tab\tab Because record length in the RPL is 80, \tab x\par\tab\tab\tab\tab\tab\tab\tab no change required.\par\plain\f2\fs20\par\tab\tab The TESTCB macro's parameters are:\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 RPL specifies that the address of the request parameter list to be tested is\par\tab\tab\tab contained in register 3.\par\plain\f1\fs20\par\tab\tab v \tab\plain\f2\fs20 RECLEN specifies that the record length indicated in the request parameter list\par\tab\tab\tab is to be tested to determine whether it is 80.\par\plain\f1\fs28\b\par\page\tab TESTCB\loch\f1\hich\f1\'97List form\par\plain\f2\fs20\par\tab\tab The format of the list form of TESTCB is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab TESTCB \tab [\{ACB|EXLST|RPL\}=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,ERET=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\plain\f2\fs18\i\tab\tab\tab\tab\tab keyword\plain\f2\fs18\b =\{\plain\f2\fs18\i address\plain\f2\fs18 |\plain\f2\fs18\i name\plain\f2\fs18 |\plain\f2\fs18\i abs expression\plain\f2\fs18 |\plain\f2\fs18\i option\plain\f2\fs18\b\},...\par\tab\tab\tab\tab\tab ,MF=\{L|(L,\plain\f2\fs18\i address\plain\f2\fs18\b [,\plain\f2\fs18\i label\plain\f2\fs18\b ])\}\par\tab\tab\tab\tab\tab [,OBJECT=\{DATA|INDEX\}]\par\plain\f2\fs20\par\tab\tab If the execute form of TESTCB is used and EXLST is used as a keyword to be\par\tab\tab processed, the block must be identified by ACB=.\par\plain\f1\fs22\b\par\plain\f1\fs28\b\tab TESTCB\loch\f1\hich\f1\'97Execute form\par\plain\f2\fs20\par\tab\tab The format of the execute form of TESTCB is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab TESTCB \tab [\{ACB|EXLST|RPL\}=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,ERET=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\plain\f2\fs18\i\tab\tab\tab\tab\tab keyword\plain\f2\fs18\b =\{\plain\f2\fs18\i address\plain\f2\fs18 |\plain\f2\fs18\i name\plain\f2\fs18 |\plain\f2\fs18\i abs expression\plain\f2\fs18 |\plain\f2\fs18\i option\plain\f2\fs18\b\},...\par\tab\tab\tab\tab\tab ,MF=(E,\plain\f2\fs18\i address\plain\f2\fs18\b )\par\tab\tab\tab\tab\tab [,OBJECT=\{DATA|INDEX\}]\par\plain\f2\fs20\b\par\tab\tab Rule: \plain\f2\fs20 If the execute form of TESTCB is used and EXLST is used as a keyword to\par\tab\tab be processed, the block must be identified by ACB=.\par\plain\f1\fs28\b\par\tab TESTCB\loch\f1\hich\f1\'97Generate form\par\plain\f2\fs20\par\tab\tab The format of the generate form of TESTCB is:\par\plain\f2\fs18\b\par\tab\tab [\plain\f2\fs18\i label\plain\f2\fs18\b ] \tab TESTCB \tab [\{ACB|EXLST|RPL\}=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\tab\tab\tab\tab\tab [,ERET=\plain\f2\fs18\i address\plain\f2\fs18\b ]\par\plain\f2\fs18\i\tab\tab\tab\tab\tab keyword\plain\f2\fs18\b =\{\plain\f2\fs18\i address\plain\f2\fs18 |\plain\f2\fs18\i name\plain\f2\fs18 |\plain\f2\fs18\i abs expression\plain\f2\fs18 |\plain\f2\fs18\i option\plain\f2\fs18\b\},...\par\tab\tab\tab\tab\tab ,MF=(G,\plain\f2\fs18\i address\plain\f2\fs18\b [,\plain\f2\fs18\i label\plain\f2\fs18\b ])\par\tab\tab\tab\tab\tab [,OBJECT=\{DATA|INDEX\}]\par\plain\f1\fs28\b\par\tab VERIFY\loch\f1\hich\f1\'97Synchronize end of data\par\plain\f2\fs20\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----VERIFY\plain\f1\fs20\loch\f1\hich\f1\'97Synchronize end of data----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam, does not support VERIFY----\par\plain\f1\fs28\b\par\tab WRTBFR\loch\f1\hich\f1\'97Write buffer\par\plain\f2\fs20\par\par\plain\f1\fs20 ----Part 1. VSAM Macro Instructions----\par ----Chapter 2. VSAM macro descriptions and examples----\par\plain\f1\fs20\cf1 ----WRTBFR\plain\f1\fs20\loch\f1\hich\f1\'97Write buffer----\plain\f1\fs28\b\par\plain\f1\fs20\cf3 ----z390 vsam, does not support WRTBFR----\par\plain\f1\fs20\cf1\page\plain\f1\fs20\b\ul\cf1 ANALYSIS OF EXISTING TESTING\plain\f1\fs20\cf1\par\plain\f3\fs20\cf1\line\plain\f3\fs20\b\ul\cf1 Tests in z390\\vsam\\demo mlc\plain\f3\fs20\ul\cf1\par\plain\f3\fs20\cf1\par The tests that occur here are not to be trusted as there are some inconsistencies.\par\par With ESDS a VX0 has been created with esf1sp.\par\par And the bat for esv1demo, it mentions VX0 but one is not created.\par\par With KSDS it should have created 5 VXN, but there's only 1 VXN.\par\par And with RRDS, rrf1.ves and rrf1.vx0 look really weird.\par\par They are associated with a much earlier version of vz390.java.\par\par\plain\f3\fs20\b\cf1 esf1.vx0\par\plain\f3\fs20\cf1\par 00000000  00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 51    ...............Q\par 00000010  00 00 00 00 00 00 00 A1                            .......\loch\f3\hich\f3\'a1      \par\par\plain\f3\fs20\b\cf1 ksf1addr.vxn\par\plain\f3\fs20\cf1\par 00000000  00 00 00 00 00 00 00 00 C7 C5 D9 D4 C1 D5 40 40    ........\loch\f3\hich\f3\'c7\'c5\'d9\'d4\'c1\'d5@@\par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00    @@@@@@@@@@@@....\par 00000020  00 00 00 00 C8 D6 D3 D3 C1 D5 40 40 40 40 40 40    ....\'c8\'d6\'d3\'d3\'c1\'d5@@@@@@\par 00000030  40 40 40 40 40 40 40 40 00 00 00 00 00 00 00 00    @@@@@@@@........\par 00000040  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    \'e4\'d2@@@@@@@@@@@@@@\par 00000050  40 40 40 40 00 00 00 00 00 00 00 00 E4 D2 40 40    @@@@........\'e4\'d2@@\par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40    @@@@@@@@@@@@@@@@\par 00000070  00 00 00 00 00 00 00 00 E4 E2 C1 40 40 40 40 40    ........\'e4\'e2\'c1@@@@@\par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00    @@@@@@@@@@@@....\par 00000090  00 00 00 00 E4 E2 C1 40 40 40 40 40 40 40 40 40    ....\'e4\'e2\'c1@@@@@@@@@\par 000000A0  40 40 40 40 40 40 40 40                            @@@@@@@@        \par\par\plain\f3\fs20\b\cf1 rrf1.ves\par\plain\f3\fs20\cf1\par 00000000  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    \loch\f3\hich\f3\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    \'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\par 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    \'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    \'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    \'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\par 00000050  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................\par 00000060  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................\par 00000070  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................\par 00000080  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................\par 00000090  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................\par 000000A0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    \'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\par 000000B0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    \'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\par 000000C0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    \'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\par 000000D0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    \'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\par 000000E0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    \'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\par 000000F0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................\par 00000100  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................\par 00000110  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................\par 00000120  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................\par 00000130  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................\par 00000140  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    \'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\par 00000150  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    \'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\par 00000160  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    \'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\par 00000170  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    \'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\par 00000180  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    \'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\par 00000190  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    \'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\par 000001A0  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    \'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\par 000001B0  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    \'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\par 000001C0  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    \'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\par 000001D0  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    \'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\'f1\par 000001E0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    \'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\par 000001F0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    \'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\par 00000200  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    \'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\par 00000210  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    \'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00000220  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    \loch\f3\hich\f3\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\'f5\par 00000230  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    \'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\par 00000240  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    \'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\par 00000250  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    \'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\par 00000260  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    \'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\par 00000270  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    \'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\'f3\par\par\plain\f3\fs20\b\cf1 rrf1.vx0\par\plain\f3\fs20\cf1\par 00000000  00 00 00 00 00 00 01 91 00 00 00 00 00 00 00 00    .......\loch\f3\hich\f3\u145 ?........\par 00000010  00 00 00 00 00 00 02 31 00 00 00 00 00 00 00 00    .......1........\par 00000020  00 00 00 00 00 00 01 E1                            .......\'e1        \par\par\plain\f3\fs20\b\cf1 rrv1.ves\par\plain\f3\fs20\cf1\par 1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\par\par 55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555\par\par 333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333\par\par\plain\f3\fs20\b\cf1 rrv1.vx0\par\plain\f3\fs20\cf1\par 00000000  00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00    ................\par 00000010  00 00 00 00 00 00 02 61 00 00 00 00 00 00 00 00    .......a........\par 00000020  00 00 00 00 00 00 00 69                            .......i        \par\page\plain\f3\fs20\cf3 NOTE:- It might be a good idea to add some displays into\par MODCB of the RPL OPTCD values that are set, on exit.\par I can check whether the use of these codes achieves the desired\par result (remember that the coding of ZGENOPTD has errors and omissions).\par\plain\f3\fs20\cf1\par\plain\f3\fs20\b\ul\cf1 Tests in z390\\rt\\vsam\\test\\save\\ mlc\par\plain\f3\fs20\cf1\par These Windows BAT Files were used in the creation of TESTCAT\par and it's datasets.\par\par Here's the MLC that creates TESTCAT\par\par TESTCAT.MLC\par *\par * DEFINE VCDT CATALOG FOR VSAM TESTS IN vsam\\test \par *\par          DEFINE CATALOG,NAME=TESTCAT              \par          DEFINE CLUSTER,NAME=ESF1,                                     X\par                RECORDSIZE=80,INDEX=NONINDEXED\par          DEFINE CLUSTER,NAME=ESF2,                                     X\par                RECORDSIZE=80,INDEX=NONINDEXED\par          DEFINE CLUSTER,NAME=ESF3,                                     X\par                RECORDSIZE=80,INDEX=NONINDEXED\par          DEFINE CLUSTER,NAME=ESF4,                                     X\par                RECORDSIZE=80,INDEX=NONINDEXED\par          DEFINE CLUSTER,NAME=ESV1,RECORDSIZE=(200,400),                X\par                INDEX=NONINDEXED\par          DEFINE CLUSTER,NAME=ESV2,RECORDSIZE=(1,100000),               X\par                INDEX=NONINDEXED\par          DEFINE CLUSTER,NAME=ESV3,RECORDSIZE=(200,400),                X\par                INDEX=NONINDEXED\par          DEFINE CLUSTER,NAME=ESV4,RECORDSIZE=(200,400),                X\par                INDEX=NONINDEXED\par          DEFINE CLUSTER,NAME=ESV5,RECORDSIZE=(40,80),                  X\par                INDEX=NONINDEXED\par          DEFINE CLUSTER,NAME=RRF1,                                     X\par                RECORDSIZE=80,INDEX=NUMBERED\par          DEFINE CLUSTER,NAME=RRF2,                                     X\par                RECORDSIZE=80,INDEX=NUMBERED\par          DEFINE CLUSTER,NAME=RRV1,                                     X\par                RECORDSIZE=(300,500),INDEX=NUMBERED\par          DEFINE CLUSTER,NAME=RRV2,                                     X\par                RECORDSIZE=(300,500),INDEX=NUMBERED\par          DEFINE CLUSTER,NAME=KSF1NAME,                                 X\par                RECORDSIZE=70,KEYS=(20,0)\par          DEFINE ALTERNATEINDEX,NAME=KSF1ADDR,                          X\par                RELATE=KSF1NAME,KEYS=(20,20)\par          DEFINE ALTERNATEINDEX,NAME=KSF1CITY,                          X\par                RELATE=KSF1NAME,KEYS=(20,40)\par          DEFINE ALTERNATEINDEX,NAME=KSF1STAT,                          X\par                RELATE=KSF1NAME,KEYS=(5,60)\par          DEFINE ALTERNATEINDEX,NAME=KSF1ZIP,                           X\par                RELATE=KSF1NAME,KEYS=(5,65)\par          DEFINE PATH,NAME=NAMELIST,ENTRY=KSF1NAME,UPDATE=NO\par          DEFINE PATH,NAME=ADDRLIST,ENTRY=KSF1ADDR,UPDATE=NO\par          DEFINE PATH,NAME=CITYLIST,ENTRY=KSF1CITY,UPDATE=NO\par          DEFINE PATH,NAME=STATLIST,ENTRY=KSF1STAT,UPDATE=NO\par          DEFINE PATH,NAME=ZIPLIST,ENTRY=KSF1ZIP,UPDATE=NO\par          DEFINE CLUSTER,NAME=KSF2NAME,                                 X\par                RECORDSIZE=70,KEYS=(20,0)\par          DEFINE CLUSTER,NAME=ESF1CI2K,CONTROLINTERVALSIZE=2048,        X\par                RECORDSIZE=200,INDEX=NONINDEXED\par          DEFINE CLUSTER,NAME=LDS1CI2K,CONTROLINTERVALSIZE=2048,        X\par                INDEX=LINEAR\par          DEFINE END\par          END\par\par\page BUILDCAT.bat\tab creates TESTCAT from TESTCAT.mlc \par\par I had to change the BAT file, thus\par\par\tab REM build TESTCAT.390 VSAM catalog with all vsam\\test VSAM files\par\tab CALL ASML \plain\f3\fs24\b\ul\cf1 c:\\z390\\rt\\vsam\\test\\save\\\plain\f3\fs20\cf1 TESTCAT notiming stats %1 %2 %3 %4 %5\par\tab IF ERRORLEVEL 1 PAUSE ERROR BUILDING TESTCAT.390 VSAM CATALOG\par\par And with CD pointing at C:\\Z390, I ran \par\par\tab c:\\z390\\rt\\vsam\\test\\save\\buildcat\par\par which produced\par\par\tab C:\\Z390>REM build TESTCAT.390 VSAM catalog with all vsam\\test VSAM files \par\tab C:\\Z390>CALL ASML c:\\z390\\rt\\vsam\\test\\save\\TESTCAT notiming stats      \par\tab C:\\Z390>rem asml assemble and link to generate load module 390 from mlc \par\tab C:\\Z390>echo off \par\tab TESTCAT   MZ390 START\par\tab TESTCAT   MZ390 ENDED   RC= 0 MEM(MB)= MB IO=3853\par\tab TESTCAT   LZ390 START\par\tab TESTCAT   LZ390 ENDED   RC= 0 MEM(MB)= MB IO=1164\par\par\page\plain\f3\fs24\b\ul\cf1 BAT files used to load the datasets in TESTCAT\par RPO are straight REPROs using TF1\par RPQ are REPROs using TQ1 and [RECFM=whatever]\par\plain\f3\fs18\b\ul\cf1 QSAM FILE MAY HAVE OVERRIDE RECFM USING SUFFIX OF THE FORM\par [RECFM=FT|FB|VT|VB]. THE DEFAULT IF F OR V BASED ON VSAM.\par\par We will not test BAT files for RPQ since they are primarily testing the [RECFM=]\par facility in REPRO and we won't test ksf2rest\par\plain\f3\fs24\b\ul\cf1\par BAT\tab\tab COMMENT\tab\tab\tab\tab\tab\tab INFILE\tab\tab\tab\tab\tab\plain\f3\fs20\cf1\par esf1rpo1\tab REPRO TO LOAD ESF1.VES FROM ESF1.TF1\tab SET INFILE=vsam\\test\\ESF1.TF1   \par esf1rpq1\tab REPRO TO LOAD ESF1.VES FROM ESF1.TQ1\tab SET INFILE=vsam\\test\\ESF1.TQ1[RECFM=F]\par esf4rpo1\tab REPRO TO LOAD ESF4.VES FROM ESF4.TF1\tab SET INFILE=vsam\\test\\ESF4.TF1\par esf4rpq1\tab LOAD/UNLOAD ESF4 USING RECFM=FT\tab\tab SET INFILE=vsam\\test\\ESF4.TQ1[RECFM=FT]\par esv1rpo1\tab REPRO TO LOAD ESV1.VES FROM ESV1.TF1\tab SET INFILE=vsam\\test\\ESV1.TF1\par esv1rpq1*\tab\tab\tab\tab\tab\tab\tab\tab SET INFILE=vsam\\test\\ESV1.TQ1[RECFM=V]\par esv5rpo1\tab RUN REPRO TO LOAD ESV5.VES FROM ESV5.TF1\tab SET INFILE=vsam\\test\\ESV5.TF1           \par esv5rpq1\tab LOAD/UNLOAD ESV5 USING RECFM=VT\tab\tab SET INFILE=vsam\\test\\ESV5.TQ1[RECFM=VT]\par ksf1aixa\tab create KSF1ADDR alternate index\tab\tab SET INFILE=TESTCAT.KSF1NAME\par ksf1aixc\tab create KSF1CITY alternate index\tab\tab SET INFILE=TESTCAT.KSF1NAME\par ksf1aixs\tab create KSF1STAT alternate index\tab\tab SET INFILE=TESTCAT.KSF1NAME\par ksf1aixz\tab create KSF1ZIP alternate index\tab\tab SET INFILE=TESTCAT.KSF1NAME\par ksf2rest\tab RESTORE KSF2NAME FOR DEBUGGING \par\tab\tab KSF2TEST VIA ECLIPSE\tab\tab\tab\tab SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT]\par rrf1rpo1\tab RUN REPRO TO LOAD RRF1.VES FROM RRF1.TF1\tab SET INFILE=vsam\\test\\RRF1.TF1 \par rrf2rpo1\tab RUN REPRO TO LOAD RRF2.VES FROM RRF2.TF1\tab SET INFILE=vsam\\test\\RRF2.TF1\par rrf2rpq1\tab RUN REPRO TO LOAD RRF2.VES FROM RRF2.TQ1\tab SET INFILE=vsam\\test\\RRF2.TQ1[RECFM=F]\par rrv1rpo1\tab RUN REPRO TO LOAD RRV1.VES FROM RRV1.TF1\tab SET INFILE=vsam\\test\\RRV1.TF1\par rrv1rpq1\tab RUN REPRO TO LOAD RRV1.VES FROM RRV1.TQ1\tab SET INFILE=vsam\\test\\RRV1.TQ1[RECFM=V]\par\page\par\plain\f3\fs20\ul\cf1 There are other BAT files that might be involved in the loading of KSDS and the creation of the\par variable length TF1 and TQ1\plain\f3\fs20\cf1\par\par *esv1test\tab This, among other things, creates 3 variable length ESDS records in vsam\\test\\ESV1.TQ1\par\tab\tab which is used as input by esv1rpq1. Since we are ignoring RPQs, we can ignore this BAT\par\tab\tab as well.\par\par ksf2tst1\tab Does a REPRO of vsam\\demo\\KSF1NAME.TF1 to vsam\\test\\TESTCAT.KSF2NAME\par\tab\tab and then runs vsam\\test\\KSF2TST1, which inserts a record for DSH2 and then\par\tab\tab retrieves all the records by key. It then inserts 2 more records and\par\tab\tab retrieves them by key. The inserts will check out the KSIT/KSIR/AVL\par\tab\tab processing.\par\par ksf2tst2\tab is not significantly different from ksf2tst1 and will be ignored.\par\par\par ksf2tst4\tab INSERT RECORDS 1-10 USING HIGH/LOW SEQ TO FORCE LL,LR,RR,RL ROTATES\par\tab\tab RETRIEVE RECORDS 1-10 AND LIST\par\par\page ksf2tst1\tab\par\par\tab REM INSERT DSH1 BY KEY AND DISPLAY RECORDS\par\tab SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT]\par\tab SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME\par\tab CALL EXEC REPRO %1 %2 %3 %4 %5\par\tab IF ERRORLEVEL 1 PAUSE ERROR IN LOAD KSF2NAME\par\tab SET VFILE=vsam\\test\\TESTCAT.KSF2NAME\par\tab CALL ASMLG vsam\\test\\KSF2TST1 %1 %2 %3 %4 %5\par\tab IF ERRORLEVEL 1 PAUSE ERROR IN KSF2TST1 INSERT AND GET BY KEY\par\par Does a REPRO of vsam\\demo\\KSF1NAME.TF1 to vsam\\test\\TESTCAT.KSF2NAME\par and then runs vsam\\test\\KSF2TST1, which inserts a record for DSH2 and then\par retrieves all the records by key. It then inserts 2 more records and\par retrieves them by key. The inserts will check out the KSIT/KSIR/AVL\par processing.\par\par Contents of vsam\\demo\\KSF1NAME.TF1\par\par\tab AK                  HOLLAND             AMPSTERDAM          HL   HD1\par\tab DSH                 USA                 TAMPA BAY           FL   33782\par\tab MM                  UK                  LONDON              LE   UK2\par\tab MT                  GERMANY             BERLIN              BG   GY1\par\tab MW                  UK                  LONDON              LE   UK1\par\tab RM                  USA                 SAN FRANCISCO       CA   95661\par\par\page\par\plain\f3\fs20\b\ul\cf1 Split ksf2tst1 into part1, part2, part3 and part4\par\plain\f3\fs20\cf1\par part1\tab\tab\tab\tab repro\par\par                 DSH\par\par part2\tab\tab ksf2tst6\tab INSERT DSH2 AFTER DSH, RETRIEVE OTHER RECORDS AND THEN DSH2 BY KEY\par                 DSH2\par                /\par               /\par            DSH\par\par part3\tab\tab ksf2tst7\tab UPDATE BY INSERTING DSH1 BETWEEN DSH AND DSH2 IN TREE, RETRIEVE DSH1 BY KEY\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1                 DSH1\par                /    \\\par               /      \\\par            DSH        DSH2\par\par part4\tab\tab ksf2tst8\tab UPDATE BY INSERTING DSH3 AFTER DSH2 IN TREE, RETRIEVE DSH1 DSH3 BY KEY\par\plain\f3\fs20\b\cf1\par                 DSH1\par\plain\f3\fs20\cf1                /    \\\par               /      \\\par            DSH        DSH2\par                        \\\par                         \\\par                          DSH3\page\par\par The idea of splitting is so that I can print out the contents\par of the VX0 and VES after each part, so that we can see the progress\par of KSIT/KSIR/AVL.\page\plain\f3\fs20\b\ul\cf1 ksf2tst1 part1\tab repro\par\plain\f3\fs20\cf1\par\tab Run cd c:\\z390\par\tab Run rt\\vsam\\test\\save\\KSF2TST1_PART1\par\par Got\par\tab C:\\Z390>rt\\vsam\\test\\save\\KSF2TST1_PART1\par\tab C:\\Z390>REM INSERT DSH1 BY KEY AND DISPLAY RECORDS \par\tab C:\\Z390>SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT] \par\tab C:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME \par\tab C:\\Z390>CALL EXEC REPRO      \par\tab C:\\Z390>echo off \par\tab 12:59:10 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/21/16\par\tab REPRO z390 VSAM UTILITY V1.2\par\tab REPRO LOADING VSAM FROM QSAM INFILE\par\tab REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD\par\tab REPRO RECFM=FT LRECL =      70\par\tab SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par\tab  TIOT  DDNAME=VES#1    DCB=000FDC60 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\KSF2NAME.VES\par\tab  TIOT  DDNAME=VX0#2    DCB=000FDCC8 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\KSF2NAME.VX0\par\tab  TIOT  DDNAME=INFILE   DCB=000FFAA8 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\demo\\KSF1NAME.TF1\par\tab  REPRO TOTAL RECORDS =       6\par\tab REPRO ENDED OK\par\tab 12:59:10 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=334 INS=448\par\tab C:\\Z390> exit\par\tab *** 09/21/16 12:59:10 CMD task ended TOT SEC=1 TOT LOG IO=22\par\par c:\\z390\\vsam\\demo\\KSF1NAME.TF1\par\par AK                  HOLLAND             AMPSTERDAM          HL   HD1\par DSH                 USA                 TAMPA BAY           FL   33782\par MM                  UK                  LONDON              LE   UK2\par MT                  GERMANY             BERLIN              BG   GY1\par MW                  UK                  LONDON              LE   UK1\par RM                  USA                 SAN FRANCISCO       CA   95661\par\par c:\\z390\\vsam\\test\\KSF2NAME.VX0 (EBCDIC)\par\par 00000000  00 00 00 00 00 00 00 00 C1 D2 40 40 40 40 40 40    ........AK      \par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00                ....\par 00000020  00 00 00 46 C4 E2 C8 40 40 40 40 40 40 40 40 40    ...\loch\f3\hich\f3\'e3DSH         \par 00000030  40 40 40 40 40 40 40 40 00 00 00 00 00 00 00 8C            .......\'f0\par 00000040  D4 D4 40 40 40 40 40 40 40 40 40 40 40 40 40 40    MM              \par 00000050  40 40 40 40 00 00 00 00 00 00 00 D2 D4 E3 40 40        .......KMT  \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  00 00 00 00 00 00 01 18 D4 E6 40 40 40 40 40 40    ........MW      \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00                ....\par 00000090  00 00 01 5E D9 D4 40 40 40 40 40 40 40 40 40 40    ...;RM          \par 000000A0  40 40 40 40 40 40 40 40 \par                                            \par c:\\z390\\vsam\\test\\KSF2NAME.VES (EBCDIC)\par\par 00000000  C1 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    AK              \par 00000010  40 40 40 40 C8 D6 D3 D3 C1 D5 C4 40 40 40 40 40        HOLLAND     \par 00000020  40 40 40 40 40 40 40 40 C1 D4 D7 E2 E3 C5 D9 C4            AMPSTERD\par 00000030  C1 D4 40 40 40 40 40 40 40 40 40 40 C8 D3 40 40    AM          HL  \par 00000040  40 C8 C4 F1 40 40 C4 E2 C8 40 40 40 40 40 40 40     HD1  DSH       \par 00000050  40 40 40 40 40 40 40 40 40 40 E4 E2 C1 40 40 40              USA   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 E3 C1                  TA\par 00000070  D4 D7 C1 40 C2 C1 E8 40 40 40 40 40 40 40 40 40    MPA BAY         \par 00000080  40 40 C6 D3 40 40 40 F3 F3 F7 F8 F2 D4 D4 40 40      FL   33782MM  \par 00000090  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 000000A0  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    UK              \par 000000B0  40 40 40 40 D3 D6 D5 C4 D6 D5 40 40 40 40 40 40        LONDON      \par 000000C0  40 40 40 40 40 40 40 40 D3 C5 40 40 40 E4 D2 F2            LE   UK2\par 000000D0  40 40 D4 E3 40 40 40 40 40 40 40 40 40 40 40 40      MT            \par 000000E0  40 40 40 40 40 40 C7 C5 D9 D4 C1 D5 E8 40 40 40          GERMANY   \par 000000F0  40 40 40 40 40 40 40 40 40 40 C2 C5 D9 D3 C9 D5              BERLIN\par 00000100  40 40 40 40 40 40 40 40 40 40 40 40 40 40 C2 C7                  BG\par 00000110  40 40 40 C7 E8 F1 40 40 D4 E6 40 40 40 40 40 40       GY1  MW      \par 00000120  40 40 40 40 40 40 40 40 40 40 40 40 E4 D2 40 40                UK  \par 00000130  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000140  D3 D6 D5 C4 D6 D5 40 40 40 40 40 40 40 40 40 40    LONDON          \par 00000150  40 40 40 40 D3 C5 40 40 40 E4 D2 F1 40 40 D9 D4        LE   UK1  RM\par 00000160  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000170  40 40 E4 E2 C1 40 40 40 40 40 40 40 40 40 40 40      USA           \par 00000180  40 40 40 40 40 40 E2 C1 D5 40 C6 D9 C1 D5 C3 C9          SAN FRANCI\par 00000190  E2 C3 D6 40 40 40 40 40 40 40 C3 C1 40 40 40 F9    SCO       CA   9\par 000001A0  F5 F6 F6 F1                                        5661    \par\page\par\plain\f3\fs20\b\ul\cf1 ksf2tst6 part2      INSERT DSH2 AFTER DSH\tab RETRIEVE OTHER RECORDS AND THEN DSH2 BY KEY\par\par\plain\f3\fs20\ul\cf1 ksf2tst6.bat\plain\f3\fs20\cf1\par\tab\par\tab SET VFILE=vsam\\test\\TESTCAT.KSF2NAME\par\tab CALL ASMLG rt\\vsam\\test\\save\\KSF2TST6 %1 %2 %3 %4 %5\par\tab IF ERRORLEVEL 1 PAUSE ERROR IN KSF2TST6 INSERT AND GET BY KEY\par\par does\par\tab INSERT DSH2 AFTER DSH\par\tab RETRIEVE MW\par\tab RETRIEVE DSH2\par\tab RETRIEVE MT\par\tab RETRIEVE DSH\par\tab RETRIEVE AK\par\par I have added SYSTRACE 'EV' to the MLC.\par and change the BAT to point to the MLC as rt\\vsam\\test\\save\\KSF2TST6 \par\par\tab Run cd c:\\z390\par\tab Run rt\\vsam\\test\\save\\KSF2TST6\par\par Got\par\par\tab C:\\Z390>rt\\vsam\\test\\save\\KSF2TST6\par\tab C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.KSF2NAME \par\tab C:\\Z390>CALL ASMLG rt\\vsam\\test\\save\\KSF2TST6      \par\tab C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par\tab C:\\Z390>echo off \par\tab 07:30:49 KSF2TST6  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/22/16\par\tab 07:30:50 KSF2TST6  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 68 IO=4284\par\tab 07:30:51 KSF2TST6  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/22/16\par\tab 07:30:51 KSF2TST6  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=201\par\tab 07:30:51 KSF2TST6  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/22/16\par\tab KSF2TST6 UPDATE WITH DSH2\par\tab  800FFBB4 0 4110D348     LA    R1=000FFF8C S2(000FFE68)\par\tab 07:30:51 KSF2TST6  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/22/16\par\tab  800FFBB8 0 41000060     LA    R0=800FFB18 S2(00000060)\par\tab  800FFBBC 0 0A13         SVC   I1=13 OPEN R0(X'40'=INPUT.X'20'=OUTPUT), R1=DCB\par\tab LOAD DSN=C:\\Z390\\vsam\\test\\TESTCAT.390\par\tab  CDE LOAD=800FF2E8 LEN=00000808 NAME=C:\\Z390\\vsam\\test\\TESTCAT.390\par\tab  800FFBBE 0 12FF         LTR   RF=00000000 RF=00000000\par\tab  800FFBC0 0 4770D1EC     BNE   S2(000FFD0C)=A715000E BRAS \par\tab  800FFBC4 0 D213D4C7D3E0 MVC   S1(000FFFE7)=40404040404040404040404040404040 \tab\tab\tab S2(000FFF00)=C4E2C8F2404040404040404040404040='DSH2            '\par\tab  800FFBCA 0 4110D388     LA    R1=000FF1F0 S2(000FFEA8)\par\tab  800FFBCE 0 41000001     LA    R0=000000A8 S2(00000001)\par\tab  800FFBD2 0 0A79         SVC   I1=79 VSAM GET   R1=A(RPL)\par\tab VSAM RPL  RESET FOR NEW ACB\par\tab VSAM GET   RPL=000FFEA8\par\tab VSAM FIND KEY=000FFFE7 LEN=00000014\tab\tab\plain\f3\fs20\cf3 Looking for key\tab DSH2\plain\f3\fs20\cf1\par\tab  000FFFE7 *C4E2C8F2 40404040 40404040 40404040* *DSH2            *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000054 VES XRBA=00000000000000D2\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=000000000000005C\par\tab  00000000 *D4E34040 40404040 40404040 40404040* *\plain\f3\fs20\cf3 MT \plain\f3\fs20\cf1              *\tab\plain\f3\fs20\cf3 > DSH2\plain\f3\fs20\cf1\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000038 VES XRBA=000000000000008C\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000040\par\tab  00000000 *D4D44040 40404040 40404040 40404040* *\plain\f3\fs20\cf3 MM\plain\f3\fs20\cf1               *\tab\plain\f3\fs20\cf3 > DSH2\plain\f3\fs20\cf1\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=000000000000001C VES XRBA=0000000000000046\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000024\par\tab  00000000 *C4E2C840 40404040 40404040 40404040* *\plain\f3\fs20\cf3 DSH\plain\f3\fs20\cf1              *\tab\plain\f3\fs20\cf3 < DSH2\plain\f3\fs20\cf1\par\tab  00000010 *40404040                           * *                *\par\tab\plain\f3\fs20\cf3 VSAM RPL FEEDBACK=00080010 TYPE=logical REASON=record not found\plain\f3\fs20\cf1\par\tab VSAM RPL ADDR=000FFEA8 LEN=00000054\par\tab  000FFEA8 *000A5400 00000000 00080010 00000000* *.?\loch\f3\hich\f3\'e8......?......*\par\tab  000FFEB8 *000FFE68 000FFFA1 000FFFE7 00820000* *..\'da\'c7..?~..?X.b..*\par\tab  000FFEC8 *00000000 00000000 00000000 00000000* *................*\par\tab  000FFED8 *00000000 00000000 00000001 00000000* *................*\par\tab  000FFEE8 *40000000 00000000 00000000 00000000* * ...............*\par\tab  000FFEF8 *00000000                           * *....            *\par\tab VSAM RPL ARG =000FFFE7 LEN=00000014 KLEN=00000014\par\tab  000FFFE7 *C4E2C8F2 40404040 40404040 40404040* *DSH2            *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA1 LEN=00000046\par\tab  000FFFA1 *40404040 40404040 40404040 40404040* *                *\par\tab  ........\par\tab  000FFFE1 *40404040 4040                      * *                *\par\tab  800FFBD4 0 12FF         LTR   RF=00000008 RF=00000008\par\tab  800FFBD6 2 4780D214     BE    S2(000FFD34)=A7150011 BRAS \par\tab  800FFBDA 2 D213D481D3E0 MVC   S1(000FFFA1)=40404040404040404040404040404040 \tab\tab\tab S2(000FFF00)=C4E2C8F2404040404040404040404040='DSH2            '\par\tab  800FFBE0 2 D213D495D3F4 MVC   S1(000FFFB5)=40404040404040404040404040404040 \tab\tab\tab S2(000FFF14)=F2F940E5C9D3D3C140C1E5C540404040='29 VILLA AVE    '\par\tab  800FFBE6 2 D213D4A9D408 MVC   S1(000FFFC9)=40404040404040404040404040404040 \tab\tab\tab S2(000FFF28)=C3C8C1D9D3D6E3E3C5E3D6E6D5404040='CHARLOTTETOWN   '\par\tab  800FFBEC 2 D204D4BDD46F MVC   S1(000FFFDD)=4040404040 S2(000FFF8F)=D7C5C94040='PEI  '\par\tab  800FFBF2 2 D204D4C2D474 MVC   S1(000FFFE2)=4040404040 S2(000FFF94)=F1F2F3F4F5='12345'\par\tab  800FFBF8 2 4110D388     LA    R1=000FFEA8 S2(000FFEA8)\par\tab  800FFBFC 2 41000002     LA    R0=00000001 S2(00000002)\par\tab  800FFC00 2 0A79         SVC   I1=79 VSAM PUT   R1=A(RPL)\par\tab\plain\f3\fs20\cf3 VSAM \plain\f3\fs28\cf3 PUT\plain\f3\fs20\cf3    RPL=000FFEA8\par\tab VSAM AVL INSERT \plain\f3\fs20\ul\cf3 KSIT\plain\f3\fs20\cf3\par\tab VSAM EXCP WRITE CB XRBA=00000000000001A4 LEN=0000001C\tab\tab\tab\tab\tab\plain\f3\fs20\ul\cf3 KSIT\plain\f3\fs20\cf3  @ 1A4 length 28\plain\f3\fs20\cf1\par\tab  00000000 *D2E2C9E3 00000000 000001F6 00000000* *\plain\f3\fs20\ul\cf3 KSIT\plain\f3\fs20\cf1 .......6....*\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1\tab  00000010 *000001C0 00000000 000001F6         * *...\{.......6    *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=000000000000001C VES XRBA=0000000000000046\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000024\par\tab  00000000 *C4E2C840 40404040 40404040 40404040* *DSH             *\par\tab  00000010 *40404040                           * *                *\par\tab\plain\f3\fs20\cf3 VSAM EXCP WRITE CB XRBA=00000000000001C0 LEN=00000036\tab\tab\tab\tab\tab\plain\f3\fs20\ul\cf3 KSIR\plain\f3\fs20\cf3  @ 1C0 length 54\plain\f3\fs20\cf1\par\tab  00000000 *D2E2C9D9 00000000 000001F6 FFFFFFFF* *\plain\f3\fs20\ul\cf3 KSIR\plain\f3\fs20\cf1 .......6????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF* *????????????????*\par\tab  00000020 *FFFFFFFF 00000000 000001F6 00000000* *????.......6....*\par\tab  00000030 *00000046 0000                      * *...\loch\f3\hich\f3\'e3..          *\par\tab\plain\f3\fs20\cf3 VSAM EXCP WRITE FREC XRBA=000000000000022C LEN=00000046\tab\tab\tab\tab VES for DSH2 length 70\par\tab VSAM EXCP WRITE CB XRBA=00000000000001F6 LEN=00000036\tab\tab\tab\tab\tab\plain\f3\fs20\ul\cf3 KSIR\plain\f3\fs20\cf3  @ 1F6 length 54\plain\f3\fs20\cf1\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *\plain\f3\fs20\ul\cf3 KSIR\plain\f3\fs20\cf1 .......u....*\par\tab  00000010 *000001C0 FFFFFFFF FFFFFFFF 00000000* *...\{????????....*\par\tab  ........\par\tab  00000030 *0000022C 0100                      * *...?..          *\par\tab\plain\f3\fs20\cf3 VSAM EXCP WRITE INDEX XRBA=000000000000001C VES XRBA=80000000000001A4\tab\tab VX0 @ 1C contains 1A4\plain\f3\fs20\cf1\par\tab VSAM RPL ADDR=000FFEA8 LEN=00000054\par\tab  000FFEA8 *000A5400 00000000 00000000 00000000* *.?\loch\f3\hich\f3\'e8.............*\par\tab  000FFEB8 *000FFE68 000FFFA1 000FFFE7 00820000* *..\'da\'c7..?~..?X.b..*\par\tab  000FFEC8 *00000000 00000000 00000000 00000000* *................*\par\tab  000FFED8 *00000000 00000000 00000001 00000000* *................*\par\tab  000FFEE8 *00000000 00000000 00000000 00000000* *................*\par\tab  000FFEF8 *00000000                           * *....            *\par\tab VSAM RPL ARG =000FFFE7 LEN=00000014 KLEN=00000014\par\tab  000FFFE7 *C4E2C8F2 40404040 40404040 40404040* *DSH2            *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA1 LEN=00000046\par\tab  000FFFA1 *C4E2C8F2 40404040 40404040 40404040* *DSH2            *\par\tab  000FFFB1 *40404040 F2F940E5 C9D3D3C1 40C1E5C5* *    29 VILLA AVE*\par\tab  000FFFC1 *40404040 40404040 C3C8C1D9 D3D6E3E3* *        CHARLOTT*\par\tab  000FFFD1 *C5E3D6E6 D5404040 40404040 D7C5C940* *ETOWN       PEI *\par\tab  000FFFE1 *40F1F2F3 F4F5                      * * 12345          *\par\tab  800FFC02 2 12FF         LTR   RF=00000000 RF=00000000\par\tab  800FFC04 0 4770D242     BNE   S2(000FFD62)=A715000E BRAS \par\tab  800FFC08 0 4110D479     LA    R1=000FFEA8 S2(000FFF99)\par\tab  800FFC0C 0 0A23         SVC   I1=23 WTO R1=ADDR(AL2(LEN),AL2(FLAGS),C'MSG')\par\tab REC=DSH2                29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par\tab  800FFC0E 0 D213D4C7D41C MVC   S1(000FFFE7)=C4E2C8F2404040404040404040404040 \tab\tab\tab S2(000FFF3C)=D4E64040404040404040404040404040='MW              '\par\tab  800FFC14 0 4110D388     LA    R1=000FFF99 S2(000FFEA8)\par\tab  800FFC18 0 41000001     LA    R0=00000002 S2(00000001)\par\tab  800FFC1C 0 0A79         SVC   I1=79 VSAM GET   R1=A(RPL)\par\tab VSAM \plain\f3\fs28\cf3 GET\plain\f3\fs20\cf1    RPL=000FFEA8\par\tab\plain\f3\fs20\cf3 VSAM FIND KEY=000FFFE7 LEN=00000014\plain\f3\fs20\cf1\par\tab  000FFFE7 *D4E64040 40404040 40404040 40404040* *\plain\f3\fs20\cf3 MW\plain\f3\fs20\cf1               *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000054 VES XRBA=00000000000000D2\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=000000000000005C\par\tab  00000000 *D4E34040 40404040 40404040 40404040* *MT              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=000000000000008C VES XRBA=000000000000015E\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000094\par\tab  00000000 *D9D44040 40404040 40404040 40404040* *RM              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000070 VES XRBA=0000000000000118\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000078\par\tab  00000000 *D4E64040 40404040 40404040 40404040* *MW              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  FREC XRBA=0000000000000118 LEN=00000046\par\tab VSAM RPL ADDR=000FFEA8 LEN=00000054\par\tab  000FFEA8 *000A5400 00000000 00000000 00000000* *.?\loch\f3\hich\f3\'e8.............*\par\tab  000FFEB8 *000FFE68 000FFFA1 000FFFE7 00820000* *..\'da\'c7..?~..?X.b..*\par\tab  000FFEC8 *00000000 00000000 00000000 00000118* *................*\par\tab  000FFED8 *00000000 00000070 00000001 00000000* *.......\'f8........*\par\tab  000FFEE8 *80000000 00000000 00000000 00000000* *\'d8...............*\par\tab  000FFEF8 *00000000                           * *....            *\par\tab VSAM RPL ARG =000FFFE7 LEN=00000014 KLEN=00000014\par\tab  000FFFE7 *D4E64040 40404040 40404040 40404040* *MW              *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA1 LEN=00000046\par\tab  000FFFA1 *D4E64040 40404040 40404040 40404040* *MW              *\par\tab  000FFFB1 *40404040 E4D24040 40404040 40404040* *    UK          *\par\tab  000FFFC1 *40404040 40404040 D3D6D5C4 D6D54040* *        LONDON  *\par\tab  000FFFD1 *40404040 40404040 40404040 D3C54040* *            LE  *\par\tab  000FFFE1 *40E4D2F1 4040                      * * UK1            *\par\tab  800FFC1E 0 12FF         LTR   RF=00000000 RF=00000000\par\tab  800FFC20 0 4770D214     BNE   S2(000FFD34)=A7150011 BRAS \par\tab  800FFC24 0 4110D479     LA    R1=000FFEA8 S2(000FFF99)\par\tab  800FFC28 0 0A23         SVC   I1=23 WTO R1=ADDR(AL2(LEN),AL2(FLAGS),C'MSG')\par\tab REC=MW                  UK                  LONDON              LE   UK1\par\tab  800FFC2A 0 D513D481D4C7 CLC   S1(000FFFA1)=D4E64040404040404040404040404040 \tab\tab\tab S2(000FFFE7)=D4E64040404040404040404040404040='MW              '\par\tab  800FFC30 0 4770D26A     BNE   S2(000FFD8A)=A7150017 BRAS \par\tab  800FFC34 0 D213D4C7D3E0 MVC   S1(000FFFE7)=D4E64040404040404040404040404040 \tab\tab\tab S2(000FFF00)=C4E2C8F2404040404040404040404040='DSH2            '\par\tab  800FFC3A 0 4110D388     LA    R1=000FFF99 S2(000FFEA8)\par\tab  800FFC3E 0 41000001     LA    R0=00000001 S2(00000001)\par\tab  800FFC42 0 0A79         SVC   I1=79 VSAM GET   R1=A(RPL)\par\tab VSAM \plain\f3\fs28\cf3 GET\plain\f3\fs20\cf1    RPL=000FFEA8\par\tab\plain\f3\fs20\cf3 VSAM FIND KEY=000FFFE7 LEN=00000014\plain\f3\fs20\cf1\par\tab  000FFFE7 *C4E2C8F2 40404040 40404040 40404040* *\plain\f3\fs20\cf3 DSH2\plain\f3\fs20\cf1             *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000054 VES XRBA=00000000000000D2\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=000000000000005C\par\tab  00000000 *D4E34040 40404040 40404040 40404040* *MT              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000038 VES XRBA=000000000000008C\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000040\par\tab  00000000 *D4D44040 40404040 40404040 40404040* *MM              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=000000000000001C VES XRBA=80000000000001A4\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000024\par\tab  00000000 *C4E2C840 40404040 40404040 40404040* *DSH             *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM AVL FIND \plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1\par\tab VSAM EXCP READ CB XRBA=00000000000001A4\par\tab  00000000 *D2E2C9E3 00000000 000001F6 00000000* *\plain\f3\fs20\ul\cf1 KSIT\plain\f3\fs20\cf1 .......6....*\par\tab  00000010 *000001C0 00000000 000001F6         * *...\{.......6    *\par\tab VSAM EXCP READ CB XRBA=00000000000001F6\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......u....*\par\tab  00000010 *000001C0 FFFFFFFF FFFFFFFF 00000000* *...\{????????....*\par\tab  ........\par\tab  00000030 *0000022C 0100                      * *...?..          *\par\tab VSAM EXCP READ \plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1  KEY AT XRBA=000000000000022C\par\tab  00000000 *C4E2C8F2 40404040 40404040 40404040* *DSH2            *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  FREC XRBA=000000000000022C LEN=00000046\par\tab VSAM RPL ADDR=000FFEA8 LEN=00000054\par\tab  000FFEA8 *000A5400 00000000 00000000 00000000* *.?\loch\f3\hich\f3\'e8.............*\par\tab  000FFEB8 *000FFE68 000FFFA1 000FFFE7 00820000* *..\'da\'c7..?~..?X.b..*\par\tab  000FFEC8 *00000000 00000000 00000000 0000022C* *...............?*\par\tab  000FFED8 *00000000 0000001C 00000001 00000000* *................*\par\tab  000FFEE8 *A0000000 00000000 00000000 00000000* *\'b5...............*\par\tab  000FFEF8 *000001F6                           * *...6            *\par\tab VSAM RPL ARG =000FFFE7 LEN=00000014 KLEN=00000014\par\tab  000FFFE7 *C4E2C8F2 40404040 40404040 40404040* *DSH2            *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA1 LEN=00000046\par\tab  000FFFA1 *C4E2C8F2 40404040 40404040 40404040* *DSH2            *\par\tab  000FFFB1 *40404040 F2F940E5 C9D3D3C1 40C1E5C5* *    29 VILLA AVE*\par\tab  000FFFC1 *40404040 40404040 C3C8C1D9 D3D6E3E3* *        CHARLOTT*\par\tab  000FFFD1 *C5E3D6E6 D5404040 40404040 D7C5C940* *ETOWN       PEI *\par\tab  000FFFE1 *40F1F2F3 F4F5                      * * 12345          *\par\tab  800FFC44 0 12FF         LTR   RF=00000000 RF=00000000\par\tab  800FFC46 0 4770D214     BNE   S2(000FFD34)=A7150011 BRAS \par\tab  800FFC4A 0 4110D479     LA    R1=000FFEA8 S2(000FFF99)\par\tab  800FFC4E 0 0A23         SVC   I1=23 WTO R1=ADDR(AL2(LEN),AL2(FLAGS),C'MSG')\par\tab REC=DSH2                29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par\tab  800FFC50 0 D513D481D4C7 CLC   S1(000FFFA1)=C4E2C8F2404040404040404040404040 \tab\tab\tab S2(000FFFE7)=C4E2C8F2404040404040404040404040='DSH2            '\par\tab  800FFC56 0 4770D26A     BNE   S2(000FFD8A)=A7150017 BRAS \par\tab  800FFC5A 0 D213D4C7D430 MVC   S1(000FFFE7)=C4E2C8F2404040404040404040404040 \tab\tab\tab S2(000FFF50)=D4E34040404040404040404040404040='MT              '\par\tab  800FFC60 0 4110D388     LA    R1=000FFF99 S2(000FFEA8)\par\tab  800FFC64 0 41000001     LA    R0=00000001 S2(00000001)\par\tab  800FFC68 0 0A79         SVC   I1=79 VSAM GET   R1=A(RPL)\par\tab VSAM \plain\f3\fs28\cf3 GET\plain\f3\fs20\cf1    RPL=000FFEA8\par\tab\plain\f3\fs20\cf3 VSAM FIND KEY=000FFFE7 LEN=00000014\plain\f3\fs20\cf1\par\tab  000FFFE7 *D4E34040 40404040 40404040 40404040* *\plain\f3\fs20\cf3 MT\plain\f3\fs20\cf1               *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000054 VES XRBA=00000000000000D2\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=000000000000005C\par\tab  00000000 *D4E34040 40404040 40404040 40404040* *MT              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  FREC XRBA=00000000000000D2 LEN=00000046\par\tab VSAM RPL ADDR=000FFEA8 LEN=00000054\par\tab  000FFEA8 *000A5400 00000000 00000000 00000000* *.?\loch\f3\hich\f3\'e8.............*\par\tab  000FFEB8 *000FFE68 000FFFA1 000FFFE7 00820000* *..\'da\'c7..?~..?X.b..*\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1\tab  000FFEC8 *00000000 00000000 00000000 000000D2* *...............K*\par\tab  000FFED8 *00000000 00000054 00000001 00000000* *.......\loch\f3\hich\f3\'e8........*\par\tab  000FFEE8 *80000000 00000000 00000000 00000000* *\'d8...............*\par\tab  000FFEF8 *000001F6                           * *...6            *\par\tab VSAM RPL ARG =000FFFE7 LEN=00000014 KLEN=00000014\par\tab  000FFFE7 *D4E34040 40404040 40404040 40404040* *MT              *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA1 LEN=00000046\par\tab  000FFFA1 *D4E34040 40404040 40404040 40404040* *MT              *\par\tab  000FFFB1 *40404040 C7C5D9D4 C1D5E840 40404040* *    GERMANY     *\par\tab  000FFFC1 *40404040 40404040 C2C5D9D3 C9D54040* *        BERLIN  *\par\tab  000FFFD1 *40404040 40404040 40404040 C2C74040* *            BG  *\par\tab  000FFFE1 *40C7E8F1 4040                      * * GY1            *\par\tab  800FFC6A 0 12FF         LTR   RF=00000000 RF=00000000\par\tab  800FFC6C 0 4770D214     BNE   S2(000FFD34)=A7150011 BRAS \par\tab  800FFC70 0 4110D479     LA    R1=000FFEA8 S2(000FFF99)\par\tab  800FFC74 0 0A23         SVC   I1=23 WTO R1=ADDR(AL2(LEN),AL2(FLAGS),C'MSG')\par\tab REC=MT                  GERMANY             BERLIN              BG   GY1\par\tab  800FFC76 0 D513D481D4C7 CLC   S1(000FFFA1)=D4E34040404040404040404040404040 \tab\tab\tab S2(000FFFE7)=D4E34040404040404040404040404040='MT              '\par\tab  800FFC7C 0 4770D26A     BNE   S2(000FFD8A)=A7150017 BRAS \par\tab  800FFC80 0 D213D4C7D444 MVC   S1(000FFFE7)=D4E34040404040404040404040404040 \tab\tab\tab S2(000FFF64)=C4E2C840404040404040404040404040='DSH             '\par\tab  800FFC86 0 4110D388     LA    R1=000FFF99 S2(000FFEA8)\par\tab  800FFC8A 0 41000001     LA    R0=00000001 S2(00000001)\par\tab  800FFC8E 0 0A79         SVC   I1=79 VSAM GET   R1=A(RPL)\par\tab VSAM \plain\f3\fs28\cf3 GET\plain\f3\fs20\cf1    RPL=000FFEA8\par\tab\plain\f3\fs20\cf3 VSAM FIND KEY=000FFFE7 LEN=00000014\plain\f3\fs20\cf1\par\tab  000FFFE7 *C4E2C840 40404040 40404040 40404040* *\plain\f3\fs20\cf3 DSH\plain\f3\fs20\cf1              *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000054 VES XRBA=00000000000000D2\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=000000000000005C\par\tab  00000000 *D4E34040 40404040 40404040 40404040* *MT              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000038 VES XRBA=000000000000008C\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000040\par\tab  00000000 *D4D44040 40404040 40404040 40404040* *MM              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=000000000000001C VES XRBA=80000000000001A4\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000024\par\tab  00000000 *C4E2C840 40404040 40404040 40404040* *DSH             *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM AVL FIND \plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1\par\tab VSAM EXCP READ CB XRBA=00000000000001A4\par\tab  00000000 *D2E2C9E3 00000000 000001F6 00000000* *\plain\f3\fs20\ul\cf1 KSIT\plain\f3\fs20\cf1 .......6....*\par\tab  00000010 *000001C0 00000000 000001F6         * *...\{.......6    *\par\tab VSAM EXCP READ CB XRBA=00000000000001F6\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......u....*\par\tab  00000010 *000001C0 FFFFFFFF FFFFFFFF 00000000* *...\{????????....*\par\tab  ........\par\tab  00000030 *0000022C 0100                      * *...?..          *\par\tab VSAM EXCP READ \plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1  KEY AT XRBA=000000000000022C\par\tab  00000000 *C4E2C8F2 40404040 40404040 40404040* *DSH2            *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ CB XRBA=00000000000001C0\par\tab  00000000 *D2E2C9D9 00000000 000001F6 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......6????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF* *????????????????*\par\tab  00000020 *FFFFFFFF 00000000 000001F6 00000000* *????.......6....*\par\tab  00000030 *00000046 0000                      * *...\loch\f3\hich\f3\'e3..          *\par\tab VSAM EXCP READ \plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1  KEY AT XRBA=0000000000000046\par\tab  00000000 *C4E2C840 40404040 40404040 40404040* *DSH             *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  FREC XRBA=0000000000000046 LEN=00000046\par\tab VSAM RPL ADDR=000FFEA8 LEN=00000054\par\tab  000FFEA8 *000A5400 00000000 00000000 00000000* *.?\loch\f3\hich\f3\'e8.............*\par\tab  000FFEB8 *000FFE68 000FFFA1 000FFFE7 00820000* *..\'da\'c7..?~..?X.b..*\par\tab  000FFEC8 *00000000 00000000 00000000 00000046* *...............\'e3*\par\tab  000FFED8 *00000000 0000001C 00000001 00000000* *................*\par\tab  000FFEE8 *A0000000 00000000 00000000 00000000* *\'b5...............*\par\tab  000FFEF8 *000001C0                           * *...\{            *\par\tab VSAM RPL ARG =000FFFE7 LEN=00000014 KLEN=00000014\par\tab  000FFFE7 *C4E2C840 40404040 40404040 40404040* *DSH             *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA1 LEN=00000046\par\tab  000FFFA1 *C4E2C840 40404040 40404040 40404040* *DSH             *\par\tab  000FFFB1 *40404040 E4E2C140 40404040 40404040* *    USA         *\par\tab  000FFFC1 *40404040 40404040 E3C1D4D7 C140C2C1* *        TAMPA BA*\par\tab  000FFFD1 *E8404040 40404040 40404040 C6D34040* *Y           FL  *\par\tab  000FFFE1 *40F3F3F7 F8F2                      * * 33782          *\par\tab  800FFC90 0 12FF         LTR   RF=00000000 RF=00000000\par\tab  800FFC92 0 4770D214     BNE   S2(000FFD34)=A7150011 BRAS \par\tab  800FFC96 0 4110D479     LA    R1=000FFEA8 S2(000FFF99)\par\tab  800FFC9A 0 0A23         SVC   I1=23 WTO R1=ADDR(AL2(LEN),AL2(FLAGS),C'MSG')\par\tab REC=DSH                 USA                 TAMPA BAY           FL   33782\par\tab  800FFC9C 0 D513D481D4C7 CLC   S1(000FFFA1)=C4E2C840404040404040404040404040 \tab\tab\tab S2(000FFFE7)=C4E2C840404040404040404040404040='DSH             '\par\tab  800FFCA2 0 4770D26A     BNE   S2(000FFD8A)=A7150017 BRAS \par\tab  800FFCA6 0 D213D4C7D458 MVC   S1(000FFFE7)=C4E2C840404040404040404040404040 \tab\tab\tab S2(000FFF78)=C1D24040404040404040404040404040='AK              '\par\tab  800FFCAC 0 4110D388     LA    R1=000FFF99 S2(000FFEA8)\par\tab  800FFCB0 0 41000001     LA    R0=00000001 S2(00000001)\par\tab  800FFCB4 0 0A79         SVC   I1=79 VSAM GET   R1=A(RPL)\par\tab VSAM \plain\f3\fs28\cf3 GET\plain\f3\fs20\cf1    RPL=000FFEA8\par\tab\plain\f3\fs20\cf3 VSAM FIND KEY=000FFFE7 LEN=00000014\plain\f3\fs20\cf1\par\tab  000FFFE7 *C1D24040 40404040 40404040 40404040* *\plain\f3\fs20\cf3 AK\plain\f3\fs20\cf1               *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000054 VES XRBA=00000000000000D2\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=000000000000005C\par\tab  00000000 *D4E34040 40404040 40404040 40404040* *MT              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000038 VES XRBA=000000000000008C\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000040\par\tab  00000000 *D4D44040 40404040 40404040 40404040* *MM              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=000000000000001C VES XRBA=80000000000001A4\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000024\par\tab  00000000 *C4E2C840 40404040 40404040 40404040* *DSH             *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000000 VES XRBA=0000000000000000\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000008\par\tab  00000000 *C1D24040 40404040 40404040 40404040* *AK              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  FREC XRBA=0000000000000000 LEN=00000046\par\tab VSAM RPL ADDR=000FFEA8 LEN=00000054\par\tab  000FFEA8 *000A5400 00000000 00000000 00000000* *.?\loch\f3\hich\f3\'e8.............*\par\tab  000FFEB8 *000FFE68 000FFFA1 000FFFE7 00820000* *..\'da\'c7..?~..?X.b..*\par\tab  000FFEC8 *00000000 00000000 00000000 00000000* *................*\par\tab  000FFED8 *00000000 00000000 00000001 00000000* *................*\par\tab  000FFEE8 *80000000 00000000 00000000 00000000* *\'d8...............*\par\tab  000FFEF8 *000001C0                           * *...\{            *\par\tab VSAM RPL ARG =000FFFE7 LEN=00000014 KLEN=00000014\par\tab  000FFFE7 *C1D24040 40404040 40404040 40404040* *AK              *\par\tab  000FFFF7 *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA1 LEN=00000046\par\tab  000FFFA1 *C1D24040 40404040 40404040 40404040* *AK              *\par\tab  000FFFB1 *40404040 C8D6D3D3 C1D5C440 40404040* *    HOLLAND     *\par\tab  000FFFC1 *40404040 40404040 C1D4D7E2 E3C5D9C4* *        AMPSTERD*\par\tab  000FFFD1 *C1D44040 40404040 40404040 C8D34040* *AM          HL  *\par\tab  000FFFE1 *40C8C4F1 4040                      * * HD1            *\par\tab  800FFCB6 0 12FF         LTR   RF=00000000 RF=00000000\par\tab  800FFCB8 0 4770D214     BNE   S2(000FFD34)=A7150011 BRAS \par\tab  800FFCBC 0 4110D479     LA    R1=000FFEA8 S2(000FFF99)\par\tab  800FFCC0 0 0A23         SVC   I1=23 WTO R1=ADDR(AL2(LEN),AL2(FLAGS),C'MSG')\par\tab REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par\tab  800FFCC2 0 D513D481D4C7 CLC   S1(000FFFA1)=C1D24040404040404040404040404040 \tab\tab\tab S2(000FFFE7)=C1D24040404040404040404040404040='AK              '\par\tab  800FFCC8 0 4770D26A     BNE   S2(000FFD8A)=A7150017 BRAS \par\tab  800FFCCC 0 4110D348     LA    R1=000FFF99 S2(000FFE68)\par\tab  800FFCD0 0 0A14         SVC   I1=14 CLOSE R1=DCB\par\tab  800FFCD2 0 12FF         LTR   RF=00000000 RF=00000000\par\tab  800FFCD4 0 4770D242     BNE   S2(000FFD62)=A715000E BRAS \par\tab  800FFCD8 0 A7150010     BRAS  R1=000FF1F0 S2(000FFCF8)=0A23 SVC  \par\tab  800FFCF8 0 0A23         SVC   I1=23 WTO R1=ADDR(AL2(LEN),AL2(FLAGS),C'MSG')\par\tab KSF2TEST_part2 ENDED OK\par\tab  800FFCFA 0 41F00000     LA    RF=00000000 S2(00000000)\par\tab  800FFCFE 0 58D0D004     L     RD=800FFB20 S2(000FFB24)=00002100\par\tab  800FFD02 0 58E0D00C     L     RE=00002018 S2(0000210C)=00002018\par\tab  800FFD06 0 982CD01C     LM    R2=F4F4F4F4 RC=F4F4F4F4 S2(0000211C)=F4F4F4F4\par\tab  800FFD0A 0 07FE         BR    RE(00002018)=0A03 SVC  \par\tab  80002018 0 0A03         SVC   I1=03 EXIT\par\tab 07:30:51 KSF2TST6  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=310 INS=94\par\tab C:\\Z390> exit\par\tab *** 09/22/16 07:30:51 CMD task ended TOT SEC=2 TOT LOG IO=373\par\page\par c:\\z390\\vsam\\test\\KSF2NAME.VX0 (EBCDIC)\par\par 00000000  \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 00\plain\f3\fs20\cf1  \plain\f3\fs20\cf8 C1 D2\plain\f3\fs20\cf1  40 40 40 40 40 40    ........\plain\f3\fs20\cf2 AK\plain\f3\fs20\cf1       \par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf3 80\plain\f3\fs20\ul\cf1  00 00 00\plain\f3\fs20\cf1                 \loch\f3\hich\f3\'d8...\tab\tab\plain\f3\fs20\cf3 80 signals KSIT (negative flag)\plain\f3\fs20\cf1\par 00000020  \plain\f3\fs20\ul\cf1 00 00 \plain\f3\fs20\ul\cf3 01 A4\plain\f3\fs20\cf1  \plain\f3\fs20\cf8 C4 E2 C8\plain\f3\fs20\cf1  40 40 40 40 40 40 40 40 40    ...u\plain\f3\fs20\cf4 DSH\plain\f3\fs20\cf1          \tab\tab\plain\f3\fs20\cf3 1A4 points @ KSIT in VES\plain\f3\fs20\cf1\par 00000030  40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 8C\plain\f3\fs20\cf1             .......\loch\f3\hich\f3\'f0\par 00000040  \plain\f3\fs20\cf8 D4 D4\plain\f3\fs20\cf1  40 40 40 40 40 40 40 40 40 40 40 40 40 40    \plain\f3\fs20\cf4 MM\plain\f3\fs20\cf1               \par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00000050  40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 D2\plain\f3\fs20\cf1  \plain\f3\fs20\cf8 D4 E3\plain\f3\fs20\cf1  40 40        .......K\plain\f3\fs20\cf4 MT\plain\f3\fs20\cf1   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 01 18\plain\f3\fs20\cf1  \plain\f3\fs20\cf8 D4 E6\plain\f3\fs20\cf1  40 40 40 40 40 40    ........\plain\f3\fs20\cf4 MW\plain\f3\fs20\cf1       \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00\plain\f3\fs20\cf1                 ....\par 00000090  \plain\f3\fs20\ul\cf1 00 00 01 5E\plain\f3\fs20\cf1  \plain\f3\fs20\cf8 D9 D4\plain\f3\fs20\cf1  40 40 40 40 40 40 40 40 40 40    ...;\plain\f3\fs20\cf4 RM\plain\f3\fs20\cf1           \par 000000A0  40 40 40 40 40 40 40 40                                            \par\par VX0 BEFORE KSF2TST6 (EBCDIC)\par\par 00000000  \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 00\plain\f3\fs20\cf1  \plain\f3\fs20\cf9 C1 D2\plain\f3\fs20\cf1  40 40 40 40 40 40    ........\plain\f3\fs20\cf4 AK\plain\f3\fs20\cf1       \par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf4 00\plain\f3\fs20\ul\cf1  00 00 00\plain\f3\fs20\cf1                 ....\par 00000020  \plain\f3\fs20\ul\cf1 00 00 00 \plain\f3\fs20\ul\cf4 46\plain\f3\fs20\cf1  \plain\f3\fs20\cf9 C4 E2 C8\plain\f3\fs20\cf1  40 40 40 40 40 40 40 40 40    ...\loch\f3\hich\f3\'e3\plain\f3\fs20\cf4 DSH\plain\f3\fs20\cf1          \par 00000030  40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 8C\plain\f3\fs20\cf1             .......\loch\f3\hich\f3\'f0\par 00000040  \plain\f3\fs20\cf9 D4 D4\plain\f3\fs20\cf1  40 40 40 40 40 40 40 40 40 40 40 40 40 40    \plain\f3\fs20\cf4 MM\plain\f3\fs20\cf1               \par 00000050  40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 D2\plain\f3\fs20\cf1  \plain\f3\fs20\cf9 D4 E3\plain\f3\fs20\cf1  40 40        .......K\plain\f3\fs20\cf4 MT\plain\f3\fs20\cf1   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 01 18\plain\f3\fs20\cf1  \plain\f3\fs20\cf9 D4 E6\plain\f3\fs20\cf1  40 40 40 40 40 40    ........\plain\f3\fs20\cf4 MW\plain\f3\fs20\cf1       \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00\plain\f3\fs20\cf1                 ....\par 00000090  \plain\f3\fs20\ul\cf1 00 00 01 5E\plain\f3\fs20\cf1  \plain\f3\fs20\cf9 D9 D4\plain\f3\fs20\cf1  40 40 40 40 40 40 40 40 40 40    ...;\plain\f3\fs20\cf4 RM\plain\f3\fs20\cf1           \par 000000A0  40 40 40 40 40 40 40 40                                            \par\par DIFFERENCES BETWEEN BEFORE AND AFTER IN \plain\f3\fs20\cf3 RED\plain\f3\fs20\cf1\page c:\\z390\\vsam\\test\\KSF2NAME.VES\par\par 00000000  C1 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    AK              \par 00000010  40 40 40 40 C8 D6 D3 D3 C1 D5 C4 40 40 40 40 40        HOLLAND     \par 00000020  40 40 40 40 40 40 40 40 C1 D4 D7 E2 E3 C5 D9 C4            AMPSTERD\par 00000030  C1 D4 40 40 40 40 40 40 40 40 40 40 C8 D3 40 40    AM          HL  \par 00000040  40 C8 C4 F1 40 40 \plain\f3\fs20\cf3 C4 E2 C8\plain\f3\fs20\cf1  40 40 40 40 40 40 40     HD1  DSH       \tab\tab\plain\f3\fs20\cf3 key\plain\f3\fs20\cf1  \plain\f3\fs20\cf3 DSH @ 46\plain\f3\fs20\cf1\par 00000050  40 40 40 40 40 40 40 40 40 40 E4 E2 C1 40 40 40              USA   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 E3 C1                  TA\par 00000070  D4 D7 C1 40 C2 C1 E8 40 40 40 40 40 40 40 40 40    MPA BAY         \par 00000080  40 40 C6 D3 40 40 40 F3 F3 F7 F8 F2 D4 D4 40 40      FL   33782MM  \par 00000090  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 000000A0  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    UK              \par 000000B0  40 40 40 40 D3 D6 D5 C4 D6 D5 40 40 40 40 40 40        LONDON      \par 000000C0  40 40 40 40 40 40 40 40 D3 C5 40 40 40 E4 D2 F2            LE   UK2\par 000000D0  40 40 D4 E3 40 40 40 40 40 40 40 40 40 40 40 40      MT            \par 000000E0  40 40 40 40 40 40 C7 C5 D9 D4 C1 D5 E8 40 40 40          GERMANY   \par 000000F0  40 40 40 40 40 40 40 40 40 40 C2 C5 D9 D3 C9 D5              BERLIN\par 00000100  40 40 40 40 40 40 40 40 40 40 40 40 40 40 C2 C7                  BG\par 00000110  40 40 40 C7 E8 F1 40 40 D4 E6 40 40 40 40 40 40       GY1  MW      \par 00000120  40 40 40 40 40 40 40 40 40 40 40 40 E4 D2 40 40                UK  \par 00000130  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000140  D3 D6 D5 C4 D6 D5 40 40 40 40 40 40 40 40 40 40    LONDON          \par 00000150  40 40 40 40 D3 C5 40 40 40 E4 D2 F1 40 40 D9 D4        LE   UK1  RM\par 00000160  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000170  40 40 E4 E2 C1 40 40 40 40 40 40 40 40 40 40 40      USA           \par 00000180  40 40 40 40 40 40 E2 C1 D5 40 C6 D9 C1 D5 C3 C9          SAN FRANCI\par 00000190  E2 C3 D6 40 40 40 40 40 40 40 C3 C1 40 40 40 F9    SCO       CA   9\par 000001A0  F5 F6 F6 F1 D2 E2 C9 E3 00 00 00 00 00 00 01 F6    5661\plain\f3\fs20\cf3 KSIT\plain\f3\fs20\cf1 .......6\tab\tab\plain\f3\fs20\cf3 KSIT @\plain\f3\fs20\cf1  \plain\f3\fs20\cf3 1A4, length 28\plain\f3\fs20\cf1\par 000001B0  00 00 00 00 00 00 01 C0 00 00 00 00 00 00 01 F6    .......\{.......6\par 000001C0  D2 E2 C9 D9 00 00 00 00 00 00 01 F6 FF FF FF FF    \plain\f3\fs20\cf3 KSIR\plain\f3\fs20\cf1 .......6\loch\f3\hich\f3\u159 ?\u159 ?\u159 ?\u159 ?\tab\tab\plain\f3\fs20\cf3 KSIR @ 1C0, points @ 46 DSH\plain\f3\fs20\cf1\par 000001D0  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF    \loch\f3\hich\f3\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 000001E0  FF FF FF FF 00 00 00 00 00 00 01 F6 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?.......6....\par 000001F0  00 00 00 46 00 00 D2 E2 C9 D9 00 00 00 00 00 00    ...\'e3..\plain\f3\fs20\cf3 KSIR\plain\f3\fs20\cf1 ......\tab\tab\plain\f3\fs20\cf3 KSIR @ 1F6, points @ 22C DSH2\plain\f3\fs20\cf1\par 00000200  01 A4 00 00 00 00 00 00 01 C0 FF FF FF FF FF FF    .u.......\{\loch\f3\hich\f3\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000210  FF FF 00 00 00 00 00 00 01 C0 FF FF FF FF FF FF    \u159 ?\u159 ?.......\{\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000220  FF FF 00 00 00 00 00 00 02 2C 01 00 C4 E2 C8 F2    \u159 ?\u159 ?.......\u140 ?..\plain\f3\fs20\cf3 DSH2\tab\tab key @ 22C DSH2\plain\f3\fs20\cf1\par 00000230  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000240  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000250  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000260  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000270  F4 F5                                              45              \par\page\par\plain\f3\fs20\b\cf1 STRUCTURE OF KSIT POPULATED FROM 1A4\par\plain\f3\fs20\cf1 structure from vz390.java\par\par ksit_id \tab\tab // id\tab\tab\tab\tab\tab\tab KSIT\par ksit_top\tab\tab // top KSIR XRBA\tab\tab\tab\tab 00 00 00 00 00 00 01 F6 \tab points @ 2nd KSIR\par ksit_fst\tab\tab // first and lowest KSIR XRBA\tab\tab 00 00 00 00 00 00 01 C0\tab\tab points @ 1st KSIR\par ksit_lst\tab\tab // last and highest KSIR XRBA\tab\tab 00 00 00 00 00 00 01 F6 \tab points @ 2nd KSIR\par\tab\tab\tab\par\plain\f3\fs20\b\cf1 STRUCTURE OF KSIR POPULATED FROM 1C0\par\plain\f3\fs20\cf1 structure from vz390.java\par\par ksir_id\tab\tab // id\tab\tab\tab\tab\tab\tab KSIR\par ksir_par\tab\tab // parent KSIR or KSIT\tab\tab\tab 00 00 00 00 00 00 01 F6\tab\tab points @ parent KSIR (2nd)\par ksir_low\tab\tab // next lower KSIR or -1 \tab\tab FF FF FF FF FF FF FF FF\tab\tab has no siblings\par\tab\tab\tab    (high bit if last add)\par ksir_high\tab\tab // next highest KSIR or -1 \tab\tab FF FF FF FF FF FF FF FF\tab\tab has no siblings\par\tab\tab\tab    (high bit if last add)\par ksir_bwd\tab\tab // next backward KSIR or -1\tab\tab FF FF FF FF FF FF FF FF\tab\tab has no siblings\par ksir_fwd\tab\tab // next foward KSIR or -1\tab\tab 00 00 00 00 00 00 01 F6\tab\tab points @ 2nd KSIR\par ksir_rec\tab\tab // xrba of cur record \tab\tab\tab 00 00 00 00 00 00 00 46 \tab points @ key DSH in VES\par\tab\tab\tab    (may change for var update)\par ksir_low_height\tab // max height of low node\tab\tab 00\par ksir_high_height\tab // max height of high node\tab\tab 00\par\par\plain\f3\fs20\b\cf1 STRUCTURE OF KSIR POPULATED FROM 1F6\par\plain\f3\fs20\cf1 structure from vz390.java\par\par ksir_id\tab\tab // id\tab\tab\tab\tab\tab\tab KSIR\par ksir_par\tab\tab // parent KSIR or KSIT\tab\tab\tab 00 00 00 00 00 00 01 A4\tab\tab points @ KSIT\par ksir_low\tab\tab // next lower KSIR or -1 \tab\tab 00 00 00 00 00 00 01 C0\tab\tab points @ first KSIR\par\tab\tab\tab    (high bit if last add)\par ksir_high\tab\tab // next highest KSIR or -1 \tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par\tab\tab\tab    (high bit if last add)\par ksir_bwd\tab\tab // next backward KSIR or -1\tab\tab 00 00 00 00 00 00 01 C0\tab\tab points @ first KSIR\par ksir_fwd\tab\tab // next foward KSIR or -1\tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par ksir_rec\tab\tab // xrba of cur record \tab\tab\tab 00 00 00 00 00 00 02 2C \tab points @ key DSH2 in VES\par\tab\tab\tab    (may change for var update)\par ksir_low_height\tab // max height of low node\tab\tab 01\par ksir_high_height\tab // max height of high node\tab\tab 01\page\par\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 KSIT @ 1A4                                                     parent of KSIR below\cell\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080 KSIR @ 1F6   DSH2    level 1    points @ VES 22C   2nd KSIR    child of KSIT, parent of KSIR below\cell\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080 KSIR @ 1C0   DSH     level 0    points @ VES 46    1st KSIR    child of KSIR above\cell\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par                 DSH2\par                /\par               /\par            DSH\page\plain\f3\fs20\b\ul\cf1 ksf2tst7\tab part3\tab\tab UPDATE BY INSERTING DSH1 BETWEEN DSH AND DSH2 IN TREE          \par\tab\tab\tab\tab RETRIEVE DSH1 BY KEY\par\par\plain\f3\fs20\cf1\par\plain\f3\fs20\ul\cf1 ksf2tst7.bat\par\par\plain\f3\fs20\cf1 SET VFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL ASMLG vsam\\test\\KSF2TST7 %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN KSF2TST7 INSERT AND GET BY KEY\par\par does\par\tab INSERT DSH1\par\tab RETRIEVE DSH1\par\tab\par I have added SYSTRACE 'V' to the MLC.\par and change the BAT to point to the MLC as rt\\vsam\\test\\save\\KSF2TST7 \par\par\tab Run cd c:\\z390\par\tab Run rt\\vsam\\test\\save\\KSF2TST7\par\par Got\par\par\tab C:\\Z390>rt\\vsam\\test\\save\\KSF2TST7 \par\tab C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.KSF2NAME \par\tab C:\\Z390>CALL ASMLG rt\\vsam\\test\\save\\KSF2TST7      \par\tab C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par\tab C:\\Z390>echo off \par\tab 13:46:31 KSF2TST7  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/23/16\par\tab 13:46:32 KSF2TST7  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 68 IO=4150\par\tab 13:46:32 KSF2TST7  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/23/16\par\tab 13:46:32 KSF2TST7  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=171\par\tab 13:46:32 KSF2TST7  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/23/16\par\tab KSF2TST7 UPDATE WITH DSH2\par\tab VSAM RPL  RESET FOR NEW ACB\par\tab 13:46:32 KSF2TST7  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/23/16\par\tab VSAM GET   RPL=000FFEF8\par\tab\plain\f3\fs20\cf3 VSAM FIND KEY=000FFFE6 LEN=00000014\plain\f3\fs20\cf1\par\tab  000FFFE6 *C4E2C8F1 40404040 40404040 40404040* *\plain\f3\fs20\ul\cf3 DSH1\plain\f3\fs20\cf1             *\par\tab  000FFFF6 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000054 VES XRBA=00000000000000D2\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=000000000000005C\par\tab  00000000 *D4E34040 40404040 40404040 40404040* *MT              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000038 VES XRBA=000000000000008C\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000040\par\tab  00000000 *D4D44040 40404040 40404040 40404040* *MM              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=000000000000001C VES XRBA=80000000000001A4\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000024\par\tab  00000000 *C4E2C840 40404040 40404040 40404040* *DSH             *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM AVL FIND \plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1\par\tab VSAM EXCP READ CB XRBA=00000000000001A4\par\tab  00000000 *D2E2C9E3 00000000 000001F6 00000000* *\plain\f3\fs20\ul\cf1 KSIT\plain\f3\fs20\cf1 .......6....*\par\tab  00000010 *000001C0 00000000 000001F6         * *...\{.......6    *\par\tab VSAM EXCP READ CB XRBA=00000000000001F6\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......u....*\par\tab  00000010 *000001C0 FFFFFFFF FFFFFFFF 00000000* *...\{????????....*\par\tab  ........\par\tab  00000030 *0000022C 0100                      * *...?..          *\par\tab VSAM EXCP READ KSIR KEY AT XRBA=000000000000022C\par\tab  00000000 *C4E2C8F2 40404040 40404040 40404040* *\plain\f3\fs20\ul\cf1 DSH2\plain\f3\fs20\cf1             *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ CB XRBA=00000000000001C0\par\tab  00000000 *D2E2C9D9 00000000 000001F6 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......6????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF* *????????????????*\par\tab  00000020 *FFFFFFFF 00000000 000001F6 00000000* *????.......6....*\par\tab  00000030 *00000046 0000                      * *...\loch\f3\hich\f3\'e3..          *\par\tab VSAM EXCP READ \plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1  KEY AT XRBA=0000000000000046\par\tab  00000000 *C4E2C840 40404040 40404040 40404040* *\plain\f3\fs20\ul\cf1 DSH\plain\f3\fs20\cf1              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM RPL FEEDBACK=00080010 TYPE=logical REASON=record not found\par\tab VSAM RPL ADDR=000FFEF8 LEN=00000054\par\tab  000FFEF8 *000A5400 00000000 00080010 00000000* *.?\loch\f3\hich\f3\'e8......?......*\par\tab  000FFF08 *000FFEB8 000FFFA0 000FFFE6 00820000* *..\'da\'bd..?\'b5..?W.b..*\par\tab  000FFF18 *00000000 00000000 00000000 00000000* *................*\par\tab  000FFF28 *00000000 00000000 00000001 00000000* *................*\par\tab  000FFF38 *60000000 00000000 00000000 00000000* *-...............*\par\tab  000FFF48 *000001C0                           * *...\{            *\par\tab VSAM RPL ARG =000FFFE6 LEN=00000014 KLEN=00000014\par\tab  000FFFE6 *C4E2C8F1 40404040 40404040 40404040* *DSH1            *\par\tab  000FFFF6 *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA0 LEN=00000046\par\tab  000FFFA0 *40404040 40404040 40404040 40404040* *                *\par\tab  ........\par\tab  000FFFE0 *40404040 4040                      * *                *\par\tab VSAM \plain\f3\fs28\cf3 PUT\plain\f3\fs20\cf1    RPL=000FFEF8\par\tab VSAM AVL INSERT \plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1\par\tab VSAM EXCP READ CB XRBA=00000000000001C0\par\tab  00000000 *D2E2C9D9 00000000 000001F6 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......6????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF* *????????????????*\par\tab  00000020 *FFFFFFFF 00000000 000001F6 00000000* *????.......6....*\par\tab  00000030 *00000046 0000                      * *...\loch\f3\hich\f3\'e3..          *\par\tab VSAM EXCP READ KSIR KEY AT XRBA=0000000000000046\par\tab  00000000 *C4E2C840 40404040 40404040 40404040* *\plain\f3\fs20\ul\cf1 DSH\plain\f3\fs20\cf1              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP WRITE CB XRBA=00000000000001C0 LEN=00000036\par\tab  00000000 *D2E2C9D9 00000000 000001F6 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......6????*\par\tab  00000010 *FFFFFFFF 00000000 00000272 FFFFFFFF* *????.......\loch\f3\hich\f3\'ca????*\par\tab  00000020 *FFFFFFFF 00000000 00000272 00000000* *????.......\'ca....*\par\tab  00000030 *00000046 0000                      * *...\'e3..          *\par\tab VSAM EXCP WRITE FREC XRBA=00000000000002A8 LEN=00000046\par\tab VSAM EXCP WRITE CB XRBA=0000000000000272 LEN=00000036\par\tab  00000000 *D2E2C9D9 00000000 000001C0 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......\{????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF 00000000* *????????????....*\par\tab  00000020 *000001C0 00000000 000001F6 00000000* *...\{.......6....*\par\tab  00000030 *000002A8 0000                      * *...y..          *\par\tab VSAM EXCP READ CB XRBA=00000000000001F6\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......u....*\par\tab  00000010 *000001C0 FFFFFFFF FFFFFFFF 00000000* *...\{????????....*\par\tab  ........\par\tab  00000030 *0000022C 0100                      * *...?..          *\par\tab VSAM EXCP WRITE CB XRBA=00000000000001F6 LEN=00000036\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......u....*\par\tab  00000010 *000001C0 FFFFFFFF FFFFFFFF 00000000* *...\{????????....*\par\tab  00000020 *00000272 FFFFFFFF FFFFFFFF 00000000* *...\loch\f3\hich\f3\'ca????????....*\par\tab  00000030 *0000022C 0100                      * *...?..          *\par\tab VSAM EXCP READ CB XRBA=0000000000000272\par\tab  00000000 *D2E2C9D9 00000000 000001C0 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......\{????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF 00000000* *????????????....*\par\tab  00000020 *000001C0 00000000 000001F6 00000000* *...\{.......6....*\par\tab  00000030 *000002A8 0000                      * *...y..          *\par\tab VSAM AVL UPDATE HEIGHT\par\tab VSAM EXCP READ CB XRBA=00000000000001C0\par\tab  00000000 *D2E2C9D9 00000000 000001F6 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......6????*\par\tab  00000010 *FFFFFFFF 00000000 00000272 FFFFFFFF* *????.......\loch\f3\hich\f3\'ca????*\par\tab  00000020 *FFFFFFFF 00000000 00000272 00000000* *????.......\'ca....*\par\tab  00000030 *00000046 0000                      * *...\'e3..          *\par\tab VSAM EXCP WRITE CB XRBA=00000000000001C0 LEN=00000036\par\tab  00000000 *D2E2C9D9 00000000 000001F6 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......6????*\par\tab  00000010 *FFFFFFFF 00000000 00000272 FFFFFFFF* *????.......\loch\f3\hich\f3\'ca????*\par\tab  00000020 *FFFFFFFF 00000000 00000272 00000000* *????.......\'ca....*\par\tab  00000030 *00000046 0001                      * *...\'e3..          *\par\tab VSAM EXCP READ CB XRBA=00000000000001F6\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......u....*\par\tab  00000010 *000001C0 FFFFFFFF FFFFFFFF 00000000* *...\{????????....*\par\tab  00000020 *00000272 FFFFFFFF FFFFFFFF 00000000* *...\loch\f3\hich\f3\'ca????????....*\par\tab  00000030 *0000022C 0100                      * *...?..          *\par\tab VSAM EXCP READ CB XRBA=00000000000001F6\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......u....*\par\tab  00000010 *000001C0 FFFFFFFF FFFFFFFF 00000000* *...\{????????....*\par\tab  00000020 *00000272 FFFFFFFF FFFFFFFF 00000000* *...\loch\f3\hich\f3\'ca????????....*\par\tab  00000030 *0000022C 0100                      * *...?..          *\par\tab VSAM EXCP READ CB XRBA=00000000000001C0\par\tab  00000000 *D2E2C9D9 00000000 000001F6 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......6????*\par\tab  00000010 *FFFFFFFF 00000000 00000272 FFFFFFFF* *????.......\loch\f3\hich\f3\'ca????*\par\tab  00000020 *FFFFFFFF 00000000 00000272 00000000* *????.......\'ca....*\par\tab  00000030 *00000046 0001                      * *...\'e3..          *\par\tab VSAM AVL ROTATE LEFT RIGHT\par\tab VSAM EXCP READ CB XRBA=0000000000000272\par\tab  00000000 *D2E2C9D9 00000000 000001C0 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......\{????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF 00000000* *????????????....*\par\tab  00000020 *000001C0 00000000 000001F6 00000000* *...\{.......6....*\par\tab  00000030 *000002A8 0000                      * *...y..          *\par\tab VSAM EXCP WRITE CB XRBA=0000000000000272 LEN=00000036\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......u....*\par\tab  00000010 *000001C0 00000000 000001F6 00000000* *...\{.......6....*\par\tab  ........\par\tab  00000030 *000002A8 0101                      * *...y..          *\par\tab VSAM EXCP WRITE CB XRBA=00000000000001A4 LEN=0000001C\par\tab  00000000 *D2E2C9E3 00000000 00000272 00000000* *\plain\f3\fs20\ul\cf1 KSIT\plain\f3\fs20\cf1 .......\loch\f3\hich\f3\'ca....*\par\tab  00000010 *000001C0 00000000 000001F6         * *...\{.......6    *\par\tab VSAM EXCP READ CB XRBA=00000000000001F6\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......u....*\par\tab  00000010 *000001C0 FFFFFFFF FFFFFFFF 00000000* *...\{????????....*\par\tab  00000020 *00000272 FFFFFFFF FFFFFFFF 00000000* *...\loch\f3\hich\f3\'ca????????....*\par\tab  00000030 *0000022C 0100                      * *...?..          *\par\tab VSAM EXCP WRITE CB XRBA=00000000000001F6 LEN=00000036\par\tab  00000000 *D2E2C9D9 00000000 00000272 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......\loch\f3\hich\f3\'ca????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF 00000000* *????????????....*\par\tab  00000020 *00000272 FFFFFFFF FFFFFFFF 00000000* *...\'ca????????....*\par\tab  00000030 *0000022C 0000                      * *...?..          *\par\tab VSAM EXCP READ CB XRBA=00000000000001C0\par\tab  00000000 *D2E2C9D9 00000000 000001F6 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......6????*\par\tab  00000010 *FFFFFFFF 00000000 00000272 FFFFFFFF* *????.......\loch\f3\hich\f3\'ca????*\par\tab  00000020 *FFFFFFFF 00000000 00000272 00000000* *????.......\'ca....*\par\tab  00000030 *00000046 0001                      * *...\'e3..          *\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1\tab VSAM EXCP WRITE CB XRBA=00000000000001C0 LEN=00000036\par\tab  00000000 *D2E2C9D9 00000000 00000272 FFFFFFFF* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......\loch\f3\hich\f3\'ca????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF* *????????????????*\par\tab  00000020 *FFFFFFFF 00000000 00000272 00000000* *????.......\'ca....*\par\tab  00000030 *00000046 0000                      * *...\'e3..          *\par\tab VSAM RPL ADDR=000FFEF8 LEN=00000054\par\tab  000FFEF8 *000A5400 00000000 00000000 00000000* *.?\'e8.............*\par\tab  000FFF08 *000FFEB8 000FFFA0 000FFFE6 00820000* *..\'da\'bd..?\'b5..?W.b..*\par\tab  000FFF18 *00000000 00000000 00000000 00000000* *................*\par\tab  000FFF28 *00000000 00000000 00000001 00000000* *................*\par\tab  000FFF38 *00000000 00000000 00000000 00000000* *................*\par\tab  000FFF48 *000001C0                           * *...\{            *\par\tab VSAM RPL ARG =000FFFE6 LEN=00000014 KLEN=00000014\par\tab  000FFFE6 *C4E2C8F1 40404040 40404040 40404040* *\plain\f3\fs20\ul\cf3 DSH1\plain\f3\fs20\cf3  \plain\f3\fs20\cf1            *\par\tab  000FFFF6 *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA0 LEN=00000046\par\tab  000FFFA0 *C4E2C8F1 40404040 40404040 40404040* *\plain\f3\fs20\ul\cf1 DSH1\plain\f3\fs20\cf1             *\par\tab  000FFFB0 *40404040 F6F3F6F5 40F3F240 C1E5C540* *    6365 32 AVE *\par\tab  000FFFC0 *40404040 40404040 E2E34B40 D7C5E3C5* *        ST. PETE*\par\tab  000FFFD0 *40404040 40404040 40404040 C6D34040* *            FL  *\par\tab  000FFFE0 *40F1F2F3 F4F5                      * * 12345          *\par\tab\plain\f3\fs20\cf3 REC=DSH1                6365 32 AVE         ST. PETE            FL   12345\plain\f3\fs20\cf1\par\tab VSAM \plain\f3\fs28\cf3 GET\plain\f3\fs20\cf1    RPL=000FFEF8\par\tab\plain\f3\fs20\cf3 VSAM FIND KEY=000FFFE6 LEN=00000014\plain\f3\fs20\cf1\par\tab  000FFFE6 *C4E2C8F1 40404040 40404040 40404040* *\plain\f3\fs20\ul\cf3 DSH1\plain\f3\fs20\cf1             *\par\tab  000FFFF6 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000054 VES XRBA=00000000000000D2\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=000000000000005C\par\tab  00000000 *D4E34040 40404040 40404040 40404040* *MT              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000038 VES XRBA=000000000000008C\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000040\par\tab  00000000 *D4D44040 40404040 40404040 40404040* *MM              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=000000000000001C VES XRBA=80000000000001A4\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000024\par\tab  00000000 *C4E2C840 40404040 40404040 40404040* *DSH             *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM AVL FIND \plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1\par\tab VSAM EXCP READ CB XRBA=00000000000001A4\par\tab  00000000 *D2E2C9E3 00000000 00000272 00000000* *\plain\f3\fs20\ul\cf1 KSIT\plain\f3\fs20\cf1 .......\loch\f3\hich\f3\'ca....*\par\tab  00000010 *000001C0 00000000 000001F6         * *...\{.......6    *\par\tab VSAM EXCP READ CB XRBA=0000000000000272\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *\plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1 .......u....*\par\tab  00000010 *000001C0 00000000 000001F6 00000000* *...\{.......6....*\par\tab  ........\par\tab  00000030 *000002A8 0101                      * *...y..          *\par\tab VSAM EXCP READ \plain\f3\fs20\ul\cf1 KSIR\plain\f3\fs20\cf1  KEY AT XRBA=00000000000002A8\par\tab  00000000 *C4E2C8F1 40404040 40404040 40404040* *\plain\f3\fs20\ul\cf1 DSH1\plain\f3\fs20\cf1             *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  FREC XRBA=00000000000002A8 LEN=00000046\par\tab VSAM RPL ADDR=000FFEF8 LEN=00000054\par\tab  000FFEF8 *000A5400 00000000 00000000 00000000* *.?\loch\f3\hich\f3\'e8.............*\par\tab  000FFF08 *000FFEB8 000FFFA0 000FFFE6 00820000* *..\'da\'bd..?\'b5..?W.b..*\par\tab  000FFF18 *00000000 00000000 00000000 000002A8* *...............y*\par\tab  000FFF28 *00000000 0000001C 00000001 00000000* *................*\par\tab  000FFF38 *A0000000 00000000 00000000 00000000* *\'b5...............*\par\tab  000FFF48 *00000272                           * *...\'ca            *\par\tab VSAM RPL ARG =000FFFE6 LEN=00000014 KLEN=00000014\par\tab  000FFFE6 *C4E2C8F1 40404040 40404040 40404040* *\plain\f3\fs20\ul\cf1 DSH1\plain\f3\fs20\cf1             *\par\tab  000FFFF6 *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA0 LEN=00000046\par\tab  000FFFA0 *C4E2C8F1 40404040 40404040 40404040* *\plain\f3\fs20\ul\cf1 DSH1\plain\f3\fs20\cf1             *\par\tab  000FFFB0 *40404040 F6F3F6F5 40F3F240 C1E5C540* *    6365 32 AVE *\par\tab  000FFFC0 *40404040 40404040 E2E34B40 D7C5E3C5* *        ST. PETE*\par\tab  000FFFD0 *40404040 40404040 40404040 C6D34040* *            FL  *\par\tab  000FFFE0 *40F1F2F3 F4F5                      * * 12345          *\par\tab\plain\f3\fs20\cf3 REC=DSH1                6365 32 AVE         ST. PETE            FL   12345\plain\f3\fs20\cf1\par\tab KSF2TST7 ENDED OK\par\tab 13:46:32 KSF2TST7  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=306 INS=54\par\tab\par\par\page\par c:\\z390\\vsam\\test\\KSF2NAME.VX0 (EBCDIC)\par\par 00000000  00 00 00 00 00 00 00 00 C1 D2 40 40 40 40 40 40    ........AK      \par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 80 00 00 00                \loch\f3\hich\f3\'d8...\par 00000020  00 00 01 A4 C4 E2 C8 40 40 40 40 40 40 40 40 40    ...uDSH         \par 00000030  40 40 40 40 40 40 40 40 00 00 00 00 00 00 00 8C            .......\'f0\par 00000040  D4 D4 40 40 40 40 40 40 40 40 40 40 40 40 40 40    MM              \par 00000050  40 40 40 40 00 00 00 00 00 00 00 D2 D4 E3 40 40        .......KMT  \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  00 00 00 00 00 00 01 18 D4 E6 40 40 40 40 40 40    ........MW      \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00                ....\par 00000090  00 00 01 5E D9 D4 40 40 40 40 40 40 40 40 40 40    ...;RM          \par 000000A0  40 40 40 40 40 40 40 40   \par                                          \par KSF2NAME.VX0 (EBCDIC) from before KSF2TST7\par\par 00000000  \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 00\plain\f3\fs20\cf1  \plain\f3\fs20\cf8 C1 D2\plain\f3\fs20\cf1  40 40 40 40 40 40    ........\plain\f3\fs20\cf2 AK\plain\f3\fs20\cf1       \par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf3 80\plain\f3\fs20\ul\cf1  00 00 00\plain\f3\fs20\cf1                 \loch\f3\hich\f3\'d8...\tab\tab\plain\f3\fs20\cf3 80 signals KSIT (negative flag)\plain\f3\fs20\cf1\par 00000020  \plain\f3\fs20\ul\cf1 00 00 \plain\f3\fs20\ul\cf3 01 A4\plain\f3\fs20\cf1  \plain\f3\fs20\cf8 C4 E2 C8\plain\f3\fs20\cf1  40 40 40 40 40 40 40 40 40    ...u\plain\f3\fs20\cf4 DSH\plain\f3\fs20\cf1          \tab\tab\plain\f3\fs20\cf3 1A4 points @ KSIT in VES\plain\f3\fs20\cf1\par 00000030  40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 8C\plain\f3\fs20\cf1             .......\loch\f3\hich\f3\'f0\par 00000040  \plain\f3\fs20\cf8 D4 D4\plain\f3\fs20\cf1  40 40 40 40 40 40 40 40 40 40 40 40 40 40    \plain\f3\fs20\cf4 MM\plain\f3\fs20\cf1               \par 00000050  40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 D2\plain\f3\fs20\cf1  \plain\f3\fs20\cf8 D4 E3\plain\f3\fs20\cf1  40 40        .......K\plain\f3\fs20\cf4 MT\plain\f3\fs20\cf1   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 01 18\plain\f3\fs20\cf1  \plain\f3\fs20\cf8 D4 E6\plain\f3\fs20\cf1  40 40 40 40 40 40    ........\plain\f3\fs20\cf4 MW\plain\f3\fs20\cf1       \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00\plain\f3\fs20\cf1                 ....\par 00000090  \plain\f3\fs20\ul\cf1 00 00 01 5E\plain\f3\fs20\cf1  \plain\f3\fs20\cf8 D9 D4\plain\f3\fs20\cf1  40 40 40 40 40 40 40 40 40 40    ...;\plain\f3\fs20\cf4 RM\plain\f3\fs20\cf1           \par 000000A0  40 40 40 40 40 40 40 40                                            \par\par Unchanged\page\par c:\\z390\\vsam\\test\\KSF2NAME.VES\par\par 00000000  C1 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    AK              \par 00000010  40 40 40 40 C8 D6 D3 D3 C1 D5 C4 40 40 40 40 40        HOLLAND     \par 00000020  40 40 40 40 40 40 40 40 C1 D4 D7 E2 E3 C5 D9 C4            AMPSTERD\par 00000030  C1 D4 40 40 40 40 40 40 40 40 40 40 C8 D3 40 40    AM          HL  \par 00000040  40 C8 C4 F1 40 40 C4 E2 C8 40 40 40 40 40 40 40     HD1  DSH       \par 00000050  40 40 40 40 40 40 40 40 40 40 E4 E2 C1 40 40 40              USA   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 E3 C1                  TA\par 00000070  D4 D7 C1 40 C2 C1 E8 40 40 40 40 40 40 40 40 40    MPA BAY         \par 00000080  40 40 C6 D3 40 40 40 F3 F3 F7 F8 F2 D4 D4 40 40      FL   33782MM  \par 00000090  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 000000A0  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    UK              \par 000000B0  40 40 40 40 D3 D6 D5 C4 D6 D5 40 40 40 40 40 40        LONDON      \par 000000C0  40 40 40 40 40 40 40 40 D3 C5 40 40 40 E4 D2 F2            LE   UK2\par 000000D0  40 40 D4 E3 40 40 40 40 40 40 40 40 40 40 40 40      MT            \par 000000E0  40 40 40 40 40 40 C7 C5 D9 D4 C1 D5 E8 40 40 40          GERMANY   \par 000000F0  40 40 40 40 40 40 40 40 40 40 C2 C5 D9 D3 C9 D5              BERLIN\par 00000100  40 40 40 40 40 40 40 40 40 40 40 40 40 40 C2 C7                  BG\par 00000110  40 40 40 C7 E8 F1 40 40 D4 E6 40 40 40 40 40 40       GY1  MW      \par 00000120  40 40 40 40 40 40 40 40 40 40 40 40 E4 D2 40 40                UK  \par 00000130  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000140  D3 D6 D5 C4 D6 D5 40 40 40 40 40 40 40 40 40 40    LONDON          \par 00000150  40 40 40 40 D3 C5 40 40 40 E4 D2 F1 40 40 D9 D4        LE   UK1  RM\par 00000160  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000170  40 40 E4 E2 C1 40 40 40 40 40 40 40 40 40 40 40      USA           \par 00000180  40 40 40 40 40 40 E2 C1 D5 40 C6 D9 C1 D5 C3 C9          SAN FRANCI\par 00000190  E2 C3 D6 40 40 40 40 40 40 40 C3 C1 40 40 40 F9    SCO       CA   9\par 000001A0  F5 F6 F6 F1 D2 E2 C9 E3 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 02 72\plain\f3\fs20\cf1     5661KSIT.......\loch\f3\hich\f3\'ca\par 000001B0  00 00 00 00 00 00 01 C0 00 00 00 00 00 00 01 F6    .......\{.......6\par 000001C0  D2 E2 C9 D9 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 02 72\plain\f3\fs20\cf1  FF FF FF FF    KSIR.......\loch\f3\hich\f3\'ca\u159 ?\u159 ?\u159 ?\u159 ?\par 000001D0  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 000001E0  FF FF FF FF \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 02 72\plain\f3\fs20\cf1  00 00 00 00    \loch\f3\hich\f3\u159 ?\u159 ?\u159 ?\u159 ?.......\'ca....\par 000001F0  00 00 00 46 00 00 D2 E2 C9 D9 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00\plain\f3\fs20\cf1     ...\loch\f3\hich\f3\'e3..KSIR......\par 00000200  \plain\f3\fs20\ul\cf1 02 72\plain\f3\fs20\cf1  \plain\f3\fs20\ul\cf1 FF FF FF FF FF FF FF FF\plain\f3\fs20\cf1  FF FF FF FF FF FF    .\loch\f3\hich\f3\'ca\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000210  FF FF \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 02 72\plain\f3\fs20\cf1  FF FF FF FF FF FF    \loch\f3\hich\f3\u159 ?\u159 ?.......\'ca\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000220  FF FF 00 00 00 00 00 00 02 2C \plain\f3\fs20\ul\cf1 00\plain\f3\fs20\cf1  00 C4 E2 C8 F2    \loch\f3\hich\f3\u159 ?\u159 ?.......\u140 ?..DSH2\par 00000230  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000240  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000250  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000260  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000270  F4 F5 \plain\f3\fs20\ul\cf1 D2 E2 C9 D9 00 00 00 00 00 00 01 A4 00 00\plain\f3\fs20\cf1     45KSIR.......u..\par 00000280  \plain\f3\fs20\ul\cf1 00 00 00 00 01 C0 00 00 00 00 00 00 01 F6 00 00\plain\f3\fs20\cf1     .....\{.......6..\par 00000290  \plain\f3\fs20\ul\cf1 00 00 00 00 01 C0 00 00 00 00 00 00 01 F6 00 00\plain\f3\fs20\cf1     .....\{.......6..\par 000002A0  \plain\f3\fs20\ul\cf1 00 00 00 00 02 A8 01 01 C4 E2 C8 F1 40 40 40 40\plain\f3\fs20\cf1     .....y..DSH1    \par 000002B0  \plain\f3\fs20\ul\cf1 40 40 40 40 40 40 40 40 40 40 40 40 F6 F3 F6 F5\plain\f3\fs20\cf1                 6365\par 000002C0  \plain\f3\fs20\ul\cf1 40 F3 F2 40 C1 E5 C5 40 40 40 40 40 40 40 40 40\plain\f3\fs20\cf1      32 AVE         \par 000002D0  \plain\f3\fs20\ul\cf1 E2 E3 4B 40 D7 C5 E3 C5 40 40 40 40 40 40 40 40\plain\f3\fs20\cf1     ST. PETE        \par 000002E0  \plain\f3\fs20\ul\cf1 40 40 40 40 C6 D3 40 40 40 F1 F2 F3 F4 F5\plain\f3\fs20\cf1               FL   12345  \par\par KSF2NAME.VES before KSF2TST7\par\par 00000000  C1 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    AK              \par 00000010  40 40 40 40 C8 D6 D3 D3 C1 D5 C4 40 40 40 40 40        HOLLAND     \par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00000020  40 40 40 40 40 40 40 40 C1 D4 D7 E2 E3 C5 D9 C4            AMPSTERD\par 00000030  C1 D4 40 40 40 40 40 40 40 40 40 40 C8 D3 40 40    AM          HL  \par 00000040  40 C8 C4 F1 40 40 \plain\f3\fs20\cf3 C4 E2 C8\plain\f3\fs20\cf1  40 40 40 40 40 40 40     HD1  DSH       \tab\tab\plain\f3\fs20\cf3 key\plain\f3\fs20\cf1  \plain\f3\fs20\cf3 DSH @ 46\plain\f3\fs20\cf1\par 00000050  40 40 40 40 40 40 40 40 40 40 E4 E2 C1 40 40 40              USA   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 E3 C1                  TA\par 00000070  D4 D7 C1 40 C2 C1 E8 40 40 40 40 40 40 40 40 40    MPA BAY         \par 00000080  40 40 C6 D3 40 40 40 F3 F3 F7 F8 F2 D4 D4 40 40      FL   33782MM  \par 00000090  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 000000A0  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    UK              \par 000000B0  40 40 40 40 D3 D6 D5 C4 D6 D5 40 40 40 40 40 40        LONDON      \par 000000C0  40 40 40 40 40 40 40 40 D3 C5 40 40 40 E4 D2 F2            LE   UK2\par 000000D0  40 40 D4 E3 40 40 40 40 40 40 40 40 40 40 40 40      MT            \par 000000E0  40 40 40 40 40 40 C7 C5 D9 D4 C1 D5 E8 40 40 40          GERMANY   \par 000000F0  40 40 40 40 40 40 40 40 40 40 C2 C5 D9 D3 C9 D5              BERLIN\par 00000100  40 40 40 40 40 40 40 40 40 40 40 40 40 40 C2 C7                  BG\par 00000110  40 40 40 C7 E8 F1 40 40 D4 E6 40 40 40 40 40 40       GY1  MW      \par 00000120  40 40 40 40 40 40 40 40 40 40 40 40 E4 D2 40 40                UK  \par 00000130  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000140  D3 D6 D5 C4 D6 D5 40 40 40 40 40 40 40 40 40 40    LONDON          \par 00000150  40 40 40 40 D3 C5 40 40 40 E4 D2 F1 40 40 D9 D4        LE   UK1  RM\par 00000160  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000170  40 40 E4 E2 C1 40 40 40 40 40 40 40 40 40 40 40      USA           \par 00000180  40 40 40 40 40 40 E2 C1 D5 40 C6 D9 C1 D5 C3 C9          SAN FRANCI\par 00000190  E2 C3 D6 40 40 40 40 40 40 40 C3 C1 40 40 40 F9    SCO       CA   9\par 000001A0  F5 F6 F6 F1 D2 E2 C9 E3 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 01 F6\plain\f3\fs20\cf1     5661\plain\f3\fs20\cf3 KSIT\plain\f3\fs20\cf1 .......6\tab\tab\plain\f3\fs20\cf3 KSIT @\plain\f3\fs20\cf1  \plain\f3\fs20\cf3 1A4, length 28\plain\f3\fs20\cf1\par 000001B0  00 00 00 00 00 00 01 C0 00 00 00 00 00 00 01 F6    .......\{.......6\par 000001C0  D2 E2 C9 D9 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 01 F6\plain\f3\fs20\cf1  FF FF FF FF    \plain\f3\fs20\cf3 KSIR\plain\f3\fs20\cf1 .......6\loch\f3\hich\f3\u159 ?\u159 ?\u159 ?\u159 ?\tab\tab\plain\f3\fs20\cf3 KSIR @ 1C0, points @ 46 DSH\plain\f3\fs20\cf1\par 000001D0  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF    \loch\f3\hich\f3\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 000001E0  FF FF FF FF \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 01 F6\plain\f3\fs20\cf1  00 00 00 00    \loch\f3\hich\f3\u159 ?\u159 ?\u159 ?\u159 ?.......6....\par 000001F0  00 00 00 46 00 00 D2 E2 C9 D9 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00\plain\f3\fs20\cf1     ...\loch\f3\hich\f3\'e3..\plain\f3\fs20\cf3 KSIR\plain\f3\fs20\cf1 ......\tab\tab\plain\f3\fs20\cf3 KSIR @ 1F6, points @ 22C DSH2\plain\f3\fs20\cf1\par 00000200  \plain\f3\fs20\ul\cf1 01 A4\plain\f3\fs20\cf1  \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 01 C0\plain\f3\fs20\cf1  FF FF FF FF FF FF    .u.......\{\loch\f3\hich\f3\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000210  FF FF \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 01 C0\plain\f3\fs20\cf1  FF FF FF FF FF FF    \loch\f3\hich\f3\u159 ?\u159 ?.......\{\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000220  FF FF 00 00 00 00 00 00 02 2C \plain\f3\fs20\ul\cf1 01\plain\f3\fs20\cf1  00 C4 E2 C8 F2    \loch\f3\hich\f3\u159 ?\u159 ?.......\u140 ?..\plain\f3\fs20\cf3 DSH2\tab\tab key @ 22C DSH2\plain\f3\fs20\cf1\par 00000230  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000240  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000250  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000260  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000270  F4 F5                                              45              \par\page\plain\f3\fs20\b\cf1 STRUCTURE OF KSIT POPULATED FROM 1A4\par\plain\f3\fs20\cf1 structure from vz390.java\par\par ksit_id \tab\tab // id\tab\tab\tab\tab\tab\tab KSIT\par ksit_top\tab\tab // top KSIR XRBA\tab\tab\tab\tab 00 00 00 00 00 00 02 72 \tab points @ 3rd KSIR\par ksit_fst\tab\tab // first and lowest KSIR XRBA\tab\tab 00 00 00 00 00 00 01 C0\tab\tab points @ 1st KSIR\par ksit_lst\tab\tab // last and highest KSIR XRBA\tab\tab 00 00 00 00 00 00 01 F6 \tab points @ 2nd KSIR\par\plain\f3\fs20\b\cf1\par STRUCTURE OF KSIR POPULATED FROM 1C0\par\plain\f3\fs20\cf1 structure from vz390.java\par\par ksir_id\tab\tab // id\tab\tab\tab\tab\tab\tab KSIR\par ksir_par\tab\tab // parent KSIR or KSIT\tab\tab\tab 00 00 00 00 00 00 02 72\tab\tab points @ parent KSIR (3rd)\par ksir_low\tab\tab // next lower KSIR or -1 \tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par\tab\tab\tab    (high bit if last add)\par ksir_high\tab\tab // next highest KSIR or -1 \tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par\tab\tab\tab    (high bit if last add)\par ksir_bwd\tab\tab // next backward KSIR or -1\tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par ksir_fwd\tab\tab // next foward KSIR or -1\tab\tab 00 00 00 00 00 00 02 72\tab\tab points @ 3rd KSIR\par ksir_rec\tab\tab // xrba of cur record \tab\tab\tab 00 00 00 00 00 00 00 46 \tab points @ key DSH in VES\par\tab\tab\tab    (may change for var update)\par ksir_low_height\tab // max height of low node\tab\tab 00\par ksir_high_height\tab // max height of high node\tab\tab 00\par\par\tab\tab\tab\par\plain\f3\fs20\b\cf1 STRUCTURE OF KSIR POPULATED FROM 1F6\par\plain\f3\fs20\cf1 structure from vz390.java\par\par ksir_id\tab\tab // id\tab\tab\tab\tab\tab\tab KSIR\par ksir_par\tab\tab // parent KSIR or KSIT\tab\tab\tab 00 00 00 00 00 00 02 72\tab\tab points @ parent KSIR (3rd)\par ksir_low\tab\tab // next lower KSIR or -1 \tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par\tab\tab\tab    (high bit if last add)\par ksir_high\tab\tab // next highest KSIR or -1 \tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par\tab\tab\tab    (high bit if last add)\par ksir_bwd\tab\tab // next backward KSIR or -1\tab\tab 00 00 00 00 00 00 02 72\tab\tab points @ parent KSIR (3rd)\par ksir_fwd\tab\tab // next foward KSIR or -1\tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par ksir_rec\tab\tab // xrba of cur record \tab\tab\tab 00 00 00 00 00 00 02 2C \tab points @ key DSH2 in VES\par\tab\tab\tab    (may change for var update)\par ksir_low_height\tab // max height of low node\tab\tab 00\par ksir_high_height\tab // max height of high node\tab\tab 00\par\par\plain\f3\fs20\b\cf1 STRUCTURE OF KSIR POPULATED FROM 272\par\plain\f3\fs20\cf1 structure from vz390.java\par\par ksir_id\tab\tab // id\tab\tab\tab\tab\tab\tab KSIR\par ksir_par\tab\tab // parent KSIR or KSIT\tab\tab\tab 00 00 00 00 00 00 01 A4\tab\tab points @ KSIT\par ksir_low\tab\tab // next lower KSIR or -1 \tab\tab 00 00 00 00 00 00 01 C0\tab\tab points @ first KSIR\par\tab\tab\tab    (high bit if last add)\par ksir_high\tab\tab // next highest KSIR or -1 \tab\tab 00 00 00 00 00 00 01 F6\tab\tab points @ 2nd KSIR\par\tab\tab\tab    (high bit if last add)\par ksir_bwd\tab\tab // next backward KSIR or -1\tab\tab 00 00 00 00 00 00 01 C0\tab\tab points @ first KSIR\par ksir_fwd\tab\tab // next foward KSIR or -1\tab\tab 00 00 00 00 00 00 01 F6\tab\tab points @ 2nd KSIR\par ksir_rec\tab\tab // xrba of cur record \tab\tab\tab 00 00 00 00 00 00 02 A8 \tab points @ key DSH1 in VES\par\tab\tab\tab    (may change for var update)\par ksir_low_height\tab // max height of low node\tab\tab 01\par ksir_high_height\tab // max height of high node\tab\tab 01\page\par\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 KSIT @ 1A4                                                     parent of KSIR below @ 272\par                                                                top KSIR  @ 272\par                                                                1st & lowest KSIR @ 1C0\par                                                                last & highest KSIR @ 1F6\cell\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080 KSIR @ 272   DSH1    level 1    points @ VES 2A8   3rd KSIR    child of KSIT, parent of KSIRs @ 1C0 & 1F6\par                                                                next backward KSIR @ 1C0\par                                                                next forward KSIR @ 1F6\cell\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par\trowd\irow0\irowband0\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080 KSIR @ 1C0   DSH     level 0    points @ VES 46    1st KSIR    child of KSIR @ 272 above\par                                                                next forward KSIR @ 272\par                                                                1st & lowest KSIR\par\cell\trowd\irow0\irowband0\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\trowd\irow1\irowband1\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\cell\trowd\irow1\irowband1\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\trowd\irow2\irowband2\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\cell\trowd\irow2\irowband2\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080 KSIR @ 1F6   DSH2    level 0    points @ VES 22C   2nd KSIR    child of KSIR @ 272 above\par                                                                next backward KSIR @ 272\par                                                                last & highest KSIR\cell\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\cell\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par                 DSH1\par                /    \\\par               /      \\\par            DSH        DSH2\page\plain\f3\fs20\b\ul\cf1 ksf2tst8\tab part4\tab\tab\plain\f3\fs20\ul\cf1 UPDATE BY INSERTING DSH3 AFTER DSH2 IN TREE  \par\tab\tab\tab\tab RETRIEVE DSH1 DSH3 BY KEY\par\plain\f3\fs20\cf1\par\plain\f3\fs20\ul\cf1 ksf2tst8.bat \par\par\plain\f3\fs20\cf1 SET VFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL ASMLG vsam\\test\\KSF2TST8 %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN KSF2TST8 INSERT AND GET BY KEY\par\par does\par\tab INSERT DSH3\par\tab RETRIEVE DSH3\par\tab\par I have added SYSTRACE 'V' to the MLC.\par and change the BAT to point to the MLC as rt\\vsam\\test\\save\\KSF2TST8 \par\par\tab Run cd c:\\z390\par\tab Run rt\\vsam\\test\\save\\KSF2TST8\par\par Got\par\par\tab C:\\Z390>rt\\vsam\\test\\save\\KSF2TST8\par\tab C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.KSF2NAME \par\tab C:\\Z390>CALL ASMLG rt\\vsam\\test\\save\\KSF2TST8      \par\tab C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par\tab C:\\Z390>echo off \par\tab 09:28:50 KSF2TST8  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/25/16\par\tab 09:28:51 KSF2TST8  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 68 IO=4183\par\tab 09:28:51 KSF2TST8  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/25/16\par\tab 09:28:51 KSF2TST8  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=179\par\tab 09:28:51 KSF2TST8  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/25/16\par\tab KSF2TST8 UPDATE WITH DSH2\par\tab VSAM RPL  RESET FOR NEW ACB\par\tab 09:28:51 KSF2TST8  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/25/16\par\tab VSAM GET   RPL=000FFEE8\par\tab VSAM FIND KEY=000FFFEA LEN=00000014\par\tab  000FFFEA *C4E2C8F3 40404040 40404040 40404040* *\plain\f3\fs20\cf3 DSH3 \plain\f3\fs20\cf1            *\par\tab  000FFFFA *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000054 VES XRBA=00000000000000D2\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=000000000000005C\par\tab  00000000 *D4E34040 40404040 40404040 40404040* *MT              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000038 VES XRBA=000000000000008C\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000040\par\tab  00000000 *D4D44040 40404040 40404040 40404040* *MM              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=000000000000001C VES XRBA=80000000000001A4\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000024\par\tab  00000000 *C4E2C840 40404040 40404040 40404040* *DSH             *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM AVL FIND KSIR\par\tab VSAM EXCP READ CB XRBA=00000000000001A4\par\tab  00000000 *D2E2C9E3 00000000 00000272 00000000* *KSIT.......\loch\f3\hich\f3\'ca....*\par\tab  00000010 *000001C0 00000000 000001F6         * *...\{.......6    *\par\tab VSAM EXCP READ CB XRBA=0000000000000272\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *KSIR.......u....*\par\tab  00000010 *000001C0 00000000 000001F6 00000000* *...\{.......6....*\par\tab  ........\par\tab  00000030 *000002A8 0101                      * *...y..          *\par\tab VSAM EXCP READ KSIR KEY AT XRBA=00000000000002A8\par\tab  00000000 *C4E2C8F1 40404040 40404040 40404040* *DSH1            *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ CB XRBA=00000000000001F6\par\tab  00000000 *D2E2C9D9 00000000 00000272 FFFFFFFF* *KSIR.......\'ca????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF 00000000* *????????????....*\par\tab  00000020 *00000272 FFFFFFFF FFFFFFFF 00000000* *...\'ca????????....*\par\tab  00000030 *0000022C 0000                      * *...?..          *\par\tab VSAM EXCP READ KSIR KEY AT XRBA=000000000000022C\par\tab  00000000 *C4E2C8F2 40404040 40404040 40404040* *DSH2            *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM RPL FEEDBACK=00080010 TYPE=logical REASON=record not found\par\tab VSAM RPL ADDR=000FFEE8 LEN=00000054\par\tab  000FFEE8 *000A5400 00000000 00080010 00000000* *.?\'e8......?......*\par\tab  000FFEF8 *000FFEA8 000FFFA4 000FFFEA 00820000* *..\'day..?u..?\'b2.b..*\par\tab  000FFF08 *00000000 00000000 00000000 00000000* *................*\par\tab  000FFF18 *00000000 00000000 00000001 00000000* *................*\par\tab  000FFF28 *60000000 00000000 00000000 00000000* *-...............*\par\tab  000FFF38 *000001F6                           * *...6            *\par\tab VSAM RPL ARG =000FFFEA LEN=00000014 KLEN=00000014\par\tab  000FFFEA *C4E2C8F3 40404040 40404040 40404040* *DSH3            *\par\tab  000FFFFA *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA4 LEN=00000046\par\tab  000FFFA4 *40404040 40404040 40404040 40404040* *                *\par\tab  ........\par\tab  000FFFE4 *40404040 4040                      * *                *\par\tab VSAM \plain\f3\fs28\cf3 PUT\plain\f3\fs20\cf1    RPL=000FFEE8\par\tab VSAM AVL INSERT KSIR\par\tab VSAM EXCP READ CB XRBA=00000000000001F6\par\tab  00000000 *D2E2C9D9 00000000 00000272 FFFFFFFF* *KSIR.......\loch\f3\hich\f3\'ca????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF 00000000* *????????????....*\par\tab  00000020 *00000272 FFFFFFFF FFFFFFFF 00000000* *...\'ca????????....*\par\tab  00000030 *0000022C 0000                      * *...?..          *\par\tab VSAM EXCP READ KSIR KEY AT XRBA=000000000000022C\par\tab  00000000 *C4E2C8F2 40404040 40404040 40404040* *DSH2            *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP WRITE CB XRBA=00000000000001F6 LEN=00000036\par\tab  00000000 *D2E2C9D9 00000000 00000272 FFFFFFFF* *KSIR.......\'ca????*\par\tab  00000010 *FFFFFFFF 00000000 000002EE 00000000* *????.......\'d3....*\par\tab  00000020 *00000272 00000000 000002EE 00000000* *...\'ca.......\'d3....*\par\tab  00000030 *0000022C 0000                      * *...?..          *\par\tab VSAM EXCP WRITE FREC XRBA=0000000000000324 LEN=00000046\par\tab VSAM EXCP WRITE CB XRBA=00000000000002EE LEN=00000036\par\tab  00000000 *D2E2C9D9 00000000 000001F6 FFFFFFFF* *KSIR.......6????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF 00000000* *????????????....*\par\tab  00000020 *000001F6 FFFFFFFF FFFFFFFF 00000000* *...6????????....*\par\tab  00000030 *00000324 0000                      * *...?..          *\par\tab VSAM EXCP WRITE CB XRBA=00000000000001A4 LEN=0000001C\par\tab  00000000 *D2E2C9E3 00000000 00000272 00000000* *KSIT.......\'ca....*\par\tab  00000010 *000001C0 00000000 000002EE         * *...\{.......\'d3    *\par\tab VSAM AVL UPDATE HEIGHT\par\tab VSAM EXCP READ CB XRBA=00000000000001F6\par\tab  00000000 *D2E2C9D9 00000000 00000272 FFFFFFFF* *KSIR.......\'ca????*\par\tab  00000010 *FFFFFFFF 00000000 000002EE 00000000* *????.......\'d3....*\par\tab  00000020 *00000272 00000000 000002EE 00000000* *...\'ca.......\'d3....*\par\tab  00000030 *0000022C 0000                      * *...?..          *\par\tab VSAM EXCP WRITE CB XRBA=00000000000001F6 LEN=00000036\par\tab  00000000 *D2E2C9D9 00000000 00000272 FFFFFFFF* *KSIR.......\'ca????*\par\tab  00000010 *FFFFFFFF 00000000 000002EE 00000000* *????.......\'d3....*\par\tab  00000020 *00000272 00000000 000002EE 00000000* *...\'ca.......\'d3....*\par\tab  00000030 *0000022C 0001                      * *...?..          *\par\tab VSAM EXCP READ CB XRBA=0000000000000272\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *KSIR.......u....*\par\tab  00000010 *000001C0 00000000 000001F6 00000000* *...\{.......6....*\par\tab  ........\par\tab  00000030 *000002A8 0101                      * *...y..          *\par\tab VSAM EXCP WRITE CB XRBA=0000000000000272 LEN=00000036\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *KSIR.......u....*\par\tab  00000010 *000001C0 00000000 000001F6 00000000* *...\{.......6....*\par\tab  ........\par\tab  00000030 *000002A8 0102                      * *...y..          *\par\tab VSAM RPL ADDR=000FFEE8 LEN=00000054\par\tab  000FFEE8 *000A5400 00000000 00000000 00000000* *.?\'e8.............*\par\tab  000FFEF8 *000FFEA8 000FFFA4 000FFFEA 00820000* *..\'day..?u..?\'b2.b..*\par\tab  000FFF08 *00000000 00000000 00000000 00000000* *................*\par\tab  000FFF18 *00000000 00000000 00000001 00000000* *................*\par\tab  000FFF28 *00000000 00000000 00000000 00000000* *................*\par\tab  000FFF38 *000001F6                           * *...6            *\par\tab VSAM RPL ARG =000FFFEA LEN=00000014 KLEN=00000014\par\tab  000FFFEA *C4E2C8F3 40404040 40404040 40404040* *DSH3            *\par\tab  000FFFFA *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA4 LEN=00000046\par\tab  000FFFA4 *C4E2C8F3 40404040 40404040 40404040* *DSH3            *\par\tab  000FFFB4 *40404040 F4F1F2F0 40F7F140 C1E5C540* *    4120 71 AVE *\par\tab  000FFFC4 *40404040 40404040 D7C9D5C5 D3D3C1E2* *        PINELLAS*\par\tab  000FFFD4 *40D7C1D9 D2404040 40404040 C6D34040* * PARK       FL  *\par\tab  000FFFE4 *40F1F2F3 F4F5                      * * 12345          *\par\tab\plain\f3\fs20\cf3 REC=DSH3                4120 71 AVE         PINELLAS PARK       FL   12345\plain\f3\fs20\cf1\par\tab VSAM \plain\f3\fs28\cf3 GET\plain\f3\fs20\cf1    RPL=000FFEE8\par\tab VSAM FIND KEY=000FFFEA LEN=00000014\par\tab  000FFFEA *C4E2C8F1 40404040 40404040 40404040* *\plain\f3\fs20\cf3 DSH1\plain\f3\fs20\cf1             *\par\tab  000FFFFA *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000054 VES XRBA=00000000000000D2\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=000000000000005C\par\tab  00000000 *D4E34040 40404040 40404040 40404040* *MT              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000038 VES XRBA=000000000000008C\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000040\par\tab  00000000 *D4D44040 40404040 40404040 40404040* *MM              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=000000000000001C VES XRBA=80000000000001A4\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000024\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1\tab  00000000 *C4E2C840 40404040 40404040 40404040* *DSH             *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM AVL FIND KSIR\par\tab VSAM EXCP READ CB XRBA=00000000000001A4\par\tab  00000000 *D2E2C9E3 00000000 00000272 00000000* *KSIT.......\loch\f3\hich\f3\'ca....*\par\tab  00000010 *000001C0 00000000 000002EE         * *...\{.......\'d3    *\par\tab VSAM EXCP READ CB XRBA=0000000000000272\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *KSIR.......u....*\par\tab  00000010 *000001C0 00000000 000001F6 00000000* *...\{.......6....*\par\tab  ........\par\tab  00000030 *000002A8 0102                      * *...y..          *\par\tab VSAM EXCP READ KSIR KEY AT XRBA=00000000000002A8\par\tab  00000000 *C4E2C8F1 40404040 40404040 40404040* *DSH1            *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  FREC XRBA=00000000000002A8 LEN=00000046\par\tab VSAM RPL ADDR=000FFEE8 LEN=00000054\par\tab  000FFEE8 *000A5400 00000000 00000000 00000000* *.?\'e8.............*\par\tab  000FFEF8 *000FFEA8 000FFFA4 000FFFEA 00820000* *..\'day..?u..?\'b2.b..*\par\tab  000FFF08 *00000000 00000000 00000000 000002A8* *...............y*\par\tab  000FFF18 *00000000 0000001C 00000001 00000000* *................*\par\tab  000FFF28 *A0000000 00000000 00000000 00000000* *\'b5...............*\par\tab  000FFF38 *00000272                           * *...\'ca            *\par\tab VSAM RPL ARG =000FFFEA LEN=00000014 KLEN=00000014\par\tab  000FFFEA *C4E2C8F1 40404040 40404040 40404040* *DSH1            *\par\tab  000FFFFA *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA4 LEN=00000046\par\tab  000FFFA4 *C4E2C8F1 40404040 40404040 40404040* *DSH1            *\par\tab  000FFFB4 *40404040 F6F3F6F5 40F3F240 C1E5C540* *    6365 32 AVE *\par\tab  000FFFC4 *40404040 40404040 E2E34B40 D7C5E3C5* *        ST. PETE*\par\tab  000FFFD4 *40404040 40404040 40404040 C6D34040* *            FL  *\par\tab  000FFFE4 *40F1F2F3 F4F5                      * * 12345          *\par\tab REC=DSH1                6365 32 AVE         ST. PETE            FL   12345\par\tab VSAM GET   RPL=000FFEE8\par\tab VSAM FIND KEY=000FFFEA LEN=00000014\par\tab  000FFFEA *C4E2C8F3 40404040 40404040 40404040* *DSH3            *\par\tab  000FFFFA *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000054 VES XRBA=00000000000000D2\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=000000000000005C\par\tab  00000000 *D4E34040 40404040 40404040 40404040* *MT              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=0000000000000038 VES XRBA=000000000000008C\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000040\par\tab  00000000 *D4D44040 40404040 40404040 40404040* *MM              *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  XRBA PTR AT VX0 XRBA=000000000000001C VES XRBA=80000000000001A4\par\tab VSAM EXCP READ KSDS INDEX KEY XRBA=0000000000000024\par\tab  00000000 *C4E2C840 40404040 40404040 40404040* *DSH             *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM AVL FIND KSIR\par\tab VSAM EXCP READ CB XRBA=00000000000001A4\par\tab  00000000 *D2E2C9E3 00000000 00000272 00000000* *KSIT.......\'ca....*\par\tab  00000010 *000001C0 00000000 000002EE         * *...\{.......\'d3    *\par\tab VSAM EXCP READ CB XRBA=0000000000000272\par\tab  00000000 *D2E2C9D9 00000000 000001A4 00000000* *KSIR.......u....*\par\tab  00000010 *000001C0 00000000 000001F6 00000000* *...\{.......6....*\par\tab  ........\par\tab  00000030 *000002A8 0102                      * *...y..          *\par\tab VSAM EXCP READ KSIR KEY AT XRBA=00000000000002A8\par\tab  00000000 *C4E2C8F1 40404040 40404040 40404040* *DSH1            *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ CB XRBA=00000000000001F6\par\tab  00000000 *D2E2C9D9 00000000 00000272 FFFFFFFF* *KSIR.......\'ca????*\par\tab  00000010 *FFFFFFFF 00000000 000002EE 00000000* *????.......\'d3....*\par\tab  00000020 *00000272 00000000 000002EE 00000000* *...\'ca.......\'d3....*\par\tab  00000030 *0000022C 0001                      * *...?..          *\par\tab VSAM EXCP READ KSIR KEY AT XRBA=000000000000022C\par\tab  00000000 *C4E2C8F2 40404040 40404040 40404040* *DSH2            *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ CB XRBA=00000000000002EE\par\tab  00000000 *D2E2C9D9 00000000 000001F6 FFFFFFFF* *KSIR.......6????*\par\tab  00000010 *FFFFFFFF FFFFFFFF FFFFFFFF 00000000* *????????????....*\par\tab  00000020 *000001F6 FFFFFFFF FFFFFFFF 00000000* *...6????????....*\par\tab  00000030 *00000324 0000                      * *...?..          *\par\tab VSAM EXCP READ KSIR KEY AT XRBA=0000000000000324\par\tab  00000000 *C4E2C8F3 40404040 40404040 40404040* *DSH3            *\par\tab  00000010 *40404040                           * *                *\par\tab VSAM EXCP READ  FREC XRBA=0000000000000324 LEN=00000046\par\tab VSAM RPL ADDR=000FFEE8 LEN=00000054\par\tab  000FFEE8 *000A5400 00000000 00000000 00000000* *.?\'e8.............*\par\tab  000FFEF8 *000FFEA8 000FFFA4 000FFFEA 00820000* *..\'day..?u..?\'b2.b..*\par\tab  000FFF08 *00000000 00000000 00000000 00000324* *...............?*\par\tab  000FFF18 *00000000 0000001C 00000001 00000000* *................*\par\tab  000FFF28 *A0000000 00000000 00000000 00000000* *\'b5...............*\par\tab  000FFF38 *000002EE                           * *...\'d3            *\par\tab VSAM RPL ARG =000FFFEA LEN=00000014 KLEN=00000014\par\tab  000FFFEA *C4E2C8F3 40404040 40404040 40404040* *DSH3            *\par\tab  000FFFFA *40404040                           * *                *\par\tab VSAM RPL AREA=000FFFA4 LEN=00000046\par\tab  000FFFA4 *C4E2C8F3 40404040 40404040 40404040* *DSH3            *\par\tab  000FFFB4 *40404040 F4F1F2F0 40F7F140 C1E5C540* *    4120 71 AVE *\par\tab  000FFFC4 *40404040 40404040 D7C9D5C5 D3D3C1E2* *        PINELLAS*\par\tab  000FFFD4 *40D7C1D9 D2404040 40404040 C6D34040* * PARK       FL  *\par\tab  000FFFE4 *40F1F2F3 F4F5                      * * 12345          *\par\tab\plain\f3\fs20\cf3 REC=DSH3                4120 71 AVE         PINELLAS PARK       FL   12345\plain\f3\fs20\cf1\par\tab KSF2TST8 ENDED OK\par\tab 09:28:52 KSF2TST8  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=307 INS=64\par\page c:\\z390\\vsam\\test\\KSF2NAME.VX0 (EBCDIC)\par\par 00000000  \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 00\plain\f3\fs20\cf1  C1 D2 40 40 40 40 40 40    ........AK      \par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf1 80 00 00 00\plain\f3\fs20\cf1                 \loch\f3\hich\f3\'d8...\par 00000020  \plain\f3\fs20\ul\cf1 00 00 01 A4\plain\f3\fs20\cf1  C4 E2 C8 40 40 40 40 40 40 40 40 40    ...uDSH         \par 00000030  40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 8C\plain\f3\fs20\cf1             .......\loch\f3\hich\f3\'f0\par 00000040  D4 D4 40 40 40 40 40 40 40 40 40 40 40 40 40 40    MM              \par 00000050  40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 D2\plain\f3\fs20\cf1  D4 E3 40 40        .......KMT  \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 01 18\plain\f3\fs20\cf1  D4 E6 40 40 40 40 40 40    ........MW      \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00\plain\f3\fs20\cf1                 ....\par 00000090  \plain\f3\fs20\ul\cf1 00 00 01 5E\plain\f3\fs20\cf1  D9 D4 40 40 40 40 40 40 40 40 40 40    ...;RM          \par 000000A0  40 40 40 40 40 40 40 40                                            \par\par KSF2NAME.VX0 (EBCDIC) from before KSF2TST8\par\par 00000000  \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 00\plain\f3\fs20\cf1  C1 D2 40 40 40 40 40 40    ........AK      \par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf1 80 00 00 00\plain\f3\fs20\cf1                 \loch\f3\hich\f3\'d8...\par 00000020  \plain\f3\fs20\ul\cf1 00 00 01 A4\plain\f3\fs20\cf1  C4 E2 C8 40 40 40 40 40 40 40 40 40    ...uDSH         \par 00000030  40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 8C\plain\f3\fs20\cf1             .......\loch\f3\hich\f3\'f0\par 00000040  D4 D4 40 40 40 40 40 40 40 40 40 40 40 40 40 40    MM              \par 00000050  40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 00 D2\plain\f3\fs20\cf1  D4 E3 40 40        .......KMT  \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  \plain\f3\fs20\ul\cf1 00 00 00 00 00 00 01 18\plain\f3\fs20\cf1  D4 E6 40 40 40 40 40 40    ........MW      \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 \plain\f3\fs20\ul\cf1 00 00 00 00\plain\f3\fs20\cf1                 ....\par 00000090  \plain\f3\fs20\ul\cf1 00 00 01 5E\plain\f3\fs20\cf1  D9 D4 40 40 40 40 40 40 40 40 40 40    ...;RM          \par 000000A0  40 40 40 40 40 40 40 40   \par   \par unchanged                                       \par\page c:\\z390\\vsam\\test\\KSF2NAME.VES\par\par 00000000  C1 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    AK              \par 00000010  40 40 40 40 C8 D6 D3 D3 C1 D5 C4 40 40 40 40 40        HOLLAND     \par 00000020  40 40 40 40 40 40 40 40 C1 D4 D7 E2 E3 C5 D9 C4            AMPSTERD\par 00000030  C1 D4 40 40 40 40 40 40 40 40 40 40 C8 D3 40 40    AM          HL  \par 00000040  40 C8 C4 F1 40 40 C4 E2 C8 40 40 40 40 40 40 40     HD1  DSH       \par 00000050  40 40 40 40 40 40 40 40 40 40 E4 E2 C1 40 40 40              USA   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 E3 C1                  TA\par 00000070  D4 D7 C1 40 C2 C1 E8 40 40 40 40 40 40 40 40 40    MPA BAY         \par 00000080  40 40 C6 D3 40 40 40 F3 F3 F7 F8 F2 D4 D4 40 40      FL   33782MM  \par 00000090  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 000000A0  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    UK              \par 000000B0  40 40 40 40 D3 D6 D5 C4 D6 D5 40 40 40 40 40 40        LONDON      \par 000000C0  40 40 40 40 40 40 40 40 D3 C5 40 40 40 E4 D2 F2            LE   UK2\par 000000D0  40 40 D4 E3 40 40 40 40 40 40 40 40 40 40 40 40      MT            \par 000000E0  40 40 40 40 40 40 C7 C5 D9 D4 C1 D5 E8 40 40 40          GERMANY   \par 000000F0  40 40 40 40 40 40 40 40 40 40 C2 C5 D9 D3 C9 D5              BERLIN\par 00000100  40 40 40 40 40 40 40 40 40 40 40 40 40 40 C2 C7                  BG\par 00000110  40 40 40 C7 E8 F1 40 40 D4 E6 40 40 40 40 40 40       GY1  MW      \par 00000120  40 40 40 40 40 40 40 40 40 40 40 40 E4 D2 40 40                UK  \par 00000130  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000140  D3 D6 D5 C4 D6 D5 40 40 40 40 40 40 40 40 40 40    LONDON          \par 00000150  40 40 40 40 D3 C5 40 40 40 E4 D2 F1 40 40 D9 D4        LE   UK1  RM\par 00000160  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000170  40 40 E4 E2 C1 40 40 40 40 40 40 40 40 40 40 40      USA           \par 00000180  40 40 40 40 40 40 E2 C1 D5 40 C6 D9 C1 D5 C3 C9          SAN FRANCI\par 00000190  E2 C3 D6 40 40 40 40 40 40 40 C3 C1 40 40 40 F9    SCO       CA   9\par 000001A0  F5 F6 F6 F1 D2 E2 C9 E3 00 00 00 00 00 00 02 72    5661KSIT.......\loch\f3\hich\f3\'ca\par 000001B0  00 00 00 00 00 00 01 C0 00 00 00 00 00 00 02 EE    .......\{.......\'d3\par 000001C0  D2 E2 C9 D9 00 00 00 00 00 00 02 72 FF FF FF FF    KSIR.......\'ca\u159 ?\u159 ?\u159 ?\u159 ?\par 000001D0  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 000001E0  FF FF FF FF 00 00 00 00 00 00 02 72 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?.......\'ca....\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000001F0  00 00 00 46 00 00 D2 E2 C9 D9 00 00 00 00 00 00    ...\loch\f3\hich\f3\'e3..KSIR......\par 00000200  02 72 FF FF FF FF FF FF FF FF 00 00 00 00 00 00    .\'ca\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\par 00000210  02 EE 00 00 00 00 00 00 02 72 00 00 00 00 00 00    .\'d3.......\'ca......\par 00000220  02 EE 00 00 00 00 00 00 02 2C 00 01 C4 E2 C8 F2    .\'d3.......\u140 ?..DSH2\par 00000230  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000240  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000250  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000260  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000270  F4 F5 D2 E2 C9 D9 00 00 00 00 00 00 01 A4 00 00    45KSIR.......u..\par 00000280  00 00 00 00 01 C0 00 00 00 00 00 00 01 F6 00 00    .....\{.......6..\par 00000290  00 00 00 00 01 C0 00 00 00 00 00 00 01 F6 00 00    .....\{.......6..\par 000002A0  00 00 00 00 02 A8 01 02 C4 E2 C8 F1 40 40 40 40    .....y..DSH1    \par 000002B0  40 40 40 40 40 40 40 40 40 40 40 40 F6 F3 F6 F5                6365\par 000002C0  40 F3 F2 40 C1 E5 C5 40 40 40 40 40 40 40 40 40     32 AVE         \par 000002D0  E2 E3 4B 40 D7 C5 E3 C5 40 40 40 40 40 40 40 40    ST. PETE        \par 000002E0  40 40 40 40 C6 D3 40 40 40 F1 F2 F3 F4 F5 D2 E2        FL   12345KS\par 000002F0  C9 D9 00 00 00 00 00 00 01 F6 FF FF FF FF FF FF    IR.......6\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000300  FF FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\par 00000310  01 F6 FF FF FF FF FF FF FF FF 00 00 00 00 00 00    .6\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\par 00000320  03 24 00 00 C4 E2 C8 F3 40 40 40 40 40 40 40 40    .\u132 ?..DSH3        \par 00000330  40 40 40 40 40 40 40 40 F4 F1 F2 F0 40 F7 F1 40            4120 71 \par 00000340  C1 E5 C5 40 40 40 40 40 40 40 40 40 D7 C9 D5 C5    AVE         PINE\par 00000350  D3 D3 C1 E2 40 D7 C1 D9 D2 40 40 40 40 40 40 40    LLAS PARK       \par 00000360  C6 D3 40 40 40 F1 F2 F3 F4 F5                      FL   12345      \par\par KSF2NAME.VES before KSF2TST8\par\par 00000000  C1 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    AK              \par 00000010  40 40 40 40 C8 D6 D3 D3 C1 D5 C4 40 40 40 40 40        HOLLAND     \par 00000020  40 40 40 40 40 40 40 40 C1 D4 D7 E2 E3 C5 D9 C4            AMPSTERD\par 00000030  C1 D4 40 40 40 40 40 40 40 40 40 40 C8 D3 40 40    AM          HL  \par 00000040  40 C8 C4 F1 40 40 C4 E2 C8 40 40 40 40 40 40 40     HD1  DSH       \par 00000050  40 40 40 40 40 40 40 40 40 40 E4 E2 C1 40 40 40              USA   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 E3 C1                  TA\par 00000070  D4 D7 C1 40 C2 C1 E8 40 40 40 40 40 40 40 40 40    MPA BAY         \par 00000080  40 40 C6 D3 40 40 40 F3 F3 F7 F8 F2 D4 D4 40 40      FL   33782MM  \par 00000090  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 000000A0  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    UK              \par 000000B0  40 40 40 40 D3 D6 D5 C4 D6 D5 40 40 40 40 40 40        LONDON      \par 000000C0  40 40 40 40 40 40 40 40 D3 C5 40 40 40 E4 D2 F2            LE   UK2\par 000000D0  40 40 D4 E3 40 40 40 40 40 40 40 40 40 40 40 40      MT            \par 000000E0  40 40 40 40 40 40 C7 C5 D9 D4 C1 D5 E8 40 40 40          GERMANY   \par 000000F0  40 40 40 40 40 40 40 40 40 40 C2 C5 D9 D3 C9 D5              BERLIN\par 00000100  40 40 40 40 40 40 40 40 40 40 40 40 40 40 C2 C7                  BG\par 00000110  40 40 40 C7 E8 F1 40 40 D4 E6 40 40 40 40 40 40       GY1  MW      \par 00000120  40 40 40 40 40 40 40 40 40 40 40 40 E4 D2 40 40                UK  \par 00000130  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000140  D3 D6 D5 C4 D6 D5 40 40 40 40 40 40 40 40 40 40    LONDON          \par 00000150  40 40 40 40 D3 C5 40 40 40 E4 D2 F1 40 40 D9 D4        LE   UK1  RM\par 00000160  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000170  40 40 E4 E2 C1 40 40 40 40 40 40 40 40 40 40 40      USA           \par 00000180  40 40 40 40 40 40 E2 C1 D5 40 C6 D9 C1 D5 C3 C9          SAN FRANCI\par 00000190  E2 C3 D6 40 40 40 40 40 40 40 C3 C1 40 40 40 F9    SCO       CA   9\par 000001A0  F5 F6 F6 F1 D2 E2 C9 E3 00 00 00 00 00 00 02 72    5661KSIT.......\'ca\par 000001B0  00 00 00 00 00 00 01 C0 00 00 00 00 00 00 01 F6    .......\{.......6\par 000001C0  D2 E2 C9 D9 00 00 00 00 00 00 02 72 FF FF FF FF    KSIR.......\'ca\u159 ?\u159 ?\u159 ?\u159 ?\par 000001D0  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 000001E0  FF FF FF FF 00 00 00 00 00 00 02 72 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?.......\'ca....\par 000001F0  00 00 00 46 00 00 D2 E2 C9 D9 00 00 00 00 00 00    ...\'e3..KSIR......\par 00000200  02 72 FF FF FF FF FF FF FF FF FF FF FF FF FF FF    .\'ca\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000210  FF FF 00 00 00 00 00 00 02 72 FF FF FF FF FF FF    \u159 ?\u159 ?.......\'ca\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000220  FF FF 00 00 00 00 00 00 02 2C 00 00 C4 E2 C8 F2    \u159 ?\u159 ?.......\u140 ?..DSH2\par 00000230  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000240  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000250  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000260  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000270  F4 F5 D2 E2 C9 D9 00 00 00 00 00 00 01 A4 00 00    45KSIR.......u..\par 00000280  00 00 00 00 01 C0 00 00 00 00 00 00 01 F6 00 00    .....\{.......6..\par 00000290  00 00 00 00 01 C0 00 00 00 00 00 00 01 F6 00 00    .....\{.......6..\par 000002A0  00 00 00 00 02 A8 01 01 C4 E2 C8 F1 40 40 40 40    .....y..DSH1    \par 000002B0  40 40 40 40 40 40 40 40 40 40 40 40 F6 F3 F6 F5                6365\par 000002C0  40 F3 F2 40 C1 E5 C5 40 40 40 40 40 40 40 40 40     32 AVE         \par 000002D0  E2 E3 4B 40 D7 C5 E3 C5 40 40 40 40 40 40 40 40    ST. PETE        \par 000002E0  40 40 40 40 C6 D3 40 40 40 F1 F2 F3 F4 F5              FL   12345  \par\par\page\plain\f3\fs20\b\cf1 STRUCTURE OF KSIT POPULATED FROM 1A4\par\plain\f3\fs20\cf1 structure from vz390.java\par\par ksit_id \tab\tab // id\tab\tab\tab\tab\tab\tab KSIT\par ksit_top\tab\tab // top KSIR XRBA\tab\tab\tab\tab 00 00 00 00 00 00 02 72 \tab points @ 3rd KSIR\par ksit_fst\tab\tab // first and lowest KSIR XRBA\tab\tab 00 00 00 00 00 00 01 C0\tab\tab points @ 1st KSIR\par ksit_lst\tab\tab // last and highest KSIR XRBA\tab\tab 00 00 00 00 00 00 02 EE \tab points @ 4th KSIR\par\plain\f3\fs20\b\cf1\par STRUCTURE OF KSIR POPULATED FROM 1C0\par\plain\f3\fs20\cf1 structure from vz390.java\par\par ksir_id\tab\tab // id\tab\tab\tab\tab\tab\tab KSIR\par ksir_par\tab\tab // parent KSIR or KSIT\tab\tab\tab 00 00 00 00 00 00 02 72\tab\tab points @ parent KSIR (3rd)\par ksir_low\tab\tab // next lower KSIR or -1 \tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par\tab\tab\tab    (high bit if last add)\par ksir_high\tab\tab // next highest KSIR or -1 \tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par\tab\tab\tab    (high bit if last add)\par ksir_bwd\tab\tab // next backward KSIR or -1\tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par ksir_fwd\tab\tab // next foward KSIR or -1\tab\tab 00 00 00 00 00 00 02 72\tab\tab points @ 3rd KSIR\par ksir_rec\tab\tab // xrba of cur record \tab\tab\tab 00 00 00 00 00 00 00 46 \tab points @ key DSH in VES\par\tab\tab\tab    (may change for var update)\par ksir_low_height\tab // max height of low node\tab\tab 00\par ksir_high_height\tab // max height of high node\tab\tab 00\par\par\tab\tab\tab\par\plain\f3\fs20\b\cf1 STRUCTURE OF KSIR POPULATED FROM 1F6\par\plain\f3\fs20\cf1 structure from vz390.java\par\par ksir_id\tab\tab // id\tab\tab\tab\tab\tab\tab KSIR\par ksir_par\tab\tab // parent KSIR or KSIT\tab\tab\tab 00 00 00 00 00 00 02 72\tab\tab points @ parent KSIR (3rd)\par ksir_low\tab\tab // next lower KSIR or -1 \tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par\tab\tab\tab    (high bit if last add)\par ksir_high\tab\tab // next highest KSIR or -1 \tab\tab 00 00 00 00 00 00 02 EE\tab\tab points @ 4th KSIR\par\tab\tab\tab    (high bit if last add)\par ksir_bwd\tab\tab // next backward KSIR or -1\tab\tab 00 00 00 00 00 00 02 72\tab\tab points @ parent KSIR (3rd)\par ksir_fwd\tab\tab // next foward KSIR or -1\tab\tab 00 00 00 00 00 00 02 EE\tab\tab points @ 4th KSIR\par ksir_rec\tab\tab // xrba of cur record \tab\tab\tab 00 00 00 00 00 00 02 2C \tab points @ key DSH2 in VES\par\tab\tab\tab    (may change for var update)\par ksir_low_height\tab // max height of low node\tab\tab 00\par ksir_high_height\tab // max height of high node\tab\tab 01\par\par\plain\f3\fs20\b\cf1 STRUCTURE OF KSIR POPULATED FROM 272\par\plain\f3\fs20\cf1 structure from vz390.java\par\par ksir_id\tab\tab // id\tab\tab\tab\tab\tab\tab KSIR\par ksir_par\tab\tab // parent KSIR or KSIT\tab\tab\tab 00 00 00 00 00 00 01 A4\tab\tab points @ KSIT\par ksir_low\tab\tab // next lower KSIR or -1 \tab\tab 00 00 00 00 00 00 01 C0\tab\tab points @ first KSIR\par\tab\tab\tab    (high bit if last add)\par ksir_high\tab\tab // next highest KSIR or -1 \tab\tab 00 00 00 00 00 00 01 F6\tab\tab points @ 2nd KSIR\par\tab\tab\tab    (high bit if last add)\par ksir_bwd\tab\tab // next backward KSIR or -1\tab\tab 00 00 00 00 00 00 01 C0\tab\tab points @ first KSIR\par ksir_fwd\tab\tab // next foward KSIR or -1\tab\tab 00 00 00 00 00 00 01 F6\tab\tab points @ 2nd KSIR\par ksir_rec\tab\tab // xrba of cur record \tab\tab\tab 00 00 00 00 00 00 02 A8 \tab points @ key DSH1 in VES\par\tab\tab\tab    (may change for var update)\par ksir_low_height\tab // max height of low node\tab\tab 01\par ksir_high_height\tab // max height of high node\tab\tab 02\par\par\plain\f3\fs20\b\cf1 STRUCTURE OF KSIR POPULATED FROM 2EE\par\plain\f3\fs20\cf1 structure from vz390.java\par\par ksir_id\tab\tab // id\tab\tab\tab\tab\tab\tab KSIR\par ksir_par\tab\tab // parent KSIR or KSIT\tab\tab\tab 00 00 00 00 00 00 01 F6\tab\tab points @ 2nd KSIR\par ksir_low\tab\tab // next lower KSIR or -1 \tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par\tab\tab\tab    (high bit if last add)\par ksir_high\tab\tab // next highest KSIR or -1 \tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par\tab\tab\tab    (high bit if last add)\par ksir_bwd\tab\tab // next backward KSIR or -1\tab\tab 00 00 00 00 00 00 01 F6\tab\tab points @ 2nd KSIR\par ksir_fwd\tab\tab // next foward KSIR or -1\tab\tab FF FF FF FF FF FF FF FF\tab\tab -1\par ksir_rec\tab\tab // xrba of cur record \tab\tab\tab 00 00 00 00 00 00 03 24 \tab points @ key DSH3 in VES\par\tab\tab\tab    (may change for var update)\par ksir_low_height\tab // max height of low node\tab\tab 00\par ksir_high_height\tab // max height of high node\tab\tab 00\page\par\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 KSIT @ 1A4                                                     parent of KSIR below @ 272\par                                                                top KSIR  @ 272\par                                                                1st & lowest KSIR @ 1C0\par                                                                last & highest KSIR @ 2EE\cell\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080 KSIR @ 272   DSH1    level 1    points @ VES 2A8   3rd KSIR    child of KSIT, parent of KSIRs @ 1C0 & 1F6\par                                                                next backward KSIR @ 1C0\par                                                                next forward KSIR @ 1F6\cell\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par\trowd\irow0\irowband0\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080 KSIR @ 1C0   DSH     level 0    points @ VES 46    1st KSIR    child of KSIR @ 272 above\par                                                                next forward KSIR @ 272\par                                                                1st & lowest KSIR\par\cell\trowd\irow0\irowband0\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\trowd\irow1\irowband1\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\cell\trowd\irow1\irowband1\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\trowd\irow2\irowband2\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\cell\trowd\irow2\irowband2\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080 KSIR @ 1F6   DSH2    level 0    points @ VES 22C   2nd KSIR    child of KSIR @ 272 above\par                                                                next backward KSIR @ 272\par                                                                next forward KSIR @ 2EE\cell\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\pard\intbl\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080 KSIR @ 2EE   DSH3    level 0    points @ VES 324   4th KSIR    child of KSIR @ 1F6\par                                                                next backward @ 1F6\cell\trowd\irow0\irowband0\lastrow\trgaph36\trleft0\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl36\trpaddr36\trpaddfl3\trpaddft3\trpaddfr3\trpaddfb3\clvertalt\clftsWidth3\clwWidth15274\cellx15274\row\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\par\plain\f3\fs20\b\cf1                 DSH1\par\plain\f3\fs20\cf1                /    \\\par               /      \\\par            DSH        DSH2\par                        \\\par                         \\\par                          DSH3\page\par ksf2tst4\tab\par\par\tab REM INSERT DSH1,DSH2,DSH3 AND RTRIEVE BY KEY\par\tab SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT]\par\tab SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME\par\tab CALL EXEC REPRO %1 %2 %3 %4 %5\par\tab IF ERRORLEVEL 1 PAUSE ERROR IN LOAD KSF2NAME\par\tab SET VFILE=vsam\\test\\TESTCAT.KSF2NAME\par\tab CALL ASMLG vsam\\test\\KSF2TST4 %1 %2 %3 %4 %5\par\tab IF ERRORLEVEL 1 PAUSE ERROR IN KSF2TST4 INSERT 3 AND GET 3 BY KEY\par\par Does a REPRO of vsam\\demo\\KSF1NAME.TF1 to vsam\\test\\TESTCAT.KSF2NAME\par and then runs vsam\\test\\KSF2TST4, which (comments extracted from ksf2tst4.mlc)\par\par INSERT RECORDS 1-N USING HIGH/LOW SEQ TO FORCE LL,LR,RR,RL ROTATES\par RETRIEVE RECORDS 1-N AND LIST\par CLOSE AND EXIT\par INSERT RECORD USING KEY DSH+PREC AND RETURN R12\par\par Contents of vsam\\demo\\KSF1NAME.TF1\par\par\tab AK                  HOLLAND             AMPSTERDAM          HL   HD1\par\tab DSH                 USA                 TAMPA BAY           FL   33782\par\tab MM                  UK                  LONDON              LE   UK2\par\tab MT                  GERMANY             BERLIN              BG   GY1\par\tab MW                  UK                  LONDON              LE   UK1\par\tab RM                  USA                 SAN FRANCISCO       CA   95661\par\par I have changed the BAT to point to the MLC as rt\\vsam\\test\\save\\KSF2TST4\par and changed the number of inserts from 1000 to 10, so that I can include the whole \par of the log. \par\par\tab Run cd c:\\z390\par\tab Run rt\\vsam\\test\\save\\KSF2TST4\par\par Got\par\par C:\\Z390>rt\\vsam\\test\\save\\KSF2TST4\par C:\\Z390>REM INSERT DSH1,DSH2,DSH3 AND RTRIEVE BY KEY \par C:\\Z390>SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT] \par C:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME \par C:\\Z390>CALL EXEC REPRO      \par C:\\Z390>echo off \par 13:43:06 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/29/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO LOADING VSAM FROM QSAM INFILE\par REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD\par REPRO RECFM=FT LRECL =      70\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC60 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\KSF2NAME.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCC8 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\KSF2NAME.VX0\par  TIOT  DDNAME=INFILE   DCB=000FFAA8 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\demo\\KSF1NAME.TF1\par  REPRO TOTAL RECORDS =       6\par REPRO ENDED OK\par 13:43:06 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=334 INS=448\par 13:43:06 KSF2TST4  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/29/16\par 13:43:07 KSF2TST4  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 68 IO=4280\par 13:43:07 KSF2TST4  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/29/16\par 13:43:07 KSF2TST4  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=197\par 13:43:07 KSF2TST4  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/29/16\par KSF2TST4 TEST AVL INSERTS\par REC=DSH000001           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000002           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000003           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000004           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000005           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000006           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000007           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000008           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000009           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000010           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par KSF2TST4 ENDED OK\par 13:43:07 KSF2TST4  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=314 INS=380\par\par It seems, on the surface, to be OK.\page I have written a zcobol program called PASVES.CBL which attempts to produce a tree diagram using\par the KSIT and KSIRs that are to be found in the VES.\par\par First, though, the c:\\z390\\vsam\\test\\KSF2NAME.VES is accessed via V (a file viewer that I bought)\par under menu header View I used EBCDIC abd then under menu header Edit I used Select block and entire file\par and then under Edit again I used Copy/cut. I then opened Notepad, and File/new and pasted and saved the file as\par c:\\z390\\vsam\\test\\VES.IN.\par\par I changed the assembler for a count of 30.\par\par And reran it.\par\par Then as above and I got some strange results.\par\par The logic, in PASVES, assumes that a KSIR will either be a LEFT (in which case it's FWD pointer should point at it's \par PARENT) or it's a RIGHT (in which case it's BWD pointer should point at it's PARENT).\par\par By adding displays, I am finding KSIRs which don't conform to this expected norm.\par\par However, I did find that my assumptions were incorrect.\par\par The BWD/FWD pointers reflect the chaining of the logical collating sequence and doesn't necessarily reflect the\par physical structure of the tree.\par\par The LOW/HIGH pointers point to the LHS and the RHS children of the this KSIR.\par\par The LOW-HEIGHT/HIGH-HEIGHT values show the number of levels below this KSIR on the LHS and the RHS.\par\par That which follows are displays , from PASVES, of the KSIR (Ket Sequenced Insert Records) found in the input\par file.\par\par I structured them into the schematic diagram which follows and added the depth indicators.\page\par PASVES STARTED\par .\par 00\par  I KSIT Y\par  T 00000000000005D6    10        DSH000010 \par  F 00000000000001C0    01        DSH\par  L 0000000000000F86    30        DSH000030\par  A 00000000000001A4\par .\par 01 Y\par  I KSIR\par  P 0000000000000272    03        DSH000002\par  L FFFFFFFFFFFFFFFF    -1\par  H 00000000000002EE    04        DSH000001\par  B FFFFFFFFFFFFFFFF    -1\par  F 00000000000002EE    04        DSH000001\par  R 0000000000000046    DSH\par  A 00000000000001C0\par    0 1\par .\par 02 Y\par  I KSIR\par  P 0000000000000272    03        DSH000002\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 0000000000000272    03        DSH000002\par  F 000000000000036A    05        DSH000004\par  R 000000000000022C    DSH000003\par  A 00000000000001F6\par    0 0\par .\par 03 Y\par  I KSIR\par  P 000000000000036A    05        DSH000004\par  L 00000000000001C0    01        DSH\par  H 00000000000001F6    02        DSH000003\par  B 00000000000002EE    04        DSH000001\par  F 00000000000001F6    02        DSH000003\par  R 00000000000002A8    DSH000002\par  A 0000000000000272\par    2 1\par .\par 04 Y\par  I KSIR\par  P 00000000000001C0    01        DSH\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 00000000000001C0    01        DSH\par  F 0000000000000272    03        DSH000002\par  R 0000000000000324    DSH000001\par  A 00000000000002EE\par    0 0\par .\par 05 Y\par  I KSIR\par  P 00000000000005D6    10        DSH000010\par  L 0000000000000272    03        DSH000002\par  H 00000000000004DE    08        DSH000007\par  B 00000000000001F6    02        DSH000003\par  F 000000000000055A    09        DSH000005\par  R 00000000000003A0    DSH000004\par  A 000000000000036A\par    3 3\par .\par 06 Y\par  I KSIR\par  P 0000000000000462    07        DSH000009\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 00000000000004DE    08        DSH000007\par  F 0000000000000462    07        DSH000009\par  R 000000000000041C    DSH000008\par  A 00000000000003E6\par    0 0\par .\par 07 Y\par  I KSIR\par  P 00000000000004DE    08        DSH000007\par  L 00000000000003E6    06        DSH000008\par  H FFFFFFFFFFFFFFFF    -1\par  B 00000000000003E6    06        DSH000008\par  F 00000000000005D6    10        DSH000010\par  R 0000000000000498    DSH000009\par  A 0000000000000462\par    1 0\par .\par 08 Y\par  I KSIR\par  P 000000000000036A    05        DSH000004\par  L 000000000000055A    09        DSH000005\par  H 0000000000000462    07        DSH000009\par  B 0000000000000652    11        DSH000006\par  F 00000000000003E6    06        DSH000008\par  R 0000000000000514    DSH000007\par  A 00000000000004DE\par    2 2\par .\par 09 Y\par  I KSIR\par  P 00000000000004DE    08        DSH000007\par  L FFFFFFFFFFFFFFFF    -1\par  H 0000000000000652    11        DSH000006\par  B 000000000000036A    05        DSH000004\par  F 0000000000000652    11        DSH000006\par  R 0000000000000590    DSH000005\par  A 000000000000055A\par    0 1\par .\par 10 Y\par  I KSIR\par  P 00000000000001A4    KSIT\par  L 000000000000036A    05        DSH000004\par  H 00000000000008BE    16        DSH000018\par  B 0000000000000462    07        DSH000009\par  F 00000000000007C6    14        DSH000011\par  R 000000000000060C    DSH000010\par  A 00000000000005D6\par    4 5\par .\par 11 Y\par  I KSIR\par  P 000000000000055A    09        DSH000005\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 000000000000055A    09        DSH000005\par  F 00000000000004DE    08        DSH000007\par  R 0000000000000688    DSH000006\par  A 0000000000000652\par    0 0\par .\par 12 Y\par  I KSIR\par  P 000000000000074A    13        DSH000012\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 000000000000074A    13        DSH000012\par  F 0000000000000842    15        DSH000014\par  R 0000000000000704    DSH000013\par  A 00000000000006CE\par    0 0\par .\par 13 Y\par  I KSIR\par  P 0000000000000842    15        DSH000014\par  L 00000000000007C6    14        DSH000011\par  H 00000000000006CE    12        DSH000013\par  B 00000000000007C6    14        DSH000011\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1  F 00000000000006CE    12        DSH000013\par  R 0000000000000780    DSH000012\par  A 000000000000074A\par    1 1\par .\par 14 Y\par  I KSIR\par  P 000000000000074A    13        DSH000012\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 00000000000005D6    10        DSH000010\par  F 000000000000074A    13        DSH000012\par  R 00000000000007FC    DSH000011\par  A 00000000000007C6\par    0 0\par .\par 15 Y\par  I KSIR\par  P 00000000000008BE    16        DSH000018\par  L 000000000000074A    13        DSH000012\par  H 0000000000000B2A    21        DSH000016\par  B 00000000000006CE    12        DSH000013\par  F 0000000000000A32    19        DSH000015\par  R 0000000000000878    DSH000014\par  A 0000000000000842\par    2 2\par .\par 16 Y\par  I KSIR\par  P 00000000000005D6    10        DSH000010\par  L 0000000000000842    15        DSH000014\par  H 0000000000000D1A    25        DSH000024\par  B 00000000000009B6    18        DSH000017\par  F 000000000000093A    17        DSH000019\par  R 00000000000008F4    DSH000018\par  A 00000000000008BE\par    3 4\par .\par 17 Y\par  I KSIR\par  P 0000000000000AAE    20        DSH000020\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 00000000000008BE    16        DSH000018\par  F 0000000000000AAE    20        DSH000020\par  R 0000000000000970    DSH000019\par  A 000000000000093A\par    0 0\par .\par 18 Y\par  I KSIR\par  P 0000000000000B2A    21        DSH000016\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 0000000000000B2A    21        DSH000016\par  F 00000000000008BE    16        DSH000018\par  R 00000000000009EC    DSH000017\par  A 00000000000009B6\par    0 0\par .\par 19 Y\par  I KSIR\par  P 0000000000000B2A    21        DSH000016\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 0000000000000842    15        DSH000014\par  F 0000000000000B2A    21        DSH000016\par  R 0000000000000A68    DSH000015\par  A 0000000000000A32\par    0 0\par .\par 20 Y\par  I KSIR\par  P 0000000000000C22    23        DSH000022\par  L 000000000000093A    17        DSH000019\par  H 0000000000000C9E    24        DSH000021\par  B 000000000000093A    17        DSH000019\par  F 0000000000000C9E    24        DSH000021\par  R 0000000000000AE4    DSH000020\par  A 0000000000000AAE\par    1 1\par .\par 21 Y\par  I KSIR\par  P 0000000000000842    15        DSH000014\par  L 0000000000000A32    19        DSH000015\par  H 00000000000009B6    18        DSH000017\par  B 0000000000000A32    19        DSH000015\par  F 00000000000009B6    18        DSH000017\par  R 0000000000000B60    DSH000016\par  A 0000000000000B2A\par    1 1\par .\par 22 Y\par  I KSIR\par  P 0000000000000C22    23        DSH000022\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 0000000000000C22    23        DSH000022\par  F 0000000000000D1A    25        DSH000024\par  R 0000000000000BDC    DSH000023\par  A 0000000000000BA6\par    0 0\par .\par 23 Y\par  I KSIR\par  P 0000000000000D1A    25        DSH000024\par  L 0000000000000AAE    20        DSH000020\par  H 0000000000000BA6    22        DSH000023\par  B 0000000000000C9E    24        DSH000021\par  F 0000000000000BA6    22        DSH000023\par  R 0000000000000C58    DSH000022\par  A 0000000000000C22\par    2 1\par .\par 24 Y\par  I KSIR\par  P 0000000000000AAE    20        DSH000020\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 0000000000000AAE    20        DSH000020\par  F 0000000000000C22    23        DSH000022\par  R 0000000000000CD4    DSH000021\par  A 0000000000000C9E\par    0 0\par .\par 25 Y\par  I KSIR\par  P 00000000000008BE    16        DSH000018\par  L 0000000000000C22    23        DSH000022\par  H 0000000000000E8E    28        DSH000027\par  B 0000000000000BA6    22        DSH000023\par  F 0000000000000F0A    29        DSH000025\par  R 0000000000000D50    DSH000024\par  A 0000000000000D1A\par    3 3\par .\par 26 Y\par  I KSIR\par  P 0000000000000E12    27        DSH000029\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 0000000000000E8E    28        DSH000027\par  F 0000000000000E12    27        DSH000029\par  R 0000000000000DCC    DSH000028\par  A 0000000000000D96\par    0 0\par .\par 27 Y\par  I KSIR\par  P 0000000000000E8E    28        DSH000027\par  L 0000000000000D96    26        DSH000028\par  H 0000000000000F86    30        DSH000030\par  B 0000000000000D96    26        DSH000028\par  F 0000000000000F86    30        DSH000030\par  R 0000000000000E48    DSH000029\par  A 0000000000000E12\par    1 1\par .\par 28 Y\par  I KSIR\par  P 0000000000000D1A    25        DSH000024\par  L 0000000000000F0A    29        DSH000025\par  H 0000000000000E12    27        DSH000029\par  B 0000000000001002    31        DSH000026\par  F 0000000000000D96    26        DSH000028\par  R 0000000000000EC4    DSH000027\par  A 0000000000000E8E\par    2 2\par .\par 29 Y\par  I KSIR\par  P 0000000000000E8E    28        DSH000027\par  L FFFFFFFFFFFFFFFF    -1\par  H 0000000000001002    31        DSH000026\par  B 0000000000000D1A    25        DSH000024\par  F 0000000000001002    31        DSH000026\par  R 0000000000000F40    DSH000025\par  A 0000000000000F0A\par    0 1\par .\par 30 Y\par  I KSIR\par  P 0000000000000E12    27        DSH000029\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 0000000000000E12    27        DSH000029\par  F FFFFFFFFFFFFFFFF    -1\par  R 0000000000000FBC    DSH000030\par  A 0000000000000F86\par    0 0\par .\par 31 Y\par  I KSIR\par  P 0000000000000F0A    29        DSH000025\par  L FFFFFFFFFFFFFFFF    -1\par  H FFFFFFFFFFFFFFFF    -1\par  B 0000000000000F0A    29        DSH000025\par  F 0000000000000E8E    28        DSH000027\par  R 0000000000001038    DSH000026\par  A 0000000000001002\par    0 0\par .\par\page The above data has been analysed and has been transposed into the following schematic.\par\par The collating sequence is correct and the depth level values are correct.\par\par (My program PASVES will need some changes to allow it to delve to another level, which would mean it needs \par to provide 63 slots at the bottom level rather than 31) \page\plain\f5\fs16\cf1 KSIT\par |\par |\par TOP\par 10 (4 5)\par DSH000010------------------------------------.\par |                                            |\par |                                            |\par 05 (3 3)                                     16 (3 4)\par DSH000004-------------.                      DSH000018------------------------------------.\par |                     |                      |                                            |\par |                     |                      |                                            |\par 03 (2 1)              08 (2 2)               15 (2 2)                                     25 (3 3)\par DSH000002--.          DSH0000007---.         DSH000014-------------.                      DSH000024-----------------.\par |          |          |            |         |                     |                      |                         |\par |          |          |            |         |                     |                      |                         |\par 01 (0 1)   02 (0 0)   09 (0 1)     07 (1 0)  13 (1 1)              21 (1 1)               23 (2 1)                  28 (2 2)\par DSH        DSH000003  DSH000005    DSH000009 DSH000012--.          DSH000016--.           DSH000022------.          DSH000027---.\par |                     |            |         |          |          |          |           |              |          |           |\par |                     |            |         |          |          |          |           |              |          |           |\par 04 (0 0)              11 (0 0)     06 (0 0)  14 (0 0)   12 (0 0)   19 (0 0)   18 (0 0)    20 (1 1)       22 (0 0)   29 (0 1)    27 (1 1)\par DSH000001             DSH000006    DSH000008 DSH000011  DSH000013  DSH000015  DSH000017   DSH000020--.   DSH000023  DSH000025   DSH000029--.\par                                                                                           |          |              |           |          |\par                                                                                           |          |              |           |          |\par                                                                                           17 (0 0)   24 (0 0)       31 (0 0)    26 (0 0)   30 (0 0)\par                                                                                           DSH000019  DSH000021      DSH000026   DSH000028  DSH000030           \plain\f3\fs20\cf1\page\par ESF1RPO1.bat\tab RUN REPRO TO LOAD ESF1.VES FROM ESF1.TF1\par\par vsam\\test\\ESF1.TF1\par\par\tab 11111111111111111111111111111111111111111111111111111111111111111111111111111111\par\tab 22222222222222222222222222222222222222222222222222222222222222222222222222222222\par\tab 33333333333333333333333333333333333333333333333333333333333333333333333333333333\par\par c:\\z390\\rt\\vsam\\test\\save\\esf1rpo1.bat\tab\par\par\tab REM LOAD/UNLOAD ESF1 USING DEF EF FORMAT\par\tab REM RUN REPRO TO LOAD ESF1.VES FROM ESF1.TF1\par\tab SET INFILE=vsam\\test\\ESF1.TF1           \par\tab SET OUTFILE=vsam\\test\\TESTCAT.ESF1\par\tab CALL EXEC REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par\tab IF ERRORLEVEL 1 PAUSE ERROR IN REPRO LOAD\par\tab REM SAVE REPRO LOAD STATS\par\tab COPY REPRO.LOG vsam\\test\\ESF1RPO1.RLG  \par\tab COPY REPRO.TRE vsam\\test\\ESF1RPO1.RLE\par\tab REM RUN REPRO TO UNLOAD FROM ESF1.VES TO ESF1.TF2\par\tab SET INFILE=vsam\\test\\TESTCAT.ESF1\par\tab SET OUTFILE=vsam\\test\\ESF1.TF2\par\tab CALL EXEC REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par\tab IF ERRORLEVEL 1 PAUSE ERROR IN REPRO UNLOAD\par\tab REM SAVE REPRO UNLOAD STATS\par\tab COPY REPRO.LOG vsam\\test\\ESF1RPO1.RUG  \par\tab COPY REPRO.TRE vsam\\test\\ESF1RPO1.RUE\par\tab REM COMPARE INPUT AND OUTPUT QSAM FILES\par\tab CALL rt\\COMP1 vsam\\test\\ESF1.TF1 vsam\\test\\ESF1.TF2 vsam\\test\\ESF1RPO1.DIF\par\tab IF ERRORLEVEL 1 PAUSE REPRO LOAD/UNLOAD QSAM FILES DONT MATCH\par\par I ran\par\par\tab cd c:\\z390\par\tab c:\\z390\\rt\\vsam\\test\\save\\esf1rpo1\par\par which produced\par\par\tab C:\\Z390>REM LOAD/UNLOAD ESF1 USING DEF EF FORMAT \par\tab C:\\Z390>\plain\f3\fs24\b\cf1 REM RUN REPRO TO LOAD ESF1.VES FROM ESF1.TF1 \plain\f3\fs20\b\cf1\par\tab C:\\Z390>\plain\f3\fs20\cf1 SET INFILE=vsam\\test\\ESF1.TF1\plain\f3\fs20\b\cf1             \plain\f3\fs20\cf1\par\tab C:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.ESF1 \par\tab C:\\Z390>CALL EXEC REPRO          \par\tab C:\\Z390>echo off \par\tab 09:59:50 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 08/25/16\par\tab REPRO z390 VSAM UTILITY V1.2\par\tab REPRO LOADING VSAM FROM QSAM INFILE\par\tab REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD\par\tab REPRO RECFM=EF LRECL =      80\par\tab SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  \tab  TIOT  DDNAME=VES#1    DCB=000FDCE0 DCBOFLGS=30 DSN=\plain\f3\fs24\b\cf1 C:\\Z390\\vsam\\test\\ESF1.VES\plain\f3\fs20\cf1\par\tab  TIOT  DDNAME=INFILE   DCB=000FFAA8 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\ESF1.TF1\par\tab  REPRO TOTAL RECORDS =       3\par\tab REPRO ENDED OK\par\tab 09:59:50 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=328 INS=430\par         1 file(s) copied.\par\tab The system cannot find the file specified.\par\tab 09:59:50 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 08/25/16\par\tab REPRO z390 VSAM UTILITY V1.2\par\tab REPRO UNLOADING VSAM INFILE TO QSAM OUTFILE\par\tab REPRO RECFM=EF LRECL =      80\par\tab SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1\tab  TIOT  DDNAME=VES#1    DCB=000FDCE0 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\ESF1.VES\par\tab  TIOT  DDNAME=OUTFILE  DCB=000FFBA8 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\ESF1.TF2\par\tab  REPRO TOTAL RECORDS =       3\par\tab REPRO ENDED OK\par\tab 09:59:50 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=327 INS=398\par         1 file(s) copied.\par\par The difference file contained\par\par\tab Comparing files VSAM\\TEST\\ESF1.TF1 and VSAM\\TEST\\ESF1.TF2\par\tab FC: no differences encountered\par\par\page\par esf4rpo1.bat\tab RUN REPRO TO LOAD ESF4.VES FROM ESF4.TF1\par\par vsam\\test\\ESF4.TF1\par\par\tab TEST TEXT FILE FOR ESF4REPO.BAT                                                 \par\tab LINE 2                                                                          \par\tab LINE 3 NEXT LINE BLANK                                                          \par                                                                       \par\tab LINE 5                                                                          \par\tab LAST LINE 6                                                                     \par\par rt\\vsam\\test\\save\\esf4rpo1.bat\par\par\tab REM LOAD/UNLOAD ESF4 USING DEF EF FORMAT\par\tab REM RUN REPRO TO LOAD ESF4.VES FROM ESF4.TF1\par\tab SET INFILE=vsam\\test\\ESF4.TF1           \par\tab SET OUTFILE=vsam\\test\\TESTCAT.ESF4\par\tab CALL EXEC REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par\tab IF ERRORLEVEL 1 PAUSE ERROR IN REPRO LOAD\par\tab REM SAVE REPRO LOAD STATS\par\tab COPY REPRO.LOG vsam\\test\\ESF4RPO1.RLG  \par\tab COPY REPRO.TRE vsam\\test\\ESF4RPO1.RLE\par\tab REM RUN REPRO TO UNLOAD FROM ESF4.VES TO ESF4.TF2\par\tab SET INFILE=vsam\\test\\TESTCAT.ESF4\par\tab SET OUTFILE=vsam\\test\\ESF4.TF2\par\tab CALL EXEC REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par\tab IF ERRORLEVEL 1 PAUSE ERROR IN REPRO UNLOAD\par\tab REM SAVE REPRO UNLOAD STATS\par\tab COPY REPRO.LOG vsam\\test\\ESF4RPO1.RUG  \par\tab COPY REPRO.TRE vsam\\test\\ESF4RPO1.RUE\par\tab REM COMPARE INPUT AND OUTPUT QSAM FILES\par\tab CALL rt\\COMP1 vsam\\test\\ESF4.TF1 vsam\\test\\ESF4.TF2 vsam\\test\\ESF4RPO1.DIF\par\tab IF ERRORLEVEL 1 PAUSE REPRO LOAD/UNLOAD QSAM FILES DONT MATCH\par\par\par And then I ran\par\par\tab cd c:\\z390\par\tab rt\\vsam\\test\\save\\esf4rpo1\par\par which produced\par\par C:\\Z390>rt\\vsam\\test\\save\\esf4rpo1\par C:\\Z390>REM LOAD/UNLOAD ESF4 USING DEF EF FORMAT \par C:\\Z390>REM RUN REPRO TO LOAD ESF4.VES FROM ESF4.TF1 \par C:\\Z390>SET INFILE=vsam\\test\\ESF4.TF1            \par C:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.ESF4 \par C:\\Z390>CALL EXEC REPRO          \par C:\\Z390>echo off \par 08:28:03 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/30/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO LOADING VSAM FROM QSAM INFILE\par REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD\par REPRO RECFM=EF LRECL =      80\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDCE0 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\ESF4.VES\par  TIOT  DDNAME=INFILE   DCB=000FFAA8 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\ESF4.TF1\par  REPRO TOTAL RECORDS =       6\par REPRO ENDED OK\par 08:28:04 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=328 INS=574\par         1 file(s) copied.\par The system cannot find the file specified.\par 08:28:04 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/30/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO UNLOADING VSAM INFILE TO QSAM OUTFILE\par REPRO RECFM=EF LRECL =      80\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDCE0 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\ESF4.VES\par  TIOT  DDNAME=OUTFILE  DCB=000FFBA8 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\ESF4.TF2\par  REPRO TOTAL RECORDS =       6\par REPRO ENDED OK\par 08:28:04 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=327 INS=551\par         1 file(s) copied.\par The system cannot find the file specified.\par C:\\Z390> exit\par *** 09/30/16 08:28:04 CMD task ended TOT SEC=1 TOT LOG IO=36\par\par\page The difference file contained\par\par\tab Comparing files VSAM\\TEST\\ESF4.TF1 and VSAM\\TEST\\ESF4.TF2\par\tab FC: no differences encountered\par\par\tab\page\par esv1rpo1.bat\tab RUN REPRO TO LOAD ESV1.VES FROM ESV1.TF1\par\par vsam\\test\\esv1.tf1\par\par 00000000  00 00 00 68 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    ...\loch\f3\hich\f3\'c7111111111111\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000050  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000060  F1 F1 F1 F1 F1 F1 F1 F1 00 00 00 CC F2 F2 F2 F2    11111111...\'f62222\par 00000070  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000080  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000090  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000A0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000B0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000C0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000D0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000E0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000F0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000100  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000110  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000120  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000130  F2 F2 F2 F2 00 00 01 30 F3 F3 F3 F3 F3 F3 F3 F3    2222...\'9033333333\par 00000140  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000150  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000160  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000170  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000180  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000190  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001A0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001B0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001C0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001D0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001E0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001F0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000200  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000210  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000220  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000230  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000240  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000250  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000260  F3 F3 F3 F3                                        3333            \par\par rt\\vsam\\test\\save\\esv1rpo1.bat\par\par REM LOAD/UNLOAD ESV1 USING DEF EV LLLL,REC FORMAT \par REM NOTE ESV1.TF1 QSAM INPUT FILE IS CREATED BY ESV1TEST.MLC\par REM RUN REPRO TO LOAD ESV1.VES FROM ESV1.TF1\par SET INFILE=vsam\\test\\ESV1.TF1                    \par SET OUTFILE=vsam\\test\\TESTCAT.ESV1\par CALL EXEC REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO LOAD\par REM SAVE REPRO LOAD STATS\par COPY REPRO.LOG vsam\\test\\ESV1RPO1.RLG  \par COPY REPRO.TRE vsam\\test\\ESV1RPO1.RLE\par REM RUN REPRO TO UNLOAD FROM ESV1.VES TO ESV1.TF2\par SET INFILE=vsam\\test\\TESTCAT.ESV1\par SET OUTFILE=vsam\\test\\ESV1.TF2\par CALL EXEC REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO UNLOAD\par REM SAVE REPRO UNLOAD STATS\par COPY REPRO.LOG vsam\\test\\ESV1RPO1.RUG  \par COPY REPRO.TRE vsam\\test\\ESV1RPO1.RUE\par REM COMPARE INPUT AND OUTPUT QSAM FILES\par CALL rt\\COMP1 vsam\\test\\ESV1.TF1 vsam\\test\\ESV1.TF2 vsam\\test\\ESV1RPO1.DIF\par IF ERRORLEVEL 1 PAUSE REPRO LOAD/UNLOAD QSAM FILES DONT MATCH\par\par\par And then I ran\par\par\tab c:\\z390\\rt\\vsam\\test\\save\\esv1rpo1\par\par which produced\par\par\tab C:\\Z390>REM LOAD/UNLOAD ESV1 USING DEF EV LLLL,REC FORMAT  \par\tab C:\\Z390>REM NOTE ESV1.TF1 QSAM INPUT FILE IS CREATED BY ESV1TEST.MLC \par\tab C:\\Z390>REM RUN REPRO TO LOAD ESV1.VES FROM ESV1.TF1 \par\tab C:\\Z390>SET INFILE=vsam\\test\\ESV1.TF1                     \par\tab C:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.ESV1 \par\tab C:\\Z390>CALL EXEC REPRO          \par\tab C:\\Z390>echo off \par\tab 09:21:35 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 08/28/16\par\tab REPRO z390 VSAM UTILITY V1.2\par\tab REPRO LOADING VSAM FROM QSAM INFILE\par\tab REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD\par\tab REPRO RECFM=EV LRECL =     404\par\tab SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par\tab  TIOT  DDNAME=VES#1    DCB=000FDCE0 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\ESV1.VES\par\tab  TIOT  DDNAME=INFILE   DCB=000FFAA8 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\ESV1.TF1\par\tab  REPRO TOTAL RECORDS =       3\par\tab REPRO ENDED OK\par\tab 09:21:36 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=328 INS=453\par\tab         1 file(s) copied.\par\tab The system cannot find the file specified.\par\tab 09:21:36 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 08/28/16\par\tab REPRO z390 VSAM UTILITY V1.2\par\tab REPRO UNLOADING VSAM INFILE TO QSAM OUTFILE\par\tab REPRO RECFM=EV LRECL =     404\par\tab SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par\tab  TIOT  DDNAME=VES#1    DCB=000FDCE0 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\ESV1.VES\par\tab  TIOT  DDNAME=OUTFILE  DCB=000FFBA8 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\ESV1.TF2\par\tab  REPRO TOTAL RECORDS =       3\par\tab REPRO ENDED OK\par\tab 09:21:36 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=327 INS=419\par\tab         1 file(s) copied.\par\tab The system cannot find the file specified.\par\tab C:\\Z390> exit\par\tab *** 08/28/16 09:21:36 CMD task ended TOT SEC=1 TOT LOG IO=37\par\par The difference file contained (vsam\\test\\ESV1RPO1.DIF)\par\par Comparing files VSAM\\TEST\\ESV1.TF1 and VSAM\\TEST\\ESV1.TF2\par FC: no differences encountered\par\par\par\page esv5rpo1.bat\tab RUN REPRO TO LOAD ESV5.VES FROM ESV5.TF1\par\par vsam\\test\\esv5.tf1\par\par 00000000  00 00 00 23 E3 C5 E2 E3 40 E3 C5 E7 E3 40 C6 C9    ...\u131 ?TEST TEXT FI\par 00000010  D3 C5 40 C6 D6 D9 40 C5 E2 C6 F4 D9 C5 D7 D6 4B    LE FOR ESF4REPO.\par 00000020  C2 C1 E3 00 00 00 0A D3 C9 D5 C5 40 F2 00 00 00    BAT...\u142 ?LINE 2...\par 00000030  1A D3 C9 D5 C5 40 F3 40 D5 C5 E7 E3 40 D3 C9 D5    \u146 ?LINE 3 NEXT LIN\par 00000040  C5 40 C2 D3 C1 D5 D2 00 00 00 05 40 00 00 00 0A    E BLANK.... ...\u142 ?\par 00000050  D3 C9 D5 C5 40 F5 00 00 00 0F D3 C1 E2 E3 40 D3    LINE 5....LAST L\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00000060  C9 D5 C5 40 F6                                     INE 6           \par\par rt\\vsam\\test\\save\\esv5rp01.bat\par\par REM LOAD/UNLOAD ESV5 USING DEF EV LLLL,REC FORMAT\par REM RUN REPRO TO LOAD ESV5.VES FROM ESV5.TF1\par SET INFILE=vsam\\test\\ESV5.TF1                    \par SET OUTFILE=vsam\\test\\TESTCAT.ESV5\par CALL EXEC REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO LOAD\par REM SAVE REPRO LOAD STATS\par COPY REPRO.LOG vsam\\test\\ESV5RPO1.RLG  \par COPY REPRO.TRE vsam\\test\\ESV5RPO1.RLE\par REM RUN REPRO TO UNLOAD FROM ESV5.VES TO ESV5.TF2\par SET INFILE=vsam\\test\\TESTCAT.ESV5\par SET OUTFILE=vsam\\test\\ESV5.TF2\par CALL EXEC REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO UNLOAD\par REM SAVE REPRO UNLOAD STATS\par COPY REPRO.LOG vsam\\test\\ESV5RPO1.RUG  \par COPY REPRO.TRE vsam\\test\\ESV5RPO1.RUE\par REM COMPARE INPUT AND OUTPUT QSAM FILES\par CALL rt\\COMP1 vsam\\test\\ESV5.TF1 vsam\\test\\ESV5.TF2  vsam\\test\\ESV5RPO1.DIF\par IF ERRORLEVEL 1 PAUSE REPRO LOAD/UNLOAD QSAM FILES DONT MATCH\par\par\par And then I ran\par\par\tab c:\\z390\\rt\\vsam\\test\\save\\esv5rpo1\par\par which produced\par\par C:\\Z390>rt\\vsam\\test\\save\\esv5rpo1\par C:\\Z390>REM LOAD/UNLOAD ESV5 USING DEF EV LLLL,REC FORMAT \par C:\\Z390>REM RUN REPRO TO LOAD ESV5.VES FROM ESV5.TF1 \par C:\\Z390>SET INFILE=vsam\\test\\ESV5.TF1                     \par C:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.ESV5 \par C:\\Z390>CALL EXEC REPRO          \par C:\\Z390>echo off \par 07:47:44 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 10/03/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO LOADING VSAM FROM QSAM INFILE\par REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD\par REPRO RECFM=EV LRECL =      84\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDCE0 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\ESV5.VES\par  TIOT  DDNAME=INFILE   DCB=000FFAA8 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\ESV5.TF1\par  REPRO TOTAL RECORDS =       6\par REPRO ENDED OK\par 07:47:44 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=328 INS=621\par         1 file(s) copied.\par The system cannot find the file specified.\par 07:47:45 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 10/03/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO UNLOADING VSAM INFILE TO QSAM OUTFILE\par REPRO RECFM=EV LRECL =      84\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDCE0 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\ESV5.VES\par  TIOT  DDNAME=OUTFILE  DCB=000FFBA8 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\ESV5.TF2\par  REPRO TOTAL RECORDS =       6\par REPRO ENDED OK\par 07:47:45 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=327 INS=593\par         1 file(s) copied.\par The system cannot find the file specified.\par C:\\Z390> exit\par *** 10/03/16 07:47:45 CMD task ended TOT SEC=1 TOT LOG IO=36\par\par The difference file contained (vsam\\test\\ESV5RPO1.DIF)\par Comparing files VSAM\\TEST\\ESV5.TF1 and VSAM\\TEST\\ESV5.TF2\par FC: no differences encountered\par ksf1aixa.bat\tab create KSF1ADDR alternate index\par\par rt\\vsam\\test\\save\\ksf1aixa.bat\par\par REM create KSF1ADDR alternate index\par cd vsam\\test\par SET INFILE=TESTCAT.KSF1NAME\par SET OUTFILE=TESTCAT.KSF1ADDR\par CALL ..\\..\\EXEC ..\\..\\linklib\\REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN BUILDAIX KSF1ADDR\par REM READ KSDS ADDRLIST PATH AND COMPARE RECORDS\par SET VFILE=w:\\work\\z390\\vsam\\test\\TESTCAT.ADDRLIST\par SET QFILE=w:\\work\\z390\\vsam\\test\\KSF1ADDR.TF1\par CALL ..\\..\\ASMLG KSF1COMP %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN READ ADDRLIST PATH RECS BY KEY\par CD ..\par CD ..\par\par I changed it intil it ran correctly, but the BAT contents are probably pretty shitty,\par but it runs.\par\par REM create KSF1ADDR alternate index\par rem cd vsam\\test\par SET INFILE=c:\\Z390\\vsam\\test\\TESTCAT.KSF1NAME\par SET OUTFILE=c:\\Z390\\vsam\\test\\TESTCAT.KSF1ADDR\par CALL C:\\Z390\\EXEC C:\\Z390\\LINKLIB\\REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN BUILDAIX KSF1ADDR\par REM READ KSDS ADDRLIST PATH AND COMPARE RECORDS\par SET VFILE=c:\\z390\\vsam\\test\\TESTCAT.ADDRLIST\par SET QFILE=c:\\z390\\vsam\\test\\KSF1ADDR.TF1\par CD C:\\Z390\\VSAM\\TEST\\\par CALL C:\\Z390\\ASMLG KSF1COMP %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN READ ADDRLIST PATH RECS BY KEY\par REM CD ..\par REM CD ..\par\par and I ran\par\par C:\\Z390\\rt\\vsam\\test\\save\\KSF1AIXA\par\par which produced\par\par C:\\>REM create KSF1ADDR alternate index \par C:\\>rem cd vsam\\test \par C:\\>SET INFILE=c:\\Z390\\vsam\\test\\TESTCAT.KSF1NAME \par C:\\>SET OUTFILE=c:\\Z390\\vsam\\test\\TESTCAT.KSF1ADDR \par C:\\>CALL C:\\Z390\\EXEC C:\\Z390\\LINKLIB\\REPRO      \par C:\\>echo off \par 13:26:25 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/02/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO BUILD AIX FROM VSAM INFILE TO QSAM OUTFILE\par REPRO RECFM=AI LRECL =      28\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC58 DCBOFLGS=50 DSN=c:\\Z390\\vsam\\test\\KSF1NAME.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCC0 DCBOFLGS=50 DSN=c:\\Z390\\vsam\\test\\KSF1NAME.VX0\par  TIOT  DDNAME=OUTFILE  DCB=000FFBA8 DCBOFLGS=30 DSN=c:\\Z390\\vsam\\test\\KSF1ADDR.VXN\par  REPRO TOTAL RECORDS =       6\par REPRO ENDED OK\par 13:26:25 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=328 INS=1086\par 13:26:26 KSF1COMP  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/02/16\par 13:26:26 KSF1COMP  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 68 IO=4419\par 13:26:26 KSF1COMP  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/02/16\par 13:26:26 KSF1COMP  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=168\par 13:26:27 KSF1COMP  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/02/16\par KSF1COMP READ VFILE AND COMPARE WITH QFILE\par REC=MT                  GERMANY             BERLIN              BG   GY1\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par REC=MM                  UK                  LONDON              LE   UK2\par REC=MW                  UK                  LONDON              LE   UK1\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=RM                  USA                 SAN FRANCISCO       CA   95661\par KSF1SKP1 ENDED OK\par 13:26:27 KSF1COMP  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=314 INS=115\par ksf1aixc.bat\tab create KSF1CITY alternate index\par\par c:\\Z390\\vsam\\test\\KSF1NAME.VES (output from V)\par\par 00000000  C1 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    AK              \par 00000010  40 40 40 40 C8 D6 D3 D3 C1 D5 C4 40 40 40 40 40        HOLLAND     \par 00000020  40 40 40 40 40 40 40 40 C1 D4 D7 E2 E3 C5 D9 C4            AMPSTERD\par 00000030  C1 D4 40 40 40 40 40 40 40 40 40 40 C8 D3 40 40    AM          HL  \par 00000040  40 C8 C4 F1 40 40 C4 E2 C8 40 40 40 40 40 40 40     HD1  DSH       \par 00000050  40 40 40 40 40 40 40 40 40 40 E4 E2 C1 40 40 40              USA   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 E3 C1                  TA\par 00000070  D4 D7 C1 40 C2 C1 E8 40 40 40 40 40 40 40 40 40    MPA BAY         \par 00000080  40 40 C6 D3 40 40 40 F3 F3 F7 F8 F2 D4 D4 40 40      FL   33782MM  \par 00000090  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 000000A0  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    UK              \par 000000B0  40 40 40 40 D3 D6 D5 C4 D6 D5 40 40 40 40 40 40        LONDON      \par 000000C0  40 40 40 40 40 40 40 40 D3 C5 40 40 40 E4 D2 F2            LE   UK2\par 000000D0  40 40 D4 E3 40 40 40 40 40 40 40 40 40 40 40 40      MT            \par 000000E0  40 40 40 40 40 40 C7 C5 D9 D4 C1 D5 E8 40 40 40          GERMANY   \par 000000F0  40 40 40 40 40 40 40 40 40 40 C2 C5 D9 D3 C9 D5              BERLIN\par 00000100  40 40 40 40 40 40 40 40 40 40 40 40 40 40 C2 C7                  BG\par 00000110  40 40 40 C7 E8 F1 40 40 D4 E6 40 40 40 40 40 40       GY1  MW      \par 00000120  40 40 40 40 40 40 40 40 40 40 40 40 E4 D2 40 40                UK  \par 00000130  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000140  D3 D6 D5 C4 D6 D5 40 40 40 40 40 40 40 40 40 40    LONDON          \par 00000150  40 40 40 40 D3 C5 40 40 40 E4 D2 F1 40 40 D9 D4        LE   UK1  RM\par 00000160  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000170  40 40 E4 E2 C1 40 40 40 40 40 40 40 40 40 40 40      USA           \par 00000180  40 40 40 40 40 40 E2 C1 D5 40 C6 D9 C1 D5 C3 C9          SAN FRANCI\par 00000190  E2 C3 D6 40 40 40 40 40 40 40 C3 C1 40 40 40 F9    SCO       CA   9\par 000001A0  F5 F6 F6 F1                                        5661            \par\par c:\\Z390\\vsam\\test\\KSF1NAME.VX0 (output from V)\par\par 00000000  00 00 00 00 00 00 00 00 C1 D2 40 40 40 40 40 40    ........AK      \par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00                ....\par 00000020  00 00 00 46 C4 E2 C8 40 40 40 40 40 40 40 40 40    ...\loch\f3\hich\f3\'e3DSH         \par 00000030  40 40 40 40 40 40 40 40 00 00 00 00 00 00 00 8C            .......\'f0\par 00000040  D4 D4 40 40 40 40 40 40 40 40 40 40 40 40 40 40    MM              \par 00000050  40 40 40 40 00 00 00 00 00 00 00 D2 D4 E3 40 40        .......KMT  \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  00 00 00 00 00 00 01 18 D4 E6 40 40 40 40 40 40    ........MW      \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00                ....\par 00000090  00 00 01 5E D9 D4 40 40 40 40 40 40 40 40 40 40    ...;RM          \par 000000A0  40 40 40 40 40 40 40 40   \par  \page c:\\Z390\\vsam\\test\\KSF1ADDR.VXN\par\par 00000000  00 00 00 00 00 00 00 D2 C7 C5 D9 D4 C1 D5 E8 40    .......KGERMANY \par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00                ....\par 00000020  00 00 00 00 C8 D6 D3 D3 C1 D5 C4 40 40 40 40 40    ....HOLLAND     \par 00000030  40 40 40 40 40 40 40 40 00 00 00 00 00 00 00 8C            .......\'f0\par 00000040  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    UK              \par 00000050  40 40 40 40 00 00 00 00 00 00 01 18 E4 D2 40 40        ........UK  \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  00 00 00 00 00 00 00 46 E4 E2 C1 40 40 40 40 40    .......\'e3USA     \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00                ....\par 00000090  00 00 01 5E E4 E2 C1 40 40 40 40 40 40 40 40 40    ...;USA         \par 000000A0  40 40 40 40 40 40 40 40                                            \par  \par c:\\z390\\vsam\\test\\KSF1ADDR.TF1\par\par MT                  GERMANY             BERLIN              BG   GY1\par AK                  HOLLAND             AMPSTERDAM          HL   HD1\par MM                  UK                  LONDON              LE   UK2\par MW                  UK                  LONDON              LE   UK1\par DSH                 USA                 TAMPA BAY           FL   33782\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 RM                  USA                 SAN FRANCISCO       CA   95661\par\par The VXN is in the correct sequence.\par\page ksf1aixc.bat\tab create KSF1CITY alternate index\par\par rt\\vsam\\test\\save\\ksf1aixc.bat\par\par REM create KSF1CITY alternate index\par cd vsam\\test\par SET INFILE=TESTCAT.KSF1NAME\par SET OUTFILE=TESTCAT.KSF1CITY\par CALL ..\\..\\EXEC ..\\..\\linklib\\REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN BUILDAIX KSF1CITY\par REM READ KSDS ADDRLIST PATH AND COMPARE RECORDS\par SET VFILE=w:\\work\\z390\\vsam\\test\\TESTCAT.CITYLIST\par SET QFILE=w:\\work\\z390\\vsam\\test\\KSF1CITY.TF1\par CALL ..\\..\\ASMLG KSF1COMP %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN READ CITYLIST PATH RECS BY KEY\par CD ..\par CD ..\par\par This was changed to\par\par REM create KSF1CITY alternate index\par REM cd vsam\\test\par SET INFILE=VSAM\\TEST\\TESTCAT.KSF1NAME\par SET OUTFILE=VSAM\\TEST\\TESTCAT.KSF1CITY\par CALL EXEC linklib\\REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN BUILDAIX KSF1CITY\par REM READ KSDS ADDRLIST PATH AND COMPARE RECORDS\par SET VFILE=VSAM\\TEST\\TESTCAT.CITYLIST\par SET QFILE=vsam\\test\\KSF1CITY.TF1\par CALL ASMLG rt\\vsam\\test\\save\\KSF1COMP %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN READ CITYLIST PATH RECS BY KEY\par\par and produced\par\par c:\\Z390>REM create KSF1CITY alternate index \par c:\\Z390>REM cd vsam\\test \par c:\\Z390>SET INFILE=VSAM\\TEST\\TESTCAT.KSF1NAME \par c:\\Z390>SET OUTFILE=VSAM\\TEST\\TESTCAT.KSF1CITY \par c:\\Z390>CALL EXEC linklib\\REPRO      \par c:\\Z390>echo off \par 09:22:36 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/03/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO BUILD AIX FROM VSAM INFILE TO QSAM OUTFILE\par REPRO RECFM=AI LRECL =      28\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC68 DCBOFLGS=50 DSN=c:\\Z390\\VSAM\\TEST\\KSF1NAME.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCD0 DCBOFLGS=50 DSN=c:\\Z390\\VSAM\\TEST\\KSF1NAME.VX0\par  TIOT  DDNAME=OUTFILE  DCB=000FFBA8 DCBOFLGS=30 DSN=c:\\Z390\\VSAM\\TEST\\KSF1CITY.VXN\par  REPRO TOTAL RECORDS =       6\par REPRO ENDED OK\par 09:22:36 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=328 INS=1086\par 09:22:37 KSF1COMP  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/03/16\par 09:22:37 KSF1COMP  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 68 IO=4419\par 09:22:38 KSF1COMP  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/03/16\par 09:22:38 KSF1COMP  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=168\par 09:22:38 KSF1COMP  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/03/16\par KSF1COMP READ VFILE AND COMPARE WITH QFILE\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par REC=MT                  GERMANY             BERLIN              BG   GY1\par REC=MM                  UK                  LONDON              LE   UK2\par REC=MW                  UK                  LONDON              LE   UK1\par REC=RM                  USA                 SAN FRANCISCO       CA   95661\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par KSF1SKP1 ENDED OK\par 09:22:38 KSF1COMP  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=314 INS=115\par\par The test does seem to place the VXN in City sequence\par\par c:\\Z390\\VSAM\\TEST\\KSF1CITY.VXN\par\par 00000000  00 00 00 00 00 00 00 00 C1 D4 D7 E2 E3 C5 D9 C4    ........AMPSTERD\par 00000010  C1 D4 40 40 40 40 40 40 40 40 40 40 00 00 00 00    AM          ....\par 00000020  00 00 00 D2 C2 C5 D9 D3 C9 D5 40 40 40 40 40 40    ...KBERLIN      \par 00000030  40 40 40 40 40 40 40 40 00 00 00 00 00 00 00 8C            .......\loch\f3\hich\f3\'f0\par 00000040  D3 D6 D5 C4 D6 D5 40 40 40 40 40 40 40 40 40 40    LONDON          \par 00000050  40 40 40 40 00 00 00 00 00 00 01 18 D3 D6 D5 C4        ........LOND\par 00000060  D6 D5 40 40 40 40 40 40 40 40 40 40 40 40 40 40    ON              \par 00000070  00 00 00 00 00 00 01 5E E2 C1 D5 40 C6 D9 C1 D5    .......;SAN FRAN\par 00000080  C3 C9 E2 C3 D6 40 40 40 40 40 40 40 00 00 00 00    CISCO       ....\par 00000090  00 00 00 46 E3 C1 D4 D7 C1 40 C2 C1 E8 40 40 40    ...\'e3TAMPA BAY   \par 000000A0  40 40 40 40 40 40 40 40\par\par c:\\Z390\\VSAM\\TEST\\KSF1CITY.TF1\par\par AK                  HOLLAND             AMPSTERDAM          HL   HD1\par MT                  GERMANY             BERLIN              BG   GY1\par MM                  UK                  LONDON              LE   UK2\par MW                  UK                  LONDON              LE   UK1\par RM                  USA                 SAN FRANCISCO       CA   95661\par DSH                 USA                 TAMPA BAY           FL   33782                                           \page\par ksf1aixs.bat\tab create KSF1STAT alternate index\par\par rt\\vsam\\test\\save\\ksf1aixs.bat\par\par REM create KSF1STAT alternate index\par cd vsam\\test\par SET INFILE=TESTCAT.KSF1NAME\par SET OUTFILE=TESTCAT.KSF1STAT\par CALL ..\\..\\EXEC ..\\..\\linklib\\REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN BUILDAIX KSF1STAT\par REM READ KSDS STATLIST AND COMPARE RECORDS\par SET VFILE=w:\\work\\z390\\vsam\\test\\TESTCAT.STATLIST\par SET QFILE=w:\\work\\z390\\vsam\\test\\KSF1STAT.TF1\par CALL ..\\..\\ASMLG KSF1COMP %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN READ STATLIST PATH RECS BY KEY\par CD ..\par CD ..\par\par changed to\par\par REM create KSF1STAT alternate index\par rem cd vsam\\test\par SET INFILE=vsam\\test\\TESTCAT.KSF1NAME\par SET OUTFILE=vsam\\test\\TESTCAT.KSF1STAT\par CALL EXEC linklib\\REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN BUILDAIX KSF1STAT\par REM READ KSDS STATLIST AND COMPARE RECORDS\par SET VFILE=vsam\\test\\TESTCAT.STATLIST\par SET QFILE=vsam\\test\\KSF1STAT.TF1\par CALL ASMLG rt\\vsam\\test\\save\\KSF1COMP %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN READ STATLIST PATH RECS BY KEY\par rem CD ..\par rem CD ..\par\par and produced\par\par c:\\Z390>REM create KSF1STAT alternate index \par c:\\Z390>rem cd vsam\\test \par c:\\Z390>SET INFILE=vsam\\test\\TESTCAT.KSF1NAME \par c:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.KSF1STAT \par c:\\Z390>CALL EXEC linklib\\REPRO      \par c:\\Z390>echo off \par 09:41:23 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/03/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO BUILD AIX FROM VSAM INFILE TO QSAM OUTFILE\par REPRO RECFM=AI LRECL =      13\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC68 DCBOFLGS=50 DSN=c:\\Z390\\vsam\\test\\KSF1NAME.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCD0 DCBOFLGS=50 DSN=c:\\Z390\\vsam\\test\\KSF1NAME.VX0\par  TIOT  DDNAME=OUTFILE  DCB=000FFBA8 DCBOFLGS=30 DSN=c:\\Z390\\vsam\\test\\KSF1STAT.VXN\par  REPRO TOTAL RECORDS =       6\par REPRO ENDED OK\par 09:41:23 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=328 INS=1086\par 09:41:24 KSF1COMP  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/03/16\par 09:41:24 KSF1COMP  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 68 IO=4419\par 09:41:24 KSF1COMP  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/03/16\par 09:41:24 KSF1COMP  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=168\par 09:41:25 KSF1COMP  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/03/16\par KSF1COMP READ VFILE AND COMPARE WITH QFILE\par REC=MT                  GERMANY             BERLIN              BG   GY1\par REC=RM                  USA                 SAN FRANCISCO       CA   95661\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par REC=MM                  UK                  LONDON              LE   UK2\par REC=MW                  UK                  LONDON              LE   UK1\par KSF1SKP1 ENDED OK\par 09:41:25 KSF1COMP  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=314 INS=115\par\par This seems to places the VXN in State sequence\par\par c:\\Z390\\vsam\\test\\KSF1STAT.VXN\par\par 00000000  00 00 00 00 00 00 00 D2 C2 C7 40 40 40 00 00 00    .......KBG   ...\par 00000010  00 00 00 01 5E C3 C1 40 40 40 00 00 00 00 00 00    ....;CA   ......\par 00000020  00 46 C6 D3 40 40 40 00 00 00 00 00 00 00 00 C8    .\'e3FL   ........H\par 00000030  D3 40 40 40 00 00 00 00 00 00 00 8C D3 C5 40 40    L   .......\'f0LE  \par 00000040  40 00 00 00 00 00 00 01 18 D3 C5 40 40 40           ........LE   \par\par\par c:\\Z390\\vsam\\test\\KSF1STAT.TF1\par\par MT                  GERMANY             BERLIN              BG   GY1\par RM                  USA                 SAN FRANCISCO       CA   95661\par DSH                 USA                 TAMPA BAY           FL   33782\par AK                  HOLLAND             AMPSTERDAM          HL   HD1\par MM                  UK                  LONDON              LE   UK2\par MW                  UK                  LONDON              LE   UK1\page ksf1aixz.bat\tab create KSF1ZIP alternate index\par\par rt\\vsam\\test\\save\\ksf1aixz.bat\par\par REM create KSF1ZIP alternate index\par cd vsam\\test\par SET INFILE=TESTCAT.KSF1NAME\par SET OUTFILE=TESTCAT.KSF1ZIP\par CALL ..\\..\\EXEC ..\\..\\linklib\\REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN BUILDAIX KSF1ZIP\par REM READ KSDS ZIPLIST PATH AND COMPARE RECORDS\par SET VFILE=w:\\work\\z390\\vsam\\test\\TESTCAT.ZIPLIST\par SET QFILE=w:\\work\\z390\\vsam\\test\\KSF1ZIP.TF1\par CALL ..\\..\\ASMLG KSF1COMP %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN READ ZIPLIST PATH RECS BY KEY\par CD ..\par CD ..\par\par changed to\par\par REM create KSF1ZIP alternate index\par rem cd vsam\\test\par SET INFILE=vsam\\test\\TESTCAT.KSF1NAME\par SET OUTFILE=vsam\\test\\TESTCAT.KSF1ZIP\par CALL EXEC linklib\\REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN BUILDAIX KSF1ZIP\par REM READ KSDS ZIPLIST PATH AND COMPARE RECORDS\par SET VFILE=vsam\\test\\TESTCAT.ZIPLIST\par SET QFILE=vsam\\test\\KSF1ZIP.TF1\par CALL ASMLG rt\\vsam\\test\\save\\KSF1COMP %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN READ ZIPLIST PATH RECS BY KEY\par rem CD ..\par rem CD ..\par\par and produced\par\par c:\\Z390>REM create KSF1ZIP alternate index \par c:\\Z390>rem cd vsam\\test \par c:\\Z390>SET INFILE=vsam\\test\\TESTCAT.KSF1NAME \par c:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.KSF1ZIP \par c:\\Z390>CALL EXEC linklib\\REPRO      \par c:\\Z390>echo off \par 09:48:29 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/03/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO BUILD AIX FROM VSAM INFILE TO QSAM OUTFILE\par REPRO RECFM=AI LRECL =      13\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC68 DCBOFLGS=50 DSN=c:\\Z390\\vsam\\test\\KSF1NAME.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCD0 DCBOFLGS=50 DSN=c:\\Z390\\vsam\\test\\KSF1NAME.VX0\par  TIOT  DDNAME=OUTFILE  DCB=000FFBA8 DCBOFLGS=30 DSN=c:\\Z390\\vsam\\test\\KSF1ZIP.VXN\par  REPRO TOTAL RECORDS =       6\par REPRO ENDED OK\par 09:48:29 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=328 INS=1072\par 09:48:29 KSF1COMP  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/03/16\par 09:48:29 KSF1COMP  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 68 IO=4419\par 09:48:29 KSF1COMP  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/03/16\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 09:48:29 KSF1COMP  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=168\par 09:48:30 KSF1COMP  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/03/16\par KSF1COMP READ VFILE AND COMPARE WITH QFILE\par REC=MT                  GERMANY             BERLIN              BG   GY1\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par REC=MW                  UK                  LONDON              LE   UK1\par REC=MM                  UK                  LONDON              LE   UK2\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=RM                  USA                 SAN FRANCISCO       CA   95661\par KSF1SKP1 ENDED OK\par 09:48:30 KSF1COMP  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=314 INS=115\par\par It seemed to place the VXN in Zip sequence.\par\par c:\\Z390\\VSAM\\TEST\\KSF1ZIP.VXN\par\par 00000000  00 00 00 00 00 00 00 D2 C7 E8 F1 40 40 00 00 00    .......KGY1  ...\par 00000010  00 00 00 00 00 C8 C4 F1 40 40 00 00 00 00 00 00    .....HD1  ......\par 00000020  01 18 E4 D2 F1 40 40 00 00 00 00 00 00 00 8C E4    ..UK1  .......\loch\f3\hich\f3\'f0U\par 00000030  D2 F2 40 40 00 00 00 00 00 00 00 46 F3 F3 F7 F8    K2  .......\'e33378\par 00000040  F2 00 00 00 00 00 00 01 5E F9 F5 F6 F6 F1          2.......;95661  \par\par c:\\Z390\\VSAM\\TEST\\KSF1ZIP.TF1\par\par MT                  GERMANY             BERLIN              BG   GY1\par AK                  HOLLAND             AMPSTERDAM          HL   HD1\par MW                  UK                  LONDON              LE   UK1\par MM                  UK                  LONDON              LE   UK2\par DSH                 USA                 TAMPA BAY           FL   33782\par RM                  USA                 SAN FRANCISCO       CA   95661\par\page rrf1rpo1.bat\tab RUN REPRO TO LOAD RRF1.VES FROM RRF1.TF1 \par\par\plain\f3\fs20\cf3 Note to self\par\par Don't forget to test Insert on KSDS at very beginning of dataset, to see how KSIT/KSIR\par is handled.\par\par\plain\f3\fs20\cf1 rt\\vsam\\test\\save\\rrf1rpo1.bat\plain\f3\fs20\cf3\par\par\plain\f3\fs20 REM LOAD/UNLOAD RRF1 USING DEF RF RRN,REC FORMAT\par REM RUN REPRO TO LOAD RRF1.VES FROM RRF1.TF1\par SET INFILE=vsam\\test\\RRF1.TF1         \par SET OUTFILE=vsam\\test\\TESTCAT.RRF1\par CALL EXEC REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO LOAD\par\par REM SAVE REPRO LOAD STATS\par COPY REPRO.LOG vsam\\test\\RRF1RPO1.RLG  \par COPY REPRO.TRE vsam\\test\\RRF1RPO1.RLE\par\par REM RUN REPRO TO UNLOAD FROM RRF1.VES TO RRF1.TF2\par SET INFILE=vsam\\test\\TESTCAT.RRF1\par SET OUTFILE=vsam\\test\\RRF1.TF2\par CALL EXEC REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO UNLOAD\par\par REM SAVE REPRO UNLOAD STATS\par COPY REPRO.LOG vsam\\test\\RRF1RPO1.RUG  \par COPY REPRO.TRE vsam\\test\\RRF1RPO1.RUE\par\par REM COMPARE INPUT AND OUTPUT QSAM FILES\par CALL rt\\COMP1 vsam\\test\\RRF1.TF1 vsam\\test\\RRF1.TF2 vsam\\test\\RRF1RPO1.DIF\par IF ERRORLEVEL 1 PAUSE REPRO LOAD/UNLOAD QSAM FILES DONT MATCH\par\plain\f3\fs20\cf3\par\plain\f3\fs20 changed to \par\par REM LOAD/UNLOAD RRF1 USING DEF RF RRN,REC FORMAT\par REM RUN REPRO TO LOAD RRF1.VES FROM RRF1.TF1\par SET INFILE=vsam\\test\\RRF1.TF1         \par SET OUTFILE=vsam\\test\\TESTCAT.RRF1\par CALL EXEC linklib\\REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO LOAD\par REM SAVE REPRO LOAD STATS\par COPY REPRO.LOG vsam\\test\\RRF1RPO1.RLG  \par COPY REPRO.TRE vsam\\test\\RRF1RPO1.RLE\par REM RUN REPRO TO UNLOAD FROM RRF1.VES TO RRF1.TF2\par SET INFILE=vsam\\test\\TESTCAT.RRF1\par SET OUTFILE=vsam\\test\\RRF1.TF2\par CALL EXEC linklib\\REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO UNLOAD\par REM SAVE REPRO UNLOAD STATS\par COPY REPRO.LOG vsam\\test\\RRF1RPO1.RUG  \par COPY REPRO.TRE vsam\\test\\RRF1RPO1.RUE\par REM COMPARE INPUT AND OUTPUT QSAM FILES\par CALL rt\\COMP1 vsam\\test\\RRF1.TF1 vsam\\test\\RRF1.TF2 vsam\\test\\RRF1RPO1.DIF\par IF ERRORLEVEL 1 PAUSE REPRO LOAD/UNLOAD QSAM FILES DONT MATCH\par\par ran\par\par rt\\vsam\\test\\save\\rrf1rpo1.bat\par\par and procuced\par\par C:\\Z390>rt\\vsam\\test\\save\\rrf1rpo1.bat\par C:\\Z390>REM LOAD/UNLOAD RRF1 USING DEF RF RRN,REC FORMAT \par C:\\Z390>REM RUN REPRO TO LOAD RRF1.VES FROM RRF1.TF1 \par C:\\Z390>SET INFILE=vsam\\test\\RRF1.TF1          \par C:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.RRF1 \par C:\\Z390>CALL EXEC linklib\\REPRO          \par C:\\Z390>echo off \par 07:58:56 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/06/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO LOADING VSAM FROM QSAM INFILE\par REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD\par REPRO RECFM=RF LRECL =      84\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC78 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\RRF1.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCE0 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\RRF1.VX0\par  TIOT  DDNAME=INFILE   DCB=000FFAA8 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\RRF1.TF1\par  REPRO TOTAL RECORDS =       3\par REPRO ENDED OK\par 07:58:56 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=329 INS=431\par         1 file(s) copied.\par The system cannot find the file specified.\par 07:58:57 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/06/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO UNLOADING VSAM INFILE TO QSAM OUTFILE\par REPRO RECFM=RF LRECL =      84\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC78 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\RRF1.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCE0 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\RRF1.VX0\par  TIOT  DDNAME=OUTFILE  DCB=000FFBA8 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\RRF1.TF2\par  REPRO TOTAL RECORDS =       3\par REPRO ENDED OK\par 07:58:57 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=328 INS=405\par         1 file(s) copied.\par The system cannot find the file specified.\par\plain\f3\fs20\cf3\par\plain\f3\fs20\cf1 differences\par\par Comparing files VSAM\\TEST\\RRF1.TF1 and VSAM\\TEST\\RRF1.TF2\par FC: no differences encountered\par\par\plain\f3\fs20 C:\\Z390\\vsam\\test\\RRF1.VES\par\plain\f3\fs20\cf1\par 11111111111111111111111111111111111111111111111111111111111111111111111111111111\par 33333333333333333333333333333333333333333333333333333333333333333333333333333333\par 55555555555555555555555555555555555555555555555555555555555555555555555555555555\par\par\plain\f3\fs20 C:\\Z390\\vsam\\test\\RRF1.VX0\par\plain\f3\fs20\cf1\par 00000000  00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00    ................\par 00000010  00 00 00 00 00 00 00 51 00 00 00 00 00 00 00 00    .......Q........\par 00000020  00 00 00 00 00 00 00 A1                            .......\loch\f3\hich\f3\'a1        \page rrf2rpo1.bat\tab RUN REPRO TO LOAD RRF2.VES FROM RRF2.TF1\par\par C:\\Z390\\RT\\VSAM\\TEST\\SAVE\\RRF2RPO1.BAT\par\par REM LOAD/UNLOAD RRF2 RCDS 1,3,5 USING DEFAULT RF RRN,RCD FORMAT\par REM RUN REPRO TO LOAD RRF2.VES FROM RRF2.TF1\par SET INFILE=vsam\\test\\RRF2.TF1\par SET OUTFILE=vsam\\test\\TESTCAT.RRF2\par CALL EXEC linklib\\REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO LOAD\par REM SAVE REPRO LOAD STATS\par COPY REPRO.LOG vsam\\test\\RRF2RPO1.RLG  \par COPY REPRO.TRE vsam\\test\\RRF2RPO1.RLE\par REM RUN REPRO TO UNLOAD FROM RRF2.VES TO RRF2.TF2\par SET INFILE=vsam\\test\\TESTCAT.RRF2\par SET OUTFILE=vsam\\test\\RRF2.TF2\par CALL EXEC linklib\\REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO UNLOAD\par REM SAVE REPRO UNLOAD STATS\par COPY REPRO.LOG vsam\\test\\RRF2RPO1.RUG  \par COPY REPRO.TRE vsam\\test\\RRF2RPO1.RUE\par REM COMPARE INPUT AND OUTPUT QSAM FILES\par CALL rt\\COMP1 vsam\\test\\RRF2.TF1 vsam\\test\\RRF2.TF2 vsam\\test\\RRF2RPO1.DIF\par IF ERRORLEVEL 1 PAUSE REPRO LOAD/UNLOAD QSAM FILES DONT MATCH\par\par ran and produced\par\par C:\\Z390>rt\\vsam\\test\\save\\RRF2RPO1\par C:\\Z390>REM LOAD/UNLOAD RRF2 RCDS 1,3,5 USING DEFAULT RF RRN,RCD FORMAT \par C:\\Z390>REM RUN REPRO TO LOAD RRF2.VES FROM RRF2.TF1 \par C:\\Z390>SET INFILE=vsam\\test\\RRF2.TF1 \par C:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.RRF2 \par C:\\Z390>CALL EXEC linklib\\REPRO          \par C:\\Z390>echo off \par 08:46:03 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/07/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO LOADING VSAM FROM QSAM INFILE\par REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD\par REPRO RECFM=RF LRECL =      84\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC78 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\RRF2.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCE0 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\RRF2.VX0\par  TIOT  DDNAME=INFILE   DCB=000FFAA8 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\RRF2.TF1\par  REPRO TOTAL RECORDS =       3\par REPRO ENDED OK\par 08:46:03 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=329 INS=431\par         1 file(s) copied.\par The system cannot find the file specified.\par 08:46:03 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/07/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO UNLOADING VSAM INFILE TO QSAM OUTFILE\par REPRO RECFM=RF LRECL =      84\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC78 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\RRF2.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCE0 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\RRF2.VX0\par  TIOT  DDNAME=OUTFILE  DCB=000FFBA8 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\RRF2.TF2\par  REPRO TOTAL RECORDS =       3\par REPRO ENDED OK\par 08:46:03 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=328 INS=405\par         1 file(s) copied.\par The system cannot find the file specified.\par C:\\Z390> exit\par *** 11/07/16 08:46:03 CMD task ended TOT SEC=1 TOT LOG IO=38\par\par C:\\Z390\\vsam\\test\\RRF2.TF1\par\par 00000000  00 00 00 01 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    ....111111111111\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000050  F1 F1 F1 F1 00 00 00 02 F3 F3 F3 F3 F3 F3 F3 F3    1111....33333333\par 00000060  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000070  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000080  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000090  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000000A0  F3 F3 F3 F3 F3 F3 F3 F3 00 00 00 03 F5 F5 F5 F5    33333333....5555\par 000000B0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000C0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000D0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000E0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000F0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5                555555555555    \par\par C:\\Z390\\vsam\\test\\RRF2.VES\par\par 11111111111111111111111111111111111111111111111111111111111111111111111111111111\par 33333333333333333333333333333333333333333333333333333333333333333333333333333333\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 55555555555555555555555555555555555555555555555555555555555555555555555555555555\par\par C:\\Z390\\vsam\\test\\RRF2.VX0\par\par 00000000  00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 51    ...............Q\par 00000010  00 00 00 00 00 00 00 A1                            .......\loch\f3\hich\f3\'a1        \page rrv1rpo1.bat\tab RUN REPRO TO LOAD RRV1.VES FROM RRV1.TF1\par\par c:\\z390\\rt\\vsam\\test\\save\\rrv1rpo1.bat\par\par REM LOAD/UNLOAD RRV1 USING DEFAULT RV LLLL,RRN,RCD FORMAT\par REM NOTE RRV1.TF1 QSAM INPUT FILE IS CREATED BY RRV1TEST.MLC\par REM RUN REPRO TO LOAD RRV1.VES FROM RRV1.TF1\par SET INFILE=vsam\\test\\RRV1.TF1\par SET OUTFILE=vsam\\test\\TESTCAT.RRV1\par CALL EXEC REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO LOAD\par REM SAVE REPRO LOAD STATS\par COPY linklib\\REPRO.LOG vsam\\test\\RRV1REPO.RLG  \par COPY linklib\\REPRO.TRE vsam\\test\\RRV1REPO.RLE\par REM RUN REPRO TO UNLOAD FROM RRV1.VES TO RRV1.TF2\par SET INFILE=vsam\\test\\TESTCAT.RRV1\par SET OUTFILE=vsam\\test\\RRV1.TF2\par CALL EXEC REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO UNLOAD\par REM SAVE REPRO UNLOAD STATS\par COPY REPRO.LOG vsam\\test\\RRV1RPO1.RUG  \par COPY REPRO.TRE vsam\\test\\RRV1RPO1.RUE\par REM COMPARE INPUT AND OUTPUT QSAM FILES\par CALL rt\\COMP1 vsam\\test\\RRV1.TF1 vsam\\test\\RRV1.TF2 vsam\\test\\RRV1RPO1.DIF\par IF ERRORLEVEL 1 PAUSE REPRO LOAD/UNLOAD QSAM FILES DONT MATCH\par\par changed to \par\par REM LOAD/UNLOAD RRV1 USING DEFAULT RV LLLL,RRN,RCD FORMAT\par REM NOTE RRV1.TF1 QSAM INPUT FILE IS CREATED BY RRV1TEST.MLC\par REM RUN REPRO TO LOAD RRV1.VES FROM RRV1.TF1\par SET INFILE=vsam\\test\\RRV1.TF1\par SET OUTFILE=vsam\\test\\TESTCAT.RRV1\par CALL EXEC linklib\\REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO LOAD\par REM SAVE REPRO LOAD STATS\par COPY linklib\\REPRO.LOG vsam\\test\\RRV1REPO.RLG  \par COPY linklib\\REPRO.TRE vsam\\test\\RRV1REPO.RLE\par REM RUN REPRO TO UNLOAD FROM RRV1.VES TO RRV1.TF2\par SET INFILE=vsam\\test\\TESTCAT.RRV1\par SET OUTFILE=vsam\\test\\RRV1.TF2\par CALL EXEC linklib\\REPRO %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN REPRO UNLOAD\par REM SAVE REPRO UNLOAD STATS\par COPY REPRO.LOG vsam\\test\\RRV1RPO1.RUG  \par COPY REPRO.TRE vsam\\test\\RRV1RPO1.RUE\par REM COMPARE INPUT AND OUTPUT QSAM FILES\par CALL rt\\COMP1 vsam\\test\\RRV1.TF1 vsam\\test\\RRV1.TF2 vsam\\test\\RRV1RPO1.DIF\par IF ERRORLEVEL 1 PAUSE REPRO LOAD/UNLOAD QSAM FILES DONT MATCH\par\par ran and produced\par\par C:\\Z390>rt\\vsam\\test\\save\\RRv1RPO1\par C:\\Z390>REM LOAD/UNLOAD RRV1 USING DEFAULT RV LLLL,RRN,RCD FORMAT \par C:\\Z390>REM NOTE RRV1.TF1 QSAM INPUT FILE IS CREATED BY RRV1TEST.MLC \par C:\\Z390>REM RUN REPRO TO LOAD RRV1.VES FROM RRV1.TF1 \par C:\\Z390>SET INFILE=vsam\\test\\RRV1.TF1 \par C:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.RRV1 \par C:\\Z390>CALL EXEC linklib\\REPRO          \par C:\\Z390>echo off \par 09:04:17 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/07/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO LOADING VSAM FROM QSAM INFILE\par REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD\par REPRO RECFM=RV LRECL =     508\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC78 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\RRV1.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCE0 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\RRV1.VX0\par  TIOT  DDNAME=INFILE   DCB=000FFAA8 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\RRV1.TF1\par  REPRO TOTAL RECORDS =       3\par REPRO ENDED OK\par 09:04:17 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=329 INS=463\par         1 file(s) copied.\par The system cannot find the file specified.\par 09:04:18 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/07/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO UNLOADING VSAM INFILE TO QSAM OUTFILE\par REPRO RECFM=RV LRECL =     508\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC78 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\RRV1.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCE0 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\test\\RRV1.VX0\par  TIOT  DDNAME=OUTFILE  DCB=000FFBA8 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\RRV1.TF2\par  REPRO TOTAL RECORDS =       3\par REPRO ENDED OK\par 09:04:18 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=328 INS=429\par         1 file(s) copied.\par The system cannot find the file specified.\par C:\\Z390> exit\par *** 11/07/16 09:04:18 CMD task ended TOT SEC=1 TOT LOG IO=39\par\par C:\\Z390\\vsam\\test\\RRV1.TF1\par\par 00000000  00 00 00 6C 00 00 00 01 F1 F1 F1 F1 F1 F1 F1 F1    ...%....11111111\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000050  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000060  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 00 00 00 D0    111111111111...\}\par 00000070  00 00 00 02 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    ....222222222222\par 00000080  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000090  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000A0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000B0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000C0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000D0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000E0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000F0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000100  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000110  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000120  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000130  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 00 00 01 34    222222222222...\u148 ?\par 00000140  00 00 00 03 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    ....333333333333\par 00000150  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000160  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000170  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000180  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000190  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001A0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001B0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001C0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001D0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001E0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001F0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000200  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000210  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000220  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000230  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000240  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000250  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000260  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par\par C:\\Z390\\vsam\\test\\RRV1.VES\par\par 00000000  00 00 00 64 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    ...\'c0111111111111\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000050  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000060  F1 F1 F1 F1 F1 F1 F1 F1 00 00 00 C8 F2 F2 F2 F2    11111111...H2222\par 00000070  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000080  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000090  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000A0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000B0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000C0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000D0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000E0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000F0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000100  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000110  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000120  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000130  F2 F2 F2 F2 00 00 01 2C F3 F3 F3 F3 F3 F3 F3 F3    2222...\u140 ?33333333\par 00000140  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000150  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000160  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000170  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000180  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000190  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001A0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001B0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001C0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001D0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001E0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001F0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000200  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000210  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000220  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000230  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000240  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000250  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00000260  F3 F3 F3 F3                                        3333            \par\par C:\\Z390\\vsam\\test\\RRV1.VX0\par\par 00000000  00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 69    ...............i\par 00000010  00 00 00 00 00 00 01 35                            .......5        \par\page\plain\f3\fs20\ul\cf1 THE 20 SPECIFIC TESTS FOLLOW \plain\f3\fs20\cf1\par\par Following are the BAT Files with matching run text files.\par For each , there is a copy of their MLC file, a copy of the VES file and the VX0 file\par if relevant and an explanation of what is being tested.\par\par\plain\f3\fs20\b\cf1 I've run the tests, with corrections to the bat files, but otherwise untouched.\par I suspect that when I view the results in detail, I might find some where erases of ves/vx0\par and a repro should precede the test Where I find this is necessary I'll change the bat file,\par rerun the test and include the updated output.\par\par I want to discern the adequacy of the tests against what z390 vsam can support, so for each\par test there will be a precis of the dataset type, the ACB/RPL commands, the GENCB/MODCB/SHOWCB/TESTCB\par parameters and sub-parameters, etc.\par\par I have examined vz390.java to see which rpl fields are returned by various vsam calls, so that a check may\par be made during testing that these fields are indeed updated appropriately and the code maintains all that \par it should.\par\par\page The following shows the methods against which the cur_rpl_ fields get updates.\par\par (  \par     svc_rpl_get\par     (\par          rpl_get_esds_seq\par              set_rpl_arg_rba\par     )\par     svc_rpl_put\par     (\par          rpl_put_esds\par              set_rpl_arg_rba\par     )\par ) \par set_rpl_arg_rba\par 01 store cur_ves_xrba in cur_rpl_arg as XRBA\par 02 store cur_ves_xrba in cur_rpl_arg as RBA\par\par\par (\par     svc_rpl_get\par     (\par         rpl_get_ksds_key\par     )\par )\par rpl_get_ksds_key\par 03 store cur_rpl_area at offset of cur_vclr_koff\par    in\par    cur _rpl_arg for length of cur_vclr_klen\par\page\par (\par     svc_rpl_get\par     (\par         rpl_get_rrds_seq\par     )\par )\par rpl_get_rrds_seq\par 04 store (cur_vx0_xrba * 8) + 1\par    in\par    cur_rpl_arg (as int)\par 05 store (cur_vx0_xrba * 8) + 1\par    in\par    cur_rpl_arg (as int) \par\par (\par     svc_rpl_point\par )\par svc_rpl_point\par 06 store cur_ves_xrba in cur_rpl_arg as XRBA\par 07 store cur_ves_xrba in cur_rpll_arg as RBA\par\page\par (   svc_rpl_get\par     (\par         rpl_get_esds_seq\par         (\par             read_ves_rec\par         )\par     )\par     (\par         rpl_get_esds_adr\par         (\par             read_ves_rec\par         )\par     )\par     (\par         rpl_get_ksds_seq\par         (\par             read_ves_rec\par         )\par     )\par     (\par         rpl_get_ksds_seq\par         (\par             read_ksir_cur_rec\par             (\par                 read_ves_rec\par             )\par         )\par     )\par     (\par         rpl_get_ksds_seq\par         (\par             read_ksir_cur_rec\par             (\par                 read_ves_rec\par             )\par         )\par     )            \par     (\par         rpl_get_ksds_key\par         (\par             read_ves_rec\par         )\par     )\par     (    \par         rpl_get_rrds_key\par         (\par             read_ves_rec\par         )\par     )\par     (\par         rpl_get_rrds_seq\par         (\par             read_ves_rec\par         )\par     )\par )\par read_ves_rec\par 08 store vcb buffer in cur_rpl_lrec (as int)\par 09 store tiot buffer in cur_rpl_lrec (as int)\par 10 store cur_rpl_lrec in at rpl_lrec (as int)\par 11 store vcb buffer at cur_rpl_area\par    for length cur_rpl_lrec\par 12 store cur_vclr_lrec in cur_rpl_lrec\par 13 store vcb buffer at cur_rpl_area\par    for length cur_rpl_lrec\par\page\par (   \par     svc_rpl_put\par     (\par         rpl_put_esds\par         (\par             write_ves_rec\par         )\par     )\par     (            \par         rpl_put_rrds\par         (\par             write_ves_rec\par         )\par     )\par     (\par         rpl_put_rrds\par         (\par             rewrite_ves_rec\par             (\par                 write_ves_rec\par             )\par         )\par     )\par     (\par         rpl_put_ksds\par         (\par             update_ksds_rec\par             (\par                 rewrite_ves_rec\par                 (\par                     write_ves_rec\par                 )\par             )\par         )\par     )\par     (\par         rpl_put_rrds\par         (\par             add_ves_rec\par             (\par                 write_ves_rec\par             )\par         )\par     )\par     (\par         rpl_put_ksds\par         (\par             insert_ksds_rec\par             (\par                 add_ves_rec\par                 (\par                     write_ves_rec\par                 )\par             )\par         )\par     )\par     (\par         rpl_put_ksds\par         (\par             insert_ksds_rec\par             (\par                 insert_ksit\par                 (\par                     add_ves_rec\par                     (\par                         write_ves_rec\par                     )\par                 )\par                 insert_ksir\par                 (\par                     add_ves_rec\par                     (\par                         write_ves_rec\par                     )\par                 )\par             )\par         )\par     )\par )\par write_ves_rec\par 14 store cur_vclr_lrec in cur_rpl_lrec\par\par (\par     svc_rpl_get\par     (\par         rpl_get_esds_seq\par         (\par             set_esds_bwd_next\par         )\par     )\par )\par set_esds_bwd_next\par 15 store vcb buffer in cur_rpl_lrec (as int)\par 16 store tiot buffer in cur_rpl_lrec (as int)\par\par\page 1 esf1err1\par\par This test\par\par 1) \par A) Uses GENCB ACB MACRF=(ADR,SEQ).\par\par B) OPEN INPUT.\par\par C) Uses GENCB RPL OPTCD=(ADR,XRBA) and AREA=R4 (which points at area GETMAINed)\par and ARG=XRBA.\par  \par D) Moves 0 into XRBA and POINTs at ESDS via address, and verifies point ok.\par\par E) Moves 80 into XRBA and POINTs at ESDS via address, and verifies point ok.\par\par F) Moves 160 into XRBA and POINTs at ESDS via address, and verifies point ok.\par\par G) Moves 81 into XRBA and POINTs at ESDS via address, and verifies point error.\par\par H) Moves 80 into XRBA and POINTs at ESDS via address, and verifies point ok.\par\par 2) \par A) Uses MODCB OPTCD=(ADR) and ARG=RBA.\par\par B) Moves 80 into RBA and POINTs at ESDS via address, and verifies point ok.\par\par C) Moves 81 into RBA and POINTs at ESDS via address, and verifies point error.\par\par D) Moves 80 into RBA and POINTs at ESDS via address, and verifies point ok.\par\par E) CLOSE\par\par\par\par\page\par The purpose of this test is to check that the POINT macro works equally well\par with OPTCD(XRBA) and OPTCD(RBA) when provided with correct and incorrect values\par in ARG.\par\par\plain\f3\fs20\b\ul\cf1 RBA\plain\f3\fs20\b\cf1  means \plain\f3\fs20\b\ul\cf1 R\plain\f3\fs20\b\cf1 elative \plain\f3\fs20\b\ul\cf1 B\plain\f3\fs20\b\cf1 yte \plain\f3\fs20\b\ul\cf1 A\plain\f3\fs20\b\cf1 ddress and \plain\f3\fs20\b\ul\cf1 XRBA\plain\f3\fs20\b\cf1  means e\plain\f3\fs20\b\ul\cf1 X\plain\f3\fs20\b\cf1 tended \plain\f3\fs20\b\ul\cf1 RBA\plain\f3\fs20\b\cf1 .\par RBAs are 4 bytes long and XRBAs are 8 bytes long.\par Both RBA and XRBA use zero to signify the start of the dataset.\par\par With ESDS, for fixed-length records, the POINT macro should validate the ARG value\par as being an RBA/XRBA with a value that is a multiple of VCLR LREC and error if not \par with "\plain\f1\fs20\cf1 RPLINRBA RBA not a record address".\par\plain\f3\fs20\b\cf1\par In this test, the ESDS should have 3 80 byte records, valid RBAs/XRBAs would be\par 0, 80, 160.\par\par The test tries XRBA with ARG equal 80, 81, 80 and expects as result of good, bad, good.\par And them tries RBA with the same ARG values and expects the same results.\par\par The test doesn't produce the expected error at all, even though it is deliberately setting the \par ARG value to both correct and incorrect values.\par\plain\f3\fs20\cf1\par\plain\f3\fs20\cf3 (This paragraph was added much later on the 28th October 2016.\par The bug is in vz390.java svc_rpl_point where the line\par "pz390.mem.putInt(cur_rpl_arg, (int) cur_ves_xrba);"\par is positioned on the wrong line, it should be moved before the "\}" that precedes it.)\plain\f3\fs20\cf1\par\par I had to change c:\\z390\\rt\\vsam\\test\\save\\ESF1ERR1.MLC\par to include SYSTRACE 'V', so that it produces any message created by TRACEV.\par\par I set CD to c:\\z390.\par\par And ran rt\\vsam\\test\\save\\ESF1ERR1.bat.\par\par\tab C:\\Z390>rt\\vsam\\test\\save\\ESF1ERR1\par\tab C:\\Z390>REM ESF1ERR1 TEST ESDS FIXED LENGTH POINT ERROR WITH BAD XRBA         \par\tab C:\\Z390>REM RUN ESF1ERR1 TO TEST ERROR ON BAD XRBA POINT                \par\tab C:\\Z390>SET VFILE=rt\\vsam\\test\\save\\TESTCAT.ESF1 \par\tab C:\\Z390>CALL ASMLG RT\\vsam\\test\\SAVE\\ESF1ERR1          \par\tab C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par\tab C:\\Z390>echo off \par\tab 11:16:34 ESF1ERR1  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/01/16\par\tab 11:16:35 ESF1ERR1  MZ390 ENDED   RC= 0 SEC= 1 MEM(MB)= 68 IO=5524\par\tab 11:16:35 ESF1ERR1  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/01/16\par\tab 11:16:35 ESF1ERR1  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=164\par\tab 11:16:35 ESF1ERR1  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/01/16\par\tab ESF1ERR1 RT1 STARTED\par\par The majority of this log is produced by vz390.java via TRACEV (from SYSTRACE 'V' in MLC).\par\par\tab GEN ACB/RPL TEST BAD POINT RBA/XRBA\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL  RESET FOR NEW ACB\plain\f3\fs20\b\ul\cf1\par\plain\f3\fs20\cf1\tab 11:16:35 ESF1ERR1  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 09/01/16\par\tab\plain\f3\fs24\b\ul\cf1 VSAM POINT RPL=000FF298\par\plain\f3\fs20\cf1\tab\plain\f3\fs24\b\ul\cf1 VSAM POINT XRBA=0000000000000050\plain\f3\fs24\b\cf1\tab\tab 50 IS A HEX VALUE WHICH IS 80 DECIMAL\par\plain\f3\fs20\cf1\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL ADDR=000FF298 LEN=00000054\tab This represents the RPL AREA\par\plain\f3\fs20\cf1\par Below, I have exploded the hex into the parts which appear in MAC\\RPLD.MAC.\par\par\tab  000FF298 *\tab 00\tab\tab RPLID    DS   X   RPL ID\par\tab\tab\tab 0A\tab\tab RPLSTYPE DS   X   RPL TYPE VSAM\tab\par\tab\tab\tab 54\tab\tab RPLLEN   DS   X   RPL LENGTH (DECIMAL 84)\tab\par\tab\tab\tab 00 \tab       \tab    DS   X   (ALIGN)\par\tab\tab\tab 00000000\tab RPLECB   DS   F   ECB ADDRESS (POSTED IF PRESENT) \par\tab\tab\tab 00000000\tab RPLFEEDB DS   XL4 RPL FEEDBACK CODES (PDF,RC,COMP,REASON CODE)\par\tab\tab\tab 00000000\tab RPLLKEY  DS   A   KEY LENGTH\par\tab  000FF2A8 *\tab 000FFBD8\tab RPLACB   DS   A   ACB\par\tab\tab\tab 000FF2F0\tab RPLAREA  DS   A   AREA \tab\par\tab\tab\tab 000FFDD2\tab RPLARG   DS   A   ARG (KSDS KEY, RRDS REC NUMBER, OR RBA/XRBA)\tab\tab\tab\tab 01\tab\tab RPLOPT1  DS   X   OPTION BYTE 1\par\tab\tab\tab\tab\tab RPLOPT1_LOC   EQU X'80' - leave record from GET in I/O buffer (IG)\par\tab\tab\tab\tab\tab RPLOPT1_DIR   EQU X'40' - direct access to RRDS, KSDS, or ESDS  \par\tab\tab\tab\tab\tab RPLOPT1_SEQ   EQU X'20' - Sequential access to RRDS, KSDS, or ESDS\par\tab\tab\tab\tab\tab RPLOPT1_SKP   EQU X'10' - Skip sequential access.                 \par\tab\tab\tab\tab\tab RPLOPT1_ASY   EQU X'08' - Asynchronous access (ignored)\par\tab\tab\tab\tab\tab RPLOPT1_KGE   EQU X'04' - key GE, for RRDS rel rcd > max returns EOD\par\tab\tab\tab\tab\tab RPLOPT1_GEN   EQU X'02' - A generic key provided with RPLKEYL length\par\tab\tab\tab\tab\tab\plain\f3\fs24\b\cf1 RPLOPT1_XRBA  EQU X'01' - for ADR, use 8 vs 4 byte RBA in ARG field\plain\f3\fs20\cf1\par\tab\par\tab\tab\tab 40\tab\tab RPLOPT2  DS   X   OPTION BYTE 2\par\tab\tab\tab\tab\tab RPLOPT2_KEY   EQU X'80' - rel rcd RRDS access or key KSDS access  \par\tab\tab\tab\tab\tab\plain\f3\fs24\b\cf1 RPLOPT2_ADR   EQU X'40' - addressed access to KSDS or ESDS by RBA\plain\f3\fs20\cf1  \par\tab\tab\tab\tab\tab RPLOPT2_CNV   EQU X'20' - control intervAL access (not supported) \par\tab\tab\tab\tab\tab RPLOPT2_BWD   EQU X'10' - proceed backward for KEY, SEQ, DIR \par\tab\tab\tab\tab\tab RPLOPT2_LRD   EQU X'08' - locate last record in the data set\par\tab\tab\tab\tab\tab RPLOPT2_WAITX EQU X'04' - if SYN and UPAD, take UPAD exit vs WAIT\par\tab\tab\tab\tab\tab RPLOPT2_UPD   EQU X'02' - rcds may be updated or deleted after GET\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1\tab\tab\tab\tab\tab RPLOPT2_NSP   EQU X'01' - For DIR, remember position for seq access\par\par\tab\tab\tab 0000\tab\tab          DS   H   (ALIGN)\par\par\tab  000FF2B8 *\tab 00000000\tab RPLNEXT  DS   A   NEXT RPL \par\tab\tab\tab 00000000\tab RPLLREC  DS   A   RECORD LENGTH FOR GET/PUT VAR LENGTH RECORDS\par\tab\tab\tab FFFFFFFF\tab RPLLXRBA DS   XL8 XRBA OF LAST REC VES (ESDS,RRDS) OR VX0 (KSDS,VRRDS)\par\tab\tab\tab FFFFFFFF\tab RPLCXRBA DS   XL8 XRBA OF CURR POS VES (ESDS,RRDS) OR VX0 (KSDS,VRRDS)\par\tab  000FF2C8 *\tab 00000000 \tab RPLOPENC DS   F   UNIQUE ACB OPEN COUNT TO DETECT RPL REPOSITION REQ'D\par\tab\tab\tab 00000050\tab RPLLAREA DS   F   AREA LENGTH (DECIMAL 80)\tab  \par\tab\tab\tab 00000001\tab RPLFLAG  DS   0F  RPL FLAG BITS FOR UPD GET ETC.\par\tab\tab\tab\tab\tab RPLFLAG1 DS   X\par\tab\tab\tab\tab\tab RPLF1GOK EQU  X'80' PREV GET SUCCESSFUL \par\tab\tab\tab\tab\tab RPLF1GNF EQU  X'40' PREV GET RECORD NOT FOUND\par\tab\tab\tab\tab\tab RPLFLAG2 DS   X\par\tab\tab\tab\tab\tab RPLFLAG3 DS   X\par\tab\tab\tab\tab\tab RPLFLAG4 DS   X \par\tab\tab\tab 00000000\tab RPLKSIT  DS   XL8 XRBA OF KSIT KSDS INSERT TOP OF TREE CONTROL BLOCK\par\tab  000FF2D8 *\tab 00000000\tab RPLKSIR  DS   XL8 XBRA OF KSIR KSDS INSERT CUR RECORD  CONTROL BLOCK \par\tab\tab\tab 00000000 00000000 00000000\par\par\tab  000FF2E8 *00000000                           * *....            *\par\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL ARG =000FFDD2 LEN=00000008 KLEN=00000000\par\plain\f3\fs20\cf1\par The POINT is to an 8 byte XRBA whose value should be in the ARG\par This agrees with the above, but the value of the ARG below seems to be wrong,\par since it holds decimal 80 \plain\f3\fs20\cf3 in both the first 4 bytes and the second 4 bytes\plain\f3\fs20\cf1 .\par This occurs in the next occurrence where decimal 80, but not where decimal 81.\par\par The assembler code from rt\\vsam\\test\\save\\ESF1ERR1.mlc\par for setting-up the value for ARG follows\par\par\tab GENCB BLK=RPL,ACB=(R2),AREA=(R4),OPTCD=(ADR,XRBA),ARG=XRBA \par\tab MVC   XRBA,=FL8'80'\par\tab MVC   XRBA,=FL8'81'\par\tab MVC   XRBA,=FL8'80'\par\par\tab  000FFDD2 *\plain\f3\fs20\cf3 00000050 00000050   \plain\f3\fs20\cf1                * *...&...&        *\par\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL AREA=000FF2F0 LEN=00000050\plain\f3\fs20\cf1\par\tab  000FF2F0 *F5F5F5F5 F5F5F5F5 F5F5F5F5 F5F5F5F5* *5555555555555555*\par\tab  ........\par\tab  000FF330 *F5F5F5F5 F5F5F5F5 F5F5F5F5 F5F5F5F5* *5555555555555555*\par\tab\plain\f3\fs24\b\ul\cf1 VSAM POINT RPL=000FF298\plain\f3\fs20\cf1\par\tab\plain\f3\fs24\b\ul\cf1 VSAM POINT XRBA=0000000000000051\plain\f3\fs20\cf1\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL FEEDBACK=00080020 TYPE=logical REASON=rba address not_a record\par\plain\f3\fs20\cf1\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL ADDR=000FF298 LEN=00000054\par\plain\f3\fs20\cf1\tab  000FF298 *000A5400 00000000 00080020 00000000* *.?\loch\f3\hich\f3\'e8......?.?....*\par\tab  000FF2A8 *000FFBD8 000FF2F0 000FFDD2 01400000* *..\'dbQ..20..\'d9K. ..*\par\tab  000FF2B8 *00000000 00000000 FFFFFFFF FFFFFFFF* *........????????*\par\tab  000FF2C8 *00000000 00000050 00000001 00000000* *.......&........*\par\tab  000FF2D8 *00000000 00000000 00000000 00000000* *................*\par\tab  000FF2E8 *00000000                           * *....            *\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL ARG =000FFDD2 LEN=00000008 KLEN=00000000\par\plain\f3\fs20\cf1\tab  000FFDD2 *00000000 00000051                  * *.......\loch\f3\hich\f3\'e9        *\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL AREA=000FF2F0 LEN=00000050\par\plain\f3\fs20\cf1\tab  000FF2F0 *F5F5F5F5 F5F5F5F5 F5F5F5F5 F5F5F5F5* *5555555555555555*\par\tab  ........\par\tab  000FF330 *F5F5F5F5 F5F5F5F5 F5F5F5F5 F5F5F5F5* *5555555555555555*\par\tab\plain\f3\fs24\b\ul\cf1 VSAM POINT RPL=000FF298\par\plain\f3\fs20\cf1\tab\plain\f3\fs24\b\ul\cf1 VSAM POINT XRBA=0000000000000050\par\plain\f3\fs20\cf1\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL ADDR=000FF298 LEN=00000054\par\plain\f3\fs20\cf1\tab  000FF298 *000A5400 00000000 00000000 00000000* *.?\loch\f3\hich\f3\'e8.............*\par\tab  000FF2A8 *000FFBD8 000FF2F0 000FFDD2 01400000* *..\'dbQ..20..\'d9K. ..*\par\tab  000FF2B8 *00000000 00000000 FFFFFFFF FFFFFFFF* *........????????*\par\tab  000FF2C8 *00000000 00000050 00000001 00000000* *.......&........*\par\tab  000FF2D8 *00000000 00000000 00000000 00000000* *................*\par\tab  000FF2E8 *00000000                           * *....            *\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL ARG =000FFDD2 LEN=00000008 KLEN=00000000\par\plain\f3\fs20\cf1\tab  000FFDD2 *00000050 00000050                  * *...&...&        *\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL AREA=000FF2F0 LEN=00000050\par\plain\f3\fs20\cf1\tab  000FF2F0 *F5F5F5F5 F5F5F5F5 F5F5F5F5 F5F5F5F5* *5555555555555555*\par\tab  ........\par\tab  000FF330 *F5F5F5F5 F5F5F5F5 F5F5F5F5 F5F5F5F5* *5555555555555555*\par\tab\plain\f3\fs24\b\ul\cf1 VSAM POINT RPL=000FF298\par\plain\f3\fs20\cf1\tab\plain\f3\fs24\b\ul\cf1 VSAM POINT  RBA=00000050\par\plain\f3\fs20\cf1\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL ADDR=000FF298 LEN=00000054\par\plain\f3\fs20\cf1\tab  000FF298 *000A5400 00000000 00000000 00000000* *.?\loch\f3\hich\f3\'e8.............*\par\tab  000FF2A8 *000FFBD8 000FF2F0 000FFDCE 00400000* *..\'dbQ..20..\'d9\'f3. ..*\par\tab  000FF2B8 *00000000 00000000 FFFFFFFF FFFFFFFF* *........????????*\par\tab  000FF2C8 *00000000 00000050 00000001 00000000* *.......&........*\par\tab  000FF2D8 *00000000 00000000 00000000 00000000* *................*\par\tab  000FF2E8 *00000000                           * *....            *\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL ARG =000FFDCE LEN=00000004 KLEN=00000000\par\plain\f3\fs20\cf1\tab  000FFDCE *00000050                           * *...&            *\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL AREA=000FF2F0 LEN=00000050\par\plain\f3\fs20\cf1\tab  000FF2F0 *F5F5F5F5 F5F5F5F5 F5F5F5F5 F5F5F5F5* *5555555555555555*\par\tab  ........\par\tab  000FF330 *F5F5F5F5 F5F5F5F5 F5F5F5F5 F5F5F5F5* *5555555555555555*\par\tab\plain\f3\fs24\b\ul\cf1 VSAM POINT RPL=000FF298\par\plain\f3\fs20\cf1\tab\plain\f3\fs24\b\ul\cf1 VSAM POINT  RBA=00000051\par\plain\f3\fs20\cf1\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL FEEDBACK=00080020 TYPE=logical REASON=rba address not_a record\par\plain\f3\fs20\cf1\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL ADDR=000FF298 LEN=00000054\par\plain\f3\fs20\cf1\tab  000FF298 *000A5400 00000000 00080020 00000000* *.?\loch\f3\hich\f3\'e8......?.?....*\par\tab  000FF2A8 *000FFBD8 000FF2F0 000FFDCE 00400000* *..\'dbQ..20..\'d9\'f3. ..*\par\tab  000FF2B8 *00000000 00000000 FFFFFFFF FFFFFFFF* *........????????*\par\tab  000FF2C8 *00000000 00000050 00000001 00000000* *.......&........*\par\tab  000FF2D8 *00000000 00000000 00000000 00000000* *................*\par\tab  000FF2E8 *00000000                           * *....            *\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL ARG =000FFDCE LEN=00000004 KLEN=00000000\par\plain\f3\fs20\cf1\tab  000FFDCE *00000051                           * *...\loch\f3\hich\f3\'e9            *\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL AREA=000FF2F0 LEN=00000050\par\plain\f3\fs20\cf1\tab  000FF2F0 *F5F5F5F5 F5F5F5F5 F5F5F5F5 F5F5F5F5* *5555555555555555*\par\tab  ........\par\tab  000FF330 *F5F5F5F5 F5F5F5F5 F5F5F5F5 F5F5F5F5* *5555555555555555*\par\tab\plain\f3\fs24\b\ul\cf1 VSAM POINT RPL=000FF298\plain\f3\fs20\cf1\par\tab\plain\f3\fs24\b\ul\cf1 VSAM POINT  RBA=00000050\plain\f3\fs20\cf1\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL ADDR=000FF298 LEN=00000054\plain\f3\fs20\cf1\par\tab  000FF298 *000A5400 00000000 00000000 00000000* *.?\loch\f3\hich\f3\'e8.............*\par\tab  000FF2A8 *000FFBD8 000FF2F0 000FFDCE 00400000* *..\'dbQ..20..\'d9\'f3. ..*\par\tab  000FF2B8 *00000000 00000000 FFFFFFFF FFFFFFFF* *........????????*\par\tab  000FF2C8 *00000000 00000050 00000001 00000000* *.......&........*\par\tab  000FF2D8 *00000000 00000000 00000000 00000000* *................*\par\tab  000FF2E8 *00000000                           * *....            *\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL ARG =000FFDCE LEN=00000004 KLEN=00000000\plain\f3\fs20\cf1\par\tab  000FFDCE *00000050                           * *...&            *\par\tab\plain\f3\fs24\b\ul\cf1 VSAM RPL AREA=000FF2F0 LEN=00000050\par\plain\f3\fs20\cf1\tab  000FF2F0 *F5F5F5F5 F5F5F5F5 F5F5F5F5 F5F5F5F5* *5555555555555555*\par\tab  ........\par\tab  000FF330 *F5F5F5F5 F5F5F5F5 F5F5F5F5 F5F5F5F5* *5555555555555555*\par\tab ESF1ERR1 RT1 TESTS COMPLETED =     11\par\tab ESF1ERR1 RT1 ENDED OK\par\tab 11:16:35 ESF1ERR1  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=304 INS=161\par\tab C:\\Z390> exit\par\tab *** 09/01/16 11:16:36 CMD task ended TOT SEC=2 TOT LOG IO=115\par\par\par\plain\f3\fs20\cf6 Note to self:-\par\par You can change the colour in AbleWord via Format/Font/Color/Text/down arrow\par\plain\f3\fs20\cf1\par\par\plain\f3\fs24\cf1\page ESF1ERR1 TRACEV messages\par\par And so when XRBA is 80 (hex 50)\plain\f3\fs20\cf1\par\plain\f3\fs24\cf1\tab VSAM POINT XRBA=0000000000000050\par\plain\f3\fs20\cf1\par\plain\f3\fs24\cf1 When XRBA  is 81\par\tab VSAM POINT XRBA=0000000000000051\par\tab VSAM RPL FEEDBACK=00080020 TYPE=logical REASON=rba address not_a record\par\plain\f3\fs24\ul\cf1\par Again when XRBA is 80\par\plain\f3\fs24\cf1\tab VSAM POINT XRBA=0000000000000050\par\plain\f3\fs24\b\ul\cf1\par\plain\f3\fs24\ul\cf1 Then when RBA is 80\par\plain\f3\fs24\cf1\tab VSAM POINT  RBA=00000050\par\par And when RBA is 81\plain\f3\fs20\cf1  \par\plain\f3\fs24\ul\cf1\tab VSAM POINT  RBA=00000051\par\tab VSAM RPL FEEDBACK=00080020 TYPE=logical REASON=rba address not_a record\par\plain\f3\fs24\cf1\par And finally when RBA is 80 again\plain\f3\fs24\b\ul\cf1\par\plain\f3\fs24\cf1\tab VSAM POINT  RBA=00000050\par\plain\f3\fs20\cf1\par\plain\f3\fs24\cf1 All of these were the expected results, so the test was successful.\par\plain\f3\fs20\cf1\page *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 09/29/07                                                 *\par *********************************************************************\par * 09/29/07 RPI 706 TEST BAD RBA/XRBA FOR POINT ON FIXED ESDS          \par * 04/23/09 RPI 1025 CLEAR RPL OPTIONS FOR REUSE             \par *********************************************************************\par ESF1ERR1 RT1   MAIN \par RBA      DC    XL4'00'\par XRBA     DC    XL8'00'\par          LTORG\par          EQUREGS\par          RT1   START\par *\par * READ SEQ FWD STARTING AT REC 2 USING ADR,DIR and SKP,SEQ\par *\par          WTO   'GEN ACB/RPL TEST BAD POINT RBA/XRBA'\par          SYSTRACE 'EV' \par          GENCB BLK=ACB,DDNAME=VFILE,MACRF=(ADR,SEQ)\par          LTR   R15,R15\par          RT1   CC0\par          LR    R2,R1             R2=ACB \par          OPEN  ((R2),(INPUT))\par          LTR   R15,R15\par          RT1   CC0\par          GETMAIN R,LV=80\par          LR    R4,R1             R4=RECORD AREA\par          GENCB BLK=RPL,ACB=(R2),AREA=(R4),OPTCD=(ADR,XRBA),ARG=XRBA \par          LTR   R15,R15\par          RT1   CC0\par          LR    R3,R1             R3=RPL\par          MVC   XRBA,=FL8'0'\par          POINT RPL=(R3)          SET CUR POS TO REC 1       \par          LTR   R15,R15\par          RT1   CC0               VERIFY OK                                  \par          MVC   XRBA,=FL8'80'\par          POINT RPL=(R3)          SET CUR POS TO REC 2       \par          LTR   R15,R15\par          RT1   CC0               VERIFY OK                                  \par          MVC   XRBA,=FL8'160'\par          POINT RPL=(R3)          SET CUR POS TO REC 3       \par          LTR   R15,R15\par          RT1   CC0               VERIFY OK                                  \par          MVC   XRBA,=FL8'81'\par          POINT RPL=(R3)          SET CUR POS TO BAD ADDR    \par          CHI   R15,8  \par          RT1   CC0               VERIFY LOG ERROR DUE TO NOT MULT OF 80\par          MVC   XRBA,=FL8'80'\par          POINT RPL=(R3)          SET CUR POS TO REC 2       \par          LTR   R15,R15\par          RT1   CC0               VERIFY OK                                  \par *         MVC   XRBA,=FL8'82'\par *         POINT RPL=(R3)          SET CUR POS TO REC 3       \par *         LTR   R15,R15\par *         RT1   CC0               VERIFY OK                                  \par *\par * REPEAT TESTS WITH RBA VS XRBA            \par *\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2   RPI 1025\par          MODCB RPL=(R3),ARG=RBA,OPTCD=(ADR)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RBA,=F'80'\par          POINT RPL=(R3)          SET CUR POS TO REC 2       \par          LTR   R15,R15\par          RT1   CC0               VERIFY OK                                  \par          MVC   RBA,=F'81'\par          POINT RPL=(R3)          SET CUR POS TO BAD ADDR    \par          CHI   R15,8  \par          RT1   CC0               VERIFY LOG ERROR DUE TO NOT MULT OF 80\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1          MVC   RBA,=F'80'\par          POINT RPL=(R3)          SET CUR POS TO REC 2       \par          LTR   R15,R15\par          RT1   CC0\par          CLOSE ((R2))\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\page Initially, I'll just run and document 2-20, without commenting on whether I tink that they worked.\par Later, I'll go thru them and analyse them and their results in detail and comment on the sufficiency\par of the testing.\par\page\par\plain\f3\fs20\b\cf1 2 esf1skp1 \par\par This test\par\par 1) Uses GENCB ACB with MACRF=(ADR,SEQ).\par\par 2) OPEN INPUT.\par\par 3) Uses GENCB RPL with OPTCD=(ADR,XRBA) and AREA=R4 (which points at an area GETMAINed)\par and ARG=XRBA.\par\par 4) POINTs at the 2nd ESDS record at XRBA of 80.\par\par 5) Does a MODCB with RPL OPTCD=(SEQ,FWD,XRBA)\par\par 6) GETs the ESDS record and verifies that the returned ARG in XRBA holds 80\par and that the record in AREA holds 2s.\par\par 7) GETs another ESDS record and verifies that the returned AREA in XRBA\par holds 160 and that the record in AREA holds 3s.\par\par 8) Uses MODCB with RPL=(ADR,XRBA).\par\par 9) POINTs at the 3rd ESDS record at XRBA of 160.\par\par 10) Does a MODCB with RPL OPTCD=(SEQ,BWD,XRBA).\par\par 11) GETs the ESDS record (backwards) and it should be record 2 at\par XRBA of 80 holding 80 2s.\par\par 12) GETs another ESDS record (backwards) and it should be record 1\par at XRBA of 0 holding 80 1s.\par\par 13) Does MODCB with RPL OPTCD=(ADR,XRBA).\par\par 14) POINTs at EOF (by putting -1 in XRBA).\par\par 15) Does MODCB with RPL OPTCD=(SEQ,BWD,XRBA).\par\par 16) GETs the ESDS record (backwards) and it should be record 3 at\par XRBA of 160 holding 3s.\par\par 17) GETs another ESDS record (backwards) and it should be record 2\par at XRBA of 80 holding 2s.\par\page 18) Repeat 1) thru 17) using RBA.\par (RPL OPTCD=(\par ADR\par SEQ,FWD\par SEQ,BWD)\par and\par ARG=RBA\par )\page The purpose of this test is to show that SKIP SEQUENTIAL mode can be simulated for an ESDS\par with fixed-length records.\par That an ESDS can have it's records POINTed at via their ADdResses, both as XRBA and RBA, \par and GETted SEQuentially both ForWarD and BackWarD.\page c:\\z390\\rt\\vsam\\test\\save\\esf1skp1.bat\par\par REM ESF1SKP1 TEST ESDS FIXED LENGTH VSAM FILE SKP SEQ ACCESS USING GENCB\par REM RUN ESF1SKP1 TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS\par SET VFILE=vsam\\test\\TESTCAT.ESF1\par CALL ASMLG vsam\\test\\ESF1SKP1 %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN ESF1SKP1\par\par ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\esf1skp1\par C:\\Z390>REM ESF1SKP1 TEST ESDS FIXED LENGTH VSAM FILE SKP SEQ ACCESS USING GENCB \par C:\\Z390>REM RUN ESF1SKP1 TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.ESF1 \par C:\\Z390>CALL ASMLG vsam\\test\\ESF1SKP1          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 09:58:13 ESF1SKP1  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 09:58:14 ESF1SKP1  MZ390 ENDED   RC= 0 SEC= 1 MEM(MB)= 69 IO=6822\par 09:58:14 ESF1SKP1  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 09:58:14 ESF1SKP1  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=476\par 09:58:15 ESF1SKP1  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par ESF1SKP1 RT1 STARTED\par GEN ACB/RPL AND SKP SEQ READ STARTING AT REC 2\par SKP SEQ READ BACKWARD STARTING AT REC 2\par SKP SEQ READ BACKWARD STARTING AT REC 3\par SKP SEQ READ BACKWARD STARTING AT REC 2\par SKP SEQ READ BACKWARD STARTING AT REC 3\par ESF1SKP1 RT1 TESTS COMPLETED =     56\par ESF1SKP1 RT1 ENDED OK\par 09:58:15 ESF1SKP1  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=308 INS=533\par C:\\Z390> exit\par *** 11/08/16 09:58:15 CMD task ended TOT SEC=2 TOT LOG IO=25\par\page\par c:\\vsam\\test\\esf1.ves\par\par 11111111111111111111111111111111111111111111111111111111111111111111111111111111\par 22222222222222222222222222222222222222222222222222222222222222222222222222222222\par 33333333333333333333333333333333333333333333333333333333333333333333333333333333\par\par\plain\f3\fs20\cf1 c:\\z390\\rt\\vsam\\test\\save\\esf1skp1.mlc\par\plain\f3\fs20\b\cf1\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 09/19/07                                                 *\par *********************************************************************\par * 09/19/07 INITIAL CODING OF ESDS FIXED SKP SEQ ACCESS USING GENCB    \par * 09/20/07 RPI 702 CHANGE TO USE POINT TO SET START FOR SEQ RWD/BWD   \par * 09/26/07 RPI 702 VERIFY CURRENT RBA/XRBA RETURNED IN RPLARG FOR SEQ \par * 04/23/09 RPI 1025 CLEAR RPL OPTIONS FOR REUSE                           \par *********************************************************************\par ESF1SKP1 RT1   MAIN \par RBA      DC    XL4'00'\par XRBA     DC    XL8'00'\par          LTORG\par          EQUREGS\par          RT1   START\par *\par * READ SEQ FWD STARTING AT REC 2 USING ADR,DIR and SKP,SEQ\par *\par          WTO   'GEN ACB/RPL AND SKP SEQ READ STARTING AT REC 2'\par          GENCB BLK=ACB,DDNAME=VFILE,MACRF=(ADR,SEQ)\par          LTR   R15,R15\par          RT1   CC0\par          LR    R2,R1             R2=ACB \par          OPEN  ((R2),(INPUT))\par          LTR   R15,R15\par          RT1   CC0\par          GETMAIN R,LV=80\par          LR    R4,R1             R4=RECORD AREA\par          GENCB BLK=RPL,ACB=(R2),AREA=(R4),OPTCD=(ADR,XRBA),ARG=XRBA \par          LTR   R15,R15\par          RT1   CC0\par          LR    R3,R1             R3=RPL\par          MVC   XRBA,=FL8'80'\par          POINT RPL=(R3)          SET CUR POS TO REC 2       \par          LTR   R15,R15\par          RT1   CC0\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(SEQ,FWD,XRBA)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)          READ REC2 SEQ FWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   XRBA,=FL8'80'    VERIFY RETURNED XRBA\par          RT1   CCE\par          CLC   0(80,R4),=80C'2'  VERIFY REC 2\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 3 SEQ FWD      \par          LTR   R15,R15\par          RT1   CC0\par          CLC   XRBA,=FL8'160'    VERIFY RETURNED XRBA\par          RT1   CCE\par          CLC   0(80,R4),=80C'3'  VERIFY REC 3\par          RT1   CC0\par *\par * REPOSITION TO REC3 FOR READING REC 2 AND REC 1 BACKWARD\par *\par          WTO   'SKP SEQ READ BACKWARD STARTING AT REC 2'\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(ADR,XRBA)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   XRBA,=FL8'160'                                     \par          POINT RPL=(R3)          SET CUR POS TO REC 3        \par          LTR   R15,R15\par          RT1   CC0\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(SEQ,BWD,XRBA)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)          READ REC2 SEQ BWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   XRBA,=FL8'80'    VERIFY RETURNED XRBA\par          RT1   CCE\par          CLC   0(80,R4),=80C'2'  VERIFY REC 2\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 1 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   XRBA,=FL8'0'      VERIFY RETURNED XRBA\par          RT1   CCE\par          CLC   0(80,R4),=80C'1'  VERIF REC 1\par          RT1   CC0\par *\par * REPOSITION TO EOF FOR READING REC 3 AND REC 2 BACKWARD\par *\par          WTO   'SKP SEQ READ BACKWARD STARTING AT REC 3'\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(ADR,XRBA)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   XRBA,=FL8'-1'                                     \par          POINT RPL=(R3)          SET CUR POS TO EOF         \par          LTR   R15,R15\par          RT1   CC0\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(SEQ,BWD,XRBA)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)          READ REC3 SEQ BWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   XRBA,=FL8'160'     VERIFY RETURNED XRBA\par          RT1   CCE\par          CLC   0(80,R4),=80C'3'  VERIFY REC 3\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 1 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   XRBA,=FL8'80'     VERIFY RETURNED XRBA\par          RT1   CCE\par          CLC   0(80,R4),=80C'2'  VERIF REC 2\par          RT1   CC0\par *\par * REPEAT FWD/BWD TEST USING RBA VS XRBA\par *\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),ARG=RBA,OPTCD=(ADR)\par          MVC   RBA,=F'80'\par          POINT RPL=(R3)          SET CUR POS TO REC 2       \par          LTR   R15,R15\par          RT1   CC0\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(SEQ,FWD)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)          READ REC2 SEQ FWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RBA,=F'80'        VERIFY REC RBA\par          RT1   CC0\par          CLC   0(80,R4),=80C'2'  VERIFY REC 2\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 3 SEQ FWD      \par          LTR   R15,R15\par          RT1   CC0\par          CLC   RBA,=F'160'       VERIFY REC RBA\par          RT1   CC0\par          CLC   0(80,R4),=80C'3'  VERIFY REC 3\par          RT1   CC0\par *\par * REPOSITION TO REC3 FOR READING REC 2 AND REC 1 BACKWARD\par *\par          WTO   'SKP SEQ READ BACKWARD STARTING AT REC 2'\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(ADR)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RBA,=F'160'                                     \par          POINT RPL=(R3)          SET CUR POS TO REC 3        \par          LTR   R15,R15\par          RT1   CC0\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(SEQ,BWD)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)          READ REC2 SEQ BWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RBA,=F'80'        VERIFY REC RBA\par          RT1   CC0\par          CLC   0(80,R4),=80C'2'  VERIFY REC 2\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 1 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RBA,=F'0'         VERIFY REC RBA\par          RT1   CC0\par          CLC   0(80,R4),=80C'1'  VERIF REC 1\par          RT1   CC0\par *\par * REPOSITION TO EOF FOR READING REC 3 AND REC 2 BACKWARD\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1 *\par          WTO   'SKP SEQ READ BACKWARD STARTING AT REC 3'\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(ADR)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RBA,=F'-1'                                     \par          POINT RPL=(R3)          SET CUR POS TO EOF         \par          LTR   R15,R15\par          RT1   CC0\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(SEQ,BWD)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)          READ REC3 SEQ BWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RBA,=F'160'       VERIFY REC RBA\par          RT1   CC0\par          CLC   0(80,R4),=80C'3'  VERIFY REC 3\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 1 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RBA,=F'80'        VERIFY REC RBA\par          RT1   CC0\par          CLC   0(80,R4),=80C'2'  VERIF REC 2\par          RT1   CC0\par          CLOSE ((R2))\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\page 3 esf1test\par\par This test\par\par 1) creates a QSAM file and PUTs 3 80 byte records in it.\par The 1st is all 1s, the second all 2s and the 3rd all 3s.\par\par 2) PUTs to an ESDS dataset, from the above QSAM file, with\par 3 80 byte fixed-length records, with an ACB with MACRF=(SEQ,OUT)\par and with an RPL with OPTCD=(SEQ). \par They will be situated at RBA/XRBA of 0, 80 and 160.\par\par 3)\par a) GETs an ESDS record, for ACB with MACRF=(SEQ,IN) and an RPL\par with an RPL with OPTCD=(SEQ).\par\par (When one GETs an ESDS record SEQuentially as the first vsam command\par after the OPEN, it should automatically position on XRBA/RBA of 0.)\par\par b) It verifies that the 1st record holds 80 1s.\par\par c) Does a SHOWCB to store the RBA value (via FIELDS=(RBA))\par in RBA1 (via AREA=RBA1).\par\par d) and verifies that it has the value of 0.\par\par e) repeats c) and d) for XRBA.\par\par f) repeats a) thru e) checking that the record holda 80 2s, is found\par at 80 and stores the RBA/XRBA in RBA2/XRBA2\par\par g) repeats a) thru e) checking that the record holda 80 3s, is found\par at 160 and stores the RBA/XRBA in RBA3/XRBA3\par\par h) GETs an ESDS record and TESTCBs the FDBK value is 4 for EOD.\par\page\par 4)\par a) It then uses ACB with MACRF=(ADR) and RPL with OPTCD=(ADR)\par to access and verify the contents of the records at RBAs of\par RBA1, RBA2 and RBA3, \par and ensure that their contents are 80 1s, 80 2s and 80 3s respectively.\par\par b) It then uses ACB with MACRF=(ADR,XRBA) and RPL with OPTCD=(ADR,XRBA)\par to access and verify the contents of the records at XRBAs of\par XRBA1, XRBA2 and XRBA3,\par and ensure that their contents are 80 1s, 80 2s and 80 3s respectively.\par\page The purpose of this test is to show that an ESDS with fixed-length records can be created\par via PUTting and subsequently be read sequentially via GETting, and then be accessed by ADdRess\par with both XRBA and RBA.\par\page\plain\f3\fs20\cf1 c:\\z390\\rt\\vsam\\save\\test\\esf1test.bat\par\par REM ESF1TEST TEST ESDS FIXED LENGTH VSAM FILE SEQ AND RANDOM RBA/XRBA\par REM RUN ESF1TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS\par SET QFILE=vsam\\test\\ESF1.TF1\par SET VFILE=vsam\\test\\TESTCAT.ESF1\par erase vsam\\test\\ESF1.TF1\par erase vsam\\test\\ESF1.VES\par erase vsam\\test\\ESF1.VX0\par CALL ASMLG vsam\\test\\ESF1TEST %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN ESF1TEST\par\par ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\esf1test\par C:\\Z390>REM ESF1TEST TEST ESDS FIXED LENGTH VSAM FILE SEQ AND RANDOM RBA/XRBA \par C:\\Z390>REM RUN ESF1TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS \par C:\\Z390>SET QFILE=vsam\\test\\ESF1.TF1 \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.ESF1 \par C:\\Z390>erase vsam\\test\\ESF1.TF1 \par C:\\Z390>erase vsam\\test\\ESF1.VES \par C:\\Z390>erase vsam\\test\\ESF1.VX0 \par Could Not Find C:\\Z390\\vsam\\test\\ESF1.VX0\par C:\\Z390>CALL ASMLG vsam\\test\\ESF1TEST          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 10:08:14 ESF1TEST  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 10:08:15 ESF1TEST  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 69 IO=6323\par 10:08:15 ESF1TEST  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 10:08:15 ESF1TEST  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=547\par 10:08:16 ESF1TEST  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par ESF1TEST RT1 STARTED\par ESF1TEST TEST ESDS FIXED LENGTH RECORD I/O\par ESF1TEST CREATE QFILE\par ESF1TEST CREATE VFILE\par ESF1TEST READ AND VERIFY VFILE SEQUENTIALLY\par ESF1TEST READ AND VERIFY VFILE BY RBA AND XRBA\par ESF1TEST RT1 TESTS COMPLETED =     35\par ESF1TEST RT1 ENDED OK\par 10:08:16 ESF1TEST  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=332 INS=362\par C:\\Z390> exit\par *** 11/08/16 10:08:16 CMD task ended TOT SEC=2 TOT LOG IO=30\par\par\par c:\\z390\\vsam\\test\\esf1.ves\par\par 11111111111111111111111111111111111111111111111111111111111111111111111111111111\par 22222222222222222222222222222222222222222222222222222222222222222222222222222222\par 33333333333333333333333333333333333333333333333333333333333333333333333333333333\par\par c:\\z390\\vsam\\test\\esf1test.mlc\par\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 04/23/07                                                 *\par *********************************************************************\par * 08/29/07 INITIAL CODING OF ESDS FIXED LENGTH RECORD TESTS           \par * 09/09/07 RPI 672 CHANGE RBA/XRBA VALUES TO VES RCD ADDRESSES        \par *********************************************************************\par ESF1TEST RT1   MAIN \par QDCBIN   DCB   DDNAME=QFILE,RECFM=F,LRECL=80,MACRF=GM,EODAD=EOF\par QDCBOUT  DCB   DDNAME=QFILE,RECFM=F,LRECL=80,MACRF=PM\par VACBOUT  ACB   DDNAME=VFILE,MACRF=(SEQ,OUT)\par VACBINS  ACB   DDNAME=VFILE,MACRF=(SEQ,IN)\par VACBINR  ACB   DDNAME=VFILE,MACRF=(ADR)\par VRPLOUTS RPL   ACB=VACBOUT,AREA=RECORD,OPTCD=(SEQ)\par VRPLINS  RPL   ACB=VACBINS,AREA=RECORD,OPTCD=(SEQ)\par VRPLRBA  RPL   ACB=VACBINR,AREA=RECORD,OPTCD=(ADR),ARG=RBA\par VRPLXRBA RPL   ACB=VACBINR,AREA=RECORD,OPTCD=(ADR,XRBA),ARG=XRBA\par RECORD   DC    CL80' '\par RBA      DC    XL4'00'\par RBA1     DC    XL4'00'\par RBA2     DC    XL4'00'\par RBA3     DC    XL4'00'\par XRBA     DC    XL8'00'\par XRBA1    DC    XL8'00'\par XRBA2    DC    XL8'00'\par XRBA3    DC    XL8'00'\par          LTORG\par          EQUREGS\par          RT1   START\par          WTO   'ESF1TEST TEST ESDS FIXED LENGTH RECORD I/O'   \par *\par * CREATE QSAM FILE WITH 3 FIXED LENGTH RECORDS \par *\par          WTO   'ESF1TEST CREATE QFILE'\par          OPEN  (QDCBOUT,(OUTPUT))\par          PUT   QDCBOUT,=80C'1'\par          PUT   QDCBOUT,=80C'2'\par          PUT   QDCBOUT,=80C'3'\par          CLOSE (QDCBOUT)\par *\par * BUILD VSAM FIXED LENGTH FILE FROM QSAME FILE WITH 3 RECORDS\par *\par          WTO   'ESF1TEST CREATE VFILE'\par          OPEN  (QDCBIN,(INPUT),VACBOUT,(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par LOOP     EQU   *\par          GET   QDCBIN,RECORD\par          PUT   RPL=VRPLOUTS\par          LTR   R15,R15\par          RT1   CC0\par          B     LOOP\par EOF      CLOSE (QDCBIN,,VACBOUT)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND VERIFY 3 VSAM FIXED LENGTH RECORDS AND RBA'S \par * (NOTE RBA'S POINT TO VX0 XRBA'S TO ACTUAL RECORDS IN VES)\par *\par          WTO   'ESF1TEST READ AND VERIFY VFILE SEQUENTIALLY'\par          OPEN  (VACBINS)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=VRPLINS\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'1'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=RBA1,LENGTH=4,FIELDS=(RBA)\par          CLC   RBA1,=F'0'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=XRBA1,LENGTH=8,FIELDS=(XRBA)\par          CLC   XRBA1,=FL8'0'\par          RT1   CC0\par          GET   RPL=VRPLINS  \par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'2'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=RBA2,LENGTH=4,FIELDS=(RBA)\par          CLC   RBA2,=F'80'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=XRBA2,LENGTH=8,FIELDS=(XRBA)\par          CLC   XRBA2,=FL8'80'\par          RT1   CC0\par          GET   RPL=VRPLINS\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'3'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=RBA3,LENGTH=4,FIELDS=(RBA)\par          CLC   RBA3,=F'160'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=XRBA3,LENGTH=8,FIELDS=(XRBA)\par          CLC   XRBA3,=FL8'160'\par          RT1   CC0\par          GET   RPL=VRPLINS\par          CHI   R15,8             VERIFY LOGIC ERROR AT EOD\par          RT1   CC0\par          TESTCB RPL=VRPLINS,FDBK=4 VERIFY EOD REASON CODE \par          RT1   CC0\par          CLOSE (VACBINS)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND VERIFY 3 RECORDS BY RBA AND BY XRBA ADDRESS\par *\par          WTO   'ESF1TEST READ AND VERIFY VFILE BY RBA AND XRBA'\par          OPEN  (VACBINR)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RBA,RBA1\par          GET   RPL=VRPLRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'1'\par          RT1   CC0\par          MVC   RBA,RBA2\par          GET   RPL=VRPLRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'2'\par          RT1   CC0\par          MVC   RBA,RBA3\par          GET   RPL=VRPLRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'3'\par          RT1   CC0\par          MVC   XRBA,XRBA1\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'1'\par          RT1   CC0\par          MVC   XRBA,XRBA2\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'2'\par          RT1   CC0\par          MVC   XRBA,XRBA3\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'3'\par          RT1   CC0\par          CLOSE (VACBINR)\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\page\par\plain\f3\fs20\b\cf1 4 esf2test\par\par This test\par\par 1) \par A) OPENs an ESDS dataset with ACB MACRF=(SEQ,OUT).\par\par B) PUTs a record of 80 1s, with RPL OPTCD=(SEQ,UPD).\par\par C) Does a SHOWCB storing the XRBA in XRBA1.\par\plain\f3\fs20\cf1\par\plain\f3\fs20\b\cf1 D) Store the RHS byte in RBA1.\par\par E) PUTs a record of 80 2s\par\par F) Does a SHOWCB storing the XRBA in XRBA2.\par\plain\f3\fs20\cf1\par\plain\f3\fs20\b\cf1 G) Store the RHS byte in RBA2.\par\par H) PUTs a record of 80 3s\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1\par I) Does a SHOWCB storing the XRBA in XRBA3.\par\plain\f3\fs20\cf1\par\plain\f3\fs20\b\cf1 J) Store the RHS byte in RBA3.\par\par K) CLOSEs dataset.\par\par 2)\par A) OPENs ESDS dataset with ACB MACRF=(SEQ,OUT).\par\par B) GETs SEQuentially (1st record) with RPL OPTCD=(SEQ,UPD).\par\par C) If GET not successful abandon loop.\par\par D) Changes the 1st byte to 'U'.\par\par E) PUTs the record back.\par\plain\f3\fs20\cf1\par F) Repeats B) thru E) twice.\par G) Does SHOWCB to store the FDBK(feedback field) in FDBK.\par\par H) Verify that it is equal to 4 (LOGICAL END OF DATA)\par\par I) CLOSE.\par\par 3)\par\plain\f3\fs20\b\cf1 A) OPENs with ACB MACRF=(SEQ,IN).\par\plain\f3\fs20\cf1\par B) GET first 3 records SEQuentially and verify that they start with\par 'U1', 'U2' and 'U3', with RPL OPTCD=(SEQ).\par\par C) Attempt to GET another record.\par\par D) Does TESTCB to verify that FDBK=4\par\par E) CLOSE.\par\par 4)\par A) OPEN with \plain\f3\fs20\b\cf1 ACB MACRF=(ADR,OUT).\par\par B) Uses RBA1 to DET the record by RBA, with RPL OPTCD=(ADR,UPD).\par\par C) Verifies that it starts 'U1'.\par\par D) Change 3rd byte in record to 'R'.\par\par E) PUT the record back. (NOTE: when PUTting via ADdRess, you don't use UPD)\par\par F) Repeat B) thru E) using RBA2 and varifying it starts 'U2'.\par\par G) Repeat B) thru E) using RBA3 and varifying it starts 'U3'.\par  \par H) Uses XRBA1 to get the record by XRBA.\par\par I) Verifies that it starts 'U1R'.\par\par J) Change 4th byte in record to 'X'.\par\par K) PUT the record back.\par\par L) Repeat H) thru K) using XRBA2 and varifying it starts 'U2R'.\par\par M) Repeat H) thru K) using XRBA3 and varifying it starts 'U3R'.\par  \par\plain\f3\fs20\cf1 5)\par\plain\f3\fs20\b\cf1 A) Uses an ACB MACRF=(SEQ,IN)and a RPL OPTCD=(SEQ).\par\plain\f3\fs20\cf1\par B) GET first 3 records SEQuentially and verify that they start with\par 'U1RX', 'U2RX' and 'U3RX'.\par\par\page\plain\f3\fs20\b\cf1 The purpose of this test is to show that an ESDS with fixed-length records can be created (PUT), \par and those records be read sequentially (GET) and updated (PUT), \par and then be accessed by address (GET) via both XRBA and RBA and updated (PUT).\par\page\plain\f3\fs20\cf1 c:\\z390\\rt\\vsam\\test\\save\\esf2test.bat\par\par REM ESF2TEST TEST ESDS FIXED LENGTH VSAM FILE SEQ AND RANDOM RBA/XRBA\par REM RUN ESF2TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS\par SET VFILE=vsam\\test\\TESTCAT.ESF2\par erase vsam\\test\\ESF2.VES\par CALL ASMLG vsam\\test\\ESF2TEST %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN ESF2TEST\par\par ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\esf2test\par C:\\Z390>REM ESF2TEST TEST ESDS FIXED LENGTH VSAM FILE SEQ AND RANDOM RBA/XRBA \par C:\\Z390>REM RUN ESF2TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.ESF2 \par C:\\Z390>erase vsam\\test\\ESF2.VES \par C:\\Z390>CALL ASMLG vsam\\test\\ESF2TEST          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 10:15:36 ESF2TEST  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 10:15:36 ESF2TEST  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 69 IO=6294\par 10:15:36 ESF2TEST  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 10:15:37 ESF2TEST  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=476\par 10:15:37 ESF2TEST  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par ESF2TEST RT1 STARTED\par ESF2TEST TEST ESDS FIXED LENGTH RECORD I/O\par ESF2TEST CREATE VFILE WITH 3 RECORDS\par ESF2TEST UPDATE SEQUENTIALLY\par ESF2TEST READ AND VERIFY VFILE SEQUENTIALLY\par ESF2TEST READ AND VERIFY VFILE BY RBA AND XRBA\par ESF2TEST VERIFY SEQ, RBA, AND XRBA CHANGES\par ESF2TEST RT1 TESTS COMPLETED =     50\par ESF2TEST RT1 ENDED OK\par 10:15:37 ESF2TEST  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=329 INS=497\par C:\\Z390> exit\par *** 11/08/16 10:15:37 CMD task ended TOT SEC=2 TOT LOG IO=27\par\par c:\\z390\\vsam\\test\\esf2.ves\par\par 00000000  E4 F1 D9 E7 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    \plain\f3\fs20\b\i\ul\cf1 U1RX\plain\f3\fs20\cf1 111111111111\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000050  E4 F2 D9 E7 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    \plain\f3\fs20\b\i\ul\cf1 U2RX\plain\f3\fs20\cf1 222222222222\par 00000060  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000070  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000080  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000090  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000A0  E4 F3 D9 E7 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    \plain\f3\fs20\b\i\ul\cf1 U3RX\plain\f3\fs20\cf1 333333333333\par 000000B0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000000C0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000000D0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000000E0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par\par c:\\z390\\rt\\vsam\\test\\save\\esf2test.mlc\par\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 04/23/07                                                 *\par *********************************************************************\par * 08/29/07 INITIAL CODING OF ESDS FIXED LENGTH RECORD TESTS           \par * 09/09/07 RPI 672 CHANGE RBA/XRBA VALUES TO VES RCD ADDRESSES        \par *********************************************************************\par ESF1TEST RT1   MAIN \par QDCBIN   DCB   DDNAME=QFILE,RECFM=F,LRECL=80,MACRF=GM,EODAD=EOF\par QDCBOUT  DCB   DDNAME=QFILE,RECFM=F,LRECL=80,MACRF=PM\par VACBOUT  ACB   DDNAME=VFILE,MACRF=(SEQ,OUT)\par VACBINS  ACB   DDNAME=VFILE,MACRF=(SEQ,IN)\par VACBINR  ACB   DDNAME=VFILE,MACRF=(ADR)\par VRPLOUTS RPL   ACB=VACBOUT,AREA=RECORD,OPTCD=(SEQ)\par VRPLINS  RPL   ACB=VACBINS,AREA=RECORD,OPTCD=(SEQ)\par VRPLRBA  RPL   ACB=VACBINR,AREA=RECORD,OPTCD=(ADR),ARG=RBA\par VRPLXRBA RPL   ACB=VACBINR,AREA=RECORD,OPTCD=(ADR,XRBA),ARG=XRBA\par RECORD   DC    CL80' '\par RBA      DC    XL4'00'\par RBA1     DC    XL4'00'\par RBA2     DC    XL4'00'\par RBA3     DC    XL4'00'\par XRBA     DC    XL8'00'\par XRBA1    DC    XL8'00'\par XRBA2    DC    XL8'00'\par XRBA3    DC    XL8'00'\par          LTORG\par          EQUREGS\par          RT1   START\par          WTO   'ESF1TEST TEST ESDS FIXED LENGTH RECORD I/O'   \par *\par * CREATE QSAM FILE WITH 3 FIXED LENGTH RECORDS \par *\par          WTO   'ESF1TEST CREATE QFILE'\par          OPEN  (QDCBOUT,(OUTPUT))\par          PUT   QDCBOUT,=80C'1'\par          PUT   QDCBOUT,=80C'2'\par          PUT   QDCBOUT,=80C'3'\par          CLOSE (QDCBOUT)\par *\par * BUILD VSAM FIXED LENGTH FILE FROM QSAME FILE WITH 3 RECORDS\par *\par          WTO   'ESF1TEST CREATE VFILE'\par          OPEN  (QDCBIN,(INPUT),VACBOUT,(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par LOOP     EQU   *\par          GET   QDCBIN,RECORD\par          PUT   RPL=VRPLOUTS\par          LTR   R15,R15\par          RT1   CC0\par          B     LOOP\par EOF      CLOSE (QDCBIN,,VACBOUT)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND VERIFY 3 VSAM FIXED LENGTH RECORDS AND RBA'S \par * (NOTE RBA'S POINT TO VX0 XRBA'S TO ACTUAL RECORDS IN VES)\par *\par          WTO   'ESF1TEST READ AND VERIFY VFILE SEQUENTIALLY'\par          OPEN  (VACBINS)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=VRPLINS\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'1'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=RBA1,LENGTH=4,FIELDS=(RBA)\par          CLC   RBA1,=F'0'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=XRBA1,LENGTH=8,FIELDS=(XRBA)\par          CLC   XRBA1,=FL8'0'\par          RT1   CC0\par          GET   RPL=VRPLINS  \par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'2'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=RBA2,LENGTH=4,FIELDS=(RBA)\par          CLC   RBA2,=F'80'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=XRBA2,LENGTH=8,FIELDS=(XRBA)\par          CLC   XRBA2,=FL8'80'\par          RT1   CC0\par          GET   RPL=VRPLINS\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'3'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=RBA3,LENGTH=4,FIELDS=(RBA)\par          CLC   RBA3,=F'160'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=XRBA3,LENGTH=8,FIELDS=(XRBA)\par          CLC   XRBA3,=FL8'160'\par          RT1   CC0\par          GET   RPL=VRPLINS\par          CHI   R15,8             VERIFY LOGIC ERROR AT EOD\par          RT1   CC0\par          TESTCB RPL=VRPLINS,FDBK=4 VERIFY EOD REASON CODE \par          RT1   CC0\par          CLOSE (VACBINS)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND VERIFY 3 RECORDS BY RBA AND BY XRBA ADDRESS\par *\par          WTO   'ESF1TEST READ AND VERIFY VFILE BY RBA AND XRBA'\par          OPEN  (VACBINR)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RBA,RBA1\par          GET   RPL=VRPLRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'1'\par          RT1   CC0\par          MVC   RBA,RBA2\par          GET   RPL=VRPLRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'2'\par          RT1   CC0\par          MVC   RBA,RBA3\par          GET   RPL=VRPLRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'3'\par          RT1   CC0\par          MVC   XRBA,XRBA1\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'1'\par          RT1   CC0\par          MVC   XRBA,XRBA2\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'2'\par          RT1   CC0\par          MVC   XRBA,XRBA3\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'3'\par          RT1   CC0\par          CLOSE (VACBINR)\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\par\page\par\plain\f3\fs20\b\cf1 5 esf3gen1\par\par This test\par\par 1)\par\par A) Does GENCB for ACB MACRF=(SEQ,OUT).\par\par B) OPEN OUTPUT.\par\par C) Does GENCB for RPL OPTCD=(SEQ).\par\par D) PUTs 3 80 byte records with 1s, then 2s and finally with 3s.\par\par E) CLOSE.\par\par F) Does GENCB for ACB MACRF=(SEQ,IN).\par\par G) OPEN INPUT. \par\par H) Does GENCB for RPL OPTCD=(SEQ,BWD,LRD).\par\par I) POINT using the RPL at LRD.\par\par J) GET and verify that record has 80 3s.\par\par K) GET and verify that record has 80 2s.\par\par L) GET and verify that record has 80 1s.\par\par M) GET and TESTCB that FDBK equals 4.\par\par\plain\f3\fs20\cf1 N) CLOSE\page The purpose of this test is to create a fixed-length ESDS dataset\par and then to position at EOF (via LRD) and read it sequentially backward.\par Uses GENCB to create ACB and RPL.\page\par c:\\z390\\rt\\vsam\\test\\save\\esf3gen1.bat\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1\par REM ESF3GEN1 TEST ESDS FIXED LEN CREATE AND READ BACKWARDS 3 RCDS\par REM RUN ESF3GEN1 TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS\par SET VFILE=vsam\\test\\TESTCAT.ESF3\par erase vsam\\test\\ESF3.VES\par CALL ASMLG vsam\\test\\ESF3GEN1 %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN ESF3GEN1\par\par ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\esf3gen1\par C:\\Z390>REM ESF3GEN1 TEST ESDS FIXED LEN CREATE AND READ BACKWARDS 3 RCDS \par C:\\Z390>REM RUN ESF3GEN1 TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.ESF3 \par C:\\Z390>erase vsam\\test\\ESF3.VES \par C:\\Z390>CALL ASMLG vsam\\test\\ESF3GEN1          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 10:24:29 ESF3GEN1  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 10:24:30 ESF3GEN1  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 69 IO=6229\par 10:24:30 ESF3GEN1  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 10:24:30 ESF3GEN1  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=252\par 10:24:30 ESF3GEN1  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par ESF3TEST RT1 STARTED\par ESF3TEST TEST SEQ CREATE AND READ BACKWARDS\par ESF3TEST CREATE VFILE\par ESF3TEST READ AND VERIFY VFILE BACKWARDS\par ESF3TEST RT1 TESTS COMPLETED =     20\par ESF3TEST RT1 ENDED OK\par 10:24:30 ESF3GEN1  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=302 INS=242\par C:\\Z390> exit\par *** 11/08/16 10:24:30 CMD task ended TOT SEC=1 TOT LOG IO=24\par\page c:\\z390\\vsam\\test\\esf3.ves\par\par 11111111111111111111111111111111111111111111111111111111111111111111111111111111\par 22222222222222222222222222222222222222222222222222222222222222222222222222222222\par 33333333333333333333333333333333333333333333333333333333333333333333333333333333\par\par c:\\z390\\vsam\\test\\esf3gen1.mlc\par\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 04/23/07                                                 *\par *********************************************************************\par * 09/16/07 RPI 672 CODE TEST FOR LRD,BWD SEQ,BWD BACKWARD USING GENCB \par *          COPY ESF3TEST.MLC AND MAKE THE FOLLOWING CHANGES:\par *            1. CHANGE ACB, RPL, AND RECORD LABELS INTO R3-R8 LABELS\par *            2. REPLACE ACB'S WITH GENCB BLK=ACB,... \par *            3. REPLACE RPL'S WITH GENCB BLK=RPL,...\par *            4. GETMAIN RECORD AREA  AND CHANGE MVC/CLC REFERENCES \par *            (NOTE THERE ARE NO REMAINING STATIC DATA AREAS IN PGM!)\par * 09/25/07 RPI 702 USE POINT WITH LRD FOLLOWED BY GET,BWD,LRD RPL     \par *********************************************************************\par ESF3TEST RT1   MAIN \par VACBOUT  EQU   R3\par VACBIN   EQU   R4\par VRPLOUTS EQU   R5\par VRPLINSB EQU   R6  RPI 702\par RECORD   EQU   R7  RPI 702\par          LTORG\par          EQUREGS\par          RT1   START\par          WTO   'ESF3TEST TEST SEQ CREATE AND READ BACKWARDS'  \par *\par * BUILD VSAM FIXED LENGTH FILE FROM QSAME FILE WITH 3 RECORDS\par *\par          WTO   'ESF3TEST CREATE VFILE'\par          GENCB BLK=ACB,DDNAME=VFILE,MACRF=(SEQ,OUT)\par          LTR   R15,R15\par          RT1   CC0\par          LR    VACBOUT,R1\par          OPEN  ((VACBOUT),(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par          GETMAIN RU,LV=80\par          LR    RECORD,R1\par          MVC   0(80,RECORD),=80C'1'\par          GENCB BLK=RPL,ACB=(VACBOUT),AREA=(RECORD),OPTCD=(SEQ)\par          LTR   R15,R15\par          RT1   CC0\par          LR    VRPLOUTS,R1\par          PUT   RPL=(VRPLOUTS)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   0(80,RECORD),=80C'2'\par          PUT   RPL=(VRPLOUTS)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   0(80,RECORD),=80C'3'\par          PUT   RPL=(VRPLOUTS)\par          LTR   R15,R15\par          RT1   CC0\par          CLOSE ((VACBOUT))\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND VERIFY 3 VSAM RECORDS BACKWARD                    \par *\par          WTO   'ESF3TEST READ AND VERIFY VFILE BACKWARDS'\par          GENCB BLK=ACB,DDNAME=VFILE,MACRF=(SEQ,IN)\par          LTR   R15,R15\par          RT1   CC0\par          LR    VACBIN,R1\par          OPEN  ((VACBIN))\par          LTR   R15,R15\par          RT1   CC0\par          GENCB BLK=RPL,ACB=(VACBIN),AREA=(RECORD),OPTCD=(SEQ,BWD,LRD)\par          LTR   R15,R15\par          RT1   CC0\par          LR    VRPLINSB,R1\par          POINT RPL=(VRPLINSB)   RPI 702\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(VRPLINSB)\par          LTR   R15,R15\par          RT1   CC0\par          CLC   0(80,RECORD),=80C'3'\par          RT1   CC0\par          LR    VRPLINSB,R1\par          GET   RPL=(VRPLINSB)  \par          LTR   R15,R15\par          RT1   CC0\par          CLC   0(80,RECORD),=80C'2'\par          RT1   CC0\par          GET   RPL=(VRPLINSB)  \par          LTR   R15,R15\par          RT1   CC0\par          CLC   0(80,RECORD),=80C'1'\par          RT1   CC0\par          GET   RPL=(VRPLINSB)  \par          CHI   R15,8\par          RT1   CC0\par          TESTCB RPL=(VRPLINSB),FDBK=4 VERIFY LOGICAL EOD AT FRONT\par          RT1   CC0\par          CLOSE ((VACBIN))\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\par\page\par\plain\f3\fs20\b\cf1 6 esf3test\par\par This test\par\par 1)\par A) Uses ACB MACRF=(SEQ,OUT) and RPL OPTCD=(SEQ).\par\par B) OPEN OUTPUT.\par\par C) PUTs 3 80 byte records with 1s, then 2s and finally 3s.\par\par D) CLOSE.\par\par E) OPEN INPUT with ACB MACRF=(SEQ,IN).\par\par F) POINT with RPL OPTCD=(SEQ,BWD,LRD).\par\par G) GET and verify that record has all 3s.\par\par H) GET and verify that record has all 2s.\par\par I) GET and verify that record has all 1s.\par\par J) GET and TESTCB that FDBK equals 4.\par\par K) CLOSE.\par\page\plain\f3\fs20\cf1 The purpose of this test is to create a fixed-length ESDS dataset\par and then to position at EOF (via LRD) and read it sequentially backward.\par\plain\f3\fs20\b\cf1 Doesn't use GENCB to generate ACB or RPL.\page\par c:\\z390\\rt\\vsam\\test\\save\\esf3test.bat\par\par REM ESF3TEST TEST ESDS FIXED LEN CREATE AND READ BACKWARDS 3 RCDS\par REM RUN ESF3TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS\par SET VFILE=vsam\\test\\TESTCAT.ESF3\par erase vsam\\test\\ESF3.VES\par CALL ASMLG vsam\\test\\ESF3TEST %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN ESF3TEST\par\par ran and produced\par\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\esf3test\par C:\\Z390>REM ESF3TEST TEST ESDS FIXED LEN CREATE AND READ BACKWARDS 3 RCDS \par C:\\Z390>REM RUN ESF3TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.ESF3 \par C:\\Z390>erase vsam\\test\\ESF3.VES \par C:\\Z390>CALL ASMLG vsam\\test\\ESF3TEST          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 10:31:17 ESF3TEST  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 10:31:17 ESF3TEST  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 69 IO=5089\par 10:31:18 ESF3TEST  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 10:31:18 ESF3TEST  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=278\par 10:31:18 ESF3TEST  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par ESF3TEST RT1 STARTED\par ESF3TEST TEST SEQ CREATE AND READ BACKWARDS\par ESF3TEST CREATE VFILE\par ESF3TEST READ AND VERIFY VFILE BACKWARDS\par ESF3TEST RT1 TESTS COMPLETED =     16\par ESF3TEST RT1 ENDED OK\par 10:31:18 ESF3TEST  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=310 INS=163\par C:\\Z390> exit\par *** 11/08/16 10:31:18 CMD task ended TOT SEC=1 TOT LOG IO=24\par\par c:\\z390\\vsam\\test\\esf3.ves\par\par 11111111111111111111111111111111111111111111111111111111111111111111111111111111\par 22222222222222222222222222222222222222222222222222222222222222222222222222222222\par 33333333333333333333333333333333333333333333333333333333333333333333333333333333\par\par\plain\f3\fs20\cf1 c:\\z390\\vsam\\test\\esf3test.mlc\par\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 04/23/07                                                 *\par *********************************************************************\par * 09/13/07 RPI 672 CODE TEST FOR LRD,BWD SEQ,BWD BACKWARD ACCESS      \par * 09/25/07 RPI 702 ISSUE POINT WITH LRD AND GET BWD USING SAME RPL\par *********************************************************************\par ESF3TEST RT1   MAIN \par VACBOUT  ACB   DDNAME=VFILE,MACRF=(SEQ,OUT)\par VACBIN   ACB   DDNAME=VFILE,MACRF=(SEQ,IN)\par VRPLOUTS RPL   ACB=VACBOUT,AREA=RECORD,OPTCD=(SEQ)\par VRPLINSB RPL   ACB=VACBIN,AREA=RECORD,OPTCD=(SEQ,BWD,LRD)  RPI 702\par RECORD   DC    CL80' '\par          LTORG\par          EQUREGS\par          RT1   START\par          WTO   'ESF3TEST TEST SEQ CREATE AND READ BACKWARDS'  \par *\par * BUILD VSAM FIXED LENGTH FILE FROM QSAME FILE WITH 3 RECORDS\par *\par          WTO   'ESF3TEST CREATE VFILE'\par          OPEN  (VACBOUT,(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD,=80C'1'\par          PUT   RPL=VRPLOUTS\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD,=80C'2'\par          PUT   RPL=VRPLOUTS\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD,=80C'3'\par          PUT   RPL=VRPLOUTS\par          LTR   R15,R15\par          RT1   CC0\par          CLOSE (VACBOUT)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND VERIFY 3 VSAM RECORDS BACKWARD                    \par *\par          WTO   'ESF3TEST READ AND VERIFY VFILE BACKWARDS'\par          OPEN  (VACBIN)\par          LTR   R15,R15\par          RT1   CC0\par          POINT RPL=VRPLINSB  RPI 702\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=VRPLINSB\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'3'\par          RT1   CC0\par          GET   RPL=VRPLINSB  \par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'2'\par          RT1   CC0\par          GET   RPL=VRPLINSB  \par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'1'\par          RT1   CC0\par          GET   RPL=VRPLINSB  \par          CHI   R15,8\par          RT1   CC0\par          TESTCB RPL=VRPLINSB,FDBK=4 VERIFY LOGICAL EOD AT FRONT\par          RT1   CC0\par          CLOSE (VACBIN)\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\par\plain\f3\fs20\b\cf1\page 7 esv1skp1\par\par This test\par\par 1)\par A) Creates the ACB via GENCB for MACRF=(ADR,SEQ).\par\par B) OPEN INPUT of ESDS variable file.\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1\par C) Creates the RPL via GENCB for OPTCD=(ADR,XRBA).\par\par Note:- vz390.java ADR is not recognised by the POINT command.\par\par D) POINTs via Register R3 at address 108.\par\par (First few lines of c:\\z390\\vsam\\test\\esv1.ves\par\par 1st record has 4 byte prefix with hex length value of 64 which is\par decimal 100. It then has 100 bytes of 1 and then has a 4 byte suffix\par equal to the prefix.\par\par 2nd record starts at decimal 108.\par\par 00000000  00 00 00 64 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    ...\loch\f3\hich\f3\'c0111111111111\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000050  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000060  F1 F1 F1 F1 F1 F1 F1 F1 00 00 00 64 \plain\f3\fs20\b\ul\cf1 00 00 00 C8\plain\f3\fs20\b\cf1     11111111...\loch\f3\hich\f3\'c0...H\par 00000070  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000080  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000090  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000A0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000B0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000C0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000D0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000E0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000F0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000100  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000110  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000120  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000130  F2 F2 F2 F2 F2 F2 F2 F2 00 00 00 C8 00 00 01 2C    22222222...H...\u140 ?)\par\par Address 108 has been underlined.\par As we can see, it is the beginning of the second record in this ESDS dataset.\par ESDS variable-length records are prefixed and suffixed with their lengths,\par which doesn't include the length of the prefix or suffix.\par\par E) Having thus identified the ADdRess of the second record,\par It now modifies the RPL OPTCD to (SEQ,FWD,XRBA) via MODCB.\par\par F) GETs the ESDS variable-length record pointed at by Register R3.\par\par G) Verifies that the variable named XRBA identified by the ARG\par field in the GENCB holds a value of 108, being the address of \par the second record\par\par H) Verifies that the contents of the record that begins at the \par address identified by the Register R4 in the AREA field within\par the GENCB RPL, is 200 bytes of 2s.\par\par I) GETs the ESDS variable-length record pointed at by Register R3.\par\par J) Verifies that the variable named XRBA identified by the ARG\par field in the GENCB holds a value of 316, being the address of \par the third record\par\par K) Verifies that the contents of the record that begins at the \par address identified by the Register R4 in the AREA field within\par the GENCB RPL, is 300 bytes of 3s.\par\par 2)\par A) Does a MODCB on the RPL OPTCD to ADR,XRBA.\par\par B) POINTs via Register R3 at address 316.\par  \par C) Does a MODCB on the RPL OPTCD to SEQ,BWD,XRBA.\par\par D) GETs a record backwards.\par\par E) Verifies that it's the 2nd record at address 108 and holds\par 200 2s.\par\par F) GETs a record backwards.\par\par G) Verifies that it's the 1st record at address 0 and holds\par 100 1s.\par\par 3)\par A) Does a MODCB on the RPL OPTCD to ADR,XRBA.\par\par B) POINTs via Register R3 at address -1,\par which is the value of EOF.\par Otherwise, this would be done via OPTCD=(LRD).\par  \par C) Does a MODCB on the RPL OPTCD to SEQ,BWD,XRBA.\par\par D) GETs a record backwards.\par\par E) Verifies that it's the 3rd record at address 316 and holds\par 300 3s.\par\par F) GETs a record backwards.\par\par G) Verifies that it's the 2nd record at address 108 and holds\par 200 2s.\par\par 4) Repeat 1) thru 3) using RBA rather than XRBA.\par\par 5) CLOSE.\par\page The purpose of this test is to access an ESDS variable-length dataset\par via it's XRBA address and then read it forwards, and then to access it\par by it's XRBA address and read it backwards, and then to position at the\par EOF via -1 and read backwards. Then to repeat it all using RBA addresses \par instead of XRBA addresses.\page c:\\z390\\rt\\vsam\\test\\save\\esv1skp1.bat\par\par REM ESV1SKP1 TEST ESDS VAR LENGTH VSAM FILE SKP SEQ ACCESS USING GENCB\par REM RUN ESV1SKP1 TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS\par SET VFILE=vsam\\test\\TESTCAT.ESV1\par CALL ASMLG vsam\\test\\ESV1SKP1 %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN ESV1SKP1\par\par ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\esv1skp1\par C:\\Z390>REM ESV1SKP1 TEST ESDS VAR LENGTH VSAM FILE SKP SEQ ACCESS USING GENCB \par C:\\Z390>REM RUN ESV1SKP1 TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.ESV1 \par C:\\Z390>CALL ASMLG vsam\\test\\ESV1SKP1          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 11:02:28 ESV1SKP1  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 11:02:29 ESV1SKP1  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 69 IO=7022\par 11:02:29 ESV1SKP1  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 11:02:29 ESV1SKP1  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=694\par 11:02:30 ESV1SKP1  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par ESV1SKP1 RT1 STARTED\par GEN ACB/RPL AND SKP SEQ READ STARTING AT REC 2\par SKP SEQ READ BACKWARD STARTING AT REC 2\par SKP SEQ READ BACKWARD STARTING AT REC 3\par SKP SEQ READ BACKWARD STARTING AT REC 2\par SKP SEQ READ BACKWARD STARTING AT REC 3\par ESV1SKP1 RT1 TESTS COMPLETED =     61\par ESV1SKP1 RT1 ENDED OK\par 11:02:30 ESV1SKP1  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=308 INS=563\par C:\\Z390> exit\par *** 11/08/16 11:02:30 CMD task ended TOT SEC=2 TOT LOG IO=25\par\page c:\\z390\\vsam\\test\\esv1.ves\par\par 00000000  00 00 00 64 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    ...\'c0111111111111\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000050  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000060  F1 F1 F1 F1 F1 F1 F1 F1 00 00 00 64 00 00 00 C8    11111111...\'c0...H\par 00000070  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000080  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000090  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000A0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000B0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000C0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000D0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000E0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000F0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000100  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000110  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000120  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000130  F2 F2 F2 F2 F2 F2 F2 F2 00 00 00 C8 00 00 01 2C    22222222...H...\u140 ?\par 00000140  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000150  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000160  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000170  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000180  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000190  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001A0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001B0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001C0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001D0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001E0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001F0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000200  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000210  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000220  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000230  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000240  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000250  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000260  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 00 00 01 2C    333333333333...\u140 ?\par\par c:\\z390\\vsam\\test\\esv1skp1.mlc\par\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 09/19/07                                                 *\par *********************************************************************\par * 09/19/07 INITIAL CODING OF ESDS VAR LEN SKP SEQ ACCESS USING GENCB    \par * 09/20/07 RPI 702 CHANGE TO USE POINT TO SET START FOR SEQ RWD/BWD   \par * 09/26/07 RPI 702 VERIFY CURRENT RBA/XRBA RETURNED IN RPLARG FOR SEQ \par * 04/23/09 RPI 1025 CLEAR RPL OPTIONS FOR REUSE                           \par *********************************************************************\par ESV1SKP1 RT1   MAIN \par RBA      DC    XL4'00'\par XRBA     DC    XL8'00'                                       \par          LTORG\par          EQUREGS\par          RT1   START\par *\par * READ SEQ FWD STARTING AT REC 2 USING ADR,XRBA and SEQ,FWD\par *\par          WTO   'GEN ACB/RPL AND SKP SEQ READ STARTING AT REC 2'\par          GENCB BLK=ACB,DDNAME=VFILE,MACRF=(ADR,SEQ)\par          LTR   R15,R15\par          RT1   CC0\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1          LR    R2,R1             R2=ACB \par          OPEN  ((R2),(INPUT))\par          LTR   R15,R15\par          RT1   CC0\par          GETMAIN R,LV=300\par          LR    R4,R1             R4=RECORD AREA\par          GENCB BLK=RPL,ACB=(R2),AREA=(R4),OPTCD=(ADR,XRBA),            X\par                ARG=XRBA\par          LTR   R15,R15\par          RT1   CC0\par          LR    R3,R1             R3=RPL\par          MVC   XRBA,=FL8'108'\par          POINT RPL=(R3)          SET CUR POS TO REC 2       \par          LTR   R15,R15\par          RT1   CC0\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(SEQ,FWD,XRBA)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)           READ REC2 VIA XRBA AND SET POS FWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   XRBA,=FL8'108'     VERIFY XRBA\par          RT1   CC0\par          CLC   0(200,R4),=200C'2' VERIFY REC 2\par          RT1   CC0\par          GET   RPL=(R3)           READ REC 3 SEQUENTIALLY\par          LTR   R15,R15\par          RT1   CC0\par          CLC   XRBA,=FL8'316'     VERIFY XRBA\par          RT1   CC0\par          CLC   0(200,R4),=200C'3' VERIF REC 3\par          RT1   CC0\par          CLC   200(100,R4),=100C'3' VERIF REC 3\par          RT1   CC0\par *\par * REPOSITION TO REC2 FOR READING BACKWARD AND SEQ READ REC 1\par *\par          WTO   'SKP SEQ READ BACKWARD STARTING AT REC 2'\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(ADR,XRBA)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   XRBA,=FL8'316'                                     \par          POINT RPL=(R3)          SET CUR POS TO REC 3        \par          LTR   R15,R15\par          RT1   CC0\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(SEQ,BWD,XRBA)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)           READ REC2 VIA XRBA AND SET POS BWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   XRBA,=FL8'108'     VERIFY XRBA\par          RT1   CC0\par          CLC   0(200,R4),=200C'2' VERIFY REC 2\par          RT1   CC0\par          GET   RPL=(R3)           READ REC 1 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   XRBA,=FL8'0'       VERIFY XRBA\par          RT1   CC0\par          CLC   0(100,R4),=100C'1' VERIF REC 1\par          RT1   CC0\par *\par * REPOSITION TO EOF FOR READING REC 3 AND REC 2 BACKWARD\par *\par          WTO   'SKP SEQ READ BACKWARD STARTING AT REC 3'\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(ADR,XRBA)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   XRBA,=FL8'-1'                                     \par          POINT RPL=(R3)          SET CUR POS TO EOF         \par          LTR   R15,R15\par          RT1   CC0\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(SEQ,BWD,XRBA)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)          READ REC3 SEQ BWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   XRBA,=FL8'316'       VERIFY XRBA\par          RT1   CC0\par          CLC   0(200,R4),=200C'3'  VERIFY REC 3\par          RT1   CC0\par          CLC   200(100,R4),=100C'3'  VERIFY REC 3\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 1 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   XRBA,=FL8'108'       VERIFY XRBA\par          RT1   CC0\par          CLC   0(200,R4),=200C'2'  VERIF REC 2\par          RT1   CC0\par *\par * REPEAT SEQ FWD/BWD USING RBA VS XRBA\par *\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),ARG=RBA,OPTCD=(ADR)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RBA,=F'108'\par          POINT RPL=(R3)          SET CUR POS TO REC 2       \par          LTR   R15,R15\par          RT1   CC0\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(SEQ,FWD)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)           READ REC2 VIA XRBA AND SET POS FWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RBA,=F'108'        VERIFY XRBA\par          RT1   CC0\par          CLC   0(200,R4),=200C'2' VERIFY REC 2\par          RT1   CC0\par          GET   RPL=(R3)           READ REC 3 SEQUENTIALLY\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RBA,=F'316'        VERIFY XRBA\par          RT1   CC0\par          CLC   0(200,R4),=200C'3' VERIF REC 3\par          RT1   CC0\par          CLC   200(100,R4),=100C'3' VERIF REC 3\par          RT1   CC0\par *\par * REPOSITION TO REC2 FOR READING BACKWARD AND SEQ READ REC 1\par *\par          WTO   'SKP SEQ READ BACKWARD STARTING AT REC 2'\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(ADR)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RBA,=F'316'                                     \par          POINT RPL=(R3)          SET CUR POS TO REC 3        \par          LTR   R15,R15\par          RT1   CC0\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(SEQ,BWD)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)           READ REC2 VIA XRBA AND SET POS BWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RBA,=F'108'        VERIFY XRBA\par          RT1   CC0\par          CLC   0(200,R4),=200C'2' VERIFY REC 2\par          RT1   CC0\par          GET   RPL=(R3)           READ REC 1 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RBA,=F'0'          VERIFY XRBA\par          RT1   CC0\par          CLC   0(100,R4),=100C'1' VERIF REC 1\par          RT1   CC0\par *\par * REPOSITION TO EOF FOR READING REC 3 AND REC 2 BACKWARD\par *\par          WTO   'SKP SEQ READ BACKWARD STARTING AT REC 3'\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(ADR)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RBA,=F'-1'                                     \par          POINT RPL=(R3)          SET CUR POS TO EOF         \par          LTR   R15,R15\par          RT1   CC0\par          MVHHI RPLOPT1-IHARPL(R3),0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=(R3),OPTCD=(SEQ,BWD)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)          READ REC3 SEQ BWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RBA,=F'316'         VERIFY XRBA\par          RT1   CC0\par          CLC   0(200,R4),=200C'3'  VERIFY REC 3\par          RT1   CC0\par          CLC   200(100,R4),=100C'3'  VERIFY REC 3\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 1 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RBA,=F'108'         VERIFY XRBA\par          RT1   CC0\par          CLC   0(200,R4),=200C'2'  VERIF REC 2\par          RT1   CC0\par          CLOSE ((R2))\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\par\par\plain\f3\fs20\cf1 8 \plain\f3\fs20\b\cf1 esv1test\par\par This test\par\par 1)\par A) Create a QSAM file with 3 variable-length records\par of 100, 200 and 300 bytes of 1s, 2s and 3s.\par\par B) Read the QSAM file and create an ESDS dataset.\par\par 2)\par A) OPEN the ESDS dataset with ACB MACRF=(SEQ,IN).\par\par B) GET the 1st record and verify it contains 100 1s.\par\par C) Does SHOWCB of RBA for 4 bytes into AREA=RBA1.\par\par D) Does SHOWCB of XRBA for 8 bytes into AREA=XRBA1.\par\par E) GET the 2nd record and verify it contains 200 2s.\par\par F) Does SHOWCB of RBA for 4 bytes into AREA=RBA2.\par\par G) Does SHOWCB of XRBA for 8 bytes into AREA=XRBA2.\par\par H) GET the 3rd record and verify it contains 300 3s.\par\par I) Does SHOWCB of RBA for 4 bytes into AREA=RBA3.\par\par J) Does SHOWCB of XRBA for 8 bytes into AREA=XRBA3.\par\par K) GET the next record.\par\par L) Does TESTCB and verifies FDBK is 4, i.e. EOF.\par\par M) CLOSE.\page 3)\par A) OPEN the ESDS dataset with ACB MACRF=(ADR).\par\par B) GET record using RBA with value RBA2 and verify 200 2s.\par\par C) GET record using RBA with value RBA1 and verify 100 1s.\par\par D) GET record using RBA with value RBA3 and verify 300 3s.\par\par E) GET record using XRBA with value XRBA2 and verify 200 2s.\par\par F) GET record using XRBA with value XRBA1 and verify 100 1s.\par\par G) GET record using XRBA with value XRBA3 and verify 300 3\par\par H) CLOSE.\par\page The purpose of this test is to create a QSAM file and then to populate a\par variable-length ESDS dataset from the QSAM records. To sequentially read\par the ESDS in a forward direction storing the addresses of each record \par as an XRBA address and an RBA address. And then to access those records \par by those stored XRBA and RBA addresses.\page c:\\z390\\rt\\vsam\\test\\save\\esv1test.bat\par\par REM ESV1TEST TEST ESDS VAR LENGTH VSAM FILE SEQ AND RANDOM RBA/XRBA\par REM RUN ESV1TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS\par SET QFILE=vsam\\test\\ESV1.TQ1\par SET VFILE=vsam\\test\\TESTCAT.ESV1\par erase vsam\\test\\ESV1.TQ1\par erase vsam\\test\\ESV1.VES\par erase vsam\\test\\ESV1.VX0\par CALL ASMLG vsam\\test\\ESV1TEST %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN ESV1TEST\par\par\plain\f3\fs20\cf1 ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\esv1test\par C:\\Z390>REM ESV1TEST TEST ESDS VAR LENGTH VSAM FILE SEQ AND RANDOM RBA/XRBA \par C:\\Z390>REM RUN ESV1TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS \par C:\\Z390>SET QFILE=vsam\\test\\ESV1.TQ1 \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.ESV1 \par C:\\Z390>erase vsam\\test\\ESV1.TQ1 \par C:\\Z390>erase vsam\\test\\ESV1.VES \par C:\\Z390>erase vsam\\test\\ESV1.VX0 \par Could Not Find C:\\Z390\\vsam\\test\\ESV1.VX0\par C:\\Z390>CALL ASMLG vsam\\test\\ESV1TEST          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 11:11:43 ESV1TEST  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 11:11:44 ESV1TEST  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 69 IO=7031\par 11:11:44 ESV1TEST  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 11:11:44 ESV1TEST  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=771\par 11:11:44 ESV1TEST  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par ESV1TEST RT1 STARTED\par ESV1TEST TEST ESDS VARIABLE LENGTH RECORD I/O\par ESV1TEST CREATE QFILE\par ESV1TEST CREATE VFILE\par ESV1TEST READ AND VERIFY VFILE SEQUENTIALLY\par ESV1TEST READ AND VERIFY VFILE BY RBA AND XRBA\par ESV1TEST RT1 TESTS COMPLETED =     38\par ESV1TEST RT1 ENDED OK\par 11:11:44 ESV1TEST  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=335 INS=392\par C:\\Z390> exit\par *** 11/08/16 11:11:45 CMD task ended TOT SEC=2 TOT LOG IO=30\par\par c:\\z390\\vsam\\test\\esv1.ves\par\par 00000000  00 00 00 64 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    ...\loch\f3\hich\f3\'c0111111111111\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000050  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000060  F1 F1 F1 F1 F1 F1 F1 F1 00 00 00 64 00 00 00 C8    11111111...\loch\f3\hich\f3\'c0...H\par 00000070  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000080  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000090  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000A0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000B0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000C0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000D0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000E0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000F0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000100  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000110  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000120  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000130  F2 F2 F2 F2 F2 F2 F2 F2 00 00 00 C8 00 00 01 2C    22222222...H...\u140 ?\par 00000140  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000150  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000160  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000170  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000180  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000190  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001A0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001B0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001C0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001D0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001E0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001F0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000200  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000210  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000220  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000230  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000240  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000250  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000260  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 00 00 01 2C    333333333333...\u140 ?\par\par c:\\z390\\vsam\\test\\esv1test.mlc\par\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 04/23/07                                                 *\par *********************************************************************\par * 08/30/07 INITIAL CODING OF ESDS VAR LENGTH RECORD TESTS           \par * 09/07/07 RPI 688 CHANGE RBA/XRBA SEQUENCE TO 2, 1, 3 TO VERIFY RANDOM     \par * 09/09/07 RPI 672 CHANGE RBA/XRBA VALUES TO VES RECORD ADDRESSES         \par *********************************************************************\par ESV1TEST RT1   MAIN \par QDCBIN   DCB   DDNAME=QFILE,RECFM=V,LRECL=304,MACRF=GM,EODAD=EOF\par QDCBOUT  DCB   DDNAME=QFILE,RECFM=V,LRECL=304,MACRF=PM\par VACBOUT  ACB   DDNAME=VFILE,MACRF=(SEQ,OUT)\par VACBINS  ACB   DDNAME=VFILE,MACRF=(SEQ,IN)\par VACBINR  ACB   DDNAME=VFILE,MACRF=(ADR)\par VRPLOUTS RPL   ACB=VACBOUT,AREA=RECORD+4,OPTCD=(SEQ)\par VRPLINS  RPL   ACB=VACBINS,AREA=RECORD+4,OPTCD=(SEQ)\par VRPLRBA  RPL   ACB=VACBINR,AREA=RECORD+4,OPTCD=(ADR),ARG=RBA\par VRPLXRBA RPL   ACB=VACBINR,AREA=RECORD+4,OPTCD=(ADR,XRBA),ARG=XRBA\par RECORD   DC    0XL304,XL4'00',300C' '\par VREC1    DC    H'104,0',100C'1'\par VREC2    DC    H'204,0',200C'2'\par VREC3    DC    H'304,0',300C'3'\par RBA      DC    XL4'00'\par RBA1     DC    XL4'00'\par RBA2     DC    XL4'00'\par RBA3     DC    XL4'00'\par XRBA     DC    XL8'00'\par XRBA1    DC    XL8'00'\par XRBA2    DC    XL8'00'\par XRBA3    DC    XL8'00'\par VRBA1    DC    AL4(0)   4,100,4  ESDS VAR RECORD FORMAT (LEN,REC,LEN)\par VRBA2    DC    AL4(108) 4,200,4  USED TO SUPPORT READING BACKWARDS\par VRBA3    DC    AL4(316)\par VXRBA1   DC    AL8(0) \par VXRBA2   DC    AL8(108)\par VXRBA3   DC    AL8(316)\par          LTORG\par          EQUREGS\par          RT1   START\par          WTO   'ESV1TEST TEST ESDS VARIABLE LENGTH RECORD I/O'   \par *\par * CREATE QSAM FILE WITH 3 VAR LENGTH RECORDS \par *\par          WTO   'ESV1TEST CREATE QFILE'\par          OPEN  (QDCBOUT,(OUTPUT))\par          PUT   QDCBOUT,VREC1\par          PUT   QDCBOUT,VREC2\par          PUT   QDCBOUT,VREC3\par          CLOSE (QDCBOUT)\par *\par * BUILD VSAM VARIABLE LENGTH ESDS FILE FROM QSAME FILE WITH 3 RECORDS\par *\par          WTO   'ESV1TEST CREATE VFILE'\par          OPEN  (QDCBIN,(INPUT),VACBOUT,(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par LOOP     EQU   *\par          GET   QDCBIN,RECORD\par          LH    R2,RECORD\par          AHI   R2,-4\par          MODCB RPL=VRPLOUTS,RECLEN=(R2)\par          PUT   RPL=VRPLOUTS\par          LTR   R15,R15\par          RT1   CC0\par          B     LOOP\par EOF      CLOSE (QDCBIN,,VACBOUT)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND VERIFY 3 VSAM VARIABLE LENGTH RECORDS AND RBA'S \par * (NOTE RBA'S POINT TO VX0 XRBA'S TO ACTUAL RECORDS IN VES)\par *\par          WTO   'ESV1TEST READ AND VERIFY VFILE SEQUENTIALLY'\par          OPEN  (VACBINS)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=VRPLINS\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD+4(100),=100C'1'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=RBA1,LENGTH=4,FIELDS=(RBA)\par          CLC   RBA1,VRBA1\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=XRBA1,LENGTH=8,FIELDS=(XRBA)\par          CLC   XRBA1,VXRBA1  \par          RT1   CC0\par          GET   RPL=VRPLINS  \par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD+4(200),=200C'2'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=RBA2,LENGTH=4,FIELDS=(RBA)\par          CLC   RBA2,VRBA2\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=XRBA2,LENGTH=8,FIELDS=(XRBA)\par          CLC   XRBA2,VXRBA2 \par          RT1   CC0\par          GET   RPL=VRPLINS\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD+4(200),=200C'3'\par          RT1   CC0\par          CLC   RECORD+204(100),=100C'3'\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=RBA3,LENGTH=4,FIELDS=(RBA)\par          CLC   RBA3,VRBA3\par          RT1   CC0\par          SHOWCB RPL=VRPLINS,AREA=XRBA3,LENGTH=8,FIELDS=(XRBA)\par          CLC   XRBA3,VXRBA3\par          RT1   CC0\par          GET   RPL=VRPLINS\par          CHI   R15,8             VERIFY LOGIC ERROR AT EOD\par          RT1   CC0\par          TESTCB RPL=VRPLINS,FDBK=4 VERIFY EOD REASON CODE \par          RT1   CC0\par          CLOSE (VACBINS)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND VERIFY 3 RECORDS BY RBA AND BY XRBA ADDRESS\par *\par          WTO   'ESV1TEST READ AND VERIFY VFILE BY RBA AND XRBA'\par          OPEN  (VACBINR)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RBA,RBA2\par          GET   RPL=VRPLRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD+4(200),=200C'2'\par          RT1   CC0\par          MVC   RBA,RBA1\par          GET   RPL=VRPLRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD+4(100),=100C'1'\par          RT1   CC0\par          MVC   RBA,RBA3\par          GET   RPL=VRPLRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD+4(200),=200C'3'\par          RT1   CC0\par          CLC   RECORD+204(100),=100C'3'\par          RT1   CC0\par          MVC   XRBA,XRBA2\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD+4(200),=200C'2'\par          RT1   CC0\par          MVC   XRBA,XRBA1\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD+4(100),=100C'1'\par          RT1   CC0\par          MVC   XRBA,XRBA3\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD+4(200),=200C'3'\par          RT1   CC0\par          CLC   RECORD+204(100),=100C'3'\par          RT1   CC0\par          CLOSE (VACBINR)\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\page 9 \plain\f3\fs20\b\cf1 esv2test\par\par This test\par\par 1)\par A) OPENs ESDS variable dataset with ACB MACRF=(SEQ,OUT).\par\par B) Does MODCB to use RPL OPTCD=(SEQ) and AREA=VLR1.\par C) Does MODCB to use RECLEN of 1 (VLR1 contain a single "1").\par D) PUTs record which will be prefixed and suffixed with 4\par byte RECLEN. \par\par E) Does MODCB to use RPL OPTCD=(SEQ) and AREA=VLR10.\par F) Does MODCB to use RECLEN of 10 (VLR10 contains 5 "10").\par G) PUTs record which will be prefixed and suffixed with 4\par byte RECLEN. \par\par H) Does MODCB to use RPL OPTCD=(SEQ) and AREA=VLR100.\par I) Does MODCB to use RECLEN of 100 (VLR100 contains 25 "100 ").\par J) PUTs record which will be prefixed and suffixed with 4\par byte RECLEN. \par\par K) Does MODCB to use RPL OPTCD=(SEQ) and AREA=VLR1000.\par L) Does MODCB to use RECLEN of 1000 (VLR1000 contains 250 "1000").\par M) PUTs record which will be prefixed and suffixed with 4\par byte RECLEN. \par\par N) Does MODCB to use RPL OPTCD=(SEQ) and AREA=VLR10000.\par O) Does MODCB to use RECLEN of 10000 (VLR10000 contains 2000 "10000").\par P) PUTs record which will be prefixed and suffixed with 4\par byte RECLEN. \par\par Q) Does MODCB to use RPL OPTCD=(SEQ) and AREA=VLR100000.\par R) Does MODCB to use RECLEN of 100000 (VLR100000 contains 12500 "100000  ").\par S) PUTs record which will be prefixed and suffixed with 4\par byte RECLEN. \par\par T) CLOSE.\par 2)\par A) OPENs ESDS variable dataset with ACB macrf=(SEQ,IN).\par\par B) GETs a record with RPL OPTCD=(SEQ).\par C) Uses SHOWCB to access the address of AREA.\par D) Uses SHOWCB to access the RECLEN.\par E) Verifies that the AREA for RECLEN length equals VLR1.\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1\par F) GETs a record.\par G) Uses SHOWCB to access the address of AREA.\par H) Uses SHOWCB to access the RECLEN.\par I) Verifies that the AREA for RECLEN length equals VLR10.\par\par J) GETs a record.\par K) Uses SHOWCB to access the address of AREA.\par L) Uses SHOWCB to access the RECLEN.\par M) Verifies that the AREA for RECLEN length equals VLR100.\par\par N) GETs a record.\par O) Uses SHOWCB to access the address of AREA.\par P) Uses SHOWCB to access the RECLEN.\par Q) Verifies that the AREA for RECLEN length equals VLR1000.\par\par R) GETs a record.\par S) Uses SHOWCB to access the address of AREA.\par T) Uses SHOWCB to access the RECLEN.\par U) Verifies that the AREA for RECLEN length equals VLR10000.\par\par V) GETs a record.\par W) Uses SHOWCB to access the address of AREA.\par X) Uses SHOWCB to access the RECLEN.\par Y) Verifies that the AREA for RECLEN length equals VLR100000.\par\par Z) GETs a record.\par ZA) Uses TESTCB to verify that FDBK is equal to 4, i.e. EOF.\par\par ZZ) CLOSE.\par\page The purpose of this test is to create a variable-length ESDS dataset \par with varying length records of 1, 10, 100, 1000, 10000 and 100000 bytes. \par And then to read them sequentially in a forward direction to ensure they \par can be accessed, they are the correct length, they contain the correct data \par and the EOF is found where it should be.\par\par\page\par\par c:\\z390\\rt\\vsam\\test\\save\\esv2test.bat\par\par REM ESV2TEST TEST ESDS VAR LENGTH VSAM FILE SEQ AND RANDOM RBA/XRBA\par REM RUN ESV2TEST TO CREATE AND TEST ESDS WITH 6 VAR RCDS 1-100000\par SET VFILE=vsam\\test\\TESTCAT.ESV2\par erase vsam\\test\\ESV2.VES\par erase vsam\\test\\ESV2.VX0\par CALL ASMLG vsam\\test\\ESV2TEST %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN ESV2TEST\par\par\plain\f3\fs20\cf1 ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\esv2test\par C:\\Z390>REM ESV2TEST TEST ESDS VAR LENGTH VSAM FILE SEQ AND RANDOM RBA/XRBA \par C:\\Z390>REM RUN ESV2TEST TO CREATE AND TEST ESDS WITH 6 VAR RCDS 1-100000 \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.ESV2 \par C:\\Z390>erase vsam\\test\\ESV2.VES \par C:\\Z390>erase vsam\\test\\ESV2.VX0 \par Could Not Find C:\\Z390\\vsam\\test\\ESV2.VX0\par C:\\Z390>CALL ASMLG vsam\\test\\ESV2TEST          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 11:19:09 ESV2TEST  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 11:19:11 ESV2TEST  MZ390 ENDED   RC= 0 SEC= 2 MEM(MB)= 74 IO=13123\par 11:19:11 ESV2TEST  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 11:19:11 ESV2TEST  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  8 IO=14205\par 11:19:12 ESV2TEST  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par ESV2TEST RT1 STARTED\par ESV2TEST RT1 TESTS COMPLETED =     24\par ESV2TEST RT1 ENDED OK\par 11:19:12 ESV2TEST  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=329 INS=313\par C:\\Z390> exit\par *** 11/08/16 11:19:12 CMD task ended TOT SEC=3 TOT LOG IO=23\par\par c:\\z390\\vsam\\test\\esv2.ves\par\par 00000000  00 00 00 01 F1 00 00 00 01 00 00 00 0A F1 F0 F1    ....1.......\loch\f3\hich\f3\u142 ?101\par 00000010  F0 F1 F0 F1 F0 F1 F0 00 00 00 0A 00 00 00 64 F1    0101010...\u142 ?...\'c01\par 00000020  F0 F0 40 F1 F0 F0 40 F1 F0 F0 40 F1 F0 F0 40 F1    00 100 100 100 1\par 00000030  F0 F0 40 F1 F0 F0 40 F1 F0 F0 40 F1 F0 F0 40 F1    00 100 100 100 1\par 00000040  F0 F0 40 F1 F0 F0 40 F1 F0 F0 40 F1 F0 F0 40 F1    00 100 100 100 1\par 00000050  F0 F0 40 F1 F0 F0 40 F1 F0 F0 40 F1 F0 F0 40 F1    00 100 100 100 1\par 00000060  F0 F0 40 F1 F0 F0 40 F1 F0 F0 40 F1 F0 F0 40 F1    00 100 100 100 1\par 00000070  F0 F0 40 F1 F0 F0 40 F1 F0 F0 40 F1 F0 F0 40 F1    00 100 100 100 1\par 00000080  F0 F0 40 00 00 00 64 00 00 03 E8 F1 F0 F0 F0 F1    00 ...\'c0...Y10001\par 00000090  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000000A0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000000B0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000000C0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000000D0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000000E0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000000F0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000100  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000110  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000120  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000130  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000140  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000150  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000160  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000170  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000180  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000190  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000001A0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000001B0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000001C0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000001D0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000001E0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000001F0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000200  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000210  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000220  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000230  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000240  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000250  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000260  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000270  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000280  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000290  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000002A0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000002B0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000002C0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000002D0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000002E0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000002F0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000300  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000310  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000320  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000330  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000340  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000350  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000360  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000370  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000380  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000390  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000003A0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000003B0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000003C0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000003D0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000003E0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 000003F0  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000400  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000410  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000420  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000430  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000440  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000450  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000460  F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1 F0 F0 F0 F1    0001000100010001\par 00000470  F0 F0 F0 00 00 03 E8 00 00 27 10 F1 F0 F0 F0 F0    000...Y....10000\par 00000480  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000490  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000004A0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000004B0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000004C0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000004D0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000004E0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000004F0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000500  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000510  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000520  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000530  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000540  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000550  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000560  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000570  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000580  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000590  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000005A0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000005B0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000005C0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000005D0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000005E0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000005F0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000600  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000610  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000620  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000630  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000640  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000650  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000660  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000670  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000680  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000690  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000006A0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000006B0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000006C0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000006D0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000006E0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000006F0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000700  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000710  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000720  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000730  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000740  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000750  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000760  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000770  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000780  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000790  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000007A0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000007B0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000007C0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000007D0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000007E0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000007F0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000800  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000810  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000820  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000830  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000840  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000850  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000860  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000870  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000880  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000890  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000008A0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000008B0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000008C0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000008D0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000008E0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000008F0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000900  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000910  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000920  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000930  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000940  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000950  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000960  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000970  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000980  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000990  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000009A0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000009B0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000009C0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000009D0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000009E0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000009F0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000A00  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000A10  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000A20  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000A30  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000A40  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000A50  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000A60  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000A70  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000A80  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000A90  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000AA0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000AB0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000AC0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000AD0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000AE0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000AF0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000B00  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000B10  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000B20  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000B30  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000B40  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000B50  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000B60  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000B70  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000B80  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000B90  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000BA0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000BB0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000BC0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000BD0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000BE0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000BF0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000C00  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000C10  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000C20  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000C30  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000C40  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000C50  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000C60  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000C70  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000C80  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000C90  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000CA0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000CB0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000CC0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000CD0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000CE0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000CF0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000D00  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000D10  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000D20  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000D30  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000D40  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000D50  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000D60  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000D70  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000D80  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000D90  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000DA0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000DB0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000DC0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000DD0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000DE0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00000DF0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000E00  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000E10  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000E20  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000E30  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000E40  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000E50  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000E60  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000E70  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000E80  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000E90  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000EA0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000EB0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000EC0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000ED0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000EE0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000EF0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000F00  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000F10  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000F20  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000F30  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000F40  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000F50  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000F60  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000F70  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000F80  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000F90  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000FA0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00000FB0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00000FC0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00000FD0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00000FE0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00000FF0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001000  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001010  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001020  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001030  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001040  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001050  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001060  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001070  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001080  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001090  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000010A0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000010B0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000010C0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000010D0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000010E0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000010F0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001100  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001110  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001120  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001130  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001140  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001150  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001160  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001170  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001180  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001190  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000011A0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000011B0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000011C0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000011D0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000011E0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000011F0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001200  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001210  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001220  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001230  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001240  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001250  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001260  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001270  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001280  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001290  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000012A0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000012B0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000012C0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000012D0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000012E0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000012F0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001300  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001310  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001320  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001330  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001340  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001350  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001360  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001370  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001380  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001390  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000013A0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000013B0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000013C0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000013D0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000013E0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000013F0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001400  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001410  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001420  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001430  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001440  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001450  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001460  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001470  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001480  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001490  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000014A0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000014B0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000014C0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000014D0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000014E0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000014F0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001500  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001510  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001520  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001530  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001540  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001550  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001560  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001570  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001580  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001590  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000015A0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000015B0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000015C0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000015D0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000015E0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000015F0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00001600  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001610  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001620  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001630  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001640  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001650  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001660  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001670  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001680  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001690  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000016A0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000016B0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000016C0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000016D0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000016E0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000016F0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001700  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001710  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001720  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001730  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001740  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001750  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001760  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001770  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001780  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001790  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000017A0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000017B0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000017C0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000017D0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000017E0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000017F0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001800  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001810  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001820  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001830  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001840  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001850  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001860  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001870  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001880  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001890  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000018A0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000018B0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000018C0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000018D0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000018E0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000018F0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001900  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001910  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001920  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001930  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001940  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001950  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001960  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001970  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001980  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001990  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000019A0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000019B0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000019C0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000019D0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000019E0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000019F0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001A00  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001A10  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001A20  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001A30  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001A40  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001A50  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001A60  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001A70  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001A80  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001A90  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001AA0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001AB0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001AC0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001AD0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001AE0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001AF0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001B00  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001B10  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001B20  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001B30  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001B40  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001B50  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001B60  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001B70  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001B80  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001B90  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001BA0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001BB0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001BC0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001BD0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001BE0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001BF0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001C00  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001C10  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001C20  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001C30  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001C40  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001C50  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001C60  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001C70  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001C80  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001C90  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001CA0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001CB0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001CC0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001CD0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001CE0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001CF0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001D00  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001D10  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001D20  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001D30  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001D40  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001D50  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001D60  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001D70  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001D80  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001D90  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001DA0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001DB0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001DC0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001DD0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001DE0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001DF0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001E00  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00001E10  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001E20  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001E30  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001E40  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001E50  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001E60  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001E70  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001E80  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001E90  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001EA0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001EB0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001EC0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001ED0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001EE0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001EF0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001F00  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001F10  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001F20  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001F30  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001F40  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001F50  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001F60  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001F70  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001F80  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001F90  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001FA0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00001FB0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00001FC0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00001FD0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00001FE0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00001FF0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002000  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002010  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002020  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002030  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002040  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002050  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002060  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002070  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002080  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002090  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000020A0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000020B0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000020C0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000020D0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000020E0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000020F0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002100  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002110  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002120  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002130  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002140  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002150  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002160  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002170  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002180  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002190  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000021A0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000021B0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000021C0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000021D0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000021E0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000021F0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002200  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002210  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002220  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002230  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002240  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002250  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002260  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002270  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002280  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002290  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000022A0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000022B0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000022C0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000022D0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000022E0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000022F0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002300  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002310  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002320  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002330  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002340  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002350  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002360  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002370  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002380  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002390  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000023A0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000023B0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000023C0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000023D0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000023E0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000023F0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002400  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002410  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002420  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002430  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002440  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002450  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002460  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002470  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002480  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002490  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000024A0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000024B0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000024C0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000024D0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000024E0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000024F0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002500  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002510  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002520  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002530  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002540  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002550  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002560  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002570  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002580  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002590  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000025A0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000025B0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000025C0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000025D0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000025E0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000025F0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002600  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002610  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00002620  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002630  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002640  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002650  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002660  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002670  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002680  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002690  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000026A0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000026B0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000026C0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000026D0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000026E0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000026F0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002700  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002710  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002720  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002730  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002740  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002750  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002760  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002770  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002780  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002790  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000027A0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000027B0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000027C0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000027D0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000027E0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000027F0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002800  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002810  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002820  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002830  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002840  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002850  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002860  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002870  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002880  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002890  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000028A0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000028B0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000028C0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000028D0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000028E0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000028F0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002900  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002910  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002920  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002930  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002940  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002950  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002960  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002970  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002980  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002990  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000029A0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 000029B0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 000029C0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 000029D0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 000029E0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 000029F0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002A00  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002A10  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002A20  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002A30  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002A40  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002A50  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002A60  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002A70  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002A80  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002A90  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002AA0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002AB0  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002AC0  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002AD0  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002AE0  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002AF0  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002B00  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002B10  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002B20  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002B30  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0    0100001000010000\par 00002B40  F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1    1000010000100001\par 00002B50  F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0    0000100001000010\par 00002B60  F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0    0001000010000100\par 00002B70  F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 F1 F0 F0 F0    0010000100001000\par 00002B80  F0 F1 F0 F0 F0 F0 F1 F0 F0 F0 F0 00 00 27 10 00    01000010000.....\par 00002B90  01 86 A0 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    .f\loch\f3\hich\f3\'b5100000  10000\par 00002BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00002E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00002FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000030A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000030B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000030C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000030D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000030E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000030F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000031A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000031B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000031C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000031D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000031E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000031F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000032A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000032B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000032C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000032D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000032E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000032F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000033A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000033B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000033C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000033D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000033E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000033F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000034A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000034B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000034C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000034D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000034E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000034F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000035A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000035B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000035C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000035D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000035E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000035F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00003640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000036A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000036B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000036C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000036D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000036E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000036F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000037A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000037B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000037C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000037D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000037E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000037F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000038A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000038B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000038C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000038D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000038E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000038F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000039A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000039B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000039C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000039D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000039E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000039F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00003E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00003FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000040A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000040B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000040C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000040D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000040E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000040F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000041A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000041B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000041C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000041D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000041E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000041F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000042A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000042B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000042C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000042D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000042E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000042F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000043A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000043B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000043C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000043D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000043E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000043F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000044A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000044B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000044C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000044D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000044E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000044F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000045A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000045B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000045C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000045D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000045E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000045F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00004660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000046A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000046B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000046C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000046D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000046E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000046F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000047A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000047B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000047C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000047D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000047E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000047F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000048A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000048B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000048C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000048D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000048E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000048F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000049A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000049B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000049C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000049D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000049E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000049F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00004E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00004FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000050A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000050B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000050C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000050D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000050E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000050F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000051A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000051B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000051C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000051D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000051E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000051F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000052A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000052B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000052C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000052D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000052E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000052F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000053A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000053B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000053C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000053D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000053E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000053F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000054A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000054B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000054C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000054D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000054E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000054F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000055A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000055B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000055C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000055D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000055E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000055F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00005680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000056A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000056B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000056C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000056D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000056E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000056F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000057A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000057B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000057C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000057D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000057E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000057F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000058A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000058B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000058C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000058D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000058E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000058F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000059A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000059B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000059C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000059D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000059E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000059F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00005E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00005FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000060A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000060B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000060C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000060D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000060E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000060F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000061A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000061B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000061C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000061D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000061E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000061F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000062A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000062B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000062C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000062D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000062E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000062F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000063A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000063B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000063C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000063D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000063E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000063F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000064A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000064B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000064C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000064D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000064E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000064F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000065A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000065B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000065C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000065D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000065E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000065F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000066A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000066B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000066C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000066D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000066E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000066F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000067A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000067B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000067C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000067D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000067E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000067F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000068A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000068B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000068C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000068D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000068E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000068F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000069A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000069B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000069C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000069D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000069E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000069F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00006EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00006FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000070A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000070B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000070C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000070D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000070E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000070F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000071A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000071B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000071C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000071D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000071E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000071F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000072A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000072B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000072C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000072D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000072E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000072F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000073A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000073B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000073C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000073D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000073E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000073F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000074A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000074B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000074C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000074D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000074E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000074F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000075A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000075B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000075C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000075D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000075E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000075F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000076A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000076B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000076C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000076D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000076E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000076F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000077A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000077B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000077C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000077D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000077E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000077F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000078A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000078B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000078C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000078D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000078E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000078F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000079A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000079B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000079C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000079D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000079E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000079F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00007ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00007FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000080A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000080B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000080C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000080D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000080E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000080F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000081A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000081B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000081C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000081D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000081E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000081F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000082A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000082B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000082C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000082D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000082E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000082F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000083A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000083B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000083C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000083D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000083E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000083F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000084A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000084B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000084C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000084D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000084E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000084F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000085A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000085B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000085C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000085D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000085E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000085F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000086A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000086B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000086C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000086D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000086E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000086F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000087A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000087B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000087C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000087D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000087E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000087F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000088A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000088B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000088C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000088D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000088E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000088F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000089A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000089B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000089C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000089D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000089E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000089F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00008EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00008FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000090A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000090B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000090C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000090D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000090E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000090F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000091A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000091B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000091C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000091D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000091E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000091F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000092A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000092B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000092C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000092D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000092E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000092F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000093A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000093B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000093C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000093D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000093E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000093F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000094A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000094B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000094C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000094D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000094E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000094F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000095A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000095B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000095C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000095D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000095E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000095F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000096A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000096B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000096C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000096D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000096E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000096F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00009700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000097A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000097B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000097C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000097D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000097E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000097F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000098A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000098B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000098C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000098D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000098E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000098F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000099A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000099B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000099C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000099D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000099E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000099F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00009F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00009FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A0A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A0B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A0C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A0D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A0E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A0F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A1A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A1B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A1C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A1D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A1E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A1F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A2A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A2B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A2C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A2D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A2E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A2F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A3A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A3B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A3C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A3D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A3E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A3F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A4A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A4B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A4C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A4D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A4E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A4F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A5A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A5B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A5C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A5D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A5E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A5F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A6A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A6B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A6C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A6D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A6E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A6F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0000A720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A7A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A7B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A7C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A7D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A7E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A7F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A8A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A8B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A8C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A8D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A8E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A8F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A9A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A9B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A9C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A9D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A9E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000A9F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AA00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AA10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AA20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AA30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AA40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AA50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AA60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AA70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AA80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AA90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AAA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AAB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AAC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AAD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AAE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AAF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AB00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AB10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AB20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AB30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AB40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AB50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AB60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AB70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AB80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AB90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ABA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ABB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ABC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ABD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ABE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ABF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AC00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AC10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AC20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AC30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AC40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AC50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AC60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AC70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AC80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AC90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ACA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ACB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ACC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ACD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ACE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ACF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AD00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AD10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AD20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AD30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AD40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AD50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AD60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AD70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AD80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AD90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ADA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ADB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ADC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ADD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ADE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ADF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AE00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AE10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AE20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AE30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AE40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AE50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AE60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AE70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AE80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AE90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AEA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AEB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AEC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AEE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AEF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AF00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AF10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AF20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0000AF30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AF40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AF50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AF60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AF70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AF80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AF90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AFA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AFB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AFC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AFD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AFE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000AFF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B0A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B0B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B0C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B0D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B0E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B0F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B1A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B1B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B1C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B1D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B1E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B1F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B2A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B2B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B2C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B2D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B2E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B2F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B3A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B3B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B3C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B3D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B3E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B3F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B4A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B4B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B4C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B4D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B4E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B4F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B5A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B5B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B5C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B5D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B5E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B5F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B6A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B6B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B6C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B6D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B6E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B6F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0000B740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B7A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B7B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B7C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B7D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B7E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B7F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B8A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B8B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B8C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B8D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B8E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B8F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B9A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B9B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B9C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B9D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B9E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000B9F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BA00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BA10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BA20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BA30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BA40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BA50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BA60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BA70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BA80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BA90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BAA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BAB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BAC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BAD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BAE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BAF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BB00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BB10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BB20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BB30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BB40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BB50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BB60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BB70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BB80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BB90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BBA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BBB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BBC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BBD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BBE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BBF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BC00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BC10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BC20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BC30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BC40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BC50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BC60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BC70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BC80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BC90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BCA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BCB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BCC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BCD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BCE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BCF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BD00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BD10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BD20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BD30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BD40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BD50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BD60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BD70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BD80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BD90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BDA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BDB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BDC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BDD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BDE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BDF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BE00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BE10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BE20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BE30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BE40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BE50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BE60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BE70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BE80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BE90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BEA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BEB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BEC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BEE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BEF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BF00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BF10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BF20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BF30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BF40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0000BF50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BF60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BF70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BF80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BF90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BFA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BFB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BFC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BFD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BFE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000BFF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C0A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C0B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C0C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C0D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C0E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C0F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C1A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C1B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C1C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C1D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C1E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C1F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C2A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C2B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C2C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C2D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C2E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C2F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C3A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C3B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C3C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C3D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C3E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C3F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C4A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C4B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C4C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C4D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C4E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C4F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C5A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C5B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C5C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C5D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C5E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C5F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C6A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C6B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C6C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C6D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C6E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C6F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0000C760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C7A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C7B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C7C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C7D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C7E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C7F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C8A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C8B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C8C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C8D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C8E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C8F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C9A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C9B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C9C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C9D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C9E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000C9F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CA00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CA10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CA20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CA30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CA40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CA50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CA60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CA70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CA80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CA90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CAA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CAB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CAC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CAD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CAE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CAF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CB00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CB10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CB20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CB30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CB40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CB50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CB60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CB70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CB80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CB90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CBA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CBB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CBC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CBD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CBE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CBF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CC00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CC10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CC20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CC30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CC40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CC50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CC60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CC70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CC80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CC90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CCA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CCB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CCC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CCD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CCE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CCF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CD00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CD10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CD20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CD30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CD40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CD50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CD60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CD70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CD80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CD90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CDA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CDB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CDC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CDD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CDE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CDF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CE00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CE10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CE20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CE30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CE40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CE50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CE60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CE70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CE80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CE90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CEA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CEB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CEC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CEE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CEF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CF00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CF10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CF20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CF30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CF40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CF50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CF60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0000CF70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CF80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CF90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CFA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CFB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CFC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CFD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CFE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000CFF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D0A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D0B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D0C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D0D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D0E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D0F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D1A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D1B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D1C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D1D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D1E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D1F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D2A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D2B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D2C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D2D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D2E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D2F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D3A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D3B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D3C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D3D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D3E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D3F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D4A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D4B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D4C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D4D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D4E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D4F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D5A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D5B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D5C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D5D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D5E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D5F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D6A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D6B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D6C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D6D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D6E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D6F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0000D780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D7A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D7B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D7C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D7D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D7E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D7F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D8A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D8B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D8C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D8D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D8E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D8F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D9A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D9B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D9C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D9D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D9E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000D9F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DA00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DA10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DA20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DA30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DA40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DA50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DA60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DA70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DA80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DA90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DAA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DAB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DAC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DAD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DAE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DAF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DB00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DB10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DB20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DB30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DB40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DB50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DB60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DB70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DB80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DB90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DBA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DBB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DBC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DBD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DBE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DBF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DC00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DC10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DC20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DC30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DC40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DC50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DC60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DC70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DC80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DC90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DCA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DCB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DCC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DCD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DCE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DCF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DD00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DD10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DD20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DD30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DD40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DD50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DD60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DD70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DD80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DD90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DDA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DDB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DDC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DDD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DDE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DDF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DE00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DE10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DE20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DE30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DE40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DE50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DE60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DE70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DE80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DE90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DEA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DEB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DEC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DEE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DEF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DF00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DF10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DF20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DF30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DF40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DF50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DF60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DF70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DF80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0000DF90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DFA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DFB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DFC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DFD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DFE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000DFF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E0A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E0B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E0C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E0D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E0E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E0F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E1A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E1B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E1C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E1D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E1E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E1F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E2A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E2B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E2C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E2D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E2E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E2F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E3A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E3B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E3C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E3D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E3E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E3F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E4A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E4B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E4C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E4D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E4E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E4F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E5A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E5B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E5C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E5D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E5E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E5F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E6A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E6B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E6C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E6D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E6E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E6F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0000E7A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E7B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E7C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E7D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E7E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E7F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E8A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E8B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E8C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E8D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E8E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E8F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E9A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E9B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E9C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E9D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E9E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000E9F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EA00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EA10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EA20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EA30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EA40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EA50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EA60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EA70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EA80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EA90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EAA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EAB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EAC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EAD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EAE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EAF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EB00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EB10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EB20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EB30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EB40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EB50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EB60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EB70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EB80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EB90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EBA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EBB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EBC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EBD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EBE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EBF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EC00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EC10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EC20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EC30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EC40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EC50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EC60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EC70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EC80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EC90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ECA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ECB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ECC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ECD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ECE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ECF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ED00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ED10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ED20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ED30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ED40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ED50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ED60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ED70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ED80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000ED90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EDA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EDB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EDC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EDD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EDE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EDF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EE00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EE10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EE20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EE30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EE40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EE50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EE60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EE70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EE80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EE90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EEA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EEB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EEC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EEE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EEF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EF00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EF10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EF20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EF30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EF40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EF50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EF60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EF70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EF80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EF90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EFA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0000EFB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EFC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EFD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EFE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000EFF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F0A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F0B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F0C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F0D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F0E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F0F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F1A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F1B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F1C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F1D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F1E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F1F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F2A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F2B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F2C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F2D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F2E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F2F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F3A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F3B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F3C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F3D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F3E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F3F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F4A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F4B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F4C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F4D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F4E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F4F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F5A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F5B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F5C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F5D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F5E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F5F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F6A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F6B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F6C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F6D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F6E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F6F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F7A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F7B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0000F7C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F7D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F7E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F7F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F8A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F8B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F8C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F8D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F8E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F8F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F9A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F9B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F9C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F9D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F9E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000F9F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FA00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FA10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FA20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FA30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FA40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FA50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FA60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FA70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FA80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FA90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FAA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FAB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FAC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FAD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FAE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FAF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FB00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FB10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FB20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FB30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FB40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FB50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FB60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FB70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FB80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FB90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FBA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FBB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FBC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FBD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FBE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FBF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FC00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FC10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FC20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FC30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FC40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FC50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FC60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FC70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FC80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FC90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FCA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FCB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FCC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FCD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FCE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FCF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FD00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FD10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FD20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FD30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FD40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FD50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FD60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FD70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FD80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FD90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FDA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FDB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FDC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FDD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FDE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FDF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FE00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FE10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FE20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FE30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FE40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FE50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FE60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FE70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FE80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FE90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FEA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FEB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FEC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FEE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FEF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FF00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FF10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FF20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FF30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FF40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FF50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FF60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FF70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FF80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FF90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FFA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FFB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FFC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0000FFD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FFE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0000FFF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000100A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000100B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000100C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000100D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000100E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000100F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000101A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000101B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000101C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000101D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000101E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000101F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000102A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000102B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000102C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000102D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000102E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000102F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000103A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000103B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000103C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000103D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000103E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000103F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000104A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000104B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000104C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000104D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000104E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000104F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000105A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000105B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000105C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000105D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000105E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000105F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000106A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000106B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000106C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000106D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000106E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000106F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000107A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000107B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000107C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000107D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000107E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000107F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000108A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000108B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000108C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000108D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000108E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000108F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000109A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000109B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000109C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000109D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000109E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000109F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00010FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00010FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000110A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000110B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000110C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000110D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000110E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000110F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000111A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000111B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000111C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000111D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000111E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000111F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000112A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000112B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000112C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000112D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000112E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000112F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000113A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000113B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000113C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000113D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000113E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000113F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000114A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000114B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000114C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000114D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000114E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000114F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000115A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000115B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000115C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000115D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000115E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000115F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000116A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000116B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000116C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000116D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000116E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000116F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000117A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000117B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000117C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000117D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000117E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000117F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00011800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000118A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000118B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000118C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000118D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000118E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000118F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000119A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000119B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000119C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000119D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000119E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000119F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00011FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00012010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000120A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000120B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000120C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000120D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000120E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000120F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000121A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000121B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000121C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000121D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000121E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000121F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000122A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000122B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000122C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000122D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000122E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000122F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000123A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000123B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000123C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000123D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000123E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000123F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000124A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000124B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000124C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000124D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000124E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000124F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000125A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000125B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000125C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000125D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000125E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000125F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000126A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000126B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000126C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000126D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000126E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000126F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000127A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000127B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000127C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000127D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000127E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000127F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00012820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000128A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000128B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000128C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000128D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000128E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000128F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000129A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000129B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000129C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000129D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000129E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000129F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00012FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00013030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000130A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000130B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000130C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000130D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000130E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000130F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000131A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000131B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000131C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000131D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000131E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000131F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000132A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000132B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000132C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000132D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000132E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000132F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000133A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000133B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000133C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000133D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000133E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000133F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000134A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000134B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000134C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000134D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000134E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000134F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000135A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000135B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000135C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000135D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000135E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000135F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000136A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000136B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000136C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000136D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000136E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000136F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000137A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000137B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000137C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000137D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000137E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000137F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00013840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000138A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000138B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000138C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000138D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000138E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000138F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000139A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000139B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000139C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000139D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000139E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000139F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00013FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00014050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000140A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000140B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000140C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000140D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000140E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000140F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000141A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000141B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000141C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000141D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000141E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000141F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000142A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000142B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000142C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000142D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000142E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000142F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000143A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000143B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000143C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000143D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000143E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000143F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000144A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000144B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000144C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000144D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000144E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000144F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000145A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000145B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000145C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000145D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000145E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000145F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000146A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000146B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000146C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000146D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000146E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000146F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000147A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000147B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000147C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000147D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000147E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000147F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00014860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000148A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000148B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000148C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000148D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000148E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000148F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000149A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000149B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000149C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000149D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000149E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000149F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00014FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00015070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000150A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000150B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000150C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000150D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000150E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000150F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000151A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000151B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000151C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000151D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000151E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000151F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000152A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000152B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000152C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000152D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000152E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000152F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000153A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000153B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000153C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000153D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000153E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000153F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000154A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000154B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000154C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000154D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000154E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000154F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000155A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000155B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000155C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000155D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000155E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000155F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000156A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000156B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000156C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000156D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000156E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000156F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000157A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000157B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000157C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000157D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000157E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000157F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00015880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000158A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000158B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000158C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000158D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000158E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000158F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000159A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000159B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000159C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000159D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000159E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000159F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00015FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00016090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000160A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000160B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000160C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000160D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000160E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000160F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000161A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000161B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000161C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000161D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000161E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000161F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000162A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000162B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000162C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000162D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000162E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000162F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000163A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000163B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000163C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000163D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000163E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000163F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000164A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000164B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000164C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000164D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000164E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000164F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000165A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000165B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000165C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000165D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000165E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000165F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000166A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000166B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000166C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000166D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000166E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000166F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000167A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000167B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000167C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000167D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000167E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000167F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000168A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000168B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000168C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000168D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000168E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000168F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000169A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000169B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000169C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000169D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000169E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000169F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00016FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000170A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000170B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000170C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000170D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000170E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000170F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000171A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000171B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000171C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000171D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000171E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000171F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000172A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000172B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000172C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000172D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000172E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000172F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000173A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000173B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000173C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000173D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000173E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000173F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000174A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000174B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000174C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000174D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000174E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000174F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000175A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000175B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000175C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000175D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000175E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000175F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000176A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000176B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000176C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000176D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000176E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000176F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000177A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000177B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000177C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000177D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000177E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000177F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000178A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000178B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000178C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000178D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000178E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000178F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000179A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000179B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000179C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000179D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000179E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000179F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00017FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000180A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000180B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000180C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000180D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000180E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000180F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000181A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000181B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000181C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000181D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000181E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000181F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000182A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000182B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000182C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000182D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000182E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000182F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000183A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000183B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000183C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000183D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000183E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000183F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000184A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000184B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000184C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000184D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000184E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000184F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000185A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000185B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000185C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000185D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000185E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000185F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000186A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000186B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000186C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000186D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000186E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000186F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000187A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000187B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000187C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000187D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000187E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000187F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000188A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000188B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000188C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000188D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000188E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000188F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000189A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000189B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000189C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000189D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000189E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000189F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00018FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000190A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000190B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000190C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000190D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000190E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000190F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000191A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000191B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000191C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000191D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000191E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000191F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000192A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000192B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000192C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000192D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000192E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000192F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000193A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000193B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000193C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000193D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000193E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000193F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000194A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000194B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000194C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000194D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000194E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000194F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000195A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000195B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000195C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000195D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000195E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000195F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000196A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000196B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000196C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000196D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000196E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000196F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000197A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000197B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000197C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000197D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000197E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000197F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000198A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000198B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000198C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000198D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000198E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000198F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00019900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000199A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000199B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000199C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000199D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000199E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 000199F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019A00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019A10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019A20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019A30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019A40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019A50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019A60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019A70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019A80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019A90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019AA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019AB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019AC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019AD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019AE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019AF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019B00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019B10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019B20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019B30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019B40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019B50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019B60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019B70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019B80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019B90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019BA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019BB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019BC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019BD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019BE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019BF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019C00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019C10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019C20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019C30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019C40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019C50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019C60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019C70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019C80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019C90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019CA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019CB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019CC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019CD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019CE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019CF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019D00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019D10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019D20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019D30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019D40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019D50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019D60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019D70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019D80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019D90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019DA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019DB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019DC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019DD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019DE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019DF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019E00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019E10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019E20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019E30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019E40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019E50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019E60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019E70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019E80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019E90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019EA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019EB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019EC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019ED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019EE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019EF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019F00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019F10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019F20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019F30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019F40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019F50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019F60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019F70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019F80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019F90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019FA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019FB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019FC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019FD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019FE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 00019FF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A0A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A0B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A0C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A0D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A0E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A0F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0001A110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A1A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A1B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A1C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A1D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A1E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A1F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A230  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A240  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A250  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A260  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A270  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A280  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A290  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A2A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A2B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A2C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A2D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A2E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A2F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A300  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A310  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A320  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A330  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A340  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A350  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A360  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A370  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A380  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A390  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A3A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A3B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A3C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A3D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A3E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A3F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A400  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A410  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A420  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A430  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A440  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A450  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A460  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A470  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A480  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A490  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A4A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A4B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A4C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A4D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A4E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A4F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A500  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A510  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A520  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A530  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A540  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A550  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A560  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A570  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A580  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A590  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A5A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A5B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A5C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A5D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A5E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A5F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A600  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A610  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A620  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A630  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A640  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A650  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A660  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A670  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A680  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A690  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A6A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A6B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A6C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A6D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A6E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A6F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A700  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A710  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A720  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A730  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A740  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A750  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A760  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A770  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A780  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A790  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A7A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A7B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A7C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A7D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A7E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A7F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A800  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A810  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A820  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A830  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A840  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A850  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A860  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A870  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A880  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A890  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A8A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A8B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A8C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A8D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A8E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A8F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A900  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A910  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0001A920  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A930  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A940  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A950  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A960  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A970  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A980  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A990  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A9A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A9B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A9C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A9D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A9E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001A9F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AA00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AA10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AA20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AA30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AA40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AA50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AA60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AA70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AA80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AA90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AAA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AAB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AAC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AAD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AAE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AAF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AB00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AB10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AB20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AB30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AB40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AB50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AB60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AB70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AB80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AB90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ABA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ABB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ABC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ABD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ABE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ABF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AC00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AC10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AC20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AC30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AC40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AC50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AC60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AC70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AC80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AC90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ACA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ACB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ACC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ACD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ACE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ACF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AD00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AD10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AD20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AD30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AD40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AD50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AD60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AD70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AD80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AD90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ADA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ADB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ADC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ADD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ADE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001ADF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AE00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AE10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AE20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AE30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AE40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AE50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AE60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AE70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AE80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AE90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AEA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AEB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AEC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AED0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AEE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AEF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AF00  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AF10  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AF20  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AF30  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AF40  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AF50  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AF60  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AF70  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AF80  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AF90  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AFA0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AFB0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AFC0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AFD0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AFE0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001AFF0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B000  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B010  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B020  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B030  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B040  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B050  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B060  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B070  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B080  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B090  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B0A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B0B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B0C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B0D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B0E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B0F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B100  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B110  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B120  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 0001B130  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B140  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B150  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B160  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B170  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B180  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B190  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B1A0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B1B0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B1C0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B1D0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B1E0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B1F0  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B200  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B210  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B220  F0 40 40 F1 F0 F0 F0 F0 F0 40 40 F1 F0 F0 F0 F0    0  100000  10000\par 0001B230  F0 40 40 00 01 86 A0                               0  ..f\loch\f3\hich\f3\'b5   \par\par c:\\z390\\vsam\\test\\esv2test.mlc\par\par  *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 04/23/07                                                 *\par *********************************************************************\par * 08/10/07 CODE VSAM DEMO TO LOAD 6 VAR. RCDS FROM 1 TO 100,000\par * 08/19/07 RPI 680 REMOVE OUT FROM RPL OPTCD LIST                \par * 08/31/07 RPI 688 CONVERT TO RT1 TEST CREATE AND VERIFY ESDS VAR\par *********************************************************************\par ESV2TEST RT1   MAIN                                                \par OUTFILE  ACB   DDNAME=VFILE,MACRF=(SEQ,OUT)\par ESPUT    RPL   ACB=OUTFILE,OPTCD=(SEQ)\par INFILE   ACB   DDNAME=VFILE,MACRF=(SEQ,IN)\par ESGET    RPL   ACB=INFILE,AREA=RECORD,OPTCD=(SEQ)\par AREC     DS    F\par LREC     DS    F\par          LTORG\par          EQUREGS\par          DC    0D,C'RECORD='\par RECORD   DS    XL100000\par          DC    0D,C'VLR1='\par VLR1     DC    C'1'\par          DC    0D,C'VLR10='\par VLR10    DC    5C'10'\par          DC    0D,C'VLR100='\par VLR100   DC    25C'100 '\par          DC    0D,C'VLR1000='\par VLR1000  DC    250C'1000'\par          DC    0D,C'VLR10000='\par VLR10000 DC    2000C'10000'\par          DC    0D,C'VLR100000='\par VLR100000 DC   12500C'100000  '\par          RT1   START\par *\par * CREATE ESDS VAR RCD FILE WITH 6 RECORDS FROM 1 TO 100,000 LONG\par *\par          OPEN  (OUTFILE,(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par          MODCB RPL=ESPUT,AREA=VLR1\par          MODCB RPL=ESPUT,RECLEN=1\par          PUT   RPL=ESPUT\par          LTR   R15,R15\par          RT1   CC0\par          MODCB RPL=ESPUT,AREA=VLR10\par          MODCB RPL=ESPUT,RECLEN=10\par          PUT   RPL=ESPUT\par          LTR   R15,R15\par          RT1   CC0\par          MODCB RPL=ESPUT,AREA=VLR100\par          MODCB RPL=ESPUT,RECLEN=100\par          PUT   RPL=ESPUT\par          LTR   R15,R15\par          RT1   CC0\par          MODCB RPL=ESPUT,AREA=VLR1000\par          MODCB RPL=ESPUT,RECLEN=1000\par          PUT   RPL=ESPUT\par          LTR   R15,R15\par          RT1   CC0\par          MODCB RPL=ESPUT,AREA=VLR10000\par          MODCB RPL=ESPUT,RECLEN=10000\par          PUT   RPL=ESPUT\par          LTR   R15,R15\par          RT1   CC0\par          MODCB RPL=ESPUT,AREA=VLR100000\par          MODCB RPL=ESPUT,RECLEN=100000\par          PUT   RPL=ESPUT\par          LTR   R15,R15\par          RT1   CC0\par          CLOSE (OUTFILE)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND VERIFY 6 VAR RECORDS FROM 1  TO 100,000\par *\par          OPEN  (INFILE,(INPUT))\par          LTR   R15,R15\par          RT1   CC0\par LOOP     EQU   *\par          GET   RPL=ESGET\par          LTR   R15,R15\par          RT1   CC0\par          SHOWCB RPL=ESGET,AREA=AREC,LENGTH=4,FIELDS=(AREA)\par          SHOWCB RPL=ESGET,AREA=LREC,LENGTH=4,FIELDS=(RECLEN)\par          L     R0,AREC\par          L     R1,LREC\par          L     R2,=A(VLR1)\par          LR    R3,R1\par          CLCL  R0,R2\par          RT1   CC0\par          GET   RPL=ESGET\par          LTR   R15,R15\par          RT1   CC0\par          SHOWCB RPL=ESGET,AREA=AREC,LENGTH=4,FIELDS=(AREA)\par          SHOWCB RPL=ESGET,AREA=LREC,LENGTH=4,FIELDS=(RECLEN)\par          L     R0,AREC\par          L     R1,LREC\par          L     R2,=A(VLR10)\par          LR    R3,R1\par          CLCL  R0,R2\par          RT1   CC0\par          GET   RPL=ESGET\par          LTR   R15,R15\par          RT1   CC0\par          SHOWCB RPL=ESGET,AREA=AREC,LENGTH=4,FIELDS=(AREA)\par          SHOWCB RPL=ESGET,AREA=LREC,LENGTH=4,FIELDS=(RECLEN)\par          L     R0,AREC\par          L     R1,LREC\par          L     R2,=A(VLR100)\par          LR    R3,R1\par          CLCL  R0,R2\par          RT1   CC0\par          GET   RPL=ESGET\par          LTR   R15,R15\par          RT1   CC0\par          SHOWCB RPL=ESGET,AREA=AREC,LENGTH=4,FIELDS=(AREA)\par          SHOWCB RPL=ESGET,AREA=LREC,LENGTH=4,FIELDS=(RECLEN)\par          L     R0,AREC\par          L     R1,LREC\par          L     R2,=A(VLR1000)\par          LR    R3,R1\par          CLCL  R0,R2\par          RT1   CC0\par          GET   RPL=ESGET\par          LTR   R15,R15\par          RT1   CC0\par          SHOWCB RPL=ESGET,AREA=AREC,LENGTH=4,FIELDS=(AREA)\par          SHOWCB RPL=ESGET,AREA=LREC,LENGTH=4,FIELDS=(RECLEN)\par          L     R0,AREC\par          L     R1,LREC\par          L     R2,=A(VLR10000)\par          LR    R3,R1\par          CLCL  R0,R2\par          RT1   CC0\par          GET   RPL=ESGET\par          LTR   R15,R15\par          RT1   CC0\par          SHOWCB RPL=ESGET,AREA=AREC,LENGTH=4,FIELDS=(AREA)\par          SHOWCB RPL=ESGET,AREA=LREC,LENGTH=4,FIELDS=(RECLEN)\par          L     R0,AREC\par          L     R1,LREC\par          L     R2,=A(VLR100000)\par          LR    R3,R1\par          CLCL  R0,R2\par          RT1   CC0\par          GET   RPL=ESGET\par          CHI   R15,8  IS THIS LOGICALL ERROR\par          RT1   CC0\par          TESTCB RPL=ESGET,FDBK=4 EOD REASON CODE\par          RT1   CC0\par          CLOSE (INFILE)\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par      \par\page 10 \plain\f3\fs20\b\cf1 esv3test\par\par This test is effectively a repeat of the esf2test except that instead\par of 3 80 byte fixed-length records, it uses a 100, a 200 and a 300 byte\par variable-length record with 1s, 2s and 3s.\par\par The purpose of the test is parallel.\par\page\par c:\\z390\\rt\\vsam\\test\\save\\esv3test.bat\par\par REM ESF3TEST TEST ESDS VAR LENGTH VSAM FILE SEQ AND RANDOM RBA/XRBA\par REM RUN ESV3TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS\par SET VFILE=vsam\\test\\TESTCAT.ESV3\par erase vsam\\test\\ESV3.VES\par CALL ASMLG vsam\\test\\ESV3TEST %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN ESV3TEST\par\par\plain\f3\fs20\cf1 ran and produced\par\par\plain\f3\fs20\b\cf1 C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\esv3test\par C:\\Z390>REM ESF3TEST TEST ESDS VAR LENGTH VSAM FILE SEQ AND RANDOM RBA/XRBA \par C:\\Z390>REM RUN ESV3TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.ESV3 \par C:\\Z390>erase vsam\\test\\ESV3.VES \par C:\\Z390>CALL ASMLG vsam\\test\\ESV3TEST          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 11:26:58 ESV3TEST  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 11:26:59 ESV3TEST  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 69 IO=6876\par 11:26:59 ESV3TEST  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 11:26:59 ESV3TEST  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=562\par 11:26:59 ESV3TEST  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par ESV3TEST RT1 STARTED\par ESV3TEST TEST ESDS FIXED LENGTH RECORD I/O\par ESV3TEST CREATE VFILE WITH 3 RECORDS\par ESV3TEST UPDATE SEQUENTIALLY\par ESV3TEST READ AND VERIFY VFILE SEQUENTIALLY\par ESV3TEST READ AND VERIFY VFILE BY RBA AND XRBA\par ESV3TEST VERIFY SEQ, XRBA, AND XRBA CHANGES\par ESV3TEST RT1 TESTS COMPLETED =     50\par ESV3TEST RT1 ENDED OK\par 11:26:59 ESV3TEST  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=329 INS=507\par C:\\Z390> exit\par *** 11/08/16 11:26:59 CMD task ended TOT SEC=2 TOT LOG IO=27\par c:\\z390\\vsam\\test\\esv3.ves\par\par 00000000  00 00 00 64 E4 F1 D9 E7 F1 F1 F1 F1 F1 F1 F1 F1    ...\loch\f3\hich\f3\'c0U1RX11111111\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000050  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000060  F1 F1 F1 F1 F1 F1 F1 F1 00 00 00 64 00 00 00 C8    11111111...\'c0...H\par 00000070  E4 F2 D9 E7 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    U2RX222222222222\par 00000080  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000090  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000A0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000B0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000C0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000D0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000E0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000F0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000100  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000110  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000120  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000130  F2 F2 F2 F2 F2 F2 F2 F2 00 00 00 C8 00 00 01 2C    22222222...H...\u140 ?\par 00000140  E4 F3 D9 E7 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    U3RX333333333333\par 00000150  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000160  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000170  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000180  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1 00000190  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001A0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001B0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001C0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001D0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001E0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001F0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000200  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000210  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000220  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000230  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000240  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000250  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000260  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 00 00 01 2C    333333333333...\loch\f3\hich\f3\u140 ?\par\par c:\\z390\\vsam\\test\\esv3test.mlc\par\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 04/23/07                                                 *\par *********************************************************************\par * 09/11/07 RPI 672 INITIAL CODE FOR VAR ESDS SEQ,UPD AND ADR,UPD       \par *********************************************************************\par ESV3TEST RT1   MAIN \par VACBSEQI ACB   DDNAME=VFILE,MACRF=(SEQ,IN)\par VACBSEQO ACB   DDNAME=VFILE,MACRF=(SEQ,OUT)\par VACBADRO ACB   DDNAME=VFILE,MACRF=(ADR,DIR,OUT)\par VRPLSEQI RPL   ACB=VACBSEQI,AREA=RECORD,OPTCD=(SEQ)\par VRPLSEQO RPL   ACB=VACBSEQO,AREA=RECORD,OPTCD=(SEQ)\par VRPLSEQU RPL   ACB=VACBSEQO,AREA=RECORD,OPTCD=(SEQ,UPD)\par VRPLRBA  RPL   ACB=VACBADRO,AREA=RECORD,OPTCD=(ADR,UPD),ARG=RBA    \par VRPLXRBA RPL   ACB=VACBADRO,AREA=RECORD,OPTCD=(ADR,XRBA,UPD),ARG=XRBA\par RECORD   DC    0XL304,XL4'00',300C' '\par VREC1    DC    H'104,0',100C'1'\par VREC2    DC    H'204,0',200C'2'\par VREC3    DC    H'304,0',300C'3'\par RBA      DC    XL4'00'\par XRBA     DC    XL8'00'\par RBA1    DC    AL4(0)   4,100,4  ESDS VAR RECORD FORMAT (LEN,REC,LXN)\par RBA2    DC    AL4(108) 4,200,4  USED TO SUPPORT READING BACKWARDS\par RBA3    DC    AL4(316)\par XRBA1   DC    AL8(0) \par XRBA2   DC    AL8(108)\par XRBA3   DC    AL8(316)\par RC_LOG   EQU   8      RPL FEEDBACK LOGICAL ERROR RETURN CODE (BYTE 2)\par RN_EOD   EQU   4      RPL FEEDBACK LOGICAL END OF DATA REASON(BYTE 4)\par FDBK     DC    X'00'  RPL FEEDBACK REASON CODE FOR LOG/PHY ERROR\par          LTORG\par          EQUREGS\par          RT1   START\par          WTO   'ESV3TEST TEST ESDS FIXED LENGTH RECORD I/O'   \par *\par * CREATE ESDS FILE WITH 3 VAR LENGTH RECORDS \par *\par          WTO   'ESV3TEST CREATE VFILE WITH 3 RECORDS'\par          OPEN  (VACBSEQO,(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD(100),VREC1+4   \par          MODCB RPL=VRPLSEQO,RECLEN==F'100'\par          PUT   RPL=VRPLSEQO\par          LTR   R15,R15\par          RT1   CC0\par          SHOWCB RPL=VRPLSEQO,AREA=XRBA1,LENGTH=8,FIELDS=XRBA\par          MVC   RBA1,XRBA1+4\par          MVC   RECORD(200),VREC2+4  \par          MODCB RPL=VRPLSEQO,RECLEN==F'200'\par          PUT   RPL=VRPLSEQO\par          LTR   R15,R15\par          RT1   CC0\par          SHOWCB RPL=VRPLSEQO,AREA=XRBA2,LENGTH=8,FIELDS=XRBA\par          MVC   RBA2,XRBA2+4\par          MVC   RECORD(200),VREC3+4  \par          MVC   RECORD+200(100),VREC3+4+200  \par          MODCB RPL=VRPLSEQO,RECLEN==F'300'\par          PUT   RPL=VRPLSEQO\par          LTR   R15,R15\par          RT1   CC0\par          SHOWCB RPL=VRPLSEQO,AREA=XRBA3,LENGTH=8,FIELDS=XRBA\par          MVC   RBA3,XRBA3+4\par          CLOSE (VACBSEQO)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ SEQUENTIALL AND CHANGE FRIST BYTE IN EACH RECORD TO U\par *\par          WTO   'ESV3TEST UPDATE SEQUENTIALLY'\par          OPEN  (VACBSEQO,(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par LOOP     EQU   *\par          BALR  R11,0\par          USING *,R11\par          GET   RPL=VRPLSEQU,RECORD\par          LTR   R15,R15\par          BNE   EOF\par          MVI   RECORD,C'U'\par          PUT   RPL=VRPLSEQU\par          LTR   R15,R15\par          RT1   CC0\par          B     LOOP\par EOF      EQU   *\par          BALR  R11,0\par          USING *,R11\par          CHI   R15,RC_LOG\par          RT1   CC0\par          SHOWCB RPL=VRPLSEQU,AREA=FDBK,LENGTH=1,FIELDS=(FDBK)\par          CLI   FDBK,RN_EOD\par          RT1   CC0\par          CLOSE (VACBSEQO)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND UPDATE 3 VSAM FIXED LENGTH RECORDS SEQUENTIALLY\par *\par          WTO   'ESV3TEST READ AND VERIFY VFILE SEQUENTIALLY'\par          OPEN  (VACBSEQI,(INPUT))\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=VRPLSEQI\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD(2),=C'U1'\par          RT1   CC0\par          GET   RPL=VRPLSEQI  \par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD(2),=C'U2'\par          RT1   CC0\par          GET   RPL=VRPLSEQI\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD(2),=C'U3'\par          RT1   CC0\par          GET   RPL=VRPLSEQI\par          CHI   R15,8             VERIFY LOGIC ERROR AT EOD\par          RT1   CC0\par          TESTCB RPL=VRPLSEQI,FDBK=4 VERIFY EOD REASON CODE \par          RT1   CC0\par          CLOSE (VACBSEQI)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND UPDATE 3 RECORDS BY XRBA AND BY XRBA ADDRESS\par *\par          WTO   'ESV3TEST READ AND VERIFY VFILE BY RBA AND XRBA'\par          OPEN  (VACBADRO,(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par          MVC   XRBA,XRBA1\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD(2),=C'U1'\par          RT1   CC0\par          MVI   RECORD+2,C'R'\par          PUT   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          MVC   XRBA,XRBA2\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD(2),=C'U2'\par          RT1   CC0\par          MVI   RECORD+2,C'R'\par          PUT   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          MVC   XRBA,XRBA3\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD(2),=C'U3'\par          RT1   CC0\par          MVI   RECORD+2,C'R'\par          PUT   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          MVC   XRBA,XRBA1\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD(3),=C'U1R'\par          RT1   CC0\par          MVI   RECORD+3,C'X'\par          PUT   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          MVC   XRBA,XRBA2\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD(3),=C'U2R'\par          RT1   CC0\par          MVI   RECORD+3,C'X'\par          PUT   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          MVC   XRBA,XRBA3\par          GET   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD(3),=C'U3R'\par          RT1   CC0\par          MVI   RECORD+3,C'X'\par          PUT   RPL=VRPLXRBA\par          LTR   R15,R15\par          RT1   CC0\par          CLOSE (VACBADRO)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ SEQUENTIALL AND VERIFY SEQ,XRBA, AND VXXRBA CHANGES       \par *\par          WTO   'ESV3TEST VERIFY SEQ, XRBA, AND XRBA CHANGES'\par          OPEN  (VACBSEQI,(INPUT))\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=VRPLSEQI\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD(4),=C'U1RX'\par          RT1   CC0\par          GET   RPL=VRPLSEQI\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD(4),=C'U2RX'\par          RT1   CC0\par          GET   RPL=VRPLSEQI\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD(4),=C'U3RX'\par          RT1   CC0\par          CLOSE (VACBSEQI)\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\page 11 esv4test\par\par This test is effectively a repeat of esf3test with 3 variable-length\par records instead of 3 fixed-lengtth records.\par\par The purpose of the test is parallel.\page\par c:\\z390\\rt\\vsam\\test\\save\\esv4test.bat\par\par REM ESV4TEST TEST ESDS VAR LEN CREATE AND READ BACKWARDS 3 RCDS\par REM RUN ESV4TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS\par SET VFILE=vsam\\test\\TESTCAT.ESV4\par erase vsam\\test\\ESV4.VES\par CALL ASMLG vsam\\test\\ESV4TEST %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN ESV4TEST\par\par ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\esv4test\par C:\\Z390>REM ESV4TEST TEST ESDS VAR LEN CREATE AND READ BACKWARDS 3 RCDS \par C:\\Z390>REM RUN ESV4TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.ESV4 \par C:\\Z390>erase vsam\\test\\ESV4.VES \par C:\\Z390>CALL ASMLG vsam\\test\\ESV4TEST          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 11:32:50 ESV4TEST  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 11:32:50 ESV4TEST  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 69 IO=5781\par 11:32:50 ESV4TEST  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par 11:32:50 ESV4TEST  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=418\par 11:32:51 ESV4TEST  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/08/16\par ESV4TEST RT1 STARTED\par ESV4TEST TEST SEQ CREATE AND READ BACKWARDS\par ESV4TEST CREATE VFILE\par ESV4TEST READ AND VERIFY VFILE BACKWARDS\par ESV4TEST RT1 TESTS COMPLETED =     20\par ESV4TEST RT1 ENDED OK\par 11:32:51 ESV4TEST  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=310 INS=203\par C:\\Z390> exit\par *** 11/08/16 11:32:51 CMD task ended TOT SEC=2 TOT LOG IO=24\par\par\par\plain\f3\fs20\cf1\par\plain\f3\fs20\b\cf1 c:\\z390\\vsam\\test\\esv4.ves\par\par\par 00000000  00 00 00 64 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    ...\loch\f3\hich\f3\'c0111111111111\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000050  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1 00000060  F1 F1 F1 F1 F1 F1 F1 F1 00 00 00 64 00 00 00 C8    11111111...\loch\f3\hich\f3\'c0...H\par 00000070  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000080  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000090  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000A0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000B0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000C0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000D0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000E0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 000000F0  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000100  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000110  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000120  F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2 F2    2222222222222222\par 00000130  F2 F2 F2 F2 F2 F2 F2 F2 00 00 00 C8 00 00 01 2C    22222222...H...\u140 ?\par 00000140  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000150  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000160  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000170  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000180  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000190  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001A0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001B0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001C0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001D0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001E0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000001F0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000200  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000210  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000220  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000230  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000240  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000250  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000260  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 00 00 01 2C    333333333333...\u140 ?\par\par c:\\z390\\vsam\\test\\esv4test.mlc\par\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 04/23/07                                                 *\par *********************************************************************\par * 09/14/07 RPI 672 CODE TEST FOR LRD,BWD SEQ,BWD BACKWARD ACCESS      \par * 09/25/07 RPI 702 USE POINT LRD AND GET,BWD,LRD FOR SAME RPL         \par *********************************************************************\par ESV4TEST RT1   MAIN \par VACBOUT  ACB   DDNAME=VFILE,MACRF=(SEQ,OUT)\par VACBIN   ACB   DDNAME=VFILE,MACRF=(SEQ,IN)\par VRPLOUTS RPL   ACB=VACBOUT,AREA=RECORD,OPTCD=(SEQ)\par VRPLINSB RPL   ACB=VACBIN,AREA=RECORD,OPTCD=(SEQ,BWD,LRD)\par RECORD   DC    CL300' '\par          LTORG\par          EQUREGS\par          RT1   START\par          WTO   'ESV4TEST TEST SEQ CREATE AND READ BACKWARDS'  \par *\par * BUILD VSAM FIXED LENGTH FILE FROM QSAME FILE WITH 3 RECORDS\par *\par          WTO   'ESV4TEST CREATE VFILE'\par          OPEN  (VACBOUT,(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD(100),=100C'1'\par          MODCB RPL=VRPLOUTS,RECLEN=100\par          PUT   RPL=VRPLOUTS\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD(200),=200C'2'\par          MODCB RPL=VRPLOUTS,RECLEN=200\par          PUT   RPL=VRPLOUTS\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD(200),=200C'3'\par          MVC   RECORD+200(100),=100C'3'\par          MODCB RPL=VRPLOUTS,RECLEN=300\par          PUT   RPL=VRPLOUTS\par          LTR   R15,R15\par          RT1   CC0\par          CLOSE (VACBOUT)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND VERIFY 3 VSAM RECORDS BACKWARD                    \par *\par          WTO   'ESV4TEST READ AND VERIFY VFILE BACKWARDS'\par          OPEN  (VACBIN)\par          LTR   R15,R15\par          RT1   CC0\par          POINT RPL=VRPLINSB\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=VRPLINSB\par          LTR   R15,R15\par          RT1   CC0\par          TESTCB RPL=VRPLINSB,RECLEN=300\par          RT1   CC0\par          CLC   RECORD(200),=200C'3'\par          RT1   CC0\par          CLC   RECORD+200(100),=100C'3'\par          RT1   CC0\par          GET   RPL=VRPLINSB  \par          LTR   R15,R15\par          RT1   CC0\par          TESTCB RPL=VRPLINSB,RECLEN=200\par          RT1   CC0\par          CLC   RECORD(200),=200C'2'\par          RT1   CC0\par          GET   RPL=VRPLINSB  \par          LTR   R15,R15\par          RT1   CC0\par          TESTCB RPL=VRPLINSB,RECLEN=100\par          RT1   CC0\par          CLC   RECORD(100),=100C'1'\par          RT1   CC0\par          GET   RPL=VRPLINSB  \par          CHI   R15,8\par          RT1   CC0\par          TESTCB RPL=VRPLINSB,FDBK=4 VERIFY LOGICAL EOD AT FRONT\par          RT1   CC0\par          CLOSE (VACBIN)\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\par\page 12 ksf1test\par\par This test\par\par 1)\par A) OPENs KSDS dataset with ACB MACRF=(KEY,IN).\par\par B) GETs a KSDS record for KEY of RM with RPL OPTCD=(KEY), and verifies get ok.\par\par C) GETs a KSDS record for KEY of MW, and verifies get ok.\par\par D) GETs a KSDS record for KEY of MM, and verifies get ok.\par\par E) GETs a KSDS record for KEY of MT, and verifies get ok.\par\par F) GETs a KSDS record for KEY of DSH, and verifies get ok.\par\par G) GETs a KSDS record for KEY of AK, and verifies get ok.\par\par 2)\par A) Uses MODCB to change RPL OPTCD=(SEQ).\par\par B) POINTs at KEY of DSH, and verifies point ok.\par\par C) GETs KSDS record, and verifies get ok, and it's for DSH.\par\par D) POINTs at KEY of AK, and verifies point ok.\par\par E) GETs KSDS record, and verifies get ok, and it's for AK.\par\par 3)\par A) Uses MODCB to change RPL OPTCD=(SEQ,KGE).\par\par B) POINTs at KEY of Ds, and verifies point ok.\par\par C) GETs KSDS record, and verifies get ok, and it's for DSH.\par\page D) POINTs at KEY of X'00's, and verifies point ok.\par\par E) GETs KSDS record, and verifies get ok, and it's for AK.\par\par 4)\par A) Uses MODCB to change RPL OPTCD=(SEQ,BWD).\par\par B) POINTs at KEY of MM, and verifies point ok.\par\par C) GETs KSDS record, and verifies get ok, and it's for DSH.\par\par D) GETs KSDS record, and verifies get ok, and it's for AK.\par\par E) POINTs at KEY of X'FF's, and verifies point ok.\par\par F) GETs KSDS record, and verifies get ok, and it's for RM.\par\par G) GETs KSDS record, and verifies get ok, and it's for MW.\par\page 5)\par A) Uses MODCB to change RPL OPTCD=(SEQ,KGE) and KEYLEN=1.\par\par B) POINTs at KEY of D, and verifies point ok.\par\par C) GETs KSDS record, and verifies get ok, and it's for DSH.\par\par D) POINTs at KEY of X'00's and verifies point ok.\par\par C) GETs KSDS record, and verifies get ok, and it's for AK.\par\par 6)\par A) Uses MODCB to change RPL OPTCD=(GEN,KGE) and KEYLEN=1.\par\par B) POINTs at KEY of D, and verifies point ok.\par\par C) GETs KSDS record, and verifies get ok, and it's for DSH.\par\par D) POINTs at KEY of X'00' and verifies point ok.\par\par C) GETs KSDS record, and verifies get ok, and it's for AK.\par\par 7)\par A) Uses MODCB to change RPL OPTCD=(GEN) and KEYLEN=1.\par\par B) POINTs at KEY of D, and verifies point ok.\par\par C) GETs KSDS record, and verifies get ok, and it's for DSH.\par\par D) POINTs at KEY of A and verifies point ok.\par\par C) GETs KSDS record, and verifies get ok, and it's for AK.\par\par 8) CLOSE.\par\page The purpose of the test is to ensure that KSDS records can be accessed\par directly via their KEYs. That the records can be accessed SEQuentially\par in a forward direction. That they can be accessed directly via a KEY\par with KGE. That they can be accessed SEQuentially backwards starting at \par a particular KEY. That they can be accessed directly via a KEY\par with KGE and with a KEYLEN shorter than the full key-length.\par That they can be accessed directly via a GEN with a KEYLEN shorter than \par the full key-length.\page\par c:\\z390\\rt\\vsam\\test\\save\\ksf1test.bat\par\par\plain\f3\fs20\cf1 REM READ KSDS KSF1NAME CLUSTER BY KEY AND DISPLAY RECORDS\par SET VFILE=vsam\\test\\TESTCAT.KSF1NAME\par CALL ASMLG vsam\\test\\KSF1TEST %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN READ KSF1NAME RECS BY KEY\par\par ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\ksf1test\par C:\\Z390>REM READ KSDS KSF1NAME CLUSTER BY KEY AND DISPLAY RECORDS \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.KSF1NAME \par C:\\Z390>CALL ASMLG vsam\\test\\KSF1TEST      \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 09:20:31 KSF1TEST  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/10/16\par 09:20:33 KSF1TEST  MZ390 ENDED   RC= 0 SEC= 1 MEM(MB)= 69 IO=5520\par 09:20:33 KSF1TEST  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/10/16\par 09:20:33 KSF1TEST  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=353\par 09:20:33 KSF1TEST  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/10/16\par KSF1TEST QUERY KSF1NAME BY PRIMARY NAME KEY\par REC=RM                  USA                 SAN FRANCISCO       CA   95661\par REC=MW                  UK                  LONDON              LE   UK1\par REC=MM                  UK                  LONDON              LE   UK2\par REC=MT                  GERMANY             BERLIN              BG   GY1\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF1TEST POINT AND SEQ READ\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF1TEST POINT AND SEQ READ WITH KGE\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF1TEST POINT AND SEQ READ BACKWARD WITH KEQ\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF1TEST POINT TO EOF VIA HIGH KEY SEQ READ BACKWARD\par REC=RM                  USA                 SAN FRANCISCO       CA   95661\par REC=MW                  UK                  LONDON              LE   UK1\par KSF1TEST POINT AND SEQ READ WITH KGE GENERIC KEYS\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF1TEST KEY ACCESS WITH GENERIC KEY AND KGE\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF1TEST KEY ACCESS WITH GENERIC KEYS AND KEQ\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF1TEST ENDED OK\par 09:20:33 KSF1TEST  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=331 INS=331\par C:\\Z390> exit\par *** 11/10/16 09:20:33 CMD task ended TOT SEC=2 TOT LOG IO=45\par\par c:\\z390\\vsam\\test\\ksf1test.mlc\par\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 12/05/07                                                 *\par *********************************************************************\par * 12/05/07 RPI 750 COPY FROM KSF1TEST AND ADD POINT, KGE, GENERIC TESTS                  \par * 01/08/08 RPI 779 TEST SEQ BWD FROM POINT WITH KGE DSH2 (READ DSH,AK)                                     \par * 04/23/09 RPI 1025 CLEAR RPL OPTIONS FOR REUSE                           \par *********************************************************************\par KSF1TEST SUBENTRY   \par *\par * OPEN AND READ RECORDS BY NAME KEY RANDOMLY         \par *\par          WTO   'KSF1TEST QUERY KSF1NAME BY PRIMARY NAME KEY'\par          OPEN  (VFILE,(INPUT))\par          LTR   R15,R15\par          BNZ   ERR1\par          MVC   KEY,=CL20'RM'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          MVC   KEY,=CL20'MW'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          USING RECDSECT,RECORD\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'MM'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'MT'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'DSH'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'AK'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par *\par * CHANGE TO SKIP SEQ WITH POINT TO SPECIFIC KEYS\par *\par          WTO   'KSF1TEST POINT AND SEQ READ'\par          MVHHI VRPL+RPLOPT1-IHARPL,0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=VRPL,OPTCD=(SEQ)\par          LTR   R15,R15\par          BNZ   ERR5\par          MVC   KEY,=CL20'DSH'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'AK'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par *\par * CHANGE TO SKIP SEQ WITH POINT USING KGE FULL KEYS\par *\par          WTO   'KSF1TEST POINT AND SEQ READ WITH KGE'\par          MVHHI VRPL+RPLOPT1-IHARPL,0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=VRPL,OPTCD=(SEQ,KGE)\par          LTR   R15,R15\par          BNZ   ERR5\par          MVC   KEY,=CL20'D'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH'\par          BNE   ERR4   \par          MVC   KEY,=XL20'00'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'AK'\par          BNE   ERR4   \par *\par * CHANGE TO SKIP SEQ BACKWARD WITH POINT USING KEQ FULL KEYS\par *\par          WTO   'KSF1TEST POINT AND SEQ READ BACKWARD WITH KEQ'\par          MVHHI VRPL+RPLOPT1-IHARPL,0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=VRPL,OPTCD=(SEQ,BWD)\par          LTR   R15,R15\par          BNZ   ERR5\par          MVC   KEY,=CL20'MM'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH'\par          BNE   ERR4   \par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'AK'\par          BNE   ERR4   \par *\par * POINT TO EOF VIA HIGH VALUES KEY AND READ BACKWARDS\par *\par          WTO   'KSF1TEST POINT TO EOF VIA HIGH KEY SEQ READ BACKWARD'\par          MVC   KEY,=20X'FF'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'RM'\par          BNE   ERR4   \par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'MW'\par          BNE   ERR4   \par *\par * CHANGE TO SKIP SEQ WITH POINT USING KGE GENERIC KEYS\par *\par          WTO   'KSF1TEST POINT AND SEQ READ WITH KGE GENERIC KEYS'\par          MVHHI VRPL+RPLOPT1-IHARPL,0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=VRPL,OPTCD=(SEQ,KGE),KEYLEN=1\par          LTR   R15,R15\par          BNZ   ERR5\par          MVC   KEY,=20X'FF'\par          MVI   KEY,C'D'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH'\par          BNE   ERR4   \par          MVI   KEY,X'00'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'AK'\par          BNE   ERR4   \par *\par * CHANGE TO KEY ACCESS WITH GEN,KGE\par *\par          WTO   'KSF1TEST KEY ACCESS WITH GENERIC KEY AND KGE'\par          MVHHI VRPL+RPLOPT1-IHARPL,0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=VRPL,OPTCD=(GEN,KGE),KEYLEN=1\par          LTR   R15,R15\par          BNZ   ERR5\par          MVC   KEY,=20X'FF'\par          MVI   KEY,C'D'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH'\par          BNE   ERR4   \par          MVI   KEY,X'00'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'AK'\par          BNE   ERR4   \par *\par * CHANGE TO KEY ACCESS WITH GENERIC KEY AND KEQ\par *\par          WTO   'KSF1TEST KEY ACCESS WITH GENERIC KEYS AND KEQ'\par          MVHHI VRPL+RPLOPT1-IHARPL,0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=VRPL,OPTCD=(GEN),KEYLEN=1\par          LTR   R15,R15\par          BNZ   ERR5\par          MVC   KEY,=20X'FF'\par          MVI   KEY,C'D'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH'\par          BNE   ERR4   \par          MVI   KEY,C'A'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'AK'\par          BNE   ERR4   \par *\par * CLOSE AND EXIT\par *\par DSHX     EQU   *\par          CLOSE (VFILE)\par          LTR   R15,R15\par          BNZ   ERR3\par          WTO   'KSF1TEST ENDED OK'\par          SUBEXIT\par ERR1     WTO   'KSF1TEST OPEN ERROR'\par          ABEND 111,DUMP\par ERR2     WTO   'KSF1TEST GET BY KEY ERROR'\par          ABEND 222,DUMP\par ERR3     WTO   'KSF1TEST CLOSE ERROR'\par          ABEND 333,DUMP\par ERR4     WTO   'KSF1TEST NAME NOT EQUAL KEY REQUESTED'\par          ABEND 444,DUMP\par ERR5     WTO   'KSF1TEST MODCB ERROR'\par          ABEND 555,DUMP\par ERR6     WTO   'KSF1TEST POINT ERROR'\par          ABEND 666,DUMP\par ERR7     WTO   'KSF1TEST GET SEQ ERROR'\par          ABEND 777,DUMP\par VFILE    ACB   DDNAME=VFILE,MACRF=(KEY,IN)\par VRPL     RPL   ACB=VFILE,AREA=RECORD,OPTCD=(KEY),ARG=KEY\par          LTORG\par          EQUREGS\par WTOREC   DC    AL2(WTOEND-*,0),C'REC='\par RECORD   DC    CL70' '\par WTOEND   EQU   *\par KEY      DC    CL20' '\par RECDSECT DSECT\par NAME     DS    CL20\par ADDR     DS    CL20\par CITY     DS    CL20\par STATE    DS    CL5\par ZIP      DS    CL5\par          END\par\page 13 \plain\f3\fs20\b\cf1 ksf2tst1\par\par This test\par\par 1)\par A) OPENs KSDS dataset with ACB MACRF=(KEY,OUT).\par\par B) GETs a KSDS record for KEY of DSH2 with RPL OPTCD=(KEY,UPD), \par and verifies get ok.\par\par C) Moves values to the record's fields.\par\par D) PUTs the changed record, and verifies put ok.\par\par E) GETs KSDS record for KEY of MW, and verifies get ok,\par and correct record got.\par\par F) GETs KSDS record for KEY of DSH2, and verifies get ok,\par and correct record got.\par\par G) GETs KSDS record for KEY of MT, and verifies get ok,\par and correct record got.\par\par H) GETs KSDS record for KEY of DSH, and verifies get ok,\par and correct record got.\par\par I) GETs KSDS record for KEY of AK, and verifies get ok,\par and correct record got.\par\par J) GETs KSDS record for KEY of DSH1, and verifies get NOT ok.\par\par K) Populates the fields.\par\par L) PUTs the changed record, and verifies put ok.\par\par M) GETs KSDS record for KEY of DSH3, and verifies get NOT ok.\par\par N) Populates the fields.\par\par O) PUTs the changed record, and verifies put ok.\par\par P) GETs KSDS record for KEY of DSH1, and verifies get ok,\par and correct record got.\par\par Q) GETs KSDS record for KEY of DSH3, and verifies get ok,\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1 and correct record got.\par\par R) CLOSE.\par\par\par\par\page The purpose of this test is to change the contents of an existing\par KSDS record and to ensure that various KSDS records can be accessed \par via their keys, including the one changed. It creates 2 new KSDS\par records (inserts them to KSIT/KSIR) and then ensures that these new \par records can be accessed by key.\par\par\par\par\page c:\\z390\\rt\\vsam\\test\\save\\ksf2tst1.bat\par\par REM INSERT DSH1 BY KEY AND DISPLAY RECORDS\par SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT]\par SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL EXEC REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN LOAD KSF2NAME\par SET VFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL ASMLG vsam\\test\\KSF2TST1 %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN KSF2TST1 INSERT AND GET BY KEY\par\par changed to \par\par REM INSERT DSH1 BY KEY AND DISPLAY RECORDS\par SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT]\par SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL EXEC linklib\\REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN LOAD KSF2NAME\par SET VFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL ASMLG vsam\\test\\KSF2TST1 %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN KSF2TST1 INSERT AND GET BY KEY\par\par ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\ksf2tst1\par C:\\Z390>REM INSERT DSH1 BY KEY AND DISPLAY RECORDS \par C:\\Z390>SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT] \par C:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME \par C:\\Z390>CALL EXEC linklib\\REPRO      \par C:\\Z390>echo off \par 09:29:23 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/10/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO LOADING VSAM FROM QSAM INFILE\par REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD\par REPRO RECFM=FT LRECL =      70\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC60 DCBOFLGS=30 DSN=c:\\z390\\vsam\\test\\KSF2NAME.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCC8 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\KSF2NAME.VX0\par  TIOT  DDNAME=INFILE   DCB=000FFAA8 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\demo\\KSF1NAME.TF1\par  REPRO TOTAL RECORDS =       6\par REPRO ENDED OK\par 09:29:24 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=334 INS=448\par 09:29:24 KSF2TST1  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/10/16\par 09:29:24 KSF2TST1  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 68 IO=4464\par 09:29:24 KSF2TST1  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/10/16\par 09:29:25 KSF2TST1  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=245\par 09:29:25 KSF2TST1  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/10/16\par KSF2TEST UPDATE WITH DSH2\par REC=DSH2                29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=MW                  UK                  LONDON              LE   UK1\par REC=DSH2                29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=MT                  GERMANY             BERLIN              BG   GY1\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF2TEST ENDED OK\par 09:29:25 KSF2TST1  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=310 INS=93\par C:\\Z390> exit\par *** 11/10/16 09:29:25 CMD task ended TOT SEC=2 TOT LOG IO=36\par\par C:\\Z390\\vsam\\demo\\KSF1NAME.TF1\par\par AK                  HOLLAND             AMPSTERDAM          HL   HD1\par DSH                 USA                 TAMPA BAY           FL   33782\par MM                  UK                  LONDON              LE   UK2\par MT                  GERMANY             BERLIN              BG   GY1\par MW                  UK                  LONDON              LE   UK1\par RM                  USA                 SAN FRANCISCO       CA   95661\par\par c:\\z390\\vsam\\test\\KSF2NAME.VES\par\par 00000000  C1 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    AK              \par 00000010  40 40 40 40 C8 D6 D3 D3 C1 D5 C4 40 40 40 40 40        HOLLAND     \par 00000020  40 40 40 40 40 40 40 40 C1 D4 D7 E2 E3 C5 D9 C4            AMPSTERD\par 00000030  C1 D4 40 40 40 40 40 40 40 40 40 40 C8 D3 40 40    AM          HL  \par 00000040  40 C8 C4 F1 40 40 C4 E2 C8 40 40 40 40 40 40 40     HD1  DSH       \par 00000050  40 40 40 40 40 40 40 40 40 40 E4 E2 C1 40 40 40              USA   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 E3 C1                  TA\par 00000070  D4 D7 C1 40 C2 C1 E8 40 40 40 40 40 40 40 40 40    MPA BAY         \par 00000080  40 40 C6 D3 40 40 40 F3 F3 F7 F8 F2 D4 D4 40 40      FL   33782MM  \par 00000090  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 000000A0  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    UK              \par 000000B0  40 40 40 40 D3 D6 D5 C4 D6 D5 40 40 40 40 40 40        LONDON      \par 000000C0  40 40 40 40 40 40 40 40 D3 C5 40 40 40 E4 D2 F2            LE   UK2\par 000000D0  40 40 D4 E3 40 40 40 40 40 40 40 40 40 40 40 40      MT            \par 000000E0  40 40 40 40 40 40 C7 C5 D9 D4 C1 D5 E8 40 40 40          GERMANY   \par 000000F0  40 40 40 40 40 40 40 40 40 40 C2 C5 D9 D3 C9 D5              BERLIN\par 00000100  40 40 40 40 40 40 40 40 40 40 40 40 40 40 C2 C7                  BG\par 00000110  40 40 40 C7 E8 F1 40 40 D4 E6 40 40 40 40 40 40       GY1  MW      \par 00000120  40 40 40 40 40 40 40 40 40 40 40 40 E4 D2 40 40                UK  \par 00000130  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000140  D3 D6 D5 C4 D6 D5 40 40 40 40 40 40 40 40 40 40    LONDON          \par 00000150  40 40 40 40 D3 C5 40 40 40 E4 D2 F1 40 40 D9 D4        LE   UK1  RM\par 00000160  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000170  40 40 E4 E2 C1 40 40 40 40 40 40 40 40 40 40 40      USA           \par 00000180  40 40 40 40 40 40 E2 C1 D5 40 C6 D9 C1 D5 C3 C9          SAN FRANCI\par 00000190  E2 C3 D6 40 40 40 40 40 40 40 C3 C1 40 40 40 F9    SCO       CA   9\par 000001A0  F5 F6 F6 F1 D2 E2 C9 E3 00 00 00 00 00 00 01 F6    5661\plain\f3\fs20\b\i\ul\cf1 KSIT\plain\f3\fs20\b\cf1 .......6\par 000001B0  00 00 00 00 00 00 01 C0 00 00 00 00 00 00 01 F6    .......\{.......6\par 000001C0  D2 E2 C9 D9 00 00 00 00 00 00 01 F6 FF FF FF FF    \plain\f3\fs20\b\i\ul\cf1 KSIR\plain\f3\fs20\b\cf1 .......6\loch\f3\hich\f3\u159 ?\u159 ?\u159 ?\u159 ?\par 000001D0  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 000001E0  FF FF FF FF 00 00 00 00 00 00 01 F6 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?.......6....\par 000001F0  00 00 00 46 00 00 D2 E2 C9 D9 00 00 00 00 00 00    ...\'e3..\plain\f3\fs20\b\i\ul\cf1 KSIR\plain\f3\fs20\b\cf1 ......\par 00000200  01 A4 00 00 00 00 00 00 01 C0 FF FF FF FF FF FF    .u.......\{\loch\f3\hich\f3\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000210  FF FF 00 00 00 00 00 00 01 C0 FF FF FF FF FF FF    \u159 ?\u159 ?.......\{\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000220  FF FF 00 00 00 00 00 00 02 2C 01 00 C4 E2 C8 F2    \u159 ?\u159 ?.......\u140 ?..DSH2\par 00000230  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000240  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000250  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000260  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000270  F4 F5                                              45 \par\page              \par C:\\Z390\\VSAM\\TEST\\KSF2NAME.VX0\par\par 00000000  00 00 00 00 00 00 00 00 C1 D2 40 40 40 40 40 40    ........AK      \par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 80 00 00 00                \'d8...\par 00000020  00 00 01 A4 C4 E2 C8 40 40 40 40 40 40 40 40 40    ...uDSH         \par 00000030  40 40 40 40 40 40 40 40 00 00 00 00 00 00 00 8C            .......\'f0\par 00000040  D4 D4 40 40 40 40 40 40 40 40 40 40 40 40 40 40    MM              \par 00000050  40 40 40 40 00 00 00 00 00 00 00 D2 D4 E3 40 40        .......KMT  \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  00 00 00 00 00 00 01 18 D4 E6 40 40 40 40 40 40    ........MW      \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00                ....\par 00000090  00 00 01 5E D9 D4 40 40 40 40 40 40 40 40 40 40    ...;RM          \par 000000A0  40 40 40 40 40 40 40 40                                            \par\par C:\\Z390\\VSAM\\TEST\\KSF2TST1.MLC\par\par *********************************************************************\par * Copyright 2008 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 02/01/08                                                 *\par *********************************************************************\par * 02/01/08 RPI 723 TEST KSDS UPDATE WITH INSERTS                                                           \par *********************************************************************\par KSF2TEST SUBENTRY   \par          WTO   'KSF2TEST UPDATE WITH DSH2'\par          OPEN  (VFILE,(UPDATE))\par          LTR   R15,R15\par          BNZ   ERR1\par *\par * INSERT DSH2 AFTER DSH          \par *\par          MVC   KEY,=CL20'DSH2'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BZ    ERR2     ERROR IF FOUND\par          USING RECDSECT,RECORD\par          MVC   NAME,=CL20'DSH2'\par          MVC   ADDR,=CL20'29 VILLA AVE'\par          MVC   CITY,=CL20'CHARLOTTETOWN'\par          MVC   STATE,=CL5'PEI'\par          MVC   ZIP,=CL5'12345'\par          PUT   RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR3\par *\par * RETRIEVE OTHER RECORDS AND THEN DSH2 BY KEY\par *\par          WTO   MF=(E,WTOREC)\par          MVC   KEY,=CL20'MW'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'DSH2'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'MT'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'DSH'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'AK'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par DSHX1    B     DSHX\par *\par * UPDATE BY INSERTING DSH1 BETWEEN DSH AND DSH1 IN TREE          \par *\par          MVC   KEY,=CL20'DSH1'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BZ    ERR2     ERROR IF FOUND\par          USING RECDSECT,RECORD\par          MVC   NAME,=CL20'DSH1'\par          MVC   ADDR,=CL20'6365 32 AVE'\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1          MVC   CITY,=CL20'ST. PETE'\par          MVC   STATE,=CL5'FL'\par          MVC   ZIP,=CL5'12345'\par          PUT   RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR3\par          WTO   MF=(E,WTOREC)\par *\par * UPDATE BY INSERTING DSH3 AFTER DSH2 IN TREE          \par *\par          MVC   KEY,=CL20'DSH3'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BZ    ERR2     ERROR IF FOUND\par          USING RECDSECT,RECORD\par          MVC   NAME,=CL20'DSH3'\par          MVC   ADDR,=CL20'4120 71 AVE'\par          MVC   CITY,=CL20'PINELLAS PARK'\par          MVC   STATE,=CL5'FL'\par          MVC   ZIP,=CL5'12345'\par          PUT   RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR3\par          WTO   MF=(E,WTOREC)\par *\par * RETRIVE DSH1 DSH3 BY KEY\par *\par          MVC   KEY,=CL20'DSH1'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'DSH3'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par *\par * CLOSE AND EXIT\par *\par DSHX     EQU   *\par          CLOSE (VFILE)\par          LTR   R15,R15\par          BNZ   ERR3\par          WTO   'KSF2TEST ENDED OK'\par          SUBEXIT\par ERR1     WTO   'KSF2TEST OPEN ERROR'\par          ABEND 111,DUMP\par ERR2     WTO   'KSF2TEST GET BY KEY ERROR'\par          ABEND 222,DUMP\par ERR3     WTO   'KSF2TEST CLOSE ERROR'\par          ABEND 333,DUMP\par ERR4     WTO   'KSF2TEST NAME NOT EQUAL KEY REQUESTED'\par          ABEND 444,DUMP\par ERR5     WTO   'KSF2TEST MODCB ERROR'\par          ABEND 555,DUMP\par ERR6     WTO   'KSF2TEST POINT ERROR'\par          ABEND 666,DUMP\par ERR7     WTO   'KSF2TEST GET SEQ ERROR'\par          ABEND 777,DUMP\par ERR8     WTO   'KSF2TEST PUT UPD ERROR'\par          ABEND 888,DUMP\par VFILE    ACB   DDNAME=VFILE,MACRF=(KEY,OUT)\par VRPL     RPL   ACB=VFILE,AREA=RECORD,OPTCD=(KEY,UPD),ARG=KEY\par          LTORG\par          EQUREGS\par WTOREC   DC    AL2(WTOEND-*,0),C'REC='\par RECORD   DC    CL70' '\par WTOEND   EQU   *\par KEY      DC    CL20' '\par RECDSECT DSECT\par NAME     DS    CL20\par ADDR     DS    CL20\par CITY     DS    CL20\par STATE    DS    CL5\par ZIP      DS    CL5\par          END\par\par\par\par\plain\f3\fs20\cf1\par\plain\f3\fs20\b\cf1\page 14 ksf2tst2 \par\par This test\par\par 1)\par A) OPENs KSDS dataset with ACB MACRF=(KEY,OUT).\par\par B) GETs a KSDS record for KEY of DSH2 with RPL OPTCD=(KEY,UPD), \par and verifies get NOT ok.\par\par C) Moves values to the record's fields.\par\par D) PUTs the changed record, and verifies put ok.\par\par E) GETs KSDS record for KEY of DSH1, and verifies get NOT ok.\par\par F) Moves values to the record's fields.\par\par G) PUTs the changed record, and verifies put ok.\par\par H) GETs KSDS record for KEY of DSH3, and verifies get NOT ok.\par\par I) Moves values to the record's fields.\par\par J) PUTs the changed record, and verifies put ok.\par\par K) GETs KSDS record for KEY of DSH1, and verifies get ok,\par and correct record got.\par\par L) GETs KSDS record for KEY of DSH3, and verifies get ok,\par and correct record got.\par\par M) GETs KSDS record for KEY of DSH2, and verifies get ok,\par and correct record got.\par\par N) CLOSE.\par\par\page The purpose of this test is to insert new records into the KSDS dataset\par and then to get them by key.\page\par C:\\z390\\rt\\vsam\\test\\save\\ksf2tst2.bat\par\par REM INSERT DSH1,DSH2,DSH3 AND RTRIEVE BY KEY\par SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT]\par SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL EXEC REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN LOAD KSF2NAME\par SET VFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL ASMLG vsam\\test\\KSF2TST2 %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN KSF2TST2 INSERT 3 AND GET 3 BY KEY\par\par changed to\par\par REM INSERT DSH1,DSH2,DSH3 AND RTRIEVE BY KEY\par SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT]\par SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL EXEC linklib\\REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN LOAD KSF2NAME\par SET VFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL ASMLG vsam\\test\\KSF2TST2 %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN KSF2TST2 INSERT 3 AND GET 3 BY KEY\par\par ran and produced\par\par C:\\Z390>C:\\z390\\rt\\vsam\\test\\save\\ksf2tst2\par C:\\Z390>REM INSERT DSH1,DSH2,DSH3 AND RTRIEVE BY KEY \par C:\\Z390>SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT] \par C:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME \par C:\\Z390>CALL EXEC linklib\\REPRO      \par C:\\Z390>echo off \par 09:56:40 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/10/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO LOADING VSAM FROM QSAM INFILE\par REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD\par REPRO RECFM=FT LRECL =      70\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC60 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\KSF2NAME.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCC8 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\KSF2NAME.VX0\par  TIOT  DDNAME=INFILE   DCB=000FFAA8 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\demo\\KSF1NAME.TF1\par  REPRO TOTAL RECORDS =       6\par REPRO ENDED OK\par 09:56:40 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=334 INS=448\par 09:56:40 KSF2TST2  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/10/16\par 09:56:41 KSF2TST2  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 68 IO=4318\par 09:56:41 KSF2TST2  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/10/16\par 09:56:41 KSF2TST2  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=215\par 09:56:41 KSF2TST2  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/10/16\par KSF2TST2 UPDATE WITH DSH2\par REC=DSH1                6365 32 AVE         ST. PETE            FL   12345\par REC=DSH3                4120 71 AVE         PINELLAS PARK       FL   12345\par REC=DSH1                6365 32 AVE         ST. PETE            FL   12345\par REC=DSH3                4120 71 AVE         PINELLAS PARK       FL   12345\par REC=DSH2                29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par KSF2TST2 ENDED OK\par 09:56:41 KSF2TST2  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=309 INS=106\par C:\\Z390> exit\par *** 11/10/16 09:56:41 CMD task ended TOT SEC=2 TOT LOG IO=35\par\par C:\\Z390\\vsam\\test\\KSF2NAME.VES\par\par 00000000  C1 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    AK              \par 00000010  40 40 40 40 C8 D6 D3 D3 C1 D5 C4 40 40 40 40 40        HOLLAND     \par 00000020  40 40 40 40 40 40 40 40 C1 D4 D7 E2 E3 C5 D9 C4            AMPSTERD\par 00000030  C1 D4 40 40 40 40 40 40 40 40 40 40 C8 D3 40 40    AM          HL  \par 00000040  40 C8 C4 F1 40 40 C4 E2 C8 40 40 40 40 40 40 40     HD1  DSH       \par 00000050  40 40 40 40 40 40 40 40 40 40 E4 E2 C1 40 40 40              USA   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 E3 C1                  TA\par 00000070  D4 D7 C1 40 C2 C1 E8 40 40 40 40 40 40 40 40 40    MPA BAY         \par 00000080  40 40 C6 D3 40 40 40 F3 F3 F7 F8 F2 D4 D4 40 40      FL   33782MM  \par 00000090  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 000000A0  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    UK              \par 000000B0  40 40 40 40 D3 D6 D5 C4 D6 D5 40 40 40 40 40 40        LONDON      \par 000000C0  40 40 40 40 40 40 40 40 D3 C5 40 40 40 E4 D2 F2            LE   UK2\par 000000D0  40 40 D4 E3 40 40 40 40 40 40 40 40 40 40 40 40      MT            \par 000000E0  40 40 40 40 40 40 C7 C5 D9 D4 C1 D5 E8 40 40 40          GERMANY   \par 000000F0  40 40 40 40 40 40 40 40 40 40 C2 C5 D9 D3 C9 D5              BERLIN\par 00000100  40 40 40 40 40 40 40 40 40 40 40 40 40 40 C2 C7                  BG\par 00000110  40 40 40 C7 E8 F1 40 40 D4 E6 40 40 40 40 40 40       GY1  MW      \par 00000120  40 40 40 40 40 40 40 40 40 40 40 40 E4 D2 40 40                UK  \par 00000130  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000140  D3 D6 D5 C4 D6 D5 40 40 40 40 40 40 40 40 40 40    LONDON          \par 00000150  40 40 40 40 D3 C5 40 40 40 E4 D2 F1 40 40 D9 D4        LE   UK1  RM\par 00000160  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000170  40 40 E4 E2 C1 40 40 40 40 40 40 40 40 40 40 40      USA           \par 00000180  40 40 40 40 40 40 E2 C1 D5 40 C6 D9 C1 D5 C3 C9          SAN FRANCI\par 00000190  E2 C3 D6 40 40 40 40 40 40 40 C3 C1 40 40 40 F9    SCO       CA   9\par 000001A0  F5 F6 F6 F1 D2 E2 C9 E3 00 00 00 00 00 00 02 72    5661KSIT.......\loch\f3\hich\f3\'ca\par 000001B0  00 00 00 00 00 00 01 C0 00 00 00 00 00 00 02 EE    .......\{.......\'d3\par 000001C0  D2 E2 C9 D9 00 00 00 00 00 00 02 72 FF FF FF FF    KSIR.......\'ca\u159 ?\u159 ?\u159 ?\u159 ?\par 000001D0  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 000001E0  FF FF FF FF 00 00 00 00 00 00 02 72 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?.......\'ca....\par 000001F0  00 00 00 46 00 00 D2 E2 C9 D9 00 00 00 00 00 00    ...\'e3..KSIR......\par 00000200  02 72 FF FF FF FF FF FF FF FF 00 00 00 00 00 00    .\'ca\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\par 00000210  02 EE 00 00 00 00 00 00 02 72 00 00 00 00 00 00    .\'d3.......\'ca......\par 00000220  02 EE 00 00 00 00 00 00 02 2C 00 01 C4 E2 C8 F2    .\'d3.......\u140 ?..DSH2\par 00000230  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000240  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000250  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000260  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000270  F4 F5 D2 E2 C9 D9 00 00 00 00 00 00 01 A4 00 00    45KSIR.......u..\par 00000280  00 00 00 00 01 C0 00 00 00 00 00 00 01 F6 00 00    .....\{.......6..\par 00000290  00 00 00 00 01 C0 00 00 00 00 00 00 01 F6 00 00    .....\{.......6..\par 000002A0  00 00 00 00 02 A8 01 02 C4 E2 C8 F1 40 40 40 40    .....y..DSH1    \par 000002B0  40 40 40 40 40 40 40 40 40 40 40 40 F6 F3 F6 F5                6365\par 000002C0  40 F3 F2 40 C1 E5 C5 40 40 40 40 40 40 40 40 40     32 AVE         \par 000002D0  E2 E3 4B 40 D7 C5 E3 C5 40 40 40 40 40 40 40 40    ST. PETE        \par 000002E0  40 40 40 40 C6 D3 40 40 40 F1 F2 F3 F4 F5 D2 E2        FL   12345KS\par 000002F0  C9 D9 00 00 00 00 00 00 01 F6 FF FF FF FF FF FF    IR.......6\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000300  FF FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\par 00000310  01 F6 FF FF FF FF FF FF FF FF 00 00 00 00 00 00    .6\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\par 00000320  03 24 00 00 C4 E2 C8 F3 40 40 40 40 40 40 40 40    .\u132 ?..DSH3        \par 00000330  40 40 40 40 40 40 40 40 F4 F1 F2 F0 40 F7 F1 40            4120 71 \par 00000340  C1 E5 C5 40 40 40 40 40 40 40 40 40 D7 C9 D5 C5    AVE         PINE\par 00000350  D3 D3 C1 E2 40 D7 C1 D9 D2 40 40 40 40 40 40 40    LLAS PARK       \par 00000360  C6 D3 40 40 40 F1 F2 F3 F4 F5                      FL   12345      \par\par c:\\z390\\vsam\\test\\KSF2NAME.VX0\par\par 00000000  00 00 00 00 00 00 00 00 C1 D2 40 40 40 40 40 40    ........AK      \par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1 00000010  40 40 40 40 40 40 40 40 40 40 40 40 80 00 00 00                \loch\f3\hich\f3\'d8...\par 00000020  00 00 01 A4 C4 E2 C8 40 40 40 40 40 40 40 40 40    ...uDSH         \par 00000030  40 40 40 40 40 40 40 40 00 00 00 00 00 00 00 8C            .......\'f0\par 00000040  D4 D4 40 40 40 40 40 40 40 40 40 40 40 40 40 40    MM              \par 00000050  40 40 40 40 00 00 00 00 00 00 00 D2 D4 E3 40 40        .......KMT  \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  00 00 00 00 00 00 01 18 D4 E6 40 40 40 40 40 40    ........MW      \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00                ....\par 00000090  00 00 01 5E D9 D4 40 40 40 40 40 40 40 40 40 40    ...;RM          \par 000000A0  40 40 40 40 40 40 40 40                                            \par\par\plain\f3\fs20\cf1 c:\\z390\\vsam\\test\\ksf2tst2.mlc\par\par *********************************************************************\par * Copyright 2008 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 02/01/08                                                 *\par *********************************************************************\par * 02/01/08 RPI 723 TEST KSDS UPDATE WITH INSERTS                                                           \par *********************************************************************\par KSF2TST2 SUBENTRY   \par          WTO   'KSF2TST2 UPDATE WITH DSH2'\par          OPEN  (VFILE,(UPDATE))\par          LTR   R15,R15\par          BNZ   ERR1\par *\par * INSERT DSH2 AFTER DSH          \par *\par          MVC   KEY,=CL20'DSH2'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BZ    ERR2     ERROR IF FOUND\par          USING RECDSECT,RECORD\par          MVC   NAME,=CL20'DSH2'\par          MVC   ADDR,=CL20'29 VILLA AVE'\par          MVC   CITY,=CL20'CHARLOTTETOWN'\par          MVC   STATE,=CL5'PEI'\par          MVC   ZIP,=CL5'12345'\par          PUT   RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR8\par *\par * UPDATE BY INSERTING DSH1 BETWEEN DSH AND DSH1 IN TREE          \par *\par          MVC   KEY,=CL20'DSH1'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BZ    ERR2     ERROR IF FOUND\par          USING RECDSECT,RECORD\par          MVC   NAME,=CL20'DSH1'\par          MVC   ADDR,=CL20'6365 32 AVE'\par          MVC   CITY,=CL20'ST. PETE'\par          MVC   STATE,=CL5'FL'\par          MVC   ZIP,=CL5'12345'\par          PUT   RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR8\par          WTO   MF=(E,WTOREC)\par *\par * UPDATE BY INSERTING DSH3 AFTER DSH2 IN TREE          \par *\par          MVC   KEY,=CL20'DSH3'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BZ    ERR2     ERROR IF FOUND\par          USING RECDSECT,RECORD\par          MVC   NAME,=CL20'DSH3'\par          MVC   ADDR,=CL20'4120 71 AVE'\par          MVC   CITY,=CL20'PINELLAS PARK'\par          MVC   STATE,=CL5'FL'\par          MVC   ZIP,=CL5'12345'\par          PUT   RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR8\par          WTO   MF=(E,WTOREC)\par *\par * RETRIVE DSH1 DSH3 BY KEY\par *\par          MVC   KEY,=CL20'DSH1'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'DSH3'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'DSH2'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par *\par * CLOSE AND EXIT\par *\par DSHX     EQU   *\par          CLOSE (VFILE)\par          LTR   R15,R15\par          BNZ   ERR3\par          WTO   'KSF2TST2 ENDED OK'\par          SUBEXIT\par ERR1     WTO   'KSF2TST2 OPEN ERROR'\par          ABEND 111,DUMP\par ERR2     WTO   'KSF2TST2 GET BY KEY ERROR'\par          ABEND 222,DUMP\par ERR3     WTO   'KSF2TST2 CLOSE ERROR'\par          ABEND 333,DUMP\par ERR4     WTO   'KSF2TST2 NAME NOT EQUAL KEY REQUESTED'\par          ABEND 444,DUMP\par ERR5     WTO   'KSF2TST2 MODCB ERROR'\par          ABEND 555,DUMP\par ERR6     WTO   'KSF2TST2 POINT ERROR'\par          ABEND 666,DUMP\par ERR7     WTO   'KSF2TST2 GET SEQ ERROR'\par          ABEND 777,DUMP\par ERR8     WTO   'KSF2TST2 PUT UPD ERROR'\par          ABEND 888,DUMP\par VFILE    ACB   DDNAME=VFILE,MACRF=(KEY,OUT)\par VRPL     RPL   ACB=VFILE,AREA=RECORD,OPTCD=(KEY,UPD),ARG=KEY\par          LTORG\par          EQUREGS\par WTOREC   DC    AL2(WTOEND-*,0),C'REC='\par RECORD   DC    CL70' '\par WTOEND   EQU   *\par KEY      DC    CL20' '\par RECDSECT DSECT\par NAME     DS    CL20\par ADDR     DS    CL20\par CITY     DS    CL20\par STATE    DS    CL5\par ZIP      DS    CL5\par          END\par\par\plain\f3\fs20\b\cf1\page 15 ksf2tst3\par\par This test\par\par 1)\par A) OPENs KSDS dataset with ACB MACRF=(KEY,IN).\par\par B) GETs a KSDS record via KEY of RM with RPL OPTCD=(KEY), and verifies get ok.\par\par C) GETs a KSDS record via KEY of MW, and verifies get ok,\par and that key matches record.\par\par D) GETs a KSDS record via KEY of MM, and verifies get ok,\par and that key matches record.\par\par E) GETs a KSDS record via KEY of MT, and verifies get ok,\par and that key matches record.\par\par F) GETs a KSDS record via KEY of DSH3, and verifies get ok,\par and that key matches record.\par\par G) GETs a KSDS record via KEY of DSH2, and verifies get ok,\par and that key matches record.\par\par H) GETs a KSDS record via KEY of DSH1, and verifies get ok,\par and that key matches record.\par\par I) GETs a KSDS record via KEY of DSH, and verifies get ok,\par and that key matches record.\par\par J) GETs a KSDS record via KEY of AK, and verifies get ok,\par and that key matches record.\par\par 2)\par A) Does MODCB to change RPL OPTCD=(SEQ).\par\par B) POINTs at KEY of DSH, and verifies point ok.\par\par C) GETs a KSDS record, and verifies get ok, and that key\par matches record.\par\par D) GETs a KSDS record, and verifies get ok, and that the key\par in the record is DSH1.\par\par E) GETs a KSDS record, and verifies get ok, and that the key\par in the record is DSH2.\par\par F) GETs a KSDS record, and verifies get ok, and that the key\par in the record is DSH3.\par\par G) GETs a KSDS record, and verifies get ok, and that the key\par in the record is MM.\par\par H) POINTs at KEY of AK, and verifies point ok.\par\par C) GETs a KSDS record, and verifies get ok, and that key\par matches record.\par\par 3)\par A) Does MODCB to change RPL OPTCD=(SEQ,KGE).\par\par B) POINTs at KEY of Ds, and verifies point ok.\par\par C) GETs a KSDS record, and verifies get ok, and that key\par in the record is DSH.\par\par D) POINTs at KEY of X'00's, and verifies point ok.\par\par E) GETs a KSDS record, and verifies get ok, and that key\par in the record is AK.\par\par 4)\par A) Does MODCB to change RPL OPTCD=(SEQ,BWD).\par\par B) POINTs at KEY of MM, and verifies point ok.\par\par C) GETs a KSDS record, and verifies get ok, and that key\par in the record is DSH3.\par\par D) GETs a KSDS record, and verifies get ok, and that key\par in the record is DSH2.\par\par E) GETs a KSDS record, and verifies get ok, and that key\par in the record is DSH1.\par\par F) GETs a KSDS record, and verifies get ok, and that key\par in the record is DSH.\par\par G) GETs a KSDS record, and verifies get ok, and that key\par in the record is AK.\par\par H) POINTs at KEY of X'FF's, and verifies point ok.\par\par I) GETs a KSDS record, and verifies get ok, and that key\par in the record is RM.\par\par J) GETs a KSDS record, and verifies get ok, and that key\par in the record is MW.\par\par 5)\par A) Does MODCB to change RPL OPTCD=(SEQ,KGE) and KEYLEN=1.\par\par B) POINTs at KEY of D, and verifies point ok.\par\par C) GETs a KSDS record, and verifies get ok, and that key\par in the record is DSH.\par\par D) POINTs at KEY of X'00', and verifies point ok.\par\par E) GETs a KSDS record, and verifies get ok, and that key\par in the record is AK.\par\par\page 6)\par A) Does MODCB to change RPL OPTCD=(GEN,KGE) and KEYLEN=1.\par\par B) GETs a KSDS record via KEY of D, and verifies get ok,\par and that key in the record is DSH.\par\par C) GETs a KSDS record via KEY of X'00', and verifies get ok,\par and that key in the record is AK.\par\par 7)\par A) Does MODCB to change RPL OPTCD=(GEN) and KEYLEN=1.\par\par B) GETs a KSDS record via KEY of D, and verifies get ok,\par and that key in the record is DSH.\par\par C) GETs a KSDS record via KEY of A, and verifies get ok,\par and that key in the record is AK.\par\par 8) CLOSE.\par\par\par\par  \par\plain\f3\fs20\cf1\page The purpose of this test is the same as KSF1TEST except that new\par records have been inserted above.\page\par c:\\z390\\rt\\vsam\\test\\save\\ksf2tst3.bat\par\par REM RETRIEVE INSERTED DSH1,DSH2,DSH3 RCDS BY KEY AND SEQ FWD AND BWD\par SET VFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL ASMLG vsam\\test\\KSF2TST3 %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN KSF2TST3\par\par ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\ksf2tst3\par C:\\Z390>REM RETRIEVE INSERTED DSH1,DSH2,DSH3 RCDS BY KEY AND SEQ FWD AND BWD \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.KSF2NAME \par C:\\Z390>CALL ASMLG vsam\\test\\KSF2TST3      \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 09:11:37 KSF2TST3  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/12/16\par 09:11:38 KSF2TST3  MZ390 ENDED   RC= 0 SEC= 1 MEM(MB)= 69 IO=5794\par 09:11:38 KSF2TST3  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/12/16\par 09:11:38 KSF2TST3  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=405\par 09:11:38 KSF2TST3  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/12/16\par KSF2TST3 QUERY KSF2NAME BY PRIMARY NAME KEY\par REC=RM                  USA                 SAN FRANCISCO       CA   95661\par REC=MW                  UK                  LONDON              LE   UK1\par REC=MM                  UK                  LONDON              LE   UK2\par REC=MT                  GERMANY             BERLIN              BG   GY1\par REC=DSH3                4120 71 AVE         PINELLAS PARK       FL   12345\par REC=DSH2                29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH1                6365 32 AVE         ST. PETE            FL   12345\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF2TST3 POINT AND SEQ READ\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=DSH1                6365 32 AVE         ST. PETE            FL   12345\par REC=DSH2                29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH3                4120 71 AVE         PINELLAS PARK       FL   12345\par REC=MM                  UK                  LONDON              LE   UK2\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF2TST3 POINT AND SEQ READ WITH KGE\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF2TST3 POINT AND SEQ READ BACKWARD WITH KEQ\par REC=DSH3                4120 71 AVE         PINELLAS PARK       FL   12345\par REC=DSH2                29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH1                6365 32 AVE         ST. PETE            FL   12345\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF2TST3 POINT TO EOF VIA HIGH KEY SEQ READ BACKWARD\par REC=RM                  USA                 SAN FRANCISCO       CA   95661\par REC=MW                  UK                  LONDON              LE   UK1\par KSF2TST3 POINT AND SEQ READ WITH KGE GENERIC KEYS\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF2TST3 KEY ACCESS WITH GENERIC KEY AND KGE\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF2TST3 KEY ACCESS WITH GENERIC KEYS AND KEQ\par REC=DSH                 USA                 TAMPA BAY           FL   33782\par REC=AK                  HOLLAND             AMPSTERDAM          HL   HD1\par KSF2TST3 ENDED OK\par 09:11:38 KSF2TST3  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=341 INS=424\par C:\\Z390> exit\par *** 11/12/16 09:11:39 CMD task ended TOT SEC=3 TOT LOG IO=55\par\par\par\par c:\\z390\\vsam\\test\\ksf2name.ves\par\par 00000000  C1 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    AK              \par 00000010  40 40 40 40 C8 D6 D3 D3 C1 D5 C4 40 40 40 40 40        HOLLAND     \par 00000020  40 40 40 40 40 40 40 40 C1 D4 D7 E2 E3 C5 D9 C4            AMPSTERD\par 00000030  C1 D4 40 40 40 40 40 40 40 40 40 40 C8 D3 40 40    AM          HL  \par 00000040  40 C8 C4 F1 40 40 C4 E2 C8 40 40 40 40 40 40 40     HD1  DSH       \par 00000050  40 40 40 40 40 40 40 40 40 40 E4 E2 C1 40 40 40              USA   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 E3 C1                  TA\par 00000070  D4 D7 C1 40 C2 C1 E8 40 40 40 40 40 40 40 40 40    MPA BAY         \par 00000080  40 40 C6 D3 40 40 40 F3 F3 F7 F8 F2 D4 D4 40 40      FL   33782MM  \par 00000090  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 000000A0  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    UK              \par 000000B0  40 40 40 40 D3 D6 D5 C4 D6 D5 40 40 40 40 40 40        LONDON      \par 000000C0  40 40 40 40 40 40 40 40 D3 C5 40 40 40 E4 D2 F2            LE   UK2\par 000000D0  40 40 D4 E3 40 40 40 40 40 40 40 40 40 40 40 40      MT            \par 000000E0  40 40 40 40 40 40 C7 C5 D9 D4 C1 D5 E8 40 40 40          GERMANY   \par 000000F0  40 40 40 40 40 40 40 40 40 40 C2 C5 D9 D3 C9 D5              BERLIN\par 00000100  40 40 40 40 40 40 40 40 40 40 40 40 40 40 C2 C7                  BG\par 00000110  40 40 40 C7 E8 F1 40 40 D4 E6 40 40 40 40 40 40       GY1  MW      \par 00000120  40 40 40 40 40 40 40 40 40 40 40 40 E4 D2 40 40                UK  \par 00000130  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000140  D3 D6 D5 C4 D6 D5 40 40 40 40 40 40 40 40 40 40    LONDON          \par 00000150  40 40 40 40 D3 C5 40 40 40 E4 D2 F1 40 40 D9 D4        LE   UK1  RM\par 00000160  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000170  40 40 E4 E2 C1 40 40 40 40 40 40 40 40 40 40 40      USA           \par 00000180  40 40 40 40 40 40 E2 C1 D5 40 C6 D9 C1 D5 C3 C9          SAN FRANCI\par 00000190  E2 C3 D6 40 40 40 40 40 40 40 C3 C1 40 40 40 F9    SCO       CA   9\par 000001A0  F5 F6 F6 F1 D2 E2 C9 E3 00 00 00 00 00 00 02 72    5661KSIT.......\loch\f3\hich\f3\'ca\par 000001B0  00 00 00 00 00 00 01 C0 00 00 00 00 00 00 02 EE    .......\{.......\'d3\par 000001C0  D2 E2 C9 D9 00 00 00 00 00 00 02 72 FF FF FF FF    KSIR.......\'ca\u159 ?\u159 ?\u159 ?\u159 ?\par 000001D0  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 000001E0  FF FF FF FF 00 00 00 00 00 00 02 72 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?.......\'ca....\par 000001F0  00 00 00 46 00 00 D2 E2 C9 D9 00 00 00 00 00 00    ...\'e3..KSIR......\par 00000200  02 72 FF FF FF FF FF FF FF FF 00 00 00 00 00 00    .\'ca\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\par 00000210  02 EE 00 00 00 00 00 00 02 72 00 00 00 00 00 00    .\'d3.......\'ca......\par 00000220  02 EE 00 00 00 00 00 00 02 2C 00 01 C4 E2 C8 F2    .\'d3.......\u140 ?..DSH2\par 00000230  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000240  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000250  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000260  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000270  F4 F5 D2 E2 C9 D9 00 00 00 00 00 00 01 A4 00 00    45KSIR.......u..\par 00000280  00 00 00 00 01 C0 00 00 00 00 00 00 01 F6 00 00    .....\{.......6..\par 00000290  00 00 00 00 01 C0 00 00 00 00 00 00 01 F6 00 00    .....\{.......6..\par 000002A0  00 00 00 00 02 A8 01 02 C4 E2 C8 F1 40 40 40 40    .....y..DSH1    \par 000002B0  40 40 40 40 40 40 40 40 40 40 40 40 F6 F3 F6 F5                6365\par 000002C0  40 F3 F2 40 C1 E5 C5 40 40 40 40 40 40 40 40 40     32 AVE         \par 000002D0  E2 E3 4B 40 D7 C5 E3 C5 40 40 40 40 40 40 40 40    ST. PETE        \par 000002E0  40 40 40 40 C6 D3 40 40 40 F1 F2 F3 F4 F5 D2 E2        FL   12345KS\par 000002F0  C9 D9 00 00 00 00 00 00 01 F6 FF FF FF FF FF FF    IR.......6\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000300  FF FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\par 00000310  01 F6 FF FF FF FF FF FF FF FF 00 00 00 00 00 00    .6\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\par 00000320  03 24 00 00 C4 E2 C8 F3 40 40 40 40 40 40 40 40    .\u132 ?..DSH3        \par 00000330  40 40 40 40 40 40 40 40 F4 F1 F2 F0 40 F7 F1 40            4120 71 \par 00000340  C1 E5 C5 40 40 40 40 40 40 40 40 40 D7 C9 D5 C5    AVE         PINE\par 00000350  D3 D3 C1 E2 40 D7 C1 D9 D2 40 40 40 40 40 40 40    LLAS PARK       \par 00000360  C6 D3 40 40 40 F1 F2 F3 F4 F5                      FL   12345   \par\par c:\\z390\\vsam\\test\\ksf2name.vx0\par\par\plain\f3\fs20\b\cf1 00000000  00 00 00 00 00 00 00 00 C1 D2 40 40 40 40 40 40    ........AK      \par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 80 00 00 00                \loch\f3\hich\f3\'d8...\par 00000020  00 00 01 A4 C4 E2 C8 40 40 40 40 40 40 40 40 40    ...uDSH         \par 00000030  40 40 40 40 40 40 40 40 00 00 00 00 00 00 00 8C            .......\'f0\par 00000040  D4 D4 40 40 40 40 40 40 40 40 40 40 40 40 40 40    MM              \par 00000050  40 40 40 40 00 00 00 00 00 00 00 D2 D4 E3 40 40        .......KMT  \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  00 00 00 00 00 00 01 18 D4 E6 40 40 40 40 40 40    ........MW      \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00                ....\par 00000090  00 00 01 5E D9 D4 40 40 40 40 40 40 40 40 40 40    ...;RM          \par 000000A0  40 40 40 40 40 40 40 40                                           \par\par c:\\z390\\rt\\vsam\\test\\save\\ksf2tst3.mlc\par\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 12/05/07                                                 *\par *********************************************************************\par * 02/07/08 RPI 723 COPY FROM KSF1TEST AND UPDATE FOR KSF2 KEY AND                                          \par *          SEQ FWD AND SEQ BWD ACCESS TO INSERTED RCDS DSH1,DSH2,DSH3\par * 04/23/09 RPI 1025 CLEAR RPL OPTIONS FOR REUSE                           \par *********************************************************************\par KSF2TST3 SUBENTRY   \par *\par * OPEN AND READ RECORDS BY NAME KEY RANDOMLY         \par *\par          WTO   'KSF2TST3 QUERY KSF2NAME BY PRIMARY NAME KEY'\par          OPEN  (VFILE,(INPUT))\par          LTR   R15,R15\par          BNZ   ERR1\par          MVC   KEY,=CL20'RM'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          MVC   KEY,=CL20'MW'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          USING RECDSECT,RECORD\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'MM'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'MT'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'DSH3'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'DSH2'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'DSH1'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'DSH'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          MVC   KEY,=CL20'AK'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par *\par * CHANGE TO SKIP SEQ WITH POINT TO SPECIFIC KEYS AND READ THRU DSH1-3\par *\par          WTO   'KSF2TST3 POINT AND SEQ READ'\par          MVHHI VRPL+RPLOPT1-IHARPL,0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=VRPL,OPTCD=(SEQ)\par          LTR   R15,R15\par          BNZ   ERR5\par          MVC   KEY,=CL20'DSH'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH'\par          BNE   ERR4   \par          GET   RPL=VRPL   \par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH1'\par          BNE   ERR4   \par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH2'\par          BNE   ERR4   \par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH3'\par          BNE   ERR4   \par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'MM'\par          BNE   ERR4   \par          MVC   KEY,=CL20'AK'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par *\par * CHANGE TO SKIP SEQ WITH POINT USING KGE FULL KEYS\par *\par          WTO   'KSF2TST3 POINT AND SEQ READ WITH KGE'\par          MVHHI VRPL+RPLOPT1-IHARPL,0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=VRPL,OPTCD=(SEQ,KGE)\par          LTR   R15,R15\par          BNZ   ERR5\par          MVC   KEY,=CL20'D'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH'\par          BNE   ERR4   \par          MVC   KEY,=XL20'00'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'AK'\par          BNE   ERR4   \par *\par * CHANGE TO SKIP SEQ BACKWARD WITH POINT USING KEQ FULL KEYS\par *\par          WTO   'KSF2TST3 POINT AND SEQ READ BACKWARD WITH KEQ'\par          MVHHI VRPL+RPLOPT1-IHARPL,0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=VRPL,OPTCD=(SEQ,BWD)\par          LTR   R15,R15\par          BNZ   ERR5\par          MVC   KEY,=CL20'MM'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH3'\par          BNE   ERR4   \par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH2'\par          BNE   ERR4   \par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH1'\par          BNE   ERR4   \par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH'\par          BNE   ERR4   \par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'AK'\par          BNE   ERR4   \par *\par * POINT TO EOF VIA HIGH VALUES KEY AND READ BACKWARDS\par *\par          WTO   'KSF2TST3 POINT TO EOF VIA HIGH KEY SEQ READ BACKWARD'\par          MVC   KEY,=20X'FF'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'RM'\par          BNE   ERR4   \par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'MW'\par          BNE   ERR4   \par *\par * CHANGE TO SKIP SEQ WITH POINT USING KGE GENERIC KEYS\par *\par          WTO   'KSF2TST3 POINT AND SEQ READ WITH KGE GENERIC KEYS'\par          MVHHI VRPL+RPLOPT1-IHARPL,0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=VRPL,OPTCD=(SEQ,KGE),KEYLEN=1\par          LTR   R15,R15\par          BNZ   ERR5\par          MVC   KEY,=20X'FF'\par          MVI   KEY,C'D'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH'\par          BNE   ERR4   \par          MVI   KEY,X'00'\par          POINT RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR6\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'AK'\par          BNE   ERR4   \par *\par * CHANGE TO KEY ACCESS WITH GEN,KGE\par *\par          WTO   'KSF2TST3 KEY ACCESS WITH GENERIC KEY AND KGE'\par          MVHHI VRPL+RPLOPT1-IHARPL,0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=VRPL,OPTCD=(GEN,KGE),KEYLEN=1\par          LTR   R15,R15\par          BNZ   ERR5\par          MVC   KEY,=20X'FF'\par          MVI   KEY,C'D'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH'\par          BNE   ERR4   \par          MVI   KEY,X'00'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'AK'\par          BNE   ERR4   \par *\par * CHANGE TO KEY ACCESS WITH GENERIC KEY AND KEQ\par *\par          WTO   'KSF2TST3 KEY ACCESS WITH GENERIC KEYS AND KEQ'\par          MVHHI VRPL+RPLOPT1-IHARPL,0 CLEAN OPT1+2  RPI 1025\par          MODCB RPL=VRPL,OPTCD=(GEN),KEYLEN=1\par          LTR   R15,R15\par          BNZ   ERR5\par          MVC   KEY,=20X'FF'\par          MVI   KEY,C'D'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'DSH'\par          BNE   ERR4   \par          MVI   KEY,C'A'\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,=CL20'AK'\par          BNE   ERR4   \par *\par * CLOSE AND EXIT\par *\par          CLOSE (VFILE)\par          LTR   R15,R15\par          BNZ   ERR3\par          WTO   'KSF2TST3 ENDED OK'\par          SUBEXIT\par ERR1     WTO   'KSF2TST3 OPEN ERROR'\par          ABEND 111,DUMP\par ERR2     WTO   'KSF2TST3 GET BY KEY ERROR'\par          ABEND 222,DUMP\par ERR3     WTO   'KSF2TST3 CLOSE ERROR'\par          ABEND 333,DUMP\par ERR4     WTO   'KSF2TST3 NAME NOT EQUAL KEY REQUESTED'\par          ABEND 444,DUMP\par ERR5     WTO   'KSF2TST3 MODCB ERROR'\par          ABEND 555,DUMP\par ERR6     WTO   'KSF2TST3 POINT ERROR'\par          ABEND 666,DUMP\par ERR7     WTO   'KSF2TST3 GET SEQ ERROR'\par          ABEND 777,DUMP\par VFILE    ACB   DDNAME=VFILE,MACRF=(KEY,IN)\par VRPL     RPL   ACB=VFILE,AREA=RECORD,OPTCD=(KEY),ARG=KEY\par          LTORG\par          EQUREGS\par WTOREC   DC    AL2(WTOEND-*,0),C'REC='\par RECORD   DC    CL70' '\par WTOEND   EQU   *\par KEY      DC    CL20' '\par RECDSECT DSECT\par NAME     DS    CL20\par ADDR     DS    CL20\par CITY     DS    CL20\par STATE    DS    CL5\par ZIP      DS    CL5\par          END\par\par\page 16 ksf2tst4\par\par This test\par\par 1)\par A) OPENs KSDS dataset with ACB MACRF=(KEY,OUT).\par\par B\} Insert (PUT) KSDS record with RPL OPTCD=(KEY,UPD) via KEY of DSH000003.\par\par C\} Insert (PUT) KSDS record via KEY of DSH000002.\par\par D\} Insert (PUT) KSDS record via KEY of DSH000001,\par\par E) Insert (PUT) KSDS record via KEY of DSH000004.\par\par F\} Insert (PUT) KSDS record via KEY of DSH000008.\par\par G\} Insert (PUT) KSDS record via KEY of DSH000009.\par\par H\} Insert (PUT) KSDS record via KEY of DSH000007.\par\par I\} Insert (PUT) KSDS record via KEY of DSH000005.\par\par J\} Insert (PUT) KSDS record via KEY of DSH000010.\par\par K\} Insert (PUT) KSDS record via KEY of DSH000006.\par\par L) Add 4 and repeat B) thru K) until equal to some \par preset multiple of 10.\par\par M) CLOSE.\page The purpose of this test is to pseudo-randomly insert a number of KSDS\par records (a multiple of ten records) and thus into KSIT/KSIR.\page\par c:\\z390\\rt\\vsam\\test\\save\\ksf2tst4.bat\par\par REM INSERT DSH1,DSH2,DSH3 AND RTRIEVE BY KEY\par SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT]\par SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL EXEC REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN LOAD KSF2NAME\par SET VFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL ASMLG rt\\vsam\\test\\save\\KSF2TST4 NOTIME %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN KSF2TST4 INSERT 3 AND GET 3 BY KEY\par\par\plain\f3\fs20\cf1 changed to\par\par REM INSERT DSH1,DSH2,DSH3 AND RTRIEVE BY KEY\par SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT]\par SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL EXEC linklib\\REPRO %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN LOAD KSF2NAME\par SET VFILE=vsam\\test\\TESTCAT.KSF2NAME\par CALL ASMLG rt\\vsam\\test\\save\\KSF2TST4 NOTIME %1 %2 %3 %4 %5\par IF ERRORLEVEL 1 PAUSE ERROR IN KSF2TST4 INSERT 3 AND GET 3 BY KEY\par\par ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\ksf2tst4\par C:\\Z390>REM INSERT DSH1,DSH2,DSH3 AND RTRIEVE BY KEY \par C:\\Z390>SET INFILE=vsam\\demo\\KSF1NAME.TF1[RECFM=FT] \par C:\\Z390>SET OUTFILE=vsam\\test\\TESTCAT.KSF2NAME \par C:\\Z390>CALL EXEC linklib\\REPRO      \par C:\\Z390>echo off \par 09:25:58 REPRO     EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/12/16\par REPRO z390 VSAM UTILITY V1.2\par REPRO LOADING VSAM FROM QSAM INFILE\par REPRO OPENING VSAM OUTFILE FOR RELOAD VS MOD\par REPRO RECFM=FT LRECL =      70\par SNAP DUMP ID=1 TEXT=REPRO FILES OPENED\par  TIOT  DDNAME=VES#1    DCB=000FDC60 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\KSF2NAME.VES\par  TIOT  DDNAME=VX0#2    DCB=000FDCC8 DCBOFLGS=30 DSN=C:\\Z390\\vsam\\test\\KSF2NAME.VX0\par  TIOT  DDNAME=INFILE   DCB=000FFAA8 DCBOFLGS=50 DSN=C:\\Z390\\vsam\\demo\\KSF1NAME.TF1\par  REPRO TOTAL RECORDS =       6\par REPRO ENDED OK\par 09:25:58 REPRO     EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=334 INS=448\par 09:25:58 KSF2TST4  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/12/16\par 09:25:59 KSF2TST4  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 68 IO=4280\par 09:25:59 KSF2TST4  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/12/16\par 09:25:59 KSF2TST4  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=197\par 09:25:59 KSF2TST4  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/12/16\par KSF2TST4 TEST AVL INSERTS\par REC=DSH000001           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000002           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000003           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000004           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000005           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000006           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000007           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000008           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000009           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000010           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000011           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000012           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 REC=DSH000013           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000014           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000015           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000016           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000017           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000018           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000019           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000020           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000021           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000022           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000023           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000024           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000025           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000026           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000027           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000028           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000029           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par REC=DSH000030           29 VILLA AVE        CHARLOTTETOWN       PEI  12345\par KSF2TST4 ENDED OK\par 09:25:59 KSF2TST4  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=334 INS=1086\par C:\\Z390> exit\par *** 11/12/16 09:25:59 CMD task ended TOT SEC=2 TOT LOG IO=60\par\par C:\\Z390\\vsam\\test\\KSF2NAME.VES\par\par 00000000  C1 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    AK              \par 00000010  40 40 40 40 C8 D6 D3 D3 C1 D5 C4 40 40 40 40 40        HOLLAND     \par 00000020  40 40 40 40 40 40 40 40 C1 D4 D7 E2 E3 C5 D9 C4            AMPSTERD\par 00000030  C1 D4 40 40 40 40 40 40 40 40 40 40 C8 D3 40 40    AM          HL  \par 00000040  40 C8 C4 F1 40 40 C4 E2 C8 40 40 40 40 40 40 40     HD1  DSH       \par 00000050  40 40 40 40 40 40 40 40 40 40 E4 E2 C1 40 40 40              USA   \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 E3 C1                  TA\par 00000070  D4 D7 C1 40 C2 C1 E8 40 40 40 40 40 40 40 40 40    MPA BAY         \par 00000080  40 40 C6 D3 40 40 40 F3 F3 F7 F8 F2 D4 D4 40 40      FL   33782MM  \par 00000090  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 000000A0  E4 D2 40 40 40 40 40 40 40 40 40 40 40 40 40 40    UK              \par 000000B0  40 40 40 40 D3 D6 D5 C4 D6 D5 40 40 40 40 40 40        LONDON      \par 000000C0  40 40 40 40 40 40 40 40 D3 C5 40 40 40 E4 D2 F2            LE   UK2\par 000000D0  40 40 D4 E3 40 40 40 40 40 40 40 40 40 40 40 40      MT            \par 000000E0  40 40 40 40 40 40 C7 C5 D9 D4 C1 D5 E8 40 40 40          GERMANY   \par 000000F0  40 40 40 40 40 40 40 40 40 40 C2 C5 D9 D3 C9 D5              BERLIN\par 00000100  40 40 40 40 40 40 40 40 40 40 40 40 40 40 C2 C7                  BG\par 00000110  40 40 40 C7 E8 F1 40 40 D4 E6 40 40 40 40 40 40       GY1  MW      \par 00000120  40 40 40 40 40 40 40 40 40 40 40 40 E4 D2 40 40                UK  \par 00000130  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000140  D3 D6 D5 C4 D6 D5 40 40 40 40 40 40 40 40 40 40    LONDON          \par 00000150  40 40 40 40 D3 C5 40 40 40 E4 D2 F1 40 40 D9 D4        LE   UK1  RM\par 00000160  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000170  40 40 E4 E2 C1 40 40 40 40 40 40 40 40 40 40 40      USA           \par 00000180  40 40 40 40 40 40 E2 C1 D5 40 C6 D9 C1 D5 C3 C9          SAN FRANCI\par 00000190  E2 C3 D6 40 40 40 40 40 40 40 C3 C1 40 40 40 F9    SCO       CA   9\par 000001A0  F5 F6 F6 F1 D2 E2 C9 E3 00 00 00 00 00 00 05 D6    5661KSIT.......O\par 000001B0  00 00 00 00 00 00 01 C0 00 00 00 00 00 00 0F 86    .......\{.......f\par 000001C0  D2 E2 C9 D9 00 00 00 00 00 00 02 72 FF FF FF FF    KSIR.......\loch\f3\hich\f3\'ca\u159 ?\u159 ?\u159 ?\u159 ?\par 000001D0  FF FF FF FF 00 00 00 00 00 00 02 EE FF FF FF FF    \u159 ?\u159 ?\u159 ?\u159 ?.......\'d3\u159 ?\u159 ?\u159 ?\u159 ?\par 000001E0  FF FF FF FF 00 00 00 00 00 00 02 EE 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?.......\'d3....\par 000001F0  00 00 00 46 00 01 D2 E2 C9 D9 00 00 00 00 00 00    ...\'e3..KSIR......\par 00000200  02 72 FF FF FF FF FF FF FF FF FF FF FF FF FF FF    .\'ca\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000210  FF FF 00 00 00 00 00 00 02 72 00 00 00 00 00 00    \u159 ?\u159 ?.......\'ca......\par 00000220  03 6A 00 00 00 00 00 00 02 2C 00 00 C4 E2 C8 F0    .\'a6.......\u140 ?..DSH0\par 00000230  F0 F0 F0 F0 F3 40 40 40 40 40 40 40 40 40 40 40    00003           \par 00000240  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000250  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000260  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000270  F4 F5 D2 E2 C9 D9 00 00 00 00 00 00 03 6A 00 00    45KSIR.......\'a6..\par 00000280  00 00 00 00 01 C0 00 00 00 00 00 00 01 F6 00 00    .....\{.......6..\par 00000290  00 00 00 00 02 EE 00 00 00 00 00 00 01 F6 00 00    .....\'d3.......6..\par 000002A0  00 00 00 00 02 A8 02 01 C4 E2 C8 F0 F0 F0 F0 F0    .....y..DSH00000\par 000002B0  F2 40 40 40 40 40 40 40 40 40 40 40 F2 F9 40 E5    2           29 V\par 000002C0  C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40 40 40 40 40    ILLA AVE        \par 000002D0  C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40    CHARLOTTETOWN   \par 000002E0  40 40 40 40 D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2        PEI  12345KS\par 000002F0  C9 D9 00 00 00 00 00 00 01 C0 FF FF FF FF FF FF    IR.......\{\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000300  FF FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\par 00000310  01 C0 00 00 00 00 00 00 02 72 00 00 00 00 00 00    .\{.......\'ca......\par 00000320  03 24 00 00 C4 E2 C8 F0 F0 F0 F0 F0 F1 40 40 40    .\u132 ?..DSH000001   \par 00000330  40 40 40 40 40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1            29 VILLA\par 00000340  40 C1 E5 C5 40 40 40 40 40 40 40 40 C3 C8 C1 D9     AVE        CHAR\par 00000350  D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40 40 40 40 40    LOTTETOWN       \par 00000360  D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00    PEI  12345KSIR..\par 00000370  00 00 00 00 05 D6 00 00 00 00 00 00 02 72 00 00    .....O.......\'ca..\par 00000380  00 00 00 00 04 DE 00 00 00 00 00 00 01 F6 00 00    ....\u156 ?\'fa.......6..\par 00000390  00 00 00 00 05 5A 00 00 00 00 00 00 03 A0 03 03    .....!.......\'b5..\par 000003A0  C4 E2 C8 F0 F0 F0 F0 F0 F4 40 40 40 40 40 40 40    DSH000004       \par 000003B0  40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5        29 VILLA AVE\par 000003C0  40 40 40 40 40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3            CHARLOTT\par 000003D0  C5 E3 D6 E6 D5 40 40 40 40 40 40 40 D7 C5 C9 40    ETOWN       PEI \par 000003E0  40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00 00 00 00 00     12345KSIR......\par 000003F0  04 62 FF FF FF FF FF FF FF FF FF FF FF FF FF FF    \u156 ?\'c2\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000400  FF FF 00 00 00 00 00 00 04 DE 00 00 00 00 00 00    \u159 ?\u159 ?......\u156 ?\'fa......\par 00000410  04 62 00 00 00 00 00 00 04 1C 00 00 C4 E2 C8 F0    \u156 ?\'c2......\u156 ?...DSH0\par 00000420  F0 F0 F0 F0 F8 40 40 40 40 40 40 40 40 40 40 40    00008           \par 00000430  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000440  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000450  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000460  F4 F5 D2 E2 C9 D9 00 00 00 00 00 00 04 DE 00 00    45KSIR......\u156 ?\'fa..\par 00000470  00 00 00 00 03 E6 FF FF FF FF FF FF FF FF 00 00    .....W\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?..\par 00000480  00 00 00 00 03 E6 00 00 00 00 00 00 05 D6 00 00    .....W.......O..\par 00000490  00 00 00 00 04 98 01 00 C4 E2 C8 F0 F0 F0 F0 F0    ....\u156 ?q..DSH00000\par 000004A0  F9 40 40 40 40 40 40 40 40 40 40 40 F2 F9 40 E5    9           29 V\par 000004B0  C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40 40 40 40 40    ILLA AVE        \par 000004C0  C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40    CHARLOTTETOWN   \par 000004D0  40 40 40 40 D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2        PEI  12345KS\par 000004E0  C9 D9 00 00 00 00 00 00 03 6A 00 00 00 00 00 00    IR.......\'a6......\par 000004F0  05 5A 00 00 00 00 00 00 04 62 00 00 00 00 00 00    .!......\u156 ?\'c2......\par 00000500  06 52 00 00 00 00 00 00 03 E6 00 00 00 00 00 00    \u134 ?\'ea.......W......\par 00000510  05 14 02 02 C4 E2 C8 F0 F0 F0 F0 F0 F7 40 40 40    .\'9d..DSH000007   \par 00000520  40 40 40 40 40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1            29 VILLA\par 00000530  40 C1 E5 C5 40 40 40 40 40 40 40 40 C3 C8 C1 D9     AVE        CHAR\par 00000540  D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40 40 40 40 40    LOTTETOWN       \par 00000550  D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00    PEI  12345KSIR..\par 00000560  00 00 00 00 04 DE FF FF FF FF FF FF FF FF 00 00    ....\u156 ?\'fa\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?..\par 00000570  00 00 00 00 06 52 00 00 00 00 00 00 03 6A 00 00    ....\u134 ?\'ea.......\'a6..\par 00000580  00 00 00 00 06 52 00 00 00 00 00 00 05 90 00 01    ....\u134 ?\'ea.......\'b0..\par 00000590  C4 E2 C8 F0 F0 F0 F0 F0 F5 40 40 40 40 40 40 40    DSH000005       \par 000005A0  40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5        29 VILLA AVE\par 000005B0  40 40 40 40 40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3            CHARLOTT\par 000005C0  C5 E3 D6 E6 D5 40 40 40 40 40 40 40 D7 C5 C9 40    ETOWN       PEI \par 000005D0  40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00 00 00 00 00     12345KSIR......\par 000005E0  01 A4 00 00 00 00 00 00 03 6A 00 00 00 00 00 00    .u.......\'a6......\par 000005F0  08 BE 00 00 00 00 00 00 04 62 00 00 00 00 00 00    \u151 ?\'b4......\u156 ?\'c2......\par 00000600  07 C6 00 00 00 00 00 00 06 0C 04 05 C4 E2 C8 F0    F......\u134 ?.\u156 ?.DSH0\par 00000610  F0 F0 F0 F1 F0 40 40 40 40 40 40 40 40 40 40 40    00010           \par 00000620  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000630  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000640  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000650  F4 F5 D2 E2 C9 D9 00 00 00 00 00 00 05 5A FF FF    45KSIR.......!\u159 ?\u159 ?\par 00000660  FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00 00    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?..\par 00000670  00 00 00 00 05 5A 00 00 00 00 00 00 04 DE 00 00    .....!......\u156 ?\'fa..\par 00000680  00 00 00 00 06 88 00 00 C4 E2 C8 F0 F0 F0 F0 F0    ....\u134 ?h..DSH00000\par 00000690  F6 40 40 40 40 40 40 40 40 40 40 40 F2 F9 40 E5    6           29 V\par 000006A0  C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40 40 40 40 40    ILLA AVE        \par 000006B0  C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40    CHARLOTTETOWN   \par 000006C0  40 40 40 40 D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2        PEI  12345KS\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 000006D0  C9 D9 00 00 00 00 00 00 07 4A FF FF FF FF FF FF    IR......\loch\f3\hich\f3\'a2\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 000006E0  FF FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\par 000006F0  07 4A 00 00 00 00 00 00 08 42 00 00 00 00 00 00    \'a2......\u151 ?\'e2......\par 00000700  07 04 00 00 C4 E2 C8 F0 F0 F0 F0 F1 F3 40 40 40    \u156 ?..DSH000013   \par 00000710  40 40 40 40 40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1            29 VILLA\par 00000720  40 C1 E5 C5 40 40 40 40 40 40 40 40 C3 C8 C1 D9     AVE        CHAR\par 00000730  D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40 40 40 40 40    LOTTETOWN       \par 00000740  D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00    PEI  12345KSIR..\par 00000750  00 00 00 00 08 42 00 00 00 00 00 00 07 C6 00 00    ....\u151 ?\'e2......F..\par 00000760  00 00 00 00 06 CE 00 00 00 00 00 00 07 C6 00 00    ....\u134 ?\'f3......F..\par 00000770  00 00 00 00 06 CE 00 00 00 00 00 00 07 80 01 01    ....\u134 ?\'f3......\'d8..\par 00000780  C4 E2 C8 F0 F0 F0 F0 F1 F2 40 40 40 40 40 40 40    DSH000012       \par 00000790  40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5        29 VILLA AVE\par 000007A0  40 40 40 40 40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3            CHARLOTT\par 000007B0  C5 E3 D6 E6 D5 40 40 40 40 40 40 40 D7 C5 C9 40    ETOWN       PEI \par 000007C0  40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00 00 00 00 00     12345KSIR......\par 000007D0  07 4A FF FF FF FF FF FF FF FF FF FF FF FF FF FF    \'a2\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 000007E0  FF FF 00 00 00 00 00 00 05 D6 00 00 00 00 00 00    \u159 ?\u159 ?.......O......\par 000007F0  07 4A 00 00 00 00 00 00 07 FC 00 00 C4 E2 C8 F0    \'a2......\'dc..DSH0\par 00000800  F0 F0 F0 F1 F1 40 40 40 40 40 40 40 40 40 40 40    00011           \par 00000810  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000820  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000830  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000840  F4 F5 D2 E2 C9 D9 00 00 00 00 00 00 08 BE 00 00    45KSIR......\u151 ?\'b4..\par 00000850  00 00 00 00 07 4A 00 00 00 00 00 00 0B 2A 00 00    ....\'a2.......\u138 ?..\par 00000860  00 00 00 00 06 CE 00 00 00 00 00 00 0A 32 00 00    ....\u134 ?\'f3......\u142 ?...\par 00000870  00 00 00 00 08 78 02 02 C4 E2 C8 F0 F0 F0 F0 F1    ....\u151 ?\'cc..DSH00001\par 00000880  F4 40 40 40 40 40 40 40 40 40 40 40 F2 F9 40 E5    4           29 V\par 00000890  C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40 40 40 40 40    ILLA AVE        \par 000008A0  C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40    CHARLOTTETOWN   \par 000008B0  40 40 40 40 D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2        PEI  12345KS\par 000008C0  C9 D9 00 00 00 00 00 00 05 D6 00 00 00 00 00 00    IR.......O......\par 000008D0  08 42 00 00 00 00 00 00 0D 1A 00 00 00 00 00 00    \u151 ?\'e2.......\u146 ?......\par 000008E0  09 B6 00 00 00 00 00 00 09 3A 00 00 00 00 00 00    \'8d\'b6......\'8d\u154 ?......\par 000008F0  08 F4 03 04 C4 E2 C8 F0 F0 F0 F0 F1 F8 40 40 40    \u151 ?4.\u156 ?DSH000018   \par 00000900  40 40 40 40 40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1            29 VILLA\par 00000910  40 C1 E5 C5 40 40 40 40 40 40 40 40 C3 C8 C1 D9     AVE        CHAR\par 00000920  D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40 40 40 40 40    LOTTETOWN       \par 00000930  D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00    PEI  12345KSIR..\par 00000940  00 00 00 00 0A AE FF FF FF FF FF FF FF FF FF FF    ....\u142 ?\'de\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000950  FF FF FF FF FF FF 00 00 00 00 00 00 08 BE 00 00    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\u151 ?\'b4..\par 00000960  00 00 00 00 0A AE 00 00 00 00 00 00 09 70 00 00    ....\u142 ?\'de......\'8d\'f8..\par 00000970  C4 E2 C8 F0 F0 F0 F0 F1 F9 40 40 40 40 40 40 40    DSH000019       \par 00000980  40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5        29 VILLA AVE\par 00000990  40 40 40 40 40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3            CHARLOTT\par 000009A0  C5 E3 D6 E6 D5 40 40 40 40 40 40 40 D7 C5 C9 40    ETOWN       PEI \par 000009B0  40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00 00 00 00 00     12345KSIR......\par 000009C0  0B 2A FF FF FF FF FF FF FF FF FF FF FF FF FF FF    .\u138 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 000009D0  FF FF 00 00 00 00 00 00 0B 2A 00 00 00 00 00 00    \u159 ?\u159 ?.......\u138 ?......\par 000009E0  08 BE 00 00 00 00 00 00 09 EC 00 00 C4 E2 C8 F0    \u151 ?\'b4......\'8d\'d6..DSH0\par 000009F0  F0 F0 F0 F1 F7 40 40 40 40 40 40 40 40 40 40 40    00017           \par 00000A00  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000A10  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000A20  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000A30  F4 F5 D2 E2 C9 D9 00 00 00 00 00 00 0B 2A FF FF    45KSIR.......\u138 ?\u159 ?\u159 ?\par 00000A40  FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00 00    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?..\par 00000A50  00 00 00 00 08 42 00 00 00 00 00 00 0B 2A 00 00    ....\u151 ?\'e2.......\u138 ?..\par 00000A60  00 00 00 00 0A 68 00 00 C4 E2 C8 F0 F0 F0 F0 F1    ....\u142 ?\'c7..DSH00001\par 00000A70  F5 40 40 40 40 40 40 40 40 40 40 40 F2 F9 40 E5    5           29 V\par 00000A80  C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40 40 40 40 40    ILLA AVE        \par 00000A90  C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40    CHARLOTTETOWN   \par 00000AA0  40 40 40 40 D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2        PEI  12345KS\par 00000AB0  C9 D9 00 00 00 00 00 00 0C 22 00 00 00 00 00 00    IR.......\u130 ?......\par 00000AC0  09 3A 00 00 00 00 00 00 0C 9E 00 00 00 00 00 00    \'8d\u154 ?.......\'c6......\par 00000AD0  09 3A 00 00 00 00 00 00 0C 9E 00 00 00 00 00 00    \'8d\u154 ?.......\'c6......\par 00000AE0  0A E4 01 01 C4 E2 C8 F0 F0 F0 F0 F2 F0 40 40 40    \u142 ?U..DSH000020   \par 00000AF0  40 40 40 40 40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1            29 VILLA\par 00000B00  40 C1 E5 C5 40 40 40 40 40 40 40 40 C3 C8 C1 D9     AVE        CHAR\par 00000B10  D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40 40 40 40 40    LOTTETOWN       \par 00000B20  D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00    PEI  12345KSIR..\par 00000B30  00 00 00 00 08 42 00 00 00 00 00 00 0A 32 00 00    ....\u151 ?\'e2......\u142 ?...\par 00000B40  00 00 00 00 09 B6 00 00 00 00 00 00 0A 32 00 00    ....\'8d\'b6......\u142 ?...\par 00000B50  00 00 00 00 09 B6 00 00 00 00 00 00 0B 60 01 01    ....\'8d\'b6.......-..\par 00000B60  C4 E2 C8 F0 F0 F0 F0 F1 F6 40 40 40 40 40 40 40    DSH000016       \par 00000B70  40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5        29 VILLA AVE\par 00000B80  40 40 40 40 40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3            CHARLOTT\par 00000B90  C5 E3 D6 E6 D5 40 40 40 40 40 40 40 D7 C5 C9 40    ETOWN       PEI \par 00000BA0  40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00 00 00 00 00     12345KSIR......\par 00000BB0  0C 22 FF FF FF FF FF FF FF FF FF FF FF FF FF FF    .\u130 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000BC0  FF FF 00 00 00 00 00 00 0C 22 00 00 00 00 00 00    \u159 ?\u159 ?.......\u130 ?......\par 00000BD0  0D 1A 00 00 00 00 00 00 0B DC 00 00 C4 E2 C8 F0    .\u146 ?.......\'fc..DSH0\par 00000BE0  F0 F0 F0 F2 F3 40 40 40 40 40 40 40 40 40 40 40    00023           \par 00000BF0  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000C00  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000C10  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000C20  F4 F5 D2 E2 C9 D9 00 00 00 00 00 00 0D 1A 00 00    45KSIR.......\u146 ?..\par 00000C30  00 00 00 00 0A AE 00 00 00 00 00 00 0B A6 00 00    ....\u142 ?\'de.......w..\par 00000C40  00 00 00 00 0C 9E 00 00 00 00 00 00 0B A6 00 00    .....\'c6.......w..\par 00000C50  00 00 00 00 0C 58 02 01 C4 E2 C8 F0 F0 F0 F0 F2    .....\'ec..DSH00002\par 00000C60  F2 40 40 40 40 40 40 40 40 40 40 40 F2 F9 40 E5    2           29 V\par 00000C70  C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40 40 40 40 40    ILLA AVE        \par 00000C80  C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40    CHARLOTTETOWN   \par 00000C90  40 40 40 40 D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2        PEI  12345KS\par 00000CA0  C9 D9 00 00 00 00 00 00 0A AE FF FF FF FF FF FF    IR......\u142 ?\'de\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000CB0  FF FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?......\par 00000CC0  0A AE 00 00 00 00 00 00 0C 22 00 00 00 00 00 00    \u142 ?\'de.......\u130 ?......\par 00000CD0  0C D4 00 00 C4 E2 C8 F0 F0 F0 F0 F2 F1 40 40 40    .M..DSH000021   \par 00000CE0  40 40 40 40 40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1            29 VILLA\par 00000CF0  40 C1 E5 C5 40 40 40 40 40 40 40 40 C3 C8 C1 D9     AVE        CHAR\par 00000D00  D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40 40 40 40 40    LOTTETOWN       \par 00000D10  D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00    PEI  12345KSIR..\par 00000D20  00 00 00 00 08 BE 00 00 00 00 00 00 0C 22 00 00    ....\u151 ?\'b4.......\u130 ?..\par 00000D30  00 00 00 00 0E 8E 00 00 00 00 00 00 0B A6 00 00    .....\'fe.......w..\par 00000D40  00 00 00 00 0F 0A 00 00 00 00 00 00 0D 50 03 03    .....\u142 ?.......&..\par 00000D50  C4 E2 C8 F0 F0 F0 F0 F2 F4 40 40 40 40 40 40 40    DSH000024       \par 00000D60  40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5        29 VILLA AVE\par 00000D70  40 40 40 40 40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3            CHARLOTT\par 00000D80  C5 E3 D6 E6 D5 40 40 40 40 40 40 40 D7 C5 C9 40    ETOWN       PEI \par 00000D90  40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00 00 00 00 00     12345KSIR......\par 00000DA0  0E 12 FF FF FF FF FF FF FF FF FF FF FF FF FF FF    ..\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000DB0  FF FF 00 00 00 00 00 00 0E 8E 00 00 00 00 00 00    \u159 ?\u159 ?.......\'fe......\par 00000DC0  0E 12 00 00 00 00 00 00 0D CC 00 00 C4 E2 C8 F0    .........\'f6..DSH0\par 00000DD0  F0 F0 F0 F2 F8 40 40 40 40 40 40 40 40 40 40 40    00028           \par 00000DE0  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000DF0  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000E00  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00000E10  F4 F5 D2 E2 C9 D9 00 00 00 00 00 00 0E 8E 00 00    45KSIR.......\'fe..\par 00000E20  00 00 00 00 0D 96 00 00 00 00 00 00 0F 86 00 00    .....o.......f..\par 00000E30  00 00 00 00 0D 96 00 00 00 00 00 00 0F 86 00 00    .....o.......f..\par 00000E40  00 00 00 00 0E 48 01 01 C4 E2 C8 F0 F0 F0 F0 F2    .....\'e7..DSH00002\par 00000E50  F9 40 40 40 40 40 40 40 40 40 40 40 F2 F9 40 E5    9           29 V\par 00000E60  C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40 40 40 40 40    ILLA AVE        \par 00000E70  C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40    CHARLOTTETOWN   \par 00000E80  40 40 40 40 D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2        PEI  12345KS\par 00000E90  C9 D9 00 00 00 00 00 00 0D 1A 00 00 00 00 00 00    IR.......\u146 ?......\par 00000EA0  0F 0A 00 00 00 00 00 00 0E 12 00 00 00 00 00 00    .\u142 ?..............\par 00000EB0  10 02 00 00 00 00 00 00 0D 96 00 00 00 00 00 00    .........o......\par 00000EC0  0E C4 02 02 C4 E2 C8 F0 F0 F0 F0 F2 F7 40 40 40    .D..DSH000027   \par 00000ED0  40 40 40 40 40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1            29 VILLA\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 00000EE0  40 C1 E5 C5 40 40 40 40 40 40 40 40 C3 C8 C1 D9     AVE        CHAR\par 00000EF0  D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40 40 40 40 40    LOTTETOWN       \par 00000F00  D7 C5 C9 40 40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00    PEI  12345KSIR..\par 00000F10  00 00 00 00 0E 8E FF FF FF FF FF FF FF FF 00 00    .....\loch\f3\hich\f3\'fe\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?..\par 00000F20  00 00 00 00 10 02 00 00 00 00 00 00 0D 1A 00 00    .............\u146 ?..\par 00000F30  00 00 00 00 10 02 00 00 00 00 00 00 0F 40 00 01    ............. ..\par 00000F40  C4 E2 C8 F0 F0 F0 F0 F2 F5 40 40 40 40 40 40 40    DSH000025       \par 00000F50  40 40 40 40 F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5        29 VILLA AVE\par 00000F60  40 40 40 40 40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3            CHARLOTT\par 00000F70  C5 E3 D6 E6 D5 40 40 40 40 40 40 40 D7 C5 C9 40    ETOWN       PEI \par 00000F80  40 F1 F2 F3 F4 F5 D2 E2 C9 D9 00 00 00 00 00 00     12345KSIR......\par 00000F90  0E 12 FF FF FF FF FF FF FF FF FF FF FF FF FF FF    ..\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000FA0  FF FF 00 00 00 00 00 00 0E 12 FF FF FF FF FF FF    \u159 ?\u159 ?........\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\par 00000FB0  FF FF 00 00 00 00 00 00 0F BC 00 00 C4 E2 C8 F0    \u159 ?\u159 ?.......\'af..DSH0\par 00000FC0  F0 F0 F0 F3 F0 40 40 40 40 40 40 40 40 40 40 40    00030           \par 00000FD0  F2 F9 40 E5 C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40    29 VILLA AVE    \par 00000FE0  40 40 40 40 C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6        CHARLOTTETOW\par 00000FF0  D5 40 40 40 40 40 40 40 D7 C5 C9 40 40 F1 F2 F3    N       PEI  123\par 00001000  F4 F5 D2 E2 C9 D9 00 00 00 00 00 00 0F 0A FF FF    45KSIR.......\u142 ?\u159 ?\u159 ?\par 00001010  FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00 00    \u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?\u159 ?..\par 00001020  00 00 00 00 0F 0A 00 00 00 00 00 00 0E 8E 00 00    .....\u142 ?.......\'fe..\par 00001030  00 00 00 00 10 38 00 00 C4 E2 C8 F0 F0 F0 F0 F2    .....\u152 ?..DSH00002\par 00001040  F6 40 40 40 40 40 40 40 40 40 40 40 F2 F9 40 E5    6           29 V\par 00001050  C9 D3 D3 C1 40 C1 E5 C5 40 40 40 40 40 40 40 40    ILLA AVE        \par 00001060  C3 C8 C1 D9 D3 D6 E3 E3 C5 E3 D6 E6 D5 40 40 40    CHARLOTTETOWN   \par 00001070  40 40 40 40 D7 C5 C9 40 40 F1 F2 F3 F4 F5              PEI  12345  \par\plain\f3\fs20\b\cf1\par\plain\f3\fs20\cf1 C:\\Z390\\vsam\\test\\KSF2NAME.VX0\par\plain\f3\fs20\b\cf1\par 00000000  00 00 00 00 00 00 00 00 C1 D2 40 40 40 40 40 40    ........AK      \par 00000010  40 40 40 40 40 40 40 40 40 40 40 40 80 00 00 00                \loch\f3\hich\f3\'d8...\par 00000020  00 00 01 A4 C4 E2 C8 40 40 40 40 40 40 40 40 40    ...uDSH         \par 00000030  40 40 40 40 40 40 40 40 00 00 00 00 00 00 00 8C            .......\'f0\par 00000040  D4 D4 40 40 40 40 40 40 40 40 40 40 40 40 40 40    MM              \par 00000050  40 40 40 40 00 00 00 00 00 00 00 D2 D4 E3 40 40        .......KMT  \par 00000060  40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40                    \par 00000070  00 00 00 00 00 00 01 18 D4 E6 40 40 40 40 40 40    ........MW      \par 00000080  40 40 40 40 40 40 40 40 40 40 40 40 00 00 00 00                ....\par 00000090  00 00 01 5E D9 D4 40 40 40 40 40 40 40 40 40 40    ...;RM          \par 000000A0  40 40 40 40 40 40 40 40 \par\par c:\\z390\\rt\\vsam\\test\\save\\ksf2tst4.mlc\par\par *********************************************************************\par * Copyright 2008 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 02/01/08                                                 *\par *********************************************************************\par * 02/14/08 RPI 806 TEST AVL PERF WITH 1000 INSERTS                                                           \par *********************************************************************\par KSF2TST4 SUBENTRY   \par          WTO   'KSF2TST4 TEST AVL INSERTS'\par          OPEN  (VFILE,(UPDATE))\par *        SYSTRACE 'V'\par          LTR   R15,R15\par          BNZ   ERR1\par *\par * N = RECORDS \par *\par &N       SETA  30   MUST BE MULTIPLE OF TEN\par *\par * INSERT RECORDS 1-N USING HIGH/LOW SEQ TO FORCE LL,LR,RR,RL ROTATES         \par *\par          ZAP   PREC,=P'0'    \par LOOP1    DS    0H\par          AP    PREC,=PL3'3'   3\par          BAL   R12,INSERT\par          AP    PREC,=PL3'-1'  2\par          BAL   R12,INSERT\par          AP    PREC,=PL3'-1'  1\par          BAL   R12,INSERT\par          AP    PREC,=PL3'3'   4\par          BAL   R12,INSERT   \par          AP    PREC,=PL3'4'   8\par          BAL   R12,INSERT\par          AP    PREC,=PL3'1'   9\par          BAL   R12,INSERT\par          AP    PREC,=PL3'-2'  7\par          BAL   R12,INSERT\par          AP    PREC,=PL3'-2'  5\par          BAL   R12,INSERT\par          AP    PREC,=PL3'5'  10\par          BAL   R12,INSERT\par          AP    PREC,=PL3'-4'  6 \par          BAL   R12,INSERT\par          AP    PREC,=P'4'\par          CP    PREC,=P'&N'\par          BL    LOOP1    \par *\par * RETRIVE RECORDS 1-N AND LIST\par *\par          ZAP   PREC,=P'0'\par          LA    R4,&N\par LOOP2    DS    0H\par          AP    PREC,=PL3'1'\par          USING RECDSECT,RECORD\par          MVC   KEY,=CL20'DSH'\par          MVC   KEY+3(6),=X'F02020202020'\par          ED    KEY+3(6),PREC\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BNZ   ERR2     ERROR IF FOUND\par          WTO   MF=(E,WTOREC)\par          CLC   NAME,KEY\par          BNE   ERR4   \par          BCT   R4,LOOP2\par *\par * CLOSE AND EXIT\par *\par          CLOSE (VFILE)\par          LTR   R15,R15\par          BNZ   ERR3\par          WTO   'KSF2TST4 ENDED OK'\par          SUBEXIT\par *\par * INSERT RECORD USING KEY DSH+PREC AND RETURN R12\par *\par INSERT   DS    0H\par          USING RECDSECT,RECORD\par          MVC   KEY,=CL20'DSH'\par          MVC   KEY+3(6),=X'F02020202020'\par          ED    KEY+3(6),PREC\par          GET   RPL=VRPL   \par          LTR   R15,R15\par          BZ    ERR2     ERROR IF FOUND\par          MVC   NAME,KEY\par          MVC   ADDR,=CL20'29 VILLA AVE'\par          MVC   CITY,=CL20'CHARLOTTETOWN'\par          MVC   STATE,=CL5'PEI'\par          MVC   ZIP,=CL5'12345'\par          PUT   RPL=VRPL\par          LTR   R15,R15\par          BNZ   ERR8\par          BR    R12\par ERR1     WTO   'KSF2TST4 OPEN ERROR'\par          ABEND 111,DUMP\par ERR2     WTO   'KSF2TST4 GET BY KEY ERROR'\par          ABEND 222,DUMP\par ERR3     WTO   'KSF2TST4 CLOSE ERROR'\par          ABEND 333,DUMP\par ERR4     WTO   'KSF2TST4 NAME NOT EQUAL KEY REQUESTED'\par          ABEND 444,DUMP\par ERR5     WTO   'KSF2TST4 MODCB ERROR'\par          ABEND 555,DUMP\par ERR6     WTO   'KSF2TST4 POINT ERROR'\par          ABEND 666,DUMP\par ERR7     WTO   'KSF2TST4 GET SEQ ERROR'\par          ABEND 777,DUMP\par ERR8     WTO   'KSF2TST4 PUT UPD ERROR'\par          ABEND 888,DUMP\par VFILE    ACB   DDNAME=VFILE,MACRF=(KEY,OUT)\par VRPL     RPL   ACB=VFILE,AREA=RECORD,OPTCD=(KEY,UPD),ARG=KEY\par          LTORG\par          EQUREGS\par PREC     DC    PL3'0'\par WTOREC   DC    AL2(WTOEND-*,0),C'REC='\par RECORD   DC    CL70' '\par WTOEND   EQU   *\par KEY      DC    CL20' '\par RECDSECT DSECT\par NAME     DS    CL20\par ADDR     DS    CL20\par CITY     DS    CL20\par STATE    DS    CL5\par ZIP      DS    CL5\par          END\par\page 17 rrf1skp1\par\par This test\par\par 1)\par A) Uses GENCB with ACB MACRF=(KEY,SEQ).\par\par B) OPENs RRDS fixed dataset.\par\par C) Uses GENCB with RPL OPTCD=(KEY) and AREA=(R4)(which points at an\par area GETMAINed) and ARG=REC#.\par\par D) POINTs at RRDS fixed-length record with REC# of 3, and verifies\par point ok.\par\par F) Uses MODCB with RPL OPTCD=(SEQ,FWD).\par\par G) Sets REC# TO -1 (so when GET returns rrn in ARG, we can test that\par it is not -1).\par\par H) GETs RRDS fixed-length record, and verifies get ok.\par\par I) Verify that returned ARG of REC# is 3.\par\par J) Verify that it contains 80 3s.\par\par K) GETs RRDS fixed-length record, and verifies get ok,\par\par L) Verify that returned ARG of REC# is 5.\par\par M) Verify that it contains 80 5s. \par\page 2)\par A) Uses MODCB with RPL OPTCD=(KEY).\par\par B) POINTs at RRDS fixed-length record with REC# of 4, and verifies\par point ok.\par\par C) Sets REC# TO -1 (so when GET returns rrn in ARG, we can test that\par it is not -1).\par\par D) MODCB RPL OPTCD=(SEQ,BWD).\par\par E) GETs RRDS fixed-length record, and verifies get ok.\par\par F) Verify that returned ARG of REC# is 3.\par\par G) Verify that it contains 80 3s.\par\par H) GETs RRDS fixed-length record, and verifies get ok,\par\par I) Verify that returned ARG of REC# is 1.\par\par J) Verify that it contains 80 1s. \par\page 3)\par A) Uses MODCB with RPL OPTCD=(KEY).\par\par B) POINTs at RRDS fixed-length record with REC# of -`1, and verifies\par point ok.\par\par C) Sets REC# TO -1 (so when GET returns rrn in ARG, we can test that\par it is not -1).\par\par D) MODCB RPL OPTCD=(SEQ,BWD).\par\par E) GETs RRDS fixed-length record, and verifies get ok.\par\par F) Verify that returned ARG of REC# is 5.\par\par G) Verify that it contains 80 5s.\par\par H) GETs RRDS fixed-length record, and verifies get ok,\par\par I) Verify that returned ARG of REC# is 3.\par\par J) Verify that it contains 80 3s. \par\par K) GETs RRDS fixed-length record, and verifies get ok,\par\par L) Verify that returned ARG of REC# is 1.\par\par M) Verify that it contains 80 1s. \par\par N) GETs RRDS fixed-length record, and verifies EOF,\par\par O) CLOSE.\page The purpose of this test is to point at an rrn REC# key and to retrieve\par that record. And the to ensure that subsequent records can be accessed\par in a forward direction. It then points at another record by it's rrn\par REC# key and retrieves it and ensures that records may be accessed\par sequentially in a backward direction. Finally, it points at an rrn REC#\par key of -1 (EOF) and gets records in a sequential backward direction\par until it runs out of data (EOD).\page\par c:\\z390\\rt\\vsam\\test\\save\\rrf1skp1.bat\par\par REM RRF1SKP1 TEST RRDS FIXED LENGTH VSAM FILE SKP SEQ ACCESS USING GENCB\par REM RUN RRF1SKP1 TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS\par SET VFILE=vsam\\test\\TESTCAT.RRF1\par CALL ASMLG vsam\\test\\RRF1SKP1 %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN RRF1SKP1\par\par\plain\f3\fs20\cf1 ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\rrf1skp1\par C:\\Z390>REM RRF1SKP1 TEST RRDS FIXED LENGTH VSAM FILE SKP SEQ ACCESS USING GENCB \par C:\\Z390>REM RUN RRF1SKP1 TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.RRF1 \par C:\\Z390>CALL ASMLG vsam\\test\\RRF1SKP1          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 09:36:10 RRF1SKP1  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/12/16\par 09:36:11 RRF1SKP1  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 69 IO=6224\par 09:36:11 RRF1SKP1  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/12/16\par 09:36:11 RRF1SKP1  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=317\par 09:36:11 RRF1SKP1  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/12/16\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1 ESF1SKP1 RT1 STARTED\par GEN ACB/RPL AND SKP SEQ READ STARTING AT REC 3\par SKP SEQ READ BACKWARD STARTING AT REC 3\par SKP SEQ READ BACKWARD STARTING AT REC 5\par ESF1SKP1 RT1 TESTS COMPLETED =     36\par ESF1SKP1 RT1 ENDED OK\par 09:36:11 RRF1SKP1  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=304 INS=350\par C:\\Z390> exit\par *** 11/12/16 09:36:12 CMD task ended TOT SEC=2 TOT LOG IO=23\par\plain\f3\fs20\b\cf1\page *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 09/19/07                                                 *\par *********************************************************************\par * 09/19/07 INITIAL CODING OF ESDS FIXED SKP SEQ ACCESS USING GENCB    \par * 09/20/07 RPI 702 CHANGE TO USE POINT TO SET START FOR SEQ RWD/BWD   \par * 09/26/07 RPI 702 FOR SEQ, SKIP NULL RCDS AND RETURN ARG=REC#        \par * 10/24/07 RPI 724 CHANGE FOR RRN STARTING AT 1                       \par *********************************************************************\par ESF1SKP1 RT1   MAIN \par REC#     DC    XL4'00'\par          LTORG\par          EQUREGS\par          RT1   START\par *\par * READ SEQ FWD STARTING AT REC 3 USING KEY and SEQ\par *\par          WTO   'GEN ACB/RPL AND SKP SEQ READ STARTING AT REC 3'\par          GENCB BLK=ACB,DDNAME=VFILE,MACRF=(KEY,SEQ)\par          LTR   R15,R15\par          RT1   CC0\par          LR    R2,R1             R2=ACB \par          OPEN  ((R2),(INPUT))\par          LTR   R15,R15\par          RT1   CC0\par          GETMAIN R,LV=80\par          LR    R4,R1             R4=RECORD AREA\par          GENCB BLK=RPL,ACB=(R2),AREA=(R4),OPTCD=(KEY),ARG=REC# \par          LTR   R15,R15\par          RT1   CC0\par          LR    R3,R1             R3=RPL\par          MVC   REC#,=F'3'\par          POINT RPL=(R3)          SET CUR POS TO REC 3       \par          LTR   R15,R15\par          RT1   CC0\par          MVC   REC#,=F'-1'       RESET TO TEST ARG ON SEQ GET\par          MODCB RPL=(R3),OPTCD=(SEQ,FWD)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)          READ REC2 SEQ FWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'3'\par          RT1   CC0\par          CLC   0(80,R4),=80C'3'  VERIFY REC 3\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 5 SEQ FWD SKIPPING REC 4      \par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'5'\par          RT1   CC0\par          CLC   0(80,R4),=80C'5'  VERIFY REC 5\par          RT1   CC0\par          GET   RPL=(R3)          READ EOF                               \par          CHI   R15,8  \par          RT1   CC0\par *\par * REPOSITION TO REC3 FOR READING REC 2 AND REC 0 BACKWARD\par *\par          WTO   'SKP SEQ READ BACKWARD STARTING AT REC 3'\par          MODCB RPL=(R3),OPTCD=(KEY)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   REC#,=F'4'                                     \par          POINT RPL=(R3)          SET CUR POS TO REC 4        \par          LTR   R15,R15\par          RT1   CC0\par          MVC   REC#,=F'-1'       RESET TO TEST SEQ ARG \par          MODCB RPL=(R3),OPTCD=(SEQ,BWD)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)          READ REC2 SEQ BWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'3'        VERIFY REC# 3\par          RT1   CC0\par          CLC   0(80,R4),=80C'3'  VERIFY REC 3\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 0 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'1'        VERIFY REC# 1\par          RT1   CC0\par          CLC   0(80,R4),=80C'1'  VERIF REC 0\par          RT1   CC0\par          GET   RPL=(R3)          READ EOF                               \par          CHI   R15,8  \par          RT1   CC0\par *\par * REPOSITION TO EOF FOR READING REC 5, 3 BACKWARD\par *\par          WTO   'SKP SEQ READ BACKWARD STARTING AT REC 5'\par          MODCB RPL=(R3),OPTCD=(KEY)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   REC#,=F'-1'                                     \par          POINT RPL=(R3)          SET CUR POS TO EOF         \par          LTR   R15,R15\par          RT1   CC0\par          MODCB RPL=(R3),OPTCD=(SEQ,BWD)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)          READ REC4 SEQ BWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'5'        VERIFY REC# 5\par          RT1   CC0\par          CLC   0(80,R4),=80C'5'  VERIFY REC 5\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 3 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'3'        VERIFY REC# 3\par          RT1   CC0\par          CLC   0(80,R4),=80C'3'  VERIF REC 2\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 1 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'1'        VERIFY REC# 1\par          RT1   CC0\par          CLC   0(80,R4),=80C'1'  VERIF REC 1\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 0 SEQUENTIALLY BACKWARD\par          CHI   R15,8             VERIFY EOF\par          RT1   CC0\par          CLOSE ((R2))\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\page 18 rrf1test\par\par This test\par\par A) OPENs OUTPUT RRDS fixed dataset for ACB MACRF=(KEY,OUT).\par\par B) PUTs a RRDS fixed-length record of 80 1s to REC# of 1, \par with RPL OPTCD=(KEY) and ARG=REC#, \par and verifies put ok.\par\par C) PUTs a RRDS fixed-length record of 80 3s to REC# of 3, and verifies\par put ok.\par\par D) PUTs a RRDS fixed-length record of 80 5s to REC# of 5, and verifies\par put ok.\par\par E) CLOSE.\par\par F) OPENs INPUT for ACB MACRF=(KEY,IN).\par\par G) GETs a RRDS fixed-length record with REC# of 1,\par with RPL OPTCD=(KEY) and ARG=REC#.\par and verifies get ok and that it contains 80 1s.\par\par H) GETs a RRDS fixed-length record with REC# of 3, and verifies\par get ok and that it contains 80 3s.\par\par I) GETs a RRDS fixed-length record with REC# of 5, and verifies\par get ok and that it contains 80 5s.\par\par J) CLOSE.\par\par\page The purpose of this test is to create a fixed-length RRDS dataset with a number \par of records and then to access those records by their rrn keys.\page\par\par c:\\z390\\rt\\vsam\\test\\save\\rrf1test.bat\par\par REM RRF1TEST TEST RRDS FIXED LENGTH VSAM FILE SEQ AND RANDOM RBA/XRBA\par REM RUN RRF1TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS\par SET VFILE=vsam\\test\\TESTCAT.RRF1\par erase vsam\\test\\RRF1.VES\par CALL ASMLG vsam\\test\\RRF1TEST %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN RRF1TEST\par\par\plain\f3\fs20\cf1 ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\rrf1test\par C:\\Z390>REM RRF1TEST TEST RRDS FIXED LENGTH VSAM FILE SEQ AND RANDOM RBA/XRBA \par C:\\Z390>REM RUN RRF1TEST TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.RRF1 \par C:\\Z390>erase vsam\\test\\RRF1.VES \par C:\\Z390>CALL ASMLG vsam\\test\\RRF1TEST          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 09:36:30 RRF1TEST  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/14/16\par 09:36:31 RRF1TEST  MZ390 ENDED   RC= 0 SEC= 1 MEM(MB)= 68 IO=4701\par 09:36:31 RRF1TEST  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/14/16\par 09:36:31 RRF1TEST  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=282\par 09:36:32 RRF1TEST  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/14/16\par RRF1TEST RT1 STARTED\par RRF1TEST CREATE RRDS VFILE WITH 3 RECORDS\par RRF1TEST READ AND VERIFY VFILE RECORDS\par RRF1TEST RT1 TESTS COMPLETED =     13\par RRF1TEST RT1 ENDED OK\par 09:36:32 RRF1TEST  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=313 INS=142\par C:\\Z390> exit\par *** 11/14/16 09:36:32 CMD task ended TOT SEC=2 TOT LOG IO=23\par\par\plain\f3\fs20\b\cf1 c:\\z390\\vsam\\test\\rrf1.ves\par\par 00000000  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000050  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000060  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000070  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000080  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000090  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000000A0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000B0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000C0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000D0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000E0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par\par c:\\z390\\vsam\\test\\rrf1.vx0\par\par 00000000  00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00    ................\par 00000010  00 00 00 00 00 00 00 51 00 00 00 00 00 00 00 00    .......Q........\par 00000020  00 00 00 00 00 00 00 A1                            .......\loch\f3\hich\f3\'a1        \par\par c:\\z390\\rt\\vsam\\test\\save\\rrf1test.mlc\par\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 04/23/07                                                 *\par *********************************************************************\par * 08/31/07 INITIAL CODING OF RRDS FIXED LENGTH RECORD TESTS           \par * 09/21/07 RPI 702 CHANGE DIR TO KEY FOR ACCESS BY REC#               \par * 10/24/07 RPI 724 CHANGE FOR RRN STARTING AT 1                       \par *********************************************************************\par RRF1TEST RT1   MAIN \par VACBOUT  ACB   DDNAME=VFILE,MACRF=(KEY,OUT)\par VACBIN   ACB   DDNAME=VFILE,MACRF=(KEY,IN)\par VRPLOUT  RPL   ACB=VACBOUT,AREA=RECORD,OPTCD=(KEY),ARG=REC#\par VRPLIN   RPL   ACB=VACBIN,AREA=RECORD,OPTCD=(KEY),ARG=REC#\par RECORD   DC    CL80' '\par REC#     DC    F'00'\par          LTORG\par          EQUREGS\par          RT1   START\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1 *\par * BUILD VSAM RRDS FIXED LENGTH FILE WITH 3 RECORDS\par *\par          WTO   'RRF1TEST CREATE RRDS VFILE WITH 3 RECORDS'\par          OPEN  (VACBOUT,(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD,=80C'1'\par          MVC   REC#,=F'1'\par          PUT   RPL=VRPLOUT\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD,=80C'3'\par          MVC   REC#,=F'3'\par          PUT   RPL=VRPLOUT\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD,=80C'5'\par          MVC   REC#,=F'5'\par          PUT   RPL=VRPLOUT\par          LTR   R15,R15\par          RT1   CC0\par          CLOSE (VACBOUT)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND VERIFY 3 VSAM RRDS FIXED LENGTH RECORDS \par *\par          WTO   'RRF1TEST READ AND VERIFY VFILE RECORDS'\par          OPEN  (VACBIN)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   REC#,=F'1'\par          GET   RPL=VRPLIN\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'1'\par          RT1   CC0\par          MVC   REC#,=F'3'\par          GET   RPL=VRPLIN\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'3'\par          RT1   CC0\par          MVC   REC#,=F'5'\par          GET   RPL=VRPLIN\par          LTR   R15,R15\par          RT1   CC0\par          CLC   RECORD,=80C'5'\par          RT1   CC0\par          CLOSE (VACBIN)\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\page 19 rrv1skp1\par\par This test is the same as rrf1skp1 except it uses 3 variable-length \par RRDS records.\par\par The purpose of this test is parallel.\page\par c:\\z390\\rt\\vsam\\test\\save\\rrv1skp1.bat\par\par REM RRV1SKP1 TEST VRRDS VAR LENGTH VSAM FILE SKP SEQ ACCESS USING GENCB\par REM RUN RRV1SKP1 TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS\par SET VFILE=vsam\\test\\TESTCAT.RRV1\par CALL ASMLG vsam\\test\\RRV1SKP1 %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN RRV1SKP1\par\par ran and produced\par\par\plain\f3\fs20\cf1 C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\rrv1skp1\par C:\\Z390>REM RRV1SKP1 TEST VRRDS VAR LENGTH VSAM FILE SKP SEQ ACCESS USING GENCB \par C:\\Z390>REM RUN RRV1SKP1 TO CREATE AND TEST ESDS WITH 3 80 BYTE RCDS \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.RRV1 \par C:\\Z390>CALL ASMLG vsam\\test\\RRV1SKP1          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 09:43:19 RRV1SKP1  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/14/16\par 09:43:20 RRV1SKP1  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 69 IO=6418\par 09:43:20 RRV1SKP1  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/14/16\par 09:43:20 RRV1SKP1  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=533\par 09:43:20 RRV1SKP1  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/14/16\par ESV1SKP1 RT1 STARTED\par GEN ACB/RPL AND SKP SEQ READ STARTING AT REC 2\par ESV1SKP1 RT1 TESTING ABORTED\par ESV1SKP1 RT1 TESTS COMPLETED =      7\par EZ390I Trace Table Entry      800FF18A A7150012     BRAS \par EZ390I Trace Table Entry      800FF1AE 0A23         SVC  \par EZ390I Trace Table Entry      800FF1B0 D205D131D138 MVC  \par EZ390I Trace Table Entry      800FF1B6 DE05D131D10A ED   \par EZ390I Trace Table Entry      800FF1BC 4110D10E     LA   \par EZ390I Trace Table Entry      800FF1C0 0A23         SVC  \par EZ390I Trace Table Entry      800FF1C2 95E3D137     CLI  \par EZ390I Trace Table Entry      800FF1C6 4780D104     BE   \par EZ390I Trace Table Entry      800FF1FC 41100065     LA   \par EZ390E error  11 ABEND PSW=07050600 800FF200 0A0D         SVC   ABEND U0101\par  R0-R3 0000000000000001 F4F4F4F400000065 F4F4F4F4000FF088 F4F4F4F4000FE538\par  R4-R7 F4F4F4F4000FE590 F4F4F4F4F4F4F4F4 F4F4F4F4F4F4F4F4 F4F4F4F4F4F4F4F4\par  R8-RB F4F4F4F4F4F4F4F4 F4F4F4F4F4F4F4F4 F4F4F4F4F4F4F4F4 F4F4F4F4800FF40E\par  RC-RF F4F4F4F4F4F4F4F4 F4F4F4F4800FF0F8 F4F4F4F400002018 F4F4F4F400000000\par EZ390E error  12 program aborting due to abend U0101\par 09:43:21 RRV1SKP1  EZ390 ENDED   RC=16 SEC= 0 MEM(MB)=  7 IO=319 INS=113\par Press any key to continue . . . \par Press any key to continue . . . \par C:\\Z390>xit\par 'xit' is not recognized as an internal or external command,\par operable program or batch file.\par\par c:\\z390\\rt\\vsam\\test\\save\\rrv1skp1.mlc\par\par *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 09/19/07                                                 *\par *********************************************************************\par * 09/19/07 INITIAL CODING OF ESDS VAR LEN SKP SEQ ACCESS USING GENCB    \par * 09/20/07 RPI 702 CHANGE TO USE POINT TO SET START FOR SEQ RWD/BWD   \par * 09/26/07 RPI 702 FOR SEQ, SKIP NULL RCDS AND RETURN ARG=REC#        \par * 10/24/07 RPI 724 CHANGE FOR RRN STARTING AT 1 AND 1,3,5 RECORDS     \par *********************************************************************\par ESV1SKP1 RT1   MAIN \par REC#     DC    XL4'00'\par          LTORG\par          EQUREGS\par          RT1   START\par *\par * READ SEQ FWD STARTING AT REC 2 USING KEY and SEQ,FWD\par *\par          WTO   'GEN ACB/RPL AND SKP SEQ READ STARTING AT REC 2'\par          GENCB BLK=ACB,DDNAME=VFILE,MACRF=(KEY,SEQ)\par          LTR   R15,R15\par          RT1   CC0\par          LR    R2,R1             R2=ACB \par          OPEN  ((R2),(INPUT))\par          LTR   R15,R15\par          RT1   CC0\par          GETMAIN R,LV=500\par          LR    R4,R1             R4=RECORD AREA\par          GENCB BLK=RPL,ACB=(R2),AREA=(R4),OPTCD=(KEY),ARG=REC#\par          LTR   R15,R15\par          RT1   CC0\par          LR    R3,R1             R3=RPL\par          MVC   REC#,=F'3'\par          POINT RPL=(R3)          SET CUR POS TO REC 3       \par          LTR   R15,R15\par          RT1   CC0\par          MODCB RPL=(R3),OPTCD=(SEQ,FWD)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   REC#,=F'-1'        RESET REC# TO TEST SEQ GET\par          GET   RPL=(R3)           READ REC2 VIA XRBA AND SET POS FWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'3'         VERIFY REC#\par          RT1   CC0\par          CLC   0(200,R4),=200C'T' VERIFY REC 3 (SEE RRV1TEST UPDATE)\par          RT1   CC0\par          CLC   200(150,R4),=150C'T' VERIFY REC 3 (SEE RRV1TEST UPDATE)\par          RT1   CC0\par          GET   RPL=(R3)           READ REC 5 SEQUENTIALLY\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'5'         VERIFY REC#\par          RT1   CC0\par          CLC   0(250,R4),=250C'5' VERIF REC 5\par          RT1   CC0\par          CLC   200(250,R4),=250C'5' VERIF REC 5\par          RT1   CC0\par          GET   RPL=(R3)          READ EOF                                  \par          CHI   R15,8   \par          RT1   CC0\par *\par * REPOSITION TO REC3 FOR READING BACKWARD AND SEQ READ REC 1\par *\par          WTO   'SKP SEQ READ BACKWARD STARTING AT REC 3'\par          MODCB RPL=(R3),OPTCD=(KEY)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   REC#,=F'4'                                     \par          POINT RPL=(R3)          SET CUR POS TO REC 4        \par          LTR   R15,R15\par          RT1   CC0\par          MODCB RPL=(R3),OPTCD=(SEQ,BWD)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)           READ REC2 VIA XRBA AND SET POS BWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'3'         VERIFY REC#\par          RT1   CC0\par          CLC   0(200,R4),=200C'T' VERIFY REC 3\par          RT1   CC0\par          CLC   200(150,R4),=150C'T' VERIFY REC 3\par          RT1   CC0\par          GET   RPL=(R3)           READ REC 0 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'1'         VERIFY REC# 1\par          RT1   CC0\par          CLC   0(100,R4),=100C'1' VERIF REC 1\par          RT1   CC0\par          GET   RPL=(R3)          READ EOF                                  \par          CHI   R15,8   \par          RT1   CC0\par *\par * REPOSITION TO EOF FOR READING REC 4, 3, 2 BACKWARD\par *\par          WTO   'SKP SEQ READ BACKWARD STARTING AT REC 5'\par          MODCB RPL=(R3),OPTCD=(KEY)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   REC#,=F'-1'                                     \par          POINT RPL=(R3)          SET CUR POS TO EOF         \par          LTR   R15,R15\par          RT1   CC0\par          MODCB RPL=(R3),OPTCD=(SEQ,BWD)\par          LTR   R15,R15\par          RT1   CC0\par          GET   RPL=(R3)          READ REC4 SEQ BWD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'5'         VERIFY REC#\par          RT1   CC0\par          CLC   0(250,R4),=250C'5'  VERIFY REC 5\par          RT1   CC0\par          CLC   200(250,R4),=250C'5'  VERIFY REC 5\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 2 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'3'          VERIFY REC#\par          RT1   CC0\par          CLC   0(200,R4),=200C'T'  VERIF REC 3\par          RT1   CC0\par          CLC   200(150,R4),=150C'T'  VERIF REC 3\par          RT1   CC0\par          GET   RPL=(R3)          READ REC 0 SEQUENTIALLY BACKWARD\par          LTR   R15,R15\par          RT1   CC0\par          CLC   REC#,=F'1'          VERIFY REC# 1\par          RT1   CC0\par          CLC   0(100,R4),=100C'1'  VERIF REC 1\par          RT1   CC0\par          GET   RPL=(R3)          READ EOF                                  \par          CHI   R15,8   \par          RT1   CC0\par          CLOSE ((R2))\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\page\par\plain\f3\fs20\b\cf1 20 rrv1test\par\par This test\par\plain\f3\fs20\cf1  \plain\f3\fs20\b\cf1\par A) OPENs OUTPUT RRDS variable dataset for ACB MACRF=(KEY,OUT).\par\par B) Uses MODCB with RPL OPTCD=(KEY) and RECLEN=100 and ARG=REC#.\par\par C) PUTs a RRDS variable-length record of 100 1s to REC# of 1, and verifies\par put ok.\par\par D) Uses MODCB with RPL RECLEN=500.\par\par E) PUTs a RRDS variable-length record of 500 5s to REC# of 5, and verifies\par put ok.\par\par F) Uses MODCB with RPL RECLEN=300.\par\par G) PUTs a RRDS variable-length record of 300 3s to REC# of 3, and verifies\par put ok.\par\par H) CLOSE.\par\par I) OPEN INPUT for ACB MACRF=(KEY,IN).\par\par j) GETs a RRDS variable-length record with REC# of 1,\par with RPL OPTCD=(KEY) and ARG=REC#, and verifies get ok \par and that it contains 100 1s via TESTCB.\par\par K) GETs a RRDS variable-length record with REC# of 3, and verifies\par get ok and that it contains 300 3s via TESTCB.\par\par L) GETs a RRDS variable-length record with REC# of 5, and verifies\par get ok and that it contains 500 5s via TESTCB.\par\plain\f3\fs20\cf1\par M) CLOSE.\par\par 2)\par\plain\f3\fs20\b\cf1 A) OPENs OUTPUT for ACB MACRF=(KEY,OUT).\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\b\cf1\par B) Uses MODCB witg RPL OPTCD=(KEY) and RECLEN=350.\par\par C) PUTs a RRDS variable-length record of 350 Ts to REC# of 3, and verifies\par put ok.\par\plain\f3\fs20\cf1\par D)\plain\f3\fs20\b\cf1  GETs a RRDS variable-length record with REC# of 3, and verifies\par get ok and that it contains 350 Ts via TESTCB.\par\par E) CLOSE.\page The purpose of this test is to create a variable-length RRDS with a number \par of variable-length records, to access those records by their rrn keys.\par And then to update one, increase it's record length and then re-get it\par via it's rrn key.\par\par\plain\f3\fs20\cf1\page\par c:\\z390\\rt\\vsam\\test\\save\\rrv1test.bat\par\par REM ESF1TEST TEST RRDS VARIABLE LENGTH VSAM FILE \par REM RUN RRF1TEST TO CREATE AND TEST ESDS WITH 3 VAR RCDS\par SET VFILE=vsam\\test\\TESTCAT.RRV1\par erase vsam\\test\\RRV1.VES\par erase vsam\\test\\RRV1.VX0\par CALL ASMLG vsam\\test\\RRV1TEST %1 %2 %3 %4 %5 %6 %7 %8 %9\par IF ERRORLEVEL 1 PAUSE ERROR IN RRV1TEST\par\par ran and produced\par\par C:\\Z390>c:\\z390\\rt\\vsam\\test\\save\\rrv1test\par C:\\Z390>REM ESF1TEST TEST RRDS VARIABLE LENGTH VSAM FILE  \par C:\\Z390>REM RUN RRF1TEST TO CREATE AND TEST ESDS WITH 3 VAR RCDS \par C:\\Z390>SET VFILE=vsam\\test\\TESTCAT.RRV1 \par C:\\Z390>erase vsam\\test\\RRV1.VES \par C:\\Z390>erase vsam\\test\\RRV1.VX0 \par C:\\Z390>CALL ASMLG vsam\\test\\RRV1TEST          \par C:\\Z390>rem asmlg assemble, link, and go from mlc to 390 execution \par C:\\Z390>echo off \par 09:51:16 RRV1TEST  MZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/14/16\par 09:51:17 RRV1TEST  MZ390 ENDED   RC= 0 SEC= 0 MEM(MB)= 69 IO=5962\par 09:51:17 RRV1TEST  LZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/14/16\par 09:51:17 RRV1TEST  LZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=622\par 09:51:17 RRV1TEST  EZ390 START USING z390 V1.5.06 ON J2SE 1.8.0 11/14/16\par RRV1TEST RT1 STARTED\par RRV1TEST CREATE RRDS VFILE WITH 3 RECORDS\par RRV1TEST READ AND VERIFY VFILE RECORDS\par RRV1TEST REWRITE RECORD 3 WITH LENGTH 350\par RRV1TEST RT1 TESTS COMPLETED =     29\par RRV1TEST RT1 ENDED OK\par 09:51:17 RRV1TEST  EZ390 ENDED   RC= 0 SEC= 0 MEM(MB)=  7 IO=314 INS=277\par\par c:\\z390\\vsam\\test\\rrv1.ves\par\par 00000000  00 00 00 64 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    ...\loch\f3\hich\f3\'c0111111111111\par 00000010  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000020  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000030  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000040  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000050  F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1 F1    1111111111111111\par 00000060  F1 F1 F1 F1 F1 F1 F1 F1 00 00 01 F4 F5 F5 F5 F5    11111111...45555\par 00000070  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000080  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000090  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000A0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000B0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000C0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000D0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000E0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000000F0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000100  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000110  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000120  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000130  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000140  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000150  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000160  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000170  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000180  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000190  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000001A0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000001B0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000001C0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000001D0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000001E0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 000001F0  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000200  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000210  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000220  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000230  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000240  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000250  F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5 F5    5555555555555555\par 00000260  00 00 01 2C F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    ...\u140 ?333333333333\par 00000270  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000280  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000290  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000002A0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000002B0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000002C0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000002D0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000002E0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 000002F0  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000300  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000310  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000320  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000330  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000340  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000350  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000360  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000370  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000380  F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3 F3    3333333333333333\par 00000390  00 00 01 5E E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    ...;TTTTTTTTTTTT\par 000003A0  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 000003B0  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 000003C0  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 000003D0  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 000003E0  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 000003F0  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 00000400  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 00000410  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 00000420  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 00000430  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 00000440  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 00000450  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 00000460  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 00000470  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 00000480  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 00000490  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 000004A0  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 000004B0  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 000004C0  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 000004D0  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 000004E0  E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3 E3    TTTTTTTTTTTTTTTT\par 000004F0  E3 E3                                              TT              \par\page c:\\z390\\vsam\\test\\rrv1.vx0\par\par 00000000  00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00    ................\par 00000010  00 00 00 00 00 00 03 91 00 00 00 00 00 00 00 00    .......\u145 ?........\par 00000020  00 00 00 00 00 00 00 69                            .......i        \par\page *********************************************************************\par * Copyright 2007 Automated Software Tools Corporation               *\par * This source code is part of z390 assembler/emulator package       *\par * The z390 package is distributed under GNU general public license  *\par * Author - Don Higgins                                              *\par * Date   - 04/23/07                                                 *\par *********************************************************************\par * 08/31/07 INITIAL CODING OF RRDS VARIABLE LENGTH RECORD TESTS           \par * 09/21/07 RPI 702 CHANGE DIR TO KEY FOR ACCESS BY REC#                  \par * 10/24/07 RPI 724 CHANGE FOR RRN STARTING AT 1                       \par *********************************************************************\par RRV1TEST RT1   MAIN \par VACBOUT  ACB   DDNAME=VFILE,MACRF=(KEY,OUT)\par VACBIN   ACB   DDNAME=VFILE,MACRF=(KEY,IN)\par VRPLOUT  RPL   ACB=VACBOUT,AREA=RECORD,OPTCD=(KEY),ARG=REC#\par VRPLIN   RPL   ACB=VACBIN,AREA=RECORD,OPTCD=(KEY),ARG=REC#\par RECORD   DC    CL500' '\par REC#     DC    F'0'\par          LTORG\par          EQUREGS\par          RT1   START\par *\par * BUILD VSAM RRDS VARIABLE LENGTH FILE WITH 3 RECORDS\par *\par          WTO   'RRV1TEST CREATE RRDS VFILE WITH 3 RECORDS'\par          OPEN  (VACBOUT,(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD(100),=100C'1'\par          MVC   REC#,=F'1'\par          MODCB RPL=VRPLOUT,RECLEN=100\par          LTR   R15,R15\par          RT1   CC0\par          PUT   RPL=VRPLOUT\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD(250),=250C'5'\par          MVC   RECORD+250(250),=250C'5'\par\pard\itap0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\plain\f3\fs20\cf1          MVC   REC#,=F'5'\par          MODCB RPL=VRPLOUT,RECLEN=500\par          LTR   R15,R15\par          RT1   CC0\par          PUT   RPL=VRPLOUT\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD(200),=200C'3'\par          MVC   RECORD+200(100),=100C'3'\par          MVC   REC#,=F'3'\par          MODCB RPL=VRPLOUT,RECLEN=300\par          LTR   R15,R15\par          RT1   CC0\par          PUT   RPL=VRPLOUT\par          LTR   R15,R15\par          RT1   CC0\par          CLOSE (VACBOUT)\par          LTR   R15,R15\par          RT1   CC0\par *\par * READ AND VERIFY 3 VSAM RRDS VARIABLE LENGTH RECORDS \par *\par          WTO   'RRV1TEST READ AND VERIFY VFILE RECORDS'\par          OPEN  (VACBIN)\par          LTR   R15,R15\par          RT1   CC0\par          MVC   REC#,=F'1'\par          GET   RPL=VRPLIN\par          LTR   R15,R15\par          RT1   CC0\par          TESTCB RPL=VRPLIN,RECLEN=100\par          RT1   CC0\par          CLC   RECORD(100),=100C'1'\par          RT1   CC0\par          MVC   REC#,=F'3'\par          GET   RPL=VRPLIN\par          LTR   R15,R15\par          RT1   CC0\par          TESTCB RPL=VRPLIN,RECLEN=300\par          RT1   CC0\par          CLC   RECORD(200),=200C'3'\par          RT1   CC0\par          CLC   RECORD+200(100),=100C'3'\par          RT1   CC0\par          MVC   REC#,=F'5'\par          GET   RPL=VRPLIN\par          LTR   R15,R15\par          RT1   CC0\par          TESTCB RPL=VRPLIN,RECLEN=500\par          RT1   CC0\par          CLC   RECORD(250),=250C'5'\par          RT1   CC0\par          CLC   RECORD+250(250),=250C'5'\par          RT1   CC0\par          CLOSE (VACBIN)\par          LTR   R15,R15\par          RT1   CC0\par *\par * REWRITE RECORD 3 WITH LENGTH OF 350 FILLED WITH C'T'\par *\par          WTO   'RRV1TEST REWRITE RECORD 3 WITH LENGTH 350'  \par          OPEN  (VACBOUT,(OUTPUT))\par          LTR   R15,R15\par          RT1   CC0\par          MVC   RECORD(200),=200C'T'\par          MVC   RECORD+200(150),=150C'T'\par          MVC   REC#,=F'3'\par          MODCB RPL=VRPLOUT,RECLEN=350\par          LTR   R15,R15\par          RT1   CC0\par          PUT   RPL=VRPLOUT\par          LTR   R15,R15\par          RT1   CC0\par          MVC   REC#,=F'3'\par          GET   RPL=VRPLOUT\par          LTR   R15,R15\par          RT1   CC0\par          TESTCB RPL=VRPLOUT,RECLEN=350\par          RT1   CC0\par          CLC   RECORD(200),=200C'T'\par          RT1   CC0\par          CLC   RECORD+200(150),=150C'T'\par          RT1   CC0\par          CLOSE (VACBOUT)\par          LTR   R15,R15\par          RT1   CC0\par          RT1   END\par          END\par\page\par I can't find any testing for CICS VSAM, though I suppose that there must be some somewhere.\par\page The full listing of vz390.java with the colour coding of relevant cur_rpl_fields does not follow, as advised\par since it seems to stuff up the page numbering when it exceeds 999 pages. \par\par That document may be obtained separately, but is known as zzzz.pdf.\par\par }